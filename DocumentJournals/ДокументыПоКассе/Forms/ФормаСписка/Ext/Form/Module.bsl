
#Область ОбработчикиСобытий

// Процедура - обработчик события ПриСозданииНаСервере.
// В процедуре осуществляется
// - инициализация реквизитов формы,
// - установка параметров функциональных опций формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СписокЗначений = Новый СписокЗначений;
	ВыборкаОрганизаций = Справочники.Организации.Выбрать();
	Пока ВыборкаОрганизаций.Следующий() Цикл
		СписокЗначений.Добавить(ВыборкаОрганизаций.Ссылка);
	КонецЦикла;
	СписокОрганизаций = СписокЗначений;
КонецПроцедуры // ПриСозданииНаСервере()

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	Организация = Настройки.Получить("Организация");
	Касса = Настройки.Получить("Касса");
	Контрагент = Настройки.Получить("Контрагент");
	
	Если ЗначениеЗаполнено(Организация) Тогда
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", Организация);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.Касса.ПараметрыВыбора = НовыеПараметры;
	Иначе
		НовыйМассив = Новый Массив();
		Для каждого Элемент Из СписокОрганизаций Цикл
			НовыйМассив.Добавить(Элемент.Значение);
		КонецЦикла;
		ФиксированныйМассивОрганизации = Новый ФиксированныйМассив(НовыйМассив);
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", ФиксированныйМассивОрганизации);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.Касса.ПараметрыВыбора = НовыеПараметры;
	КонецЕсли;
	
	РаботаСОтборамиКлиентСервер.УстановитьЭлементОтбораСписка(КассовыеОрдера, "ОрганизацияДляОтбора", Организация, ЗначениеЗаполнено(Организация));
	РаботаСОтборамиКлиентСервер.УстановитьЭлементОтбораСписка(КассовыеОрдера, "Контрагент", Контрагент, ЗначениеЗаполнено(Контрагент));
	РаботаСОтборамиКлиентСервер.УстановитьЭлементОтбораСписка(КассовыеОрдера, "Касса", Касса, ЗначениеЗаполнено(Касса));
	
КонецПроцедуры // ПриЗагрузкеДанныхИзНастроекНаСервере()

// Процедура - обработчик события ПриИзменении поля ввода Касса.
//
&НаКлиенте
Процедура КассаПриИзменении(Элемент)
	
	РаботаСОтборамиКлиентСервер.УстановитьЭлементОтбораСписка(КассовыеОрдера, "Касса", Касса, ЗначениеЗаполнено(Касса));
	
КонецПроцедуры // КассаПриИзменении()

// Процедура - обработчик события ПриИзменении поля ввода Контрагент.
//
&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	РаботаСОтборамиКлиентСервер.УстановитьЭлементОтбораСписка(КассовыеОрдера, "Контрагент", Контрагент, ЗначениеЗаполнено(Контрагент));
	
КонецПроцедуры // КонтрагентПриИзменении()

// Процедура - обработчик события ПриИзменении поля ввода Организация.
//
&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", Организация);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.Касса.ПараметрыВыбора = НовыеПараметры;
		
	Иначе
		
		НовыйМассив = Новый Массив();
		Для каждого Элемент Из СписокОрганизаций Цикл
			НовыйМассив.Добавить(Элемент.Значение);
		КонецЦикла;
		ФиксированныйМассивОрганизации = Новый ФиксированныйМассив(НовыйМассив);
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", ФиксированныйМассивОрганизации);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.Касса.ПараметрыВыбора = НовыеПараметры;
		
	КонецЕсли;
	
	РаботаСОтборамиКлиентСервер.УстановитьЭлементОтбораСписка(КассовыеОрдера, "ОрганизацияДляОтбора", Организация, ЗначениеЗаполнено(Организация));
	
КонецПроцедуры // ОрганизацияПриИзменении()

&НаКлиенте
Процедура КассовыеОрдераПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("Подключаемый_ОбработатьАктивизациюСтрокиСписка", 0.2, Истина);
	
КонецПроцедуры // КассовыеОрдераПриАктивизацииСтроки()

// Процедура - обработчик события ОбработкаОповещения.
//
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ПриходныйКассовыйОрдер" Тогда
		Подключаемый_ОбработатьАктивизациюСтрокиСписка();
	КонецЕсли;
	
КонецПроцедуры // ОбработкаОповещения()

#КонецОбласти

#Область ВспомогательныеПроцедурыИФункции

&НаКлиенте
Процедура Подключаемый_ОбработатьАктивизациюСтрокиСписка()
	
	ТекущаяСтрока = Элементы.КассовыеОрдера.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		СтруктураДанные = ПолучитьДанныеПоКассе(ТекущаяСтрока.Дата, ТекущаяСтрока.Касса);
		ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураДанные);
		Элементы.СостояниеКассы.Заголовок = Формат(ТекущаяСтрока.Дата, "ДЛФ=D");
	Иначе
		ИнформацияСуммаВалКонечныйОстаток = 0;
		ИнформацияСуммаВалНачальныйОстаток = 0;
		ИнформацияСуммаВалПриход = 0;
		ИнформацияСуммаВалРасход = 0;
		Элементы.СостояниеКассы.Заголовок = "";
	Конецесли;
	
КонецПроцедуры // ОбработатьАктивизациюСтрокиСписка()

&НаСервереБезКонтекста
Функция ПолучитьДанныеПоКассе(Период, Касса)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК ИнформацияСуммаВалНачальныйОстаток,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ИнформацияСуммаВалПриход,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК ИнформацияСуммаВалРасход,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК ИнформацияСуммаВалКонечныйОстаток
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, День, , Счет = &Счет, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДенежныеСредства), Субконто1 = &Касса) КАК ХозрасчетныйОстаткиИОбороты";
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(Период));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Период));
	Запрос.УстановитьПараметр("Счет", Касса.СчетУчета);
	Запрос.УстановитьПараметр("Касса", Касса);
	
	ВыборкаРезультата = Запрос.Выполнить().Выбрать();

	Если ВыборкаРезультата.Следующий() Тогда
		СтруктураВозврата = Новый Структура("ИнформацияСуммаВалНачальныйОстаток, ИнформацияСуммаВалКонечныйОстаток, ИнформацияСуммаВалПриход, ИнформацияСуммаВалРасход");
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, ВыборкаРезультата);
		Возврат СтруктураВозврата;
	Иначе
		Возврат Новый Структура(
			"ИнформацияСуммаВалКонечныйОстаток, ИнформацияСуммаВалНачальныйОстаток, ИнформацияСуммаВалПриход, ИнформацияСуммаВалРасход",
			0,0,0,0);
	КонецЕсли;
	
КонецФункции // ПолучитьДанныеПоКассе()

#КонецОбласти
