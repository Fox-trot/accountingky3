#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустой() Тогда
		Запись.Период = НачалоДня(ТекущаяДатаСеанса());
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запись.ОтветственноеЛицо) Тогда
		Элементы.ОтветственноеЛицо.Вид        = ВидПоляФормы.ПолеНадписи;
		Элементы.ОтветственноеЛицо.ЦветТекста = ЦветаСтиля.ТекстПредопределенногоЗначения;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Запись.Организация) Тогда 
		Запись.Организация = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьЗначениеНастройки("ОсновнаяОрганизация");
	КонецЕсли;	
	
	Элементы.Организация.Видимость = НЕ ЗначениеЗаполнено(Запись.Организация);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьДоступностьЭлементов()
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ Запись.ИсходныйКлючЗаписи.Пустой() Тогда
		ОтветственныеЛицаОрганизаций	= РегистрыСведений.ОтветственныеЛицаОрганизаций.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(ОтветственныеЛицаОрганизаций, Запись.ИсходныйКлючЗаписи);
		ОтветственныеЛицаОрганизаций.Прочитать();
		
		СтруктураСтаройЗаписи	= Новый Структура("Период, Организация, ОтветственноеЛицо, Физлицо, Должность, Касса");
		ЗаполнитьЗначенияСвойств(СтруктураСтаройЗаписи, ОтветственныеЛицаОрганизаций);
		ПараметрыЗаписи.Вставить("СтруктураСтаройЗаписи", СтруктураСтаройЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.Свойство("СтруктураСтаройЗаписи") Тогда
		
		// Если была изменена дата и хотя бы одно из полей, тогда сохраним прежнюю запись	
		Если НЕ ТекущийОбъект.Период = ПараметрыЗаписи.СтруктураСтаройЗаписи.Период
				И (НЕ ТекущийОбъект.Физлицо = ПараметрыЗаписи.СтруктураСтаройЗаписи.Физлицо
					ИЛИ НЕ ТекущийОбъект.Должность = ПараметрыЗаписи.СтруктураСтаройЗаписи.Должность) Тогда
					
			ОтветственныеЛицаОрганизаций	= РегистрыСведений.ОтветственныеЛицаОрганизаций.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(ОтветственныеЛицаОрганизаций, ТекущийОбъект);
			ЗаполнитьЗначенияСвойств(ОтветственныеЛицаОрганизаций, ПараметрыЗаписи.СтруктураСтаройЗаписи);
			ОтветственныеЛицаОрганизаций.Записать();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ИзменениеОтветственныхЛиц", Организация);
	Оповестить("ИзмененСписокОтветственныхЛиц", Организация);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ФизлицоПриИзменении(Элемент)
	Запись.Должность = ПолучитьДолжностьФизЛица(Запись.Организация, Запись.Физлицо);
КонецПроцедуры

&НаКлиенте
Процедура ОтветственноеЛицоПриИзменении(Элемент)
	УстановитьВидимостьДоступностьЭлементов()
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИсторияИзменений(Команда)
	Отбор	= Новый Структура("Организация, ОтветственноеЛицо");
	ЗаполнитьЗначенияСвойств(Отбор, Запись);
	ОткрытьФорму("РегистрСведений.ОтветственныеЛицаОрганизаций.ФормаСписка", Новый Структура("Отбор", Отбор));
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Видимость и доступность всех элементов формы
//
&НаКлиенте
Процедура УстановитьВидимостьДоступностьЭлементов()
	
	Элементы.Касса.Видимость = Запись.ОтветственноеЛицо = ПредопределенноеЗначение("Перечисление.ОтветственныеЛицаОрганизаций.Кассир");

КонецПроцедуры // УстановитьВидимостьДоступностьЭлементов()  

&НаСервереБезКонтекста
Функция ПолучитьДолжностьФизЛица(Организация, ФизЛицо)
	
	СведенияОСотруднике = ПроведениеРасчетовПоЗарплатеСервер.СведенияОСотруднике(ТекущаяДатаСеанса(), Организация, ФизЛицо); 

	Если ЗначениеЗаполнено(СведенияОСотруднике.Должность) Тогда
		Возврат СведенияОСотруднике.Должность;
	КонецЕсли;
	
	Возврат Справочники.Должности.ПустаяСсылка();
	
КонецФункции

#КонецОбласти
