#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	//// Определени ПериодДействияБазовый
	////ПериодДействияБазовый = Ложь;
	//Если СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.Процентом")
	//	Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ОтСтажаПроцентом")
	//	Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.РаботаСверхурочно")
	//	Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПроизвольнаяФормула") Тогда 
	//	
	//	//ПериодДействияБазовый = Истина;
	//ИначеЕсли СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ОплатаБольничного") 
	//	Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ОплатаОтпуска") Тогда 
	//	
	//	//ПериодДействияБазовый = Ложь;
	//КонецЕсли; 	
	
	// Определение базовых и ведущих
	Если СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПоДневнойСтавке")
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПоМесячнойСтавкеПоДням")
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПоМесячнойСтавкеПоЧасам")
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПоЧасовойСтавке") 
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.Замещение")
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.Неявка")
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ФиксированнойСуммой") Тогда 
		
		БазовыеВидыРасчета.Очистить();
		ВедущиеВидыРасчета.Очистить();
	КонецЕсли;
	
	Если СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ОплатаБольничного")
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ОплатаОтпуска") Тогда 
		ВытесняющиеВидыРасчета.Очистить();
	КонецЕсли;	
	
	// Определение ТребуетсяРасчетБазы 
	ТребуетсяРасчетБазы = НЕ БазовыеВидыРасчета.Количество() = 0;
	
	// Определение ТребуетсяРасчетВремени 
	ТребуетсяРасчетВремени = Ложь;
	Если СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПоДневнойСтавке")
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПоМесячнойСтавкеПоДням")
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПоМесячнойСтавкеПоЧасам")
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПоЧасовойСтавке") 
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.РаботаСверхурочно")
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.РаботаСверхурочноБаза") Тогда 
		
		ТребуетсяРасчетВремени = Истина;
	КонецЕсли;	
	
	// Определение для ПроизвольнаяФормула
	
	// Определение Категории
	Если КатегорияРасчета.Пустая() Тогда 
		КатегорияРасчета = Перечисления.КатегорииРасчетов.Первичное;
	КонецЕсли;	
	
	Если БазовыеВидыРасчета.Количество() = 0 Тогда 
		КатегорияРасчета = ПредопределенноеЗначение("Перечисление.КатегорииРасчетов.Первичное");
	Иначе 
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА ВложенныйЗапрос.КатегорияРасчета = ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.Первичное)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.ЗависимоеПервогоУровня)
			|		КОГДА ВложенныйЗапрос.КатегорияРасчета = ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.ЗависимоеПервогоУровня)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.ЗависимоеВторогоУровня)
			|		КОГДА ВложенныйЗапрос.КатегорияРасчета = ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.ЗависимоеВторогоУровня)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.ЗависимоеТретьегоУровня)
			|		КОГДА ВложенныйЗапрос.КатегорияРасчета = ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.ЗависимоеТретьегоУровня)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.ЗависимоеЧетвертогоУровня)
			|		КОГДА ВложенныйЗапрос.КатегорияРасчета = ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.ЗависимоеЧетвертогоУровня)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.ЗависимоеПятогоУровня)
			|		КОГДА ВложенныйЗапрос.КатегорияРасчета = ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.ЗависимоеПятогоУровня)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.ЗависимоеШестогоУровня)
			|		КОГДА ВложенныйЗапрос.КатегорияРасчета = ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.ЗависимоеШестогоУровня)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.ЗависимоеСедьмогоУровня)
			|		КОГДА ВложенныйЗапрос.КатегорияРасчета = ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.ЗависимоеСедьмогоУровня)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.ЗависимоеВосьмогоУровня)
			|		КОГДА ВложенныйЗапрос.КатегорияРасчета = ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.ЗависимоеВосьмогоУровня)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.ЗависимоеДевятогоУровня)
			|		КОГДА ВложенныйЗапрос.КатегорияРасчета = ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.ЗависимоеДевятогоУровня)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.ЗависимоеДесятогоУровня)
			|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.Первичное)
			|	КОНЕЦ КАК КатегорияРасчета
			|ИЗ
			|	(ВЫБРАТЬ
			|		МАКСИМУМ(ВидыНачисленийБазовыеВидыРасчета.ВидРасчета.КатегорияРасчета) КАК КатегорияРасчета
			|	ИЗ
			|		ПланВидовРасчета.ВидыНачислений.БазовыеВидыРасчета КАК ВидыНачисленийБазовыеВидыРасчета
			|	ГДЕ
			|		ВидыНачисленийБазовыеВидыРасчета.Ссылка = &Ссылка) КАК ВложенныйЗапрос";
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		КатегорияРасчета = ВыборкаДетальныеЗаписи.КатегорияРасчета;
	КонецЕсли;	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.Процентом")
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПроцентомОтРазмера")
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПроцентомЗаПредМесяц")
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ГодоваяПремия")
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ОплатаБольничного")
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ОплатаОтпуска")
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.РаботаСверхурочно")
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.РаботаСверхурочноБаза")
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ОтСтажаПроцентом") Тогда 
		
		ПроверяемыеРеквизиты.Добавить("БазовыеВидыРасчета");		
	КонецЕсли;
	
	Если НЕ (СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ОплатаОтпуска")
		Или СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ОплатаБольничного")) Тогда 
		
		БухгалтерскийУчетСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРасчетаСреднегоЗаработка");
	КонецЕсли;	
	
	Если СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ГодоваяПремия") Тогда 
		ПроверяемыеРеквизиты.Добавить("Доля");		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли