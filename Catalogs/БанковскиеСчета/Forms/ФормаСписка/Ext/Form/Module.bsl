
#Область ОписаниеПеременных

&НаКлиенте
Перем УстановкаОсновногоСчетаВыполнена; // Признак успешной установки основного банковского счета из формы контрагента/организации

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат; // Возврат при получении формы для анализа.
	КонецЕсли;
	
	Параметры.Отбор.Свойство("Владелец", ВладелецСчетов);
	
	Если ЗначениеЗаполнено(ВладелецСчетов) Тогда
		// Контекстное открытие формы с отбором по контрагенту/организации
		
		АвтоЗаголовок = Ложь;
		Заголовок = НСтр("ru='Банковские счета '") + " """ + ВладелецСчетов + """";
		
		Список.Параметры.УстановитьЗначениеПараметра("ОсновнойСчетВладельца",
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВладелецСчетов, "ОсновнойБанковскийСчет"));
		
	Иначе
		// Открытие в общем режиме
	
		Список.Параметры.УстановитьЗначениеПараметра("ОсновнойСчетВладельца", Неопределено);
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов
	МожноРедактировать = ПравоДоступа("Редактирование", Метаданные.Справочники.БанковскиеСчета);
	Элементы.СписокКонтекстноеМенюИзменитьВыделенные.Видимость = МожноРедактировать;
	// Конец СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события ОбработкаОповещения.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "УстановкаОсновногоСчетаВыполнена" Тогда
		УстановкаОсновногоСчетаВыполнена = Истина;
	ИначеЕсли ИмяСобытия = "Запись_Организации"
		Или ИмяСобытия =  "Запись_Контрагент" Тогда	
		Элементы.Список.Обновить();
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) <> Тип("СтрокаГруппировкиДинамическогоСписка")
		И Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		
		Элементы.ИспользоватьКакОсновной.Доступность = Не Элементы.Список.ТекущиеДанные.ЭтоОсновнойСчет;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИспользоватьКакОсновной(Команда)
	
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка")
		Или Элементы.Список.ТекущиеДанные = Неопределено
		Или Элементы.Список.ТекущиеДанные.ЭтоОсновнойСчет Тогда
		
		Возврат;
	КонецЕсли;
	
	НовыйОсновнойСчет = Элементы.Список.ТекущиеДанные.Ссылка;
	
	// Если открыта форма контрагента/организации, то изменение основного счета выполняем в ней.
	УстановкаОсновногоСчетаВыполнена = Ложь;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Владелец", Элементы.Список.ТекущиеДанные.Владелец);
	СтруктураПараметров.Вставить("НовыйОсновнойСчет", НовыйОсновнойСчет);
	
	Оповестить("УстановкаОсновногоСчета", СтруктураПараметров, ЭтотОбъект);
	
	// Если форма контрагента/организации закрыта, то запишем основной счет контрагента/организации самостоятельно.
	Если Не УстановкаОсновногоСчетаВыполнена Тогда
		ЗаписатьОсновнойСчет(СтруктураПараметров);
	КонецЕсли;
	
	// Обновим динамический список.
	Если ЗначениеЗаполнено(ВладелецСчетов) Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ОсновнойСчетВладельца", НовыйОсновнойСчет);
	Иначе
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ЗаписатьОсновнойСчет(СтруктураПараметров)
	
	ВладелецОбъект = СтруктураПараметров.Владелец.ПолучитьОбъект();
	ВладелецУспешноЗаблокирован = Истина;
	
	Попытка
		ВладелецОбъект.Заблокировать();
	Исключение
		
		ВладелецУспешноЗаблокирован = Ложь;
		
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Не удалось заблокировать %1: %2, для изменения основного банковского счета, по причине:
				|%3'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), 
				СтруктураПараметров.Владелец.Метаданные().ПредставлениеОбъекта, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Предупреждение,, ВладелецОбъект, ОписаниеОшибки());
		
	КонецПопытки;
	
	// Если удалось заблокировать, изменим банковский счет по умолчанию у контрагента/организации.
	Если ВладелецУспешноЗаблокирован Тогда
		ВладелецОбъект.ОсновнойБанковскийСчет = СтруктураПараметров.НовыйОсновнойСчет;
		ВладелецОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов
&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
