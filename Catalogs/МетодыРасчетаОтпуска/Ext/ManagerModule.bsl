#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура - Заполнить по умолчанию
// Выполняет первоночальное заполнение
Процедура ЗаполнитьПоУмолчанию() Экспорт 
	СправочникМенеджер = Справочники.МетодыРасчетаОтпуска;
	
	КлассификаторXML = СправочникМенеджер.ПолучитьМакет("МакетЗаполнения").ПолучитьТекст();
	КлассификаторТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	
	Для Каждого СтрокаТаблицыЗначений Из КлассификаторТаблица Цикл 
		Наименование = СокрЛП(СтрокаТаблицыЗначений.Наименование);
		НеполныеМесяцы = СокрЛП(СтрокаТаблицыЗначений.НеполныеМесяцы);
		ВидРасчета = СокрЛП(СтрокаТаблицыЗначений.ВидРасчета);
		ВидОтпуска = СокрЛП(СтрокаТаблицыЗначений.ВидОтпуска);
		КоэффициентРасчета = СокрЛП(СтрокаТаблицыЗначений.КоэффициентРасчета);
		РасчетПоРабочимДням = СокрЛП(СтрокаТаблицыЗначений.РасчетПоРабочимДням);
		
		СправочникСсылка = СправочникМенеджер.НайтиПоНаименованию(Наименование, Истина);
		
		Если СправочникСсылка.Пустая() Тогда
			СправочникОбъект = СправочникМенеджер.СоздатьЭлемент();
		Иначе
			СправочникОбъект = СправочникСсылка.ПолучитьОбъект();
		КонецЕсли;	
		
		СправочникОбъект.Наименование = Наименование;
		СправочникОбъект.НеполныеМесяцы = Перечисления.НеполныеМесяцы[НеполныеМесяцы];
		СправочникОбъект.ВидРасчета = ПланыВидовРасчета.ВидыНачислений.НайтиПоНаименованию(ВидРасчета, Истина);
		СправочникОбъект.ВидОтпуска = Перечисления.ВидыОтпусков[ВидОтпуска];
		СправочникОбъект.КоэффициентРасчета = КоэффициентРасчета;
		СправочникОбъект.РасчетПоРабочимДням = ?(ВРег(РасчетПоРабочимДням) = "ДА", Истина, Ложь);
		
		БухгалтерскийУчетСервер.ЗаписатьСправочникОбъект(СправочникОбъект);
	КонецЦикла;
КонецПроцедуры // ЗаполнитьПоУмолчанию()	

#КонецОбласти

#КонецЕсли
