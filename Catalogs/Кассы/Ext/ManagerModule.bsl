#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Процедура - Заполнить по умолчанию
// Выполняет первоночальное заполнение
Процедура ЗаполнитьПоУмолчанию() Экспорт 
	СправочникМенеджер = Справочники.Кассы;
	
	КлассификаторXML = СправочникМенеджер.ПолучитьМакет("МакетЗаполнения").ПолучитьТекст();
	КлассификаторТаблица  = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	
	Для Каждого СтрокаТаблицыЗначений Из КлассификаторТаблица Цикл 
		ВалютаДенежныхСредств = СокрЛП(СтрокаТаблицыЗначений.ВалютаДенежныхСредств);
		СчетУчета             = СокрЛП(СтрокаТаблицыЗначений.СчетУчета);
		Наименование          = СокрЛП(СтрокаТаблицыЗначений.Наименование);
		
		СправочникСсылка = СправочникМенеджер.НайтиПоНаименованию(Наименование, Истина);
		
		Если СправочникСсылка.Пустая() Тогда
			СправочникОбъект = СправочникМенеджер.СоздатьЭлемент();
			СправочникСсылка = СправочникОбъект.ПолучитьСсылкуНового();
			Если НЕ ЗначениеЗаполнено(СправочникСсылка) Тогда
				СправочникСсылка = СправочникМенеджер.ПолучитьСсылку();
			КонецЕсли;
			
			СправочникОбъект.УстановитьСсылкуНового(СправочникСсылка);
		Иначе
			СправочникОбъект = СправочникСсылка.ПолучитьОбъект();
		КонецЕсли;	
		
		СправочникОбъект.Наименование          = Наименование;	
		СправочникОбъект.Владелец 	           = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
		СправочникОбъект.ВалютаДенежныхСредств = Справочники.Валюты.НайтиПоКоду(ВалютаДенежныхСредств);
		СправочникОбъект.СчетУчета 	           = ПланыСчетов.Хозрасчетный.НайтиПоКоду(СчетУчета);
		
		БухгалтерскийУчетКлиентСервер.ЗаписатьСправочникОбъект(СправочникОбъект,,,,Истина);
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Владелец", СправочникОбъект.Владелец);
		СтруктураПараметров.Вставить("НоваяОсновнаяКасса", СправочникСсылка);
		ЗаписатьОсновнуюКассу(СтруктураПараметров);
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьПоУмолчанию()	

// Возвращает описание блокируемых реквизитов.
//
// Возвращаемое значение:
//  Массив - содержит строки в формате ИмяРеквизита[;ИмяЭлементаФормы,...]
//           где ИмяРеквизита - имя реквизита объекта, ИмяЭлементаФормы - имя элемента формы,
//           связанного с реквизитом.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	БлокируемыеРеквизиты = Новый Массив;
	
	БлокируемыеРеквизиты.Добавить("Владелец");
	БлокируемыеРеквизиты.Добавить("ВалютаДенежныхСредств");
	БлокируемыеРеквизиты.Добавить("СчетУчета");
	
	Возврат БлокируемыеРеквизиты;
	
КонецФункции 

// Функция - получение валютной кассы.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - Организация, кассу которой необходимо получить.
//	Валюта - СправочникСсылка.Валюты - Валюта кассы.
//
// Возвращаемое значение:
//	Ссылка - СправочникСсылка.Кассы - Если не удалось найти, возвращается пустая ссылка.
//
Функция ВалютнаяКасса(Организация, Валюта) Экспорт 

	НайденнаяКасса = Справочники.Кассы.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Кассы.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Кассы КАК Кассы
		|ГДЕ
		|	Кассы.Владелец = &Организация
		|	И Кассы.ВалютаДенежныхСредств = &ВалютаДенежныхСредств
		|	И НЕ Кассы.ПометкаУдаления";
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ВалютаДенежныхСредств", Валюта);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
		НайденнаяКасса = ВыборкаДетальныеЗаписи.Ссылка;	
	КонецЕсли;

	Возврат НайденнаяКасса;
КонецФункции 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписатьОсновнуюКассу(СтруктураПараметров)
	
	ВладелецОбъект = СтруктураПараметров.Владелец.ПолучитьОбъект();
	ВладелецУспешноЗаблокирован = Истина;
	
	Попытка
		ВладелецОбъект.Заблокировать();
	Исключение
		
		ВладелецУспешноЗаблокирован = Ложь;
		
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Не удалось заблокировать %1: %2, для изменения основной кассы, по причине:
				|%3'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), 
				СтруктураПараметров.Владелец.Метаданные().ПредставлениеОбъекта, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Предупреждение,, ВладелецОбъект, ОписаниеОшибки());
		
	КонецПопытки;
	
	// Если удалось заблокировать, изменим основную кассу у организации.
	Если ВладелецУспешноЗаблокирован Тогда
		ВладелецОбъект.ОсновнаяКасса = СтруктураПараметров.НоваяОсновнаяКасса;
		ВладелецОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
