#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
	
// В программе наименование основной спецификации, если она всего одна, по умолчанию совпадает с наименованием продукции.
// Если спецификации уже задано наименование - не такое, как у продукции - то оно изменено не будет.
//
// Параметры:
//  ОсновнаяСпецификацияНоменклатуры - СправочникСсылка.СпецификацииНоменклатуры - контролируемая спецификация
//  Номенклатура					 - СправочникСсылка.Номенклатура - владелец спецификации
//  Наименование					 - Строка - новое наименование продукции
//  ПараметрыЗаписи					 - Структура - может содержать ключ НаименованиеДоИзменения (наименование продукции)
//
Процедура ИсправитьНаименованиеСпецификации(Спецификация, Номенклатура, Наименование, ПараметрыЗаписи) Экспорт
	
	Если Не ЗначениеЗаполнено(Спецификация) Тогда
		Возврат;
	КонецЕсли;
	
	Если НесколькоСпецификацийНоменклатуры(Номенклатура) Тогда
		Возврат;
	КонецЕсли;
	
	НаименованиеСпецификации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Спецификация, "Наименование");
	
	Если НаименованиеСпецификации = Наименование Тогда
		Возврат;
	КонецЕсли;
	
	НаименованиеДоИзменения = "";
	ПараметрыЗаписи.Свойство("НаименованиеДоИзменения", НаименованиеДоИзменения);
	
	Если Не ПустаяСтрока(НаименованиеДоИзменения) 
		И Не ПустаяСтрока(НаименованиеСпецификации)
		И НаименованиеСпецификации <> НаименованиеДоИзменения Тогда
		// Пользователь задал спецификации особое наименование. Сохраним его
		Возврат;
	КонецЕсли;
	
	ОбъектОсновнаяСпецификация = Спецификация.ПолучитьОбъект();
	ОбъектОсновнаяСпецификация.Наименование = Наименование;
	ОбъектОсновнаяСпецификация.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НесколькоСпецификацийНоменклатуры(Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(СправочникСпецификаций.Ссылка) КАК КоличествоСпецификаций
	|ИЗ
	|	Справочник.СпецификацииНоменклатуры КАК СправочникСпецификаций
	|ГДЕ
	|	СправочникСпецификаций.Владелец = &Номенклатура
	|	И СправочникСпецификаций.ПометкаУдаления = ЛОЖЬ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.КоличествоСпецификаций > 1;
	Иначе 
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиОбновленияИнформационнойБазы

#Область ИсправитьРасхожденияВладелецОсновнаяСпецификация

// Исправляет ошибки в данных, которые могли быть допущены в версиях, когда не было УстановитьОсновнойПриСменеВладельца()
//
// Параметры:
//  Параметры – Структура со свойствами, состав которой определяется БСП:
//              * ОбработкаЗавершена (Булево). Для того чтобы обработчик был вызван повторно для обработки следующей порции данных, следует записать в него значение Ложь.
//              * ПрогрессВыполнения (Структура). Данные для отображения прогресса обработки данных:
//                  * ВсегоОбъектов (Число). Общее количество объектов, которые необходимо обработать.
//                  * ОбработаноОбъектов (Число). Сколько объектов уже обработано.
//
Процедура ИсправитьРасхожденияВладелецОсновнаяСпецификация(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	
	// Выполняем без разбиения на порции исходя из предположения, что количество проблемных объектов небольшое.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Продукция,
	|	СпецификацииНоменклатуры.Ссылка КАК Спецификация,
	|	СпецификацииНоменклатуры.Владелец КАК ВладелецСпецификации
	|ПОМЕСТИТЬ Ошибки
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СпецификацииНоменклатуры КАК СпецификацииНоменклатуры
	|		ПО Номенклатура.ОсновнаяСпецификацияНоменклатуры = СпецификацииНоменклатуры.Ссылка
	|ГДЕ
	|	СпецификацииНоменклатуры.Владелец <> Номенклатура.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВладелецСпецификации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СпецификацииНоменклатуры.Владелец КАК Владелец
	|ПОМЕСТИТЬ НесколькоСпецификаций
	|ИЗ
	|	Ошибки КАК Ошибки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СпецификацииНоменклатуры КАК СпецификацииНоменклатуры
	|		ПО Ошибки.ВладелецСпецификации = СпецификацииНоменклатуры.Владелец
	|			И Ошибки.Спецификация <> СпецификацииНоменклатуры.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Ошибки.Продукция КАК Продукция,
	|	Ошибки.Спецификация КАК Спецификация,
	|	Ошибки.ВладелецСпецификации КАК ВладелецСпецификации,
	|	НесколькоСпецификаций.Владелец ЕСТЬ NULL КАК ЕдинственнаяСпецификацияВладельца
	|ИЗ
	|	Ошибки КАК Ошибки
	|		ЛЕВОЕ СОЕДИНЕНИЕ НесколькоСпецификаций КАК НесколькоСпецификаций
	|		ПО Ошибки.ВладелецСпецификации = НесколькоСпецификаций.Владелец";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
 		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	Параметры.ПрогрессВыполнения.ВсегоОбъектов = Параметры.ПрогрессВыполнения.ОбработаноОбъектов + Выборка.Количество();
	
	КоличествоОшибок = 0;
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			
			ИсправитьРасхождениеВладелецОсновнаяСпецификация(
				Выборка.Спецификация,
				Выборка.ВладелецСпецификации,
				Выборка.ЕдинственнаяСпецификацияВладельца,
				Выборка.Продукция);
			
			Параметры.ПрогрессВыполнения.ОбработаноОбъектов = Параметры.ПрогрессВыполнения.ОбработаноОбъектов + 1;
				
		Исключение
			
			// Если не удалось обработать спецификацию, повторим попытку снова (позже).
			
			КоличествоОшибок = КоличествоОшибок + 1;
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось обработать спецификацию: %1 по причине:
				|%2'"), 
				Строка(Выборка.Спецификация),
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Справочники.СпецификацииНоменклатуры,
				Выборка.Спецификация,
				ТекстСообщения);
				
		КонецПопытки;
			
	КонецЦикла;
	
	Если КоличествоОшибок = 0 Тогда
		
		Параметры.ОбработкаЗавершена = Истина;
	
	Иначе
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедуре ИсправитьРасхожденияВладелецОсновнаяСпецификация не удалось обработать некоторые спецификации. Количество ошибок: %1'"), 
			КоличествоОшибок);
			
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ИсправитьРасхождениеВладелецОсновнаяСпецификация(Спецификация, ВладелецСпецификации, ЕдинственнаяСпецификацияВладельца, Продукция)
	
	НачатьТранзакцию();
	Попытка			
		
		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить("Справочник.Номенклатура");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Продукция);
		
		Если ЕдинственнаяСпецификацияВладельца Тогда
			ЭлементБлокировки = Блокировка.Добавить("Справочник.Номенклатура");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВладелецСпецификации);
		КонецЕсли;
		
		Блокировка.Заблокировать();
		
		Объект = Спецификация.ПолучитьОбъект();
		
		Объект.УдалитьУстановкуОсновной(Продукция, Истина);
		
		Если ЕдинственнаяСпецификацияВладельца Тогда
			Объект.УстановитьОсновной(ВладелецСпецификации, Истина);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
