#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
//Функция определяет наличие дублей у контрагента.
// ИНН - ИНН проверяемого контрагента, Тип - Строка(12)
// Ссылка - Сам проверяемый контрагент, Тип - СправочникСсылка.Контрагенты
Функция ПроверитьДублиСправочникаКонтрагентыПоИНН(Знач ИНН, ИсключаяСсылку = Неопределено, ПроверкаПриЗаписи = Ложь) Экспорт
	
	Дубли = Новый Массив;
	
	Запрос = Новый Запрос;
	////Если записываем элемент, то сначала проверим наличие дублей
	////в регистре. Операция выполняется только при событии объекта ПередЗаписью
	////В интерактивной проверке дублей не применяется, 
	////т.к. на регистр устанавливаются исключительные блокировки.
	//Если ПроверкаПриЗаписи Тогда
	//	Дубли = ЕстьЗаписиВРегистреДублей(ИНН, ИсключаяСсылку);
	//КонецЕсли;
	
	//Если при записи элемента ничего не нашлось в регистре дублей, 
	//или при интерактивной проверке выполним поиск дублей по справочнику Контрагенты
	Если Дубли.Количество() = 0 Тогда
		
		Запрос.Текст = 	"ВЫБРАТЬ
		               	|	Контрагенты.Ссылка
		               	|ИЗ
		               	|	Справочник.Контрагенты КАК Контрагенты
		               	|ГДЕ
		               	|	НЕ Контрагенты.ЭтоГруппа
		               	|	И НЕ Контрагенты.Ссылка = &Ссылка
		               	|	И Контрагенты.ИНН = &ИНН";
		Запрос.УстановитьПараметр("ИНН", СокрЛП(ИНН));
		Запрос.УстановитьПараметр("Ссылка", ИсключаяСсылку);
		
		ВыборкаДублей = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаДублей.Следующий() Цикл
			Дубли.Добавить(ВыборкаДублей.Ссылка);
		КонецЦикла;
		
	КонецЕсли;
			
	Возврат Дубли;
	
КонецФункции	

#Область ПрограммныйИнтерфейс

// Возвращает список реквизитов, которые не нужно редактировать
// с помощью обработки группового изменения объектов.
//
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить("ИНН");
	Результат.Добавить("КодПоОКПО");
	Результат.Добавить("ОсновнойБанковскийСчет");
	Результат.Добавить("ОсновнойДоговорКонтрагента");
	
	Результат.Добавить("КонтактнаяИнформация.*");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ИнтерфейсПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "КонтактнаяИнформация";
	КомандаПечати.Представление = НСтр("ru = 'Контактная информация'");
	КомандаПечати.Порядок = 1;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли