#Область ОбработчикиСобытийФормы

// Процедура - обработчик события ПриСозданииНаСервере.
// В процедуре осуществляется
// - инициализация реквизитов формы,
// - установка параметров функциональных опций формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.ЕдиницаИзмерения) И ЗначениеЗаполнено(Объект.Родитель) Тогда
		Объект.ЕдиницаИзмерения = Объект.Родитель.ЕдиницаИзмерения;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ЕдиницаИзмерения) Тогда
		Штука = Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию("шт", Истина);
		Если НЕ Штука = Неопределено Тогда
			Объект.ЕдиницаИзмерения = Штука;
		КонецЕсли;
	КонецЕсли;
	
	// Изображение
	// Установка значения реквизита АдресКартинки.
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбновитьИзображение();
	КонецЕсли;
	
	ИзображениеВидимостьКоманднойПанели();
	// Конец Изображение
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = УправлениеСвойствамиПереопределяемый.ЗаполнитьДополнительныеПараметры(Объект, "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

// Процедура - обработчик события ПриОткрытии.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Установить видимость и доступность элементов формы
	УстановитьВидимостьДоступностьЭлементов();
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

// Процедура - обработчик события ОбработкаОповещения.
//
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// Изображение
	Если ИмяСобытия = "Запись_ПрисоединенныйФайл" Тогда
		Модифицированность = Истина;
		ДобавитьИзображениеНаСервере(Источник);
	КонецЕсли;	
	// Конец Изображение
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

// Процедура - обработчик события ПриЧтенииНаСервере.
//
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// Изображение
	ОбновитьИзображение();
	// Конец Изображение

	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

// Процедура - обработчик события ПередЗаписьюНаСервере формы.
//
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

// Процедура - обработчик события ПослеЗаписиНаСервере.
//
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
КонецПроцедуры

// Процедура - обработчик события ПослеЗаписиНаСервере формы.
//
&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Процедура - обработчик события ПриИзменении Наименование.
//
&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	Объект.НаименованиеПолное = Объект.Наименование;	
КонецПроцедуры

&НаКлиенте
Процедура АдресКартинкиНажатие(Элемент, СтандартнаяОбработка)
	
	// Изображение
	СтандартнаяОбработка = Ложь;
	Если НЕ Объект.ФайлКартинки.Пустая() Тогда
		ПросмотретьПрисоединенныйФайл();
	Иначе
		ЗаблокироватьДанныеФормыДляРедактирования();
		ДобавитьИзображениеНаКлиенте();
	КонецЕсли;
	// Конец Изображение
	
КонецПроцедуры

#КонецОбласти

#Область Изображение

&НаСервере
Процедура ОбновитьИзображение()
	Если Не Объект.ФайлКартинки.Пустая() Тогда
		АдресКартинки = ПолучитьНавигационнуюСсылкуКартинки(Объект.ФайлКартинки, УникальныйИдентификатор)
	Иначе
		АдресКартинки = "";
	КонецЕсли;
КонецПроцедуры // ОбновитьИзображение()

// Процедура просмотра картинки
//
&НаКлиенте
Процедура ПросмотретьПрисоединенныйФайл()
	
	ОчиститьСообщения();
	
	ДанныеФайла = ПолучитьДанныеФайла(Объект.ФайлКартинки, УникальныйИдентификатор);
	ПрисоединенныеФайлыКлиент.ОткрытьФайл(ДанныеФайла);
	
КонецПроцедуры // ПросмотретьПрисоединенныйФайл()

// Функция возвращает данные файла
//
&НаСервереБезКонтекста
Функция ПолучитьДанныеФайла(ФайлКартинки, УникальныйИдентификатор)
	Возврат ПрисоединенныеФайлы.ПолучитьДанныеФайла(ФайлКартинки, УникальныйИдентификатор);
КонецФункции // ПолучитьДанныеФайла()

// Процедура добавления изображения для номенклатуры
//
&НаКлиенте
Процедура ДобавитьИзображениеНаКлиенте()
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОтветНаВопросДобавитьИзображение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Для выбора изображения необходимо записать объект. Записать?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60);
	Иначе
		ДобавитьИзображениеНаКлиентеЗавершение();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтветНаВопросДобавитьИзображение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Попытка
			Записать();
		Исключение
			ТекстСообщения = НСтр("ru = 'Не удалось завершить запись.
				|Техническая информация об ошибке: %1'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));	
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецПопытки;
		
		ДобавитьИзображениеНаКлиентеЗавершение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиентеЗавершение()
	
	Перем ИдентификаторФайла, Фильтр;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ИдентификаторФайла = Новый УникальныйИдентификатор;
		
		Фильтр = НСтр("ru = 'Все картинки (*.bmp;*.gif;*.png;*.jpeg;*.dib;*.rle;*.tif;*.jpg;*.ico;*.wmf;*.emf)|*.bmp;*.gif;*.png;*.jpeg;*.dib;*.rle;*.tif;*.jpg;*.ico;*.wmf;*.emf"
		+ "|Все файлы(*.*)|*.*"
		+ "|Формат bmp(*.bmp*;*.dib;*.rle)|*.bmp;*.dib;*.rle"
		+ "|Формат GIF(*.gif*)|*.gif"
		+ "|Формат JPEG(*.jpeg;*.jpg)|*.jpeg;*.jpg"
		+ "|Формат PNG(*.png*)|*.png"
		+ "|Формат TIFF(*.tif)|*.tif"
		+ "|Формат icon(*.ico)|*.ico"
		+ "|Формат метафайл(*.wmf;*.emf)|*.wmf;*.emf'");
		
		ПрисоединенныеФайлыКлиент.ДобавитьФайлы(Объект.Ссылка, ИдентификаторФайла, Фильтр);
		
	КонецЕсли;
	
КонецПроцедуры // ДобавитьИзображениеНаКлиенте()

&НаСервере
Процедура ДобавитьИзображениеНаСервере(Источник)
	
	Если НЕ ЗначениеЗаполнено(Объект.ФайлКартинки) Тогда
		Объект.ФайлКартинки = ?(ТипЗнч(Источник) = Тип("Массив"), Источник[0], Источник);
	КонецЕсли;
	
	ОбновитьИзображение();
	ИзображениеВидимостьКоманднойПанели();
	
КонецПроцедуры

// Устанавливает видимость кнопок контекстного меню изображения.
//
&НаСервере
Процедура ИзображениеВидимостьКоманднойПанели()
	
	Если ЗначениеЗаполнено(Объект.ФайлКартинки) Тогда
		Элементы.АдресКартинкиКонтекстноеМенюИзменитьИзображение.Видимость = Истина;
		Элементы.АдресКартинкиКонтекстноеМенюПросмотретьИзображение.Видимость = Истина;
	Иначе
		Элементы.АдресКартинкиКонтекстноеМенюИзменитьИзображение.Видимость = Ложь;
		Элементы.АдресКартинкиКонтекстноеМенюПросмотретьИзображение.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	ДобавитьИзображениеНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьИзображение(Команда)
	
	//ДанныеФайлаДляИзменения = ИзменитьИзображениеНаСервере();
	//Если ДанныеФайлаДляИзменения = Неопределено Тогда
	//	
		ТекстСообщения = НСтр("ru = 'Изображение не доступно для редактирования'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "АдресКартинки");
	//	Возврат;
	//	
	//КонецЕсли;
	
	//ОписаниеОповещения = Новый ОписаниеОповещения("ИзменитьИзображениеЗавершение", ЭтотОбъект);
	//ПрисоединенныеФайлыСлужебныйКлиент.ВыбратьФайлНаДискеИПоместитьВХранилище(
	//	ОписаниеОповещения, ДанныеФайлаДляИзменения, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьИзображениеЗавершение(ИнформацияОФайле, ДополнительныеПараметры) Экспорт
	
	Если ИнформацияОФайле = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИзменитьИзображениеЗавершениеНаСервере(ИнформацияОФайле);
	ОповеститьОбИзменении(Объект.ФайлКартинки);
	Оповестить("Запись_ПрисоединенныйФайл", Новый Структура, Объект.ФайлКартинки);
	
КонецПроцедуры

// Перезаписывает текущее изображение выбранным файлом с диска.
//
&НаСервере
Процедура ИзменитьИзображениеЗавершениеНаСервере(ИнформацияОФайле)
	
	ПрисоединенныеФайлы.ОбновитьПрисоединенныйФайл(Объект.ФайлКартинки, ИнформацияОФайле);
	ИзображениеВидимостьКоманднойПанели();
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьИзображение(Команда)
	
	ПросмотретьПрисоединенныйФайл();
	
КонецПроцедуры // ПросмотретьИзображение()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура устанавливает видимость и доступность элементов.
//
&НаКлиенте
Процедура УстановитьВидимостьДоступностьЭлементов()
	
КонецПроцедуры // УстановитьВидимостьДоступностьЭлементов()  

&НаСервереБезКонтекста
Функция ПолучитьНавигационнуюСсылкуКартинки(ФайлКартинки, ИдентификаторФормы)
	
	Попытка
		Возврат ПрисоединенныеФайлы.ПолучитьДанныеФайла(ФайлКартинки, ИдентификаторФормы).СсылкаНаДвоичныеДанныеФайла;
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры // Подключаемый_РедактироватьСоставСвойств()

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма, РеквизитФормыВЗначение("Объект"));
КонецПроцедуры // ОбновитьЭлементыДополнительныхРеквизитов()

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти
