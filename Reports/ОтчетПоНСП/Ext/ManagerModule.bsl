#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки размещения в панели отчетов.
//
// Параметры:
//   Настройки - Коллекция - Используется для описания настроек отчетов и вариантов
//       см. описание к ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации()
//   НастройкиОтчета - СтрокаДереваЗначений - Настройки размещения всех вариантов отчета.
//       см. "Реквизиты для изменения" функции ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//
// Описание:
//   См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//
// Вспомогательные методы:
//   НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "<ИмяВарианта>");
//   ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Истина/Ложь); // Отчет поддерживает только этот режим.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	МодульВариантыОтчетов = ОбщегоНазначения.ОбщийМодуль("ВариантыОтчетов");
	МодульВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Истина);
	
	НастройкиВарианта = МодульВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "");
	НастройкиВарианта.Описание = НСтр("ru = 'Отчет по налогу с продаж.'");

КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Процедура формирования отчета.
//
// Параметры:
// ПараметрыОтчета - структура - набор параметров, необходимых для построения отчета.
// 	АдресХранилища - адрес временного хранилища.
Процедура Сформировать(СтруктураПараметров, АдресХранилища) Экспорт
	
	РезультатФормирования = Новый Структура("Результат, ОписаниеОшибки", Неопределено, "");
	СформироватьТабличныйДокумент(СтруктураПараметров, РезультатФормирования);
	ПоместитьВоВременноеХранилище(РезультатФормирования, АдресХранилища);
	
КонецПроцедуры

// Процедура - Сформировать табличный документ
//
// Параметры:
//  СтруктураПараметров	 - Структура - Параметры формирования отчета.
//  РезультатФормирования	 	- Структура - 
//
Процедура СформироватьТабличныйДокумент(СтруктураПараметров, РезультатФормирования) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать = Истина;
	
	//2. Заполнение основной части
	УПП = БухгалтерскийУчетСервер.ПолучитьДанныеУчетнойПолитикиОрганизаций(СтруктураПараметров.КонецПериода, СтруктураПараметров.Организация);	
	Если УПП.ПлательщикНДС Тогда
		Секция = 1;
	Иначе 
		Секция = 2;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КонецМесяца", 	КонецМесяца(СтруктураПараметров.КонецПериода));
	Запрос.УстановитьПараметр("НачалоМесяца", 	СтруктураПараметров.НачалоПериода);
	Запрос.УстановитьПараметр("Организация", 	СтруктураПараметров.Организация);	
	Запрос.УстановитьПараметр("ПлательщикНДС", 	УПП.ПлательщикНДС);	
	
	Запрос.Текст =	
	"ВЫБРАТЬ
	|	СУММА(РеализацияОбороты.ДоходОборот) КАК Выручка,
	|	РеализацияОбороты.СтавкаНСП,
	|	СУММА(РеализацияОбороты.СуммаНСПОборот) КАК СуммаНСП,
	|	ВЫБОР
	|		КОГДА &ПлательщикНДС
	|			ТОГДА СтавкиНСПСрезПоследних.СтавкаПлательщикНДС
	|		ИНАЧЕ СтавкиНСПСрезПоследних.СтавкаНеПлательщикНДС
	|	КОНЕЦ КАК Ставка
	|ИЗ
	|	РегистрНакопления.Реализация.Обороты(
	|			&НачалоМесяца,
	|			&КонецМесяца,
	|			,
	|			Организация = &Организация) КАК РеализацияОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНСП.СрезПоследних КАК СтавкиНСПСрезПоследних
	|		ПО РеализацияОбороты.СтавкаНСП = СтавкиНСПСрезПоследних.СтавкаНСП
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияОбороты.СтавкаНСП,
	|	ВЫБОР
	|		КОГДА &ПлательщикНДС
	|			ТОГДА СтавкиНСПСрезПоследних.СтавкаПлательщикНДС
	|		ИНАЧЕ СтавкиНСПСрезПоследних.СтавкаНеПлательщикНДС
	|	КОНЕЦ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	// Опеределение макета
	Макет = ПолучитьМакет("ПФ_MXL_ОтчетПоНСП");
	
	//1. Заполнение шапки
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьШапка);
	
	Если СтруктураПараметров.ВидСубъекта = 0 Тогда 
		НомерSTI = "129";
	    НомерПриложения = "1";
		Заголовок = "ОТЧЕТ ПО НАЛОГУ С ПРОДАЖ
			|СУБЪЕКТА МАЛОГО ПРЕДПРИНИМАТЕЛЬСТВА";
	ИначеЕсли СтруктураПараметров.ВидСубъекта = 1 Тогда 
		НомерSTI = "130";
	    НомерПриложения = "2";
		Заголовок = "ОТЧЕТ ПО НАЛОГУ С ПРОДАЖ
			|СУБЪЕКТА СРЕДНЕГО ПРЕДПРИНИМАТЕЛЬСТВА";
	ИначеЕсли СтруктураПараметров.ВидСубъекта = 2 Тогда 
		НомерSTI = "131";
	    НомерПриложения = "3";
		Заголовок = "ОТЧЕТ ПО НАЛОГУ С ПРОДАЖ СУБЪЕКТА
			|(ЗА ИСКЛЮЧЕНИЕМ СУБЪЕКА МАЛОГО И СРЕДНЕГО ПРЕДПРИНИМАТЕЛЬСТВА)";
	КонецЕсли;	
		
	ОбластьШапка.Параметры.НомерSTI = НомерSTI;
	ОбластьШапка.Параметры.НомерПриложения = НомерПриложения;
	ОбластьШапка.Параметры.Заголовок = Заголовок;
		
	СуммаТорг	= 0;
	НСПТорг		= 0;
	СтавкаТорг	= 0;			
	
	СуммаПроч   = 0;
	НСППроч	 	= 0;
	СтавкаПроч  = 0;
	
	СуммаСвязь  = 0;
	НСПСвязь    = 0;
	СтавкаСвязь = 0;	
	
	Пока Выборка.Следующий() Цикл
		Если  Выборка.СтавкаНСП = Справочники.СтавкиНСП.Торговля Тогда
			СуммаТорг 	= Выборка.Выручка;
			НСПТорг		= Выборка.СуммаНСП;
			СтавкаТорг	= Выборка.Ставка;			
		ИначеЕсли Выборка.СтавкаНСП = Справочники.СтавкиНСП.Прочее Тогда
			СуммаПроч   = Выборка.Выручка;
			НСППроч	 	= Выборка.СуммаНСП;
			СтавкаПроч  = Выборка.Ставка;
		Иначе
			СуммаСвязь  = Выборка.Выручка;
			НСПСвязь    = Выборка.СуммаНСП;
			СтавкаСвязь = Выборка.Ставка;
		КонецЕсли;
	КонецЦикла;
	
	КонтактныеДанные = ПолучитьКонтактнуюИнформацию(СтруктураПараметров.Организация);
	АдрОбластьГород  = КонтактныеДанные.АдрОбластьГород;

	ОбластьШапка.Параметры.АдресГород = АдрОбластьГород;
	
	НСПИтог = НСПТорг + НСППроч + НСПСвязь;
		
	//Торговля
	ОбластьШапка.Параметры["СуммаТорг"+Секция]	= СуммаТорг;
	ОбластьШапка.Параметры["НСПТорг"+Секция]	= НСПТорг;
	ОбластьШапка.Параметры["СтавкаТорг"+Секция]	= СтавкаТорг;

	//Связь
	ОбластьШапка.Параметры["СуммаСвязь"+Секция]	= СуммаСвязь;
	ОбластьШапка.Параметры["НСПСвязь"+Секция]	= НСПСвязь;
	ОбластьШапка.Параметры["СтавкаСвязь"+Секция]= СтавкаСвязь;

	//Прочее
	ОбластьШапка.Параметры["СуммаПроч"+Секция]	= СуммаПроч;
	ОбластьШапка.Параметры["НСППроч"+Секция]	= НСППроч;
	ОбластьШапка.Параметры["СтавкаПроч"+Секция]	= СтавкаПроч;
	
	ОбластьШапка.Параметры["НСПИтог"+Секция]	= НСПИтог;
	ОбластьШапка.Параметры.НСПИтог = НСПИтог;
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
		
	РезультатФормирования.Результат = ТабличныйДокумент;
	
КонецПроцедуры

// Процедура - Заполнить шапку отчета
//
// Параметры:
//  НачалоПериода	 - 	 - 
//  КонецПериода	 - 	 - 
//  Организация		 - 	 - 
//  ОбластьШапка	 - 	 - 
//
Процедура ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьШапка)
	
	Организация 	= СтруктураПараметров.Организация;
	НачалоПериода 	= СтруктураПараметров.НачалоПериода;
	КонецПериода 	= СтруктураПараметров.КонецПериода;	

	ГоловнаяОрганизация = Организация.ГоловнаяОрганизация;
	
	ОКПО              				= Организация.КодПоОКПО;
	ИНН 							= ГоловнаяОрганизация.ИНН;
	КодГНС 							= ГоловнаяОрганизация.ГНС.Код;
	ОрганизацияНаменованиеПолное    = ГоловнаяОрганизация.НаименованиеПолное
										+ ?(ЗначениеЗаполнено(ГоловнаяОрганизация.НаименованиеПолное), Символы.ПС + " (", "")
										+ Организация.НаименованиеПолное
										+ ?(ЗначениеЗаполнено(ГоловнаяОрганизация.НаименованиеПолное), ")", "");	
	
	КонтактныеДанные = ПолучитьКонтактнуюИнформацию(Организация);
	
	Индекс           = КонтактныеДанные.Индекс;
	АдрОбластьГород  = КонтактныеДанные.АдрОбластьГород;
	ЮрАдрес	         = КонтактныеДанные.АдресОрганизации; 
	Телефон		     = КонтактныеДанные.Телефон;	
			
	ОбластьШапка.Параметры.ОрганизацияНаименованиеПолное = ОрганизацияНаменованиеПолное;
	Если ЗначениеЗаполнено(АдрОбластьГород) Тогда 
		ОбластьШапка.Параметры.АдресГород = АдрОбластьГород;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЮрАдрес) Тогда 
		ОбластьШапка.Параметры.АдресУлица = ЮрАдрес;
	КонецЕсли;
	
	ОбластьШапка.Параметры.Телефон = Телефон;
	
	Если ЗначениеЗаполнено(Индекс) Тогда 
		
		ОбластьШапка.Параметры.Индекс1 = Сред(Индекс,1,1);
		ОбластьШапка.Параметры.Индекс2 = Сред(Индекс,2,1);
		ОбластьШапка.Параметры.Индекс3 = Сред(Индекс,3,1);
		ОбластьШапка.Параметры.Индекс4 = Сред(Индекс,4,1);
		ОбластьШапка.Параметры.Индекс5 = Сред(Индекс,5,1);
		ОбластьШапка.Параметры.Индекс6 = Сред(Индекс,6,1);
		
	КонецЕсли;

	Если ЗначениеЗаполнено(ОКПО) Тогда 
		ОбластьШапка.Параметры.ОКПО1 = Сред(ОКПО,1,1);
		ОбластьШапка.Параметры.ОКПО2 = Сред(ОКПО,2,1);
		ОбластьШапка.Параметры.ОКПО3 = Сред(ОКПО,3,1);
		ОбластьШапка.Параметры.ОКПО4 = Сред(ОКПО,4,1);
		ОбластьШапка.Параметры.ОКПО5 = Сред(ОКПО,5,1);
		ОбластьШапка.Параметры.ОКПО6 = Сред(ОКПО,6,1);
		ОбластьШапка.Параметры.ОКПО7 = Сред(ОКПО,7,1);
		ОбластьШапка.Параметры.ОКПО8 = Сред(ОКПО,8,1);
	КонецЕсли;
	
	ОбластьШапка.Параметры.ИНН1 = Сред(ИНН, 1, 1);
	ОбластьШапка.Параметры.ИНН2 = Сред(ИНН, 2, 1);
	ОбластьШапка.Параметры.ИНН3 = Сред(ИНН, 3, 1);                           
	ОбластьШапка.Параметры.ИНН4 = Сред(ИНН, 4, 1);
	ОбластьШапка.Параметры.ИНН5 = Сред(ИНН, 5, 1);
	ОбластьШапка.Параметры.ИНН6 = Сред(ИНН, 6, 1);
	ОбластьШапка.Параметры.ИНН7 = Сред(ИНН, 7, 1);
	ОбластьШапка.Параметры.ИНН8 = Сред(ИНН, 8, 1);
	ОбластьШапка.Параметры.ИНН9 = Сред(ИНН, 9, 1);
	ОбластьШапка.Параметры.ИНН10 = Сред(ИНН, 10, 1);
	ОбластьШапка.Параметры.ИНН11 = Сред(ИНН, 11, 1);
	ОбластьШапка.Параметры.ИНН12 = Сред(ИНН, 12, 1);
	ОбластьШапка.Параметры.ИНН13 = Сред(ИНН, 13, 1);
	ОбластьШапка.Параметры.ИНН14 = Сред(ИНН, 14, 1);
	
	ОбластьШапка.Параметры.Налоговая = Организация.ГНС;
	
	ОбластьШапка.Параметры.Код1 = Сред(КодГНС, 1, 1);
	ОбластьШапка.Параметры.Код2 = Сред(КодГНС, 2, 1);
	ОбластьШапка.Параметры.Код3 = Сред(КодГНС, 3, 1);
	
	ОбластьШапка.Параметры.ДатаН1 = Сред(НачалоПериода, 1, 1);	
	ОбластьШапка.Параметры.ДатаН2 = Сред(НачалоПериода, 2, 1);	
	ОбластьШапка.Параметры.ДатаН3 = Сред(НачалоПериода, 4, 1);	
	ОбластьШапка.Параметры.ДатаН4 = Сред(НачалоПериода, 5, 1);	
	ОбластьШапка.Параметры.ДатаН5 = Сред(НачалоПериода, 7, 1);	
	ОбластьШапка.Параметры.ДатаН6 = Сред(НачалоПериода, 8, 1);	
	ОбластьШапка.Параметры.ДатаН7 = Сред(НачалоПериода, 9, 1);	
	ОбластьШапка.Параметры.ДатаН8 = Сред(НачалоПериода, 10, 1);	
	
	ОбластьШапка.Параметры.ДатаК1 = Сред(КонецПериода, 1, 1);	
	ОбластьШапка.Параметры.ДатаК2 = Сред(КонецПериода, 2, 1);	
	ОбластьШапка.Параметры.ДатаК3 = Сред(КонецПериода, 4, 1);	
	ОбластьШапка.Параметры.ДатаК4 = Сред(КонецПериода, 5, 1);	
	ОбластьШапка.Параметры.ДатаК5 = Сред(КонецПериода, 7, 1);	
	ОбластьШапка.Параметры.ДатаК6 = Сред(КонецПериода, 8, 1);	
	ОбластьШапка.Параметры.ДатаК7 = Сред(КонецПериода, 9, 1);	
	ОбластьШапка.Параметры.ДатаК8 = Сред(КонецПериода, 10, 1);

КонецПроцедуры

// Функция -ПолучитьКонтактнуюИнформацию
//
// Параметры:
//  Организация  - Спр.Ссылка - Спр.Органинизации 
// Возвращаемое значение:
//  Структура   - структура данных контактной информации
//
Функция ПолучитьКонтактнуюИнформацию(Организация)
	
	СтруктураКонтактнойИнформации = УправлениеКонтактнойИнформациейКлиентСервер.СтруктураКонтактнойИнформацииПоТипу(Перечисления.ТипыКонтактнойИнформации.Адрес);
	ТаблицаКонтактнойИнформации = УправлениеКонтактнойИнформацией.ТаблицаКонтактнойИнформацииОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	
	Если ТаблицаКонтактнойИнформации.Количество() > 0 Тогда 		
		СтруктураКонтактнойИнформации = ТаблицаКонтактнойИнформации[0].СтруктураПолей;
	КонецЕсли;
	Если СтруктураКонтактнойИнформации.Количество() > 3 Тогда 
		Индекс		    = СтруктураКонтактнойИнформации.Индекс; 
		ГородНасПункт   = ?(СтруктураКонтактнойИнформации.Город  = "",СтруктураКонтактнойИнформации.НаселенныйПункт,СтруктураКонтактнойИнформации.Город);
		АдрОбластьГород = ?(СтруктураКонтактнойИнформации.Регион = "","",СтруктураКонтактнойИнформации.Регион + ",")
		                + ?(СтруктураКонтактнойИнформации.Район  = "","", " " + СтруктураКонтактнойИнформации.Район + ",") 
						+ ?(ГородНасПункт = "",""," " + ГородНасПункт); 
		АдресОрганизации = ?(СтруктураКонтактнойИнформации.Улица    = "","",СтруктураКонтактнойИнформации.Улица + ",")
						 + ?(СтруктураКонтактнойИнформации.Дом      = "",""," " + СтруктураКонтактнойИнформации.Дом + ",")
						 + ?(СтруктураКонтактнойИнформации.Корпус   = "",""," " + СтруктураКонтактнойИнформации.Корпус + ",")
						 + ?(СтруктураКонтактнойИнформации.Квартира = "",""," " + СтруктураКонтактнойИнформации.Квартира);
		
	Иначе
		Индекс			 = ""; 
		АдрОбластьГород  = ""; 
		АдресОрганизации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);		
	КонецЕсли;	
	
	Телефон		= УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	
	Структура = Новый Структура("Индекс,АдрОбластьГород,АдресОрганизации,Телефон", Индекс,АдрОбластьГород,АдресОрганизации,Телефон);
	
	Возврат Структура;
	
КонецФункции // ПолучитьАдресОрганизации()

#КонецОбласти

#КонецЕсли
