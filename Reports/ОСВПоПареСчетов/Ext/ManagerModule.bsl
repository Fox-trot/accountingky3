#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки размещения в панели отчетов.
//
// Параметры:
//   Настройки - Коллекция - Используется для описания настроек отчетов и вариантов
//       см. описание к ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации()
//   НастройкиОтчета - СтрокаДереваЗначений - Настройки размещения всех вариантов отчета.
//       см. "Реквизиты для изменения" функции ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//
// Описание:
//   См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//
// Вспомогательные методы:
//   НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "<ИмяВарианта>");
//   ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Истина/Ложь); // Отчет поддерживает только этот режим.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	МодульВариантыОтчетов = ОбщегоНазначения.ОбщийМодуль("ВариантыОтчетов");
	МодульВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Истина);
	
	НастройкиВарианта = МодульВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "");
	НастройкиВарианта.Описание = НСтр("ru = 'Оборотно-сальдовая ведомость по паре счетов.'");

КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Процедура формирования отчета.
//
// Параметры:
// ПараметрыОтчета - структура - набор параметров, необходимых для построения отчета.
// 	АдресХранилища - адрес временного хранилища.
Процедура Сформировать(СтруктураПараметров, АдресХранилища) Экспорт
	
	РезультатФормирования = Новый Структура("Результат, ОписаниеОшибки", Неопределено, "");
	СформироватьТабличныйДокумент(СтруктураПараметров, РезультатФормирования);
	ПоместитьВоВременноеХранилище(РезультатФормирования, АдресХранилища);
	
КонецПроцедуры

// Процедура - Сформировать табличный документ
//
// Параметры:
//  СтруктураПараметров	 - Структура - Параметры формирования отчета.
//  РезультатФормирования	 	- Структура - 
//
Процедура СформироватьТабличныйДокумент(СтруктураПараметров, РезультатФормирования)
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОСВПоПареСчетов_ОСВПоПареСчетов";
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Организация = СтруктураПараметров.Организация;
	НачалоПериода = НачалоДня(СтруктураПараметров.НачалоПериода);
	КонецПериода = КонецДня(СтруктураПараметров.КонецПериода);
	Счет = СтруктураПараметров.Счет;
	ПарныйСчет = СтруктураПараметров.ПарныйСчет;
	
	Макет = ПолучитьМакет("ПФ_MXL_ОСВПоПареСчетов");	

	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Типовой1.Субконто1 КАК Субконто1,
	|	Типовой1.Субконто2 КАК Субконто2,
	|	Типовой1.Субконто3 КАК Субконто3,
	|	Типовой1.СуммаНачальныйОстатокДт КАК СуммаНачальныйОстатокДт,
	|	Типовой1.СуммаНачальныйОстатокКт КАК СуммаНачальныйОстатокКт,
	|	Типовой1.СуммаОборотДт КАК СуммаОборотДт,
	|	Типовой1.СуммаОборотКт КАК СуммаОборотКт,
	|	Типовой1.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
	|	Типовой1.СуммаКонечныйОстатокКт КАК СуммаКонечныйОстатокКт
	|ПОМЕСТИТЬ ВЗ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаН, &ДатаК, , , Счет = &Счет1, , Организация = &Организация) КАК Типовой1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Типовой2.Субконто1,
	|	Типовой2.Субконто2,
	|	Типовой2.Субконто3,
	|	Типовой2.СуммаНачальныйОстатокДт,
	|	Типовой2.СуммаНачальныйОстатокКт,
	|	Типовой2.СуммаОборотДт,
	|	Типовой2.СуммаОборотКт,
	|	Типовой2.СуммаКонечныйОстатокДт,
	|	Типовой2.СуммаКонечныйОстатокКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаН, &ДатаК, , , Счет = &Счет2, , Организация = &Организация) КАК Типовой2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЗ.Субконто1 КАК Субконто1,
	|	ВЗ.Субконто2 КАК Субконто2,
	|	ВЗ.Субконто3 КАК Субконто3,
	|	СУММА(ВЗ.СуммаНачальныйОстатокДт) КАК СуммаНачальныйОстатокДт,
	|	СУММА(ВЗ.СуммаНачальныйОстатокКт) КАК СуммаНачальныйОстатокКт,
	|	СУММА(ВЗ.СуммаОборотДт) КАК СуммаОборотДт,
	|	СУММА(ВЗ.СуммаОборотКт) КАК СуммаОборотКт,
	|	СУММА(ВЗ.СуммаКонечныйОстатокДт) КАК СуммаКонечныйОстатокДт,
	|	СУММА(ВЗ.СуммаКонечныйОстатокКт) КАК СуммаКонечныйОстатокКт
	|ИЗ
	|	ВЗ КАК ВЗ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЗ.Субконто1,
	|	ВЗ.Субконто2,
	|	ВЗ.Субконто3
	|
	|УПОРЯДОЧИТЬ ПО
	|	Субконто1,
	|	Субконто2,
	|	Субконто3
	|ИТОГИ
	|	СУММА(СуммаНачальныйОстатокДт),
	|	СУММА(СуммаНачальныйОстатокКт),
	|	СУММА(СуммаОборотДт),
	|	СУММА(СуммаОборотКт),
	|	СУММА(СуммаКонечныйОстатокДт),
	|	СУММА(СуммаКонечныйОстатокКт)
	|ПО
	|	ОБЩИЕ,
	|	Субконто1,
	|	Субконто2,
	|	Субконто3
	|АВТОУПОРЯДОЧИВАНИЕ";
		
	Запрос.УстановитьПараметр("ДатаН",НачалоПериода);
	Запрос.УстановитьПараметр("ДатаК",КонецПериода);
	Запрос.УстановитьПараметр("Счет1",Счет);
	Запрос.УстановитьПараметр("Счет2",ПарныйСчет);
	Запрос.УстановитьПараметр("Организация",Организация);
	
	ДатаН = НачалоПериода;
	ДатаК = КонецПериода;
	
	Если ЗначениеЗаполнено(Организация) Тогда
		Запрос.УстановитьПараметр("Организация", Организация);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Организация = &Организация", "Истина");
	КонецЕсли;		
	
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.Заголовок = "ОСВ по паре " + Счет.Код + " - " + ПарныйСчет.Код 
	+ " с " + Формат(ДатаН,"ДФ=dd.MM.yyyy") 
	+ " по " + Формат(ДатаК,"ДФ=dd.MM.yyyy");
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги");
	ОбластьСубконто1 = Макет.ПолучитьОбласть("Субконто1");
	ОбластьСубконто2 = Макет.ПолучитьОбласть("Субконто2");
	ОбластьСубконто3 = Макет.ПолучитьОбласть("Субконто3");
	
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
	ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
	
	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаОбщийИтог.Следующий();		// Общий итог
	ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
	ТабличныйДокумент.Вывести(ОбластьОбщийИтог, ВыборкаОбщийИтог.Уровень());
	
	ВыборкаСубконто1 = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСубконто1.Следующий() Цикл
		ОбластьСубконто1.Параметры.Заполнить(ВыборкаСубконто1);
		ТабличныйДокумент.Вывести(ОбластьСубконто1, ВыборкаСубконто1.Уровень());
		
		ВыборкаСубконто2 = ВыборкаСубконто1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаСубконто2.Следующий() Цикл
			ОбластьСубконто2.Параметры.Заполнить(ВыборкаСубконто2);
			ТабличныйДокумент.Вывести(ОбластьСубконто2, ВыборкаСубконто2.Уровень());
			
			ВыборкаСубконто3 = ВыборкаСубконто2.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаСубконто3.Следующий() Цикл
				ОбластьСубконто3.Параметры.Заполнить(ВыборкаСубконто3);
				ТабличныйДокумент.Вывести(ОбластьСубконто3, ВыборкаСубконто3.Уровень());
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
	ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
	РезультатФормирования.Результат = ТабличныйДокумент;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
