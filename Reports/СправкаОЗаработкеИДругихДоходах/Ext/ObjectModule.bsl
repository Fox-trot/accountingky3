#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ФункцииОтчетовКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	БухгалтерскиеОтчеты.ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки);
	Настройки.Печать.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
КонецПроцедуры

#КонецОбласти

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КлючВарианта = НеОпределено;
	КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Свойство("КлючВарианта", КлючВарианта);
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	ПараметрыОтчета = ПодготовитьПараметрыОтчета(НастройкиОтчета);
	
	БухгалтерскиеОтчеты.УстановитьМакетОформленияОтчета(НастройкиОтчета);
	БухгалтерскиеОтчеты.ВывестиЗаголовокОтчета(ПараметрыОтчета, ДокументРезультат);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	//Создадим и инициализируем процессор компоновки
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , , Истина);
	
	//Создадим и инициализируем процессор вывода результата
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ДанныеОтчета = Новый ДеревоЗначений;
	ПроцессорВывода.УстановитьОбъект(ДанныеОтчета);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Отчет.СправкаОЗаработкеИДругихДоходах.ПФ_MXL_СправкаОДоходах");
	
	ДатаПодписи = ТекущаяДата();
	Исполнитель =  ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ОсновнаяОрганизация = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьЗначениеНастройки("ОсновнаяОрганизация");
	ЕстьГруппировкаПоОрганизации = ПолучитьФункциональнуюОпцию("УчетПоНесколькимОрганизациям");
	
	Для Каждого СтрокаФизЛицо Из ДанныеОтчета.Строки Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаФизЛицо.ФизЛицо) Тогда 
			Продолжить;
		КонецЕсли;	
		
		// Заголовок
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(ПараметрыОтчета);
		ОбластьМакета.Параметры.Заполнить(СтрокаФизЛицо); 
		
		// Нужно проверить включена ли группировка по подразделениям
		
		Если ЕстьГруппировкаПоОрганизации Тогда
			//ОбластьМакета.Параметры.Заполнить(СтрокаФизЛицо);
			ОбластьМакета.Параметры.Организация = СтрокаФизЛицо.Организация.НаименованиеПолное;
		Иначе
			//ОбластьМакета.Параметры.Заполнить(СтрокаФизЛицо);
			ОбластьМакета.Параметры.Организация = ОсновнаяОрганизация.НаименованиеПолное;
		КонецЕсли; 
							
		ДокументРезультат.Вывести(ОбластьМакета);
		
		// Шапка
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ДокументРезультат.Вывести(ОбластьМакета);
		
		// Детали
		Для Каждого СтрокаПериодРегистрации Из СтрокаФизЛицо.Строки Цикл
			ОбластьМакета = Макет.ПолучитьОбласть("ДеталиТаблицы");
			ОбластьМакета.Параметры.Заполнить(СтрокаПериодРегистрации);
			ДокументРезультат.Вывести(ОбластьМакета);
		КонецЦикла;
		
		// Итоги
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогиТаблицы");
		ОбластьМакета.Параметры.Заполнить(СтрокаФизЛицо);
		ДокументРезультат.Вывести(ОбластьМакета);
		
		// Подвал
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СтрокаФизЛицо.Итого, ВалютаРегламентированногоУчета);
		ОбластьМакета.Параметры.ДатаПодписи   = ДатаПодписи;
		ОбластьМакета.Параметры.ТекущийПользователь = Исполнитель;
		
		Если ЕстьГруппировкаПоОрганизации Тогда
			ОбластьМакета.Параметры.ИННОрганизации = СтрокаФизЛицо.Организация.ИНН;
			ОбластьМакета.Параметры.Адрес = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(СтрокаФизЛицо.Организация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
		Иначе
			ОбластьМакета.Параметры.ИННОрганизации = ОсновнаяОрганизация.ИНН;
			ОбластьМакета.Параметры.Адрес = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ОсновнаяОрганизация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
		КонецЕсли; 

		ДокументРезультат.Вывести(ОбластьМакета);
		
		// Вывод подписей
		БухгалтерскиеОтчеты.ВыводПодписейОтчета(ПараметрыОтчета, ДокументРезультат);
		
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
	
	// Добавление дополнительных параметров
	БухгалтерскиеОтчетыКлиентСервер.ЗаполнитьДополнительныеПараметрыПечати(ДокументРезультат, ПараметрыОтчета);
	
КонецПроцедуры

// Функция - Подготовить параметры отчета
//
// Параметры:
//  НастройкиОтчета	- НастройкиКомпоновкиДанных - пользовательские настройки
// 
// Возвращаемое значение:
//  Структура - Параметры отчета
//
Функция ПодготовитьПараметрыОтчета(НастройкиОтчета)
	
	ВыводитьПодписи = Ложь;
	Заголовок = "Справка о заработке и других доходах";
	
	НачалоПериода = Дата(1,1,1);
	КонецПериода  = Дата(1,1,1);
	
	ПараметрПериод = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СтПериод"));
	Если ПараметрПериод <> Неопределено И ПараметрПериод.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ Тогда
		Если ПараметрПериод.Использование
			И ЗначениеЗаполнено(ПараметрПериод.Значение) Тогда
			
			НачалоПериода = ПараметрПериод.Значение.ДатаНачала;
			КонецПериода  = ПараметрПериод.Значение.ДатаОкончания;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрВыводитьПодписи = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВыводитьПодписи"));
	Если ПараметрВыводитьПодписи <> Неопределено
		И ПараметрВыводитьПодписи.Использование Тогда
		ВыводитьПодписи = ПараметрВыводитьПодписи.Значение;
	КонецЕсли;
	
	ПараметрВывода = НастройкиОтчета.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Заголовок"));
	Если ПараметрВывода <> Неопределено
		И ПараметрВывода.Использование Тогда
		Заголовок = ПараметрВывода.Значение;
	КонецЕсли;
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("НачалоПериода"            , НачалоПериода);
	ПараметрыОтчета.Вставить("КонецПериода"             , КонецПериода);	
	ПараметрыОтчета.Вставить("ВыводитьПодписи"        	, ВыводитьПодписи);
	ПараметрыОтчета.Вставить("Заголовок"                , Заголовок);
	ПараметрыОтчета.Вставить("ИдентификаторОтчета"      , "СправкаОЗаработкеИДругихДоходах");
	ПараметрыОтчета.Вставить("НастройкиОтчета"			, НастройкиОтчета);
		
	Возврат ПараметрыОтчета;
КонецФункции

#КонецЕсли