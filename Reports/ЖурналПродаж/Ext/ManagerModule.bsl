#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки размещения в панели отчетов.
//
// Параметры:
//   Настройки - Коллекция - Используется для описания настроек отчетов и вариантов
//       см. описание к ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации()
//   НастройкиОтчета - СтрокаДереваЗначений - Настройки размещения всех вариантов отчета.
//       см. "Реквизиты для изменения" функции ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//
// Описание:
//   См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//
// Вспомогательные методы:
//   НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "<ИмяВарианта>");
//   ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Истина/Ложь); // Отчет поддерживает только этот режим.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	МодульВариантыОтчетов = ОбщегоНазначения.ОбщийМодуль("ВариантыОтчетов");
	МодульВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Истина);
	
	НастройкиВарианта = МодульВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "");
	НастройкиВарианта.Описание = НСтр("ru = 'Журнал продаж.'");

	НастройкиВарианта.НастройкиДляПоиска.НаименованияПолей =
		НСтр("ru = '№ п/п
		|Счет-фактура №
		|Счет-фактура Серия
		|Дата
		|Потребитель
		|Номенклатура
		|Стоимость без НДС
		|НДС
		|НСП
		|Всего'");
	НастройкиВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов =    
		НСтр("ru = 'НачалоПериода
		|КонецПериода
		|СортировкаОтчета
		|ГруппировкаОтчета
		|Организация'");
	НастройкиВарианта.НастройкиДляПоиска.КлючевыеСлова = НСтр("ru = 'Журнал продаж'");
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Процедура формирования отчета.
//
// Параметры:
// ПараметрыОтчета - структура - набор параметров, необходимых для построения отчета.
// 	АдресХранилища - адрес временного хранилища.
Процедура Сформировать(СтруктураПараметров, АдресХранилища) Экспорт
	
	РезультатФормирования = Новый Структура("Результат, ОписаниеОшибки", Неопределено, "");
	СформироватьТабличныйДокумент(СтруктураПараметров, РезультатФормирования);
	ПоместитьВоВременноеХранилище(РезультатФормирования, АдресХранилища);
	
КонецПроцедуры

Процедура СформироватьТабличныйДокумент(СтруктураПараметров, РезультатФормирования) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать = Истина;
	
	Организация 	= СтруктураПараметров.Организация;
	НачалоПериода 	= НачалоМесяца(СтруктураПараметров.НачалоПериода);
	КонецПериода 	= КонецМесяца(СтруктураПараметров.КонецПериода);
	Сортировка 		= СтруктураПараметров.Сортировка;
	Группировка		= СтруктураПараметров.Группировка;
	
	// Опеределение макета
	Макет = ПолучитьМакет("ПФ_MXL_ЖурналПродаж");
	
	// Заполнение шапки
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.Период = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(НачалоПериода, КонецПериода);
	ТабличныйДокумент.Вывести(ОбластьШапка);	
			
	ОбластьШапкаТаблицы 		=  Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Реализация
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ОсновнойТекстЗапроса = 
	"ВЫБРАТЬ
	|	РеализацияОбороты.Организация,
	|	РеализацияОбороты.Контрагент,
	|	РеализацияОбороты.СтавкаНДС,
	|	РеализацияОбороты.Номенклатура,
	|	ЕСТЬNULL(СчетаФактурыВыписанные.СерияБланкаСФ, РеализацияИтоги.СерияБланкаСФ) КАК СерияБланкаСФ,
	|	ЕСТЬNULL(СчетаФактурыВыписанные.НомерБланкаСФ, РеализацияИтоги.НомерБланкаСФ) КАК НомерБланкаСФ,
	|	РеализацияОбороты.СуммаНДСОборот КАК СуммаНДС,
	|	РеализацияОбороты.СуммаНСПОборот КАК СуммаНСП,
	|	РеализацияОбороты.ДоходОборот КАК СуммаБезНДС,
	|	РеализацияОбороты.ПериодСекунда КАК Дата
	|ПОМЕСТИТЬ ВременнаяТаблицаРеализацияТекущегоМесяца
	|ИЗ
	|	РегистрНакопления.Реализация.Обороты(&НачалоПериода, &КонецПериода, Авто, ) КАК РеализацияОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеализацияИтоги КАК РеализацияИтоги
	|		ПО РеализацияОбороты.ДокументРеализации = РеализацияИтоги.ДокументРеализации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаФактурыВыписанные КАК СчетаФактурыВыписанные
	|		ПО РеализацияОбороты.ДокументРеализации = СчетаФактурыВыписанные.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаРеализацияТекущегоМесяца.Организация КАК Организация,
	|	ВременнаяТаблицаРеализацияТекущегоМесяца.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаРеализацияТекущегоМесяца.СтавкаНДС,
	|	ВременнаяТаблицаРеализацияТекущегоМесяца.СуммаБезНДС КАК СуммаБезНДС,
	|	ВременнаяТаблицаРеализацияТекущегоМесяца.СуммаНДС КАК СуммаНДС,
	|	ВременнаяТаблицаРеализацияТекущегоМесяца.СуммаНСП КАК СуммаНСП,
	|	ВременнаяТаблицаРеализацияТекущегоМесяца.СуммаБезНДС + ВременнаяТаблицаРеализацияТекущегоМесяца.СуммаНДС + ВременнаяТаблицаРеализацияТекущегоМесяца.СуммаНСП КАК Всего,
	|	ВременнаяТаблицаРеализацияТекущегоМесяца.Номенклатура,
	|	ВременнаяТаблицаРеализацияТекущегоМесяца.СерияБланкаСФ,
	|	ВременнаяТаблицаРеализацияТекущегоМесяца.НомерБланкаСФ,
	|	ВременнаяТаблицаРеализацияТекущегоМесяца.Дата,
	|	ВременнаяТаблицаРеализацияТекущегоМесяца.СерияБланкаСФ + "" № "" + ВременнаяТаблицаРеализацияТекущегоМесяца.НомерБланкаСФ КАК СФСтрокой
	|ИЗ
	|	ВременнаяТаблицаРеализацияТекущегоМесяца КАК ВременнаяТаблицаРеализацияТекущегоМесяца";
	
	ТекстГруппировка = "";
	Если Сортировка = "По счет-фактуре" Тогда
		ТекстГруппировка = 
	    "
		|УПОРЯДОЧИТЬ ПО
		|	СерияБланкаСФ,
		|	НомерБланкаСФ";	
			
	ИначеЕсли Сортировка = "По контрагенту" Тогда
		ТекстГруппировка =
	    "
		|УПОРЯДОЧИТЬ ПО
		|	Контрагент";	
	Иначе
		ТекстГруппировка =
	    "
		|УПОРЯДОЧИТЬ ПО
		|	Дата";	
	КонецЕсли;
	
	Если Группировка = "По счет-фактуре" Тогда
		ТекстГруппировка = ТекстГруппировка + 
	    "
		|ИТОГИ
		|	СУММА(СуммаБезНДС),
		|	СУММА(СуммаНДС),
		|	СУММА(СуммаНСП),
		|	СУММА(Всего)
		|ПО
		|	ОБЩИЕ,
		|	СФСтрокой";	
			
	ИначеЕсли Группировка = "По контрагенту" ИЛИ НЕ ЗначениеЗаполнено(Группировка) Тогда
		ТекстГруппировка = ТекстГруппировка + 
	    "
		|ИТОГИ
		|	СУММА(СуммаБезНДС),
		|	СУММА(СуммаНДС),
		|	СУММА(СуммаНСП),
		|	СУММА(Всего)
		|ПО
		|	ОБЩИЕ,
		|	Контрагент";	
	
	КонецЕсли;
	
	Запрос.Текст = ОсновнойТекстЗапроса + ТекстГруппировка;
	
	Запрос.УстановитьПараметр("КонецПериода", 	КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериода", 	НачалоПериода);	
	РезультатЗапроса 		= Запрос.Выполнить();
	ВыборкаРеализацияИтоги 	= РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
	
	НомерСтроки = 0;
	Если ВыборкаРеализацияИтоги.Количество() > 0 Тогда		
		Пока ВыборкаРеализацияИтоги.Следующий() Цикл
			ОбластьГруппировка = Макет.ПолучитьОбласть("Группировка");
			ОбластьГруппировка.Параметры.Заполнить(ВыборкаРеализацияИтоги);
			ОбластьГруппировка.Параметры.Группировка = "Продажи за месяц:";
			ТабличныйДокумент.Вывести(ОбластьГруппировка, 1);			
			
			ВыборкаПоКонтрагенту = ВыборкаРеализацияИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоКонтрагенту.Следующий() Цикл
				ОбластьКонтрагент = Макет.ПолучитьОбласть("Группировка");
				ОбластьКонтрагент.Параметры.Группировка = ?(Группировка = "По счет-фактуре", ВыборкаПоКонтрагенту.СФСтрокой, ВыборкаПоКонтрагенту.Контрагент);
				ТабличныйДокумент.Вывести(ОбластьКонтрагент, 2);
				
				ВыборкаДетальныеЗаписиРеализация = ВыборкаПоКонтрагенту.Выбрать();			
				Пока ВыборкаДетальныеЗаписиРеализация.Следующий() Цикл
					ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");					
					ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаДетальныеЗаписиРеализация);					
					Если ВыборкаДетальныеЗаписиРеализация.СерияБланкаСФ = "ДПБУ" Тогда 
						ОбластьСтрокаТаблицы.Параметры.НомерБланкаСФ = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаДетальныеЗаписиРеализация.НомерБланкаСФ);				
					КонецЕсли;											
					НомерСтроки = НомерСтроки + 1;
					ОбластьСтрокаТаблицы.Параметры.НомерСтроки = НомерСтроки;
					ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы, 3);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;	
	
	// Авансы и доотгрузки
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АвансыДоотгрузкаОстатки.Организация,
	|	АвансыДоотгрузкаОстатки.Контрагент КАК Контрагент,
	|	АвансыДоотгрузкаОстатки.СуммаОстаток КАК СуммаБезНДС,
	|	АвансыДоотгрузкаОстатки.СуммаНДСОстаток КАК СуммаНДС,
	|	АвансыДоотгрузкаОстатки.СуммаНСПОстаток КАК СуммаНСП,
	|	АвансыДоотгрузкаОстатки.СуммаОстаток + АвансыДоотгрузкаОстатки.СуммаНДСОстаток + АвансыДоотгрузкаОстатки.СуммаНСПОстаток КАК Всего
	|ИЗ
	|	РегистрНакопления.АвансыДоотгрузка.Остатки(
	|			&НачалоПериода,
	|			Контрагент В
	|				(ВЫБРАТЬ
	|					ВременнаяТаблицаРеализацияТекущегоМесяца.Контрагент
	|				ИЗ
	|					ВременнаяТаблицаРеализацияТекущегоМесяца КАК ВременнаяТаблицаРеализацияТекущегоМесяца)) КАК АвансыДоотгрузкаОстатки
	|ИТОГИ
	|	СУММА(СуммаБезНДС),
	|	СУММА(СуммаНДС),
	|	СУММА(СуммаНСП),
	|	СУММА(Всего)
	|ПО
	|	ОБЩИЕ,
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗакрытиеМесяцаАвансыДоотгрузкаРасшифровка.Ссылка.Организация,
	|	ЗакрытиеМесяцаАвансыДоотгрузкаРасшифровка.Контрагент КАК Контрагент,
	|	ЗакрытиеМесяцаАвансыДоотгрузкаРасшифровка.Сумма КАК СуммаБезНДС,
	|	ЗакрытиеМесяцаАвансыДоотгрузкаРасшифровка.НДС КАК СуммаНДС,
	|	ЗакрытиеМесяцаАвансыДоотгрузкаРасшифровка.НСП КАК СуммаНСП,
	|	ЗакрытиеМесяцаАвансыДоотгрузкаРасшифровка.Сумма + ЗакрытиеМесяцаАвансыДоотгрузкаРасшифровка.НДС + ЗакрытиеМесяцаАвансыДоотгрузкаРасшифровка.НСП КАК Всего
	|ИЗ
	|	Документ.ЗакрытиеМесяца.АвансыДоотгрузкаРасшифровка КАК ЗакрытиеМесяцаАвансыДоотгрузкаРасшифровка
	|ГДЕ
	|	ЗакрытиеМесяцаАвансыДоотгрузкаРасшифровка.Ссылка.Проведен
	|	И ЗакрытиеМесяцаАвансыДоотгрузкаРасшифровка.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|ИТОГИ
	|	СУММА(СуммаБезНДС),
	|	СУММА(СуммаНДС),
	|	СУММА(СуммаНСП),
	|	СУММА(Всего)
	|ПО
	|	ОБЩИЕ,
	|	Контрагент";
	
	Запрос.УстановитьПараметр("КонецПериода", 	КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериода", 	НачалоПериода);
	
	РезультатЗапроса 		= Запрос.ВыполнитьПакет();
	ВыборкаАвансыИтоги 		= РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаДоотгрузкаИтоги 	= РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	НомерСтроки = 0;
	Если ВыборкаАвансыИтоги.Количество() > 0 Тогда		
		Пока ВыборкаАвансыИтоги.Следующий() Цикл
			ОбластьГруппировка = Макет.ПолучитьОбласть("Группировка");
			ОбластьГруппировка.Параметры.Заполнить(ВыборкаАвансыИтоги);
			ОбластьГруппировка.Параметры.Группировка = "Авансы на начало месяца:";
			ТабличныйДокумент.Вывести(ОбластьГруппировка, 1);			
			
			ВыборкаПоКонтрагенту = ВыборкаАвансыИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоКонтрагенту.Следующий() Цикл
				ОбластьКонтрагент = Макет.ПолучитьОбласть("Группировка");
				ОбластьКонтрагент.Параметры.Группировка = ВыборкаПоКонтрагенту.Контрагент;
				ТабличныйДокумент.Вывести(ОбластьКонтрагент, 2);
						
				ВыборкаДетальныеЗаписиАвансы = ВыборкаПоКонтрагенту.Выбрать();
				Пока ВыборкаДетальныеЗаписиАвансы.Следующий() Цикл
					ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
					ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаДетальныеЗаписиАвансы);
					НомерСтроки = НомерСтроки + 1;
					ОбластьСтрокаТаблицы.Параметры.НомерСтроки = НомерСтроки;					
					ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы, 2);
				КонецЦикла;
			КонецЦикла;				
		КонецЦикла;
	КонецЕсли;
	
	НомерСтроки = 0;
	Если ВыборкаДоотгрузкаИтоги.Количество() > 0 Тогда		
		Пока ВыборкаДоотгрузкаИтоги.Следующий() Цикл
			ОбластьГруппировка = Макет.ПолучитьОбласть("Группировка");
			ОбластьГруппировка.Параметры.Заполнить(ВыборкаДоотгрузкаИтоги);
			ОбластьГруппировка.Параметры.Группировка = "Доотгрузка в счет авансов:";
			ТабличныйДокумент.Вывести(ОбластьГруппировка, 1);			
			
			ВыборкаПоКонтрагенту = ВыборкаДоотгрузкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоКонтрагенту.Следующий() Цикл
				ОбластьКонтрагент = Макет.ПолучитьОбласть("Группировка");
				ОбластьКонтрагент.Параметры.Группировка = ВыборкаПоКонтрагенту.Контрагент;
				ТабличныйДокумент.Вывести(ОбластьКонтрагент, 2);
				
				ВыборкаДетальныеЗаписиДоотгрузка = ВыборкаПоКонтрагенту.Выбрать();
				Пока ВыборкаДетальныеЗаписиДоотгрузка.Следующий() Цикл
					ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
					ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаДетальныеЗаписиДоотгрузка);
					НомерСтроки = НомерСтроки + 1;
					ОбластьСтрокаТаблицы.Параметры.НомерСтроки = НомерСтроки;					
					ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы, 3);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
	
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);

	РезультатФормирования.Результат = ТабличныйДокумент;
	
КонецПроцедуры
		
#КонецОбласти

#КонецЕсли
