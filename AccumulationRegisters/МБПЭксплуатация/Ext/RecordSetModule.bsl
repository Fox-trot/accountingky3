#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события ПередЗаписью набора записей.
//
Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
		ИЛИ НЕ ДополнительныеСвойства.Свойство("ДляПроведения")
		ИЛИ НЕ ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Установка исключительной блокировки текущего набора записей регистратора.
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.МБПЭксплуатация.НаборЗаписей");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Регистратор", Отбор.Регистратор.Значение);
	Блокировка.Заблокировать();
	
	Если НЕ СтруктураВременныеТаблицы.Свойство("ДвиженияМБПЭксплуатацияИзменение") ИЛИ
		СтруктураВременныеТаблицы.Свойство("ДвиженияМБПЭксплуатацияИзменение") И НЕ СтруктураВременныеТаблицы.ДвиженияМБПСкладИзменение Тогда
		
		// Если временная таблица "ДвиженияЗапасыИзменение" не существует или не содержит записей
		// об изменении набора, значит набор записывается первый раз или для набора был выполнен контроль остатков.
		// Текущее состояние набора помещается во временную таблицу "ДвиженияЗапасыПередЗаписью",
		// чтобы при записи получить изменение нового набора относительно текущего.
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	МБПЭксплуатация.НомерСтроки КАК НомерСтроки,
		|	МБПЭксплуатация.Организация КАК Организация,
		|	МБПЭксплуатация.МОЛ,
		|	МБПЭксплуатация.Номенклатура КАК Номенклатура,
		|	МБПЭксплуатация.Партия КАК Партия,
		|	МБПЭксплуатация.ИнвНомер,
		|	МБПЭксплуатация.ДатаВыдачи,
		|	ВЫБОР
		|		КОГДА МБПЭксплуатация.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА МБПЭксплуатация.Количество
		|		ИНАЧЕ -МБПЭксплуатация.Количество
		|	КОНЕЦ КАК КоличествоПередЗаписью,
		|	ВЫБОР
		|		КОГДА МБПЭксплуатация.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА МБПЭксплуатация.Сумма
		|		ИНАЧЕ -МБПЭксплуатация.Сумма
		|	КОНЕЦ КАК СуммаПередЗаписью
		|ПОМЕСТИТЬ ДвиженияМБПЭксплуатацияПередЗаписью
		|ИЗ
		|	РегистрНакопления.МБПЭксплуатация КАК МБПЭксплуатация
		|ГДЕ
		|	МБПЭксплуатация.Регистратор = &Регистратор
		|	И &Замещение");
		
		Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("Замещение", Замещение);
				
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
	Иначе
		
		// Если временная таблица "ДвиженияМБПЭксплуатацияИзменение" существует и содержит записи
		// об изменении набора, значит набор записывается не первый раз и для набора не был выполнен контроль остатков.
		// Текущее состояние набора и текущее состояние изменений помещаются во временную таблцу "ДвиженияЗапасыПередЗаписью",
		// чтобы при записи получить изменение нового набора относительно первоначального.
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияМБПЭксплуатацияИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияМБПЭксплуатацияИзменение.Организация КАК Организация,
		|	ДвиженияМБПЭксплуатацияИзменение.МОЛ,
		|	ДвиженияМБПЭксплуатацияИзменение.Номенклатура КАК Номенклатура,
		|	ДвиженияМБПЭксплуатацияИзменение.Партия КАК Партия,
		|	ДвиженияМБПЭксплуатацияИзменение.ИнвНомер КАК ИнвНомер,
		|	ДвиженияМБПЭксплуатацияИзменение.ДатаВыдачи,
		|	ДвиженияМБПЭксплуатацияИзменение.КоличествоПередЗаписью КАК КоличествоПередЗаписью,
		|	ДвиженияМБПЭксплуатацияИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью
		|ПОМЕСТИТЬ ДвиженияМБПЭксплуатацияПередЗаписью
		|ИЗ
		|	ДвиженияМБПЭксплуатацияИзменение КАК ДвиженияМБПЭксплуатацияИзменение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МБПЭксплуатация.НомерСтроки,
		|	МБПЭксплуатация.Организация,
		|	МБПЭксплуатация.МОЛ,
		|	МБПЭксплуатация.Номенклатура,
		|	МБПЭксплуатация.Партия,
		|	МБПЭксплуатация.ИнвНомер,
		|	МБПЭксплуатация.ДатаВыдачи,
		|	ВЫБОР
		|		КОГДА МБПЭксплуатация.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА МБПЭксплуатация.Количество
		|		ИНАЧЕ -МБПЭксплуатация.Количество
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА МБПЭксплуатация.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА МБПЭксплуатация.Сумма
		|		ИНАЧЕ -МБПЭксплуатация.Сумма
		|	КОНЕЦ
		|ИЗ
		|	РегистрНакопления.МБПЭксплуатация КАК МБПЭксплуатация
		|ГДЕ
		|	МБПЭксплуатация.Регистратор = &Регистратор
		|	И &Замещение");
		
		Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("Замещение", Замещение);
				
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
	КонецЕсли;
	
	// Временная таблица "ДвиженияМБПЭксплуатацияИзменение" уничтожается
	// Удаляется информация о ее существовании.
	
	Если СтруктураВременныеТаблицы.Свойство("ДвиженияМБПЭксплуатацияИзменение") Тогда
		
		Запрос = Новый Запрос("УНИЧТОЖИТЬ ДвиженияМБПЭксплуатацияИзменение");
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		СтруктураВременныеТаблицы.Удалить("ДвиженияМБПЭксплуатацияИзменение");
	
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события ПриЗаписи набора записей.
//
Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
		ИЛИ НЕ ДополнительныеСвойства.Свойство("ДляПроведения")
		ИЛИ НЕ ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу "ДвиженияМБПЭксплуатацияИзменение".
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МИНИМУМ(ДвиженияМБПЭксплуатацияИзменение.НомерСтроки) КАК НомерСтроки,
	|	ДвиженияМБПЭксплуатацияИзменение.Организация КАК Организация,
	|	ДвиженияМБПЭксплуатацияИзменение.МОЛ,
	|	ДвиженияМБПЭксплуатацияИзменение.Номенклатура КАК Номенклатура,
	|	ДвиженияМБПЭксплуатацияИзменение.Партия КАК Партия,
	|	ДвиженияМБПЭксплуатацияИзменение.ИнвНомер,
	|	ДвиженияМБПЭксплуатацияИзменение.ДатаВыдачи,
	|	СУММА(ДвиженияМБПЭксплуатацияИзменение.КоличествоПередЗаписью) КАК КоличествоПередЗаписью,
	|	СУММА(ДвиженияМБПЭксплуатацияИзменение.КоличествоИзменение) КАК КоличествоИзменение,
	|	СУММА(ДвиженияМБПЭксплуатацияИзменение.КоличествоПриЗаписи) КАК КоличествоПриЗаписи,
	|	СУММА(ДвиженияМБПЭксплуатацияИзменение.СуммаПередЗаписью) КАК СуммаПередЗаписью,
	|	СУММА(ДвиженияМБПЭксплуатацияИзменение.СуммаИзменение) КАК СуммаИзменение,
	|	СУММА(ДвиженияМБПЭксплуатацияИзменение.СуммаПриЗаписи) КАК СуммаПриЗаписи
	|ПОМЕСТИТЬ ДвиженияМБПЭксплуатацияИзменение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДвиженияМБПЭксплуатацияПередЗаписью.НомерСтроки КАК НомерСтроки,
	|		ДвиженияМБПЭксплуатацияПередЗаписью.Организация КАК Организация,
	|		ДвиженияМБПЭксплуатацияПередЗаписью.МОЛ КАК МОЛ,
	|		ДвиженияМБПЭксплуатацияПередЗаписью.Номенклатура КАК Номенклатура,
	|		ДвиженияМБПЭксплуатацияПередЗаписью.Партия КАК Партия,
	|		ДвиженияМБПЭксплуатацияПередЗаписью.ИнвНомер КАК ИнвНомер,
	|		ДвиженияМБПЭксплуатацияПередЗаписью.ДатаВыдачи КАК ДатаВыдачи,
	|		ДвиженияМБПЭксплуатацияПередЗаписью.КоличествоПередЗаписью КАК КоличествоПередЗаписью,
	|		ДвиженияМБПЭксплуатацияПередЗаписью.КоличествоПередЗаписью КАК КоличествоИзменение,
	|		0 КАК КоличествоПриЗаписи,
	|		ДвиженияМБПЭксплуатацияПередЗаписью.СуммаПередЗаписью КАК СуммаПередЗаписью,
	|		ДвиженияМБПЭксплуатацияПередЗаписью.СуммаПередЗаписью КАК СуммаИзменение,
	|		0 КАК СуммаПриЗаписи
	|	ИЗ
	|		ДвиженияМБПЭксплуатацияПередЗаписью КАК ДвиженияМБПЭксплуатацияПередЗаписью
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		МБПЭксплуатация.НомерСтроки,
	|		МБПЭксплуатация.Организация,
	|		МБПЭксплуатация.МОЛ,
	|		МБПЭксплуатация.Номенклатура,
	|		МБПЭксплуатация.Партия,
	|		МБПЭксплуатация.ИнвНомер,
	|		МБПЭксплуатация.ДатаВыдачи,
	|		0,
	|		ВЫБОР
	|			КОГДА МБПЭксплуатация.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -МБПЭксплуатация.Количество
	|			ИНАЧЕ МБПЭксплуатация.Количество
	|		КОНЕЦ,
	|		МБПЭксплуатация.Количество,
	|		0,
	|		ВЫБОР
	|			КОГДА МБПЭксплуатация.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -МБПЭксплуатация.Сумма
	|			ИНАЧЕ МБПЭксплуатация.Сумма
	|		КОНЕЦ,
	|		МБПЭксплуатация.Сумма
	|	ИЗ
	|		РегистрНакопления.МБПЭксплуатация КАК МБПЭксплуатация
	|	ГДЕ
	|		МБПЭксплуатация.Регистратор = &Регистратор) КАК ДвиженияМБПЭксплуатацияИзменение
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияМБПЭксплуатацияИзменение.Организация,
	|	ДвиженияМБПЭксплуатацияИзменение.Номенклатура,
	|	ДвиженияМБПЭксплуатацияИзменение.Партия,
	|	ДвиженияМБПЭксплуатацияИзменение.ИнвНомер,
	|	ДвиженияМБПЭксплуатацияИзменение.МОЛ,
	|	ДвиженияМБПЭксплуатацияИзменение.ДатаВыдачи
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ДвиженияМБПЭксплуатацияИзменение.КоличествоИзменение) <> 0
	|		ИЛИ СУММА(ДвиженияМБПЭксплуатацияИзменение.СуммаИзменение) <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Номенклатура,
	|	Партия");
	
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаИзРезультатаЗапроса.Следующий();
	
	// Новые изменения были помещены во временную таблицу "ДвиженияМБПЭксплуатацияИзменение".
	// Добавляется информация о ее существовании и наличии в ней записей об изменении.
	СтруктураВременныеТаблицы.Вставить("ДвиженияМБПЭксплуатацияИзменение", ВыборкаИзРезультатаЗапроса.Количество > 0);
	
	// Временная таблица "ДвиженияМБПЭксплуатациядПередЗаписью" уничтожается
	Запрос = Новый Запрос("УНИЧТОЖИТЬ ДвиженияМБПЭксплуатацияПередЗаписью");
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры // ПриЗаписи()

#КонецОбласти

#КонецЕсли