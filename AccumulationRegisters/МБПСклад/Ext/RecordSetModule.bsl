#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события ПередЗаписью набора записей.
//
Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
		ИЛИ НЕ ДополнительныеСвойства.Свойство("ДляПроведения")
		ИЛИ НЕ ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Установка исключительной блокировки текущего набора записей регистратора.
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.МБПСклад.НаборЗаписей");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Регистратор", Отбор.Регистратор.Значение);
	Блокировка.Заблокировать();
	
	Если НЕ СтруктураВременныеТаблицы.Свойство("ДвиженияМБПСкладИзменение") ИЛИ
		СтруктураВременныеТаблицы.Свойство("ДвиженияМБПСкладИзменение") И НЕ СтруктураВременныеТаблицы.ДвиженияМБПСкладИзменение Тогда
		
		// Если временная таблица "ДвиженияЗапасыИзменение" не существует или не содержит записей
		// об изменении набора, значит набор записывается первый раз или для набора был выполнен контроль остатков.
		// Текущее состояние набора помещается во временную таблицу "ДвиженияЗапасыПередЗаписью",
		// чтобы при записи получить изменение нового набора относительно текущего.
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	МБПСклад.НомерСтроки КАК НомерСтроки,
		|	МБПСклад.Организация КАК Организация,
		|	МБПСклад.Склад КАК Склад,
		|	МБПСклад.Номенклатура КАК Номенклатура,
		|	МБПСклад.Партия КАК Партия,
		|	МБПСклад.Статус,
		|	МБПСклад.ИнвНомер,
		|	ВЫБОР
		|		КОГДА МБПСклад.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА МБПСклад.Количество
		|		ИНАЧЕ -МБПСклад.Количество
		|	КОНЕЦ КАК КоличествоПередЗаписью,
		|	ВЫБОР
		|		КОГДА МБПСклад.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА МБПСклад.Сумма
		|		ИНАЧЕ -МБПСклад.Сумма
		|	КОНЕЦ КАК СуммаПередЗаписью
		|ПОМЕСТИТЬ ДвиженияМБПСкладПередЗаписью
		|ИЗ
		|	РегистрНакопления.МБПСклад КАК МБПСклад
		|ГДЕ
		|	МБПСклад.Регистратор = &Регистратор
		|	И &Замещение");
		
		Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("Замещение", Замещение);
				
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
	Иначе
		
		// Если временная таблица "ДвиженияЗапасыИзменение" существует и содержит записи
		// об изменении набора, значит набор записывается не первый раз и для набора не был выполнен контроль остатков.
		// Текущее состояние набора и текущее состояние изменений помещаются во временную таблцу "ДвиженияЗапасыПередЗаписью",
		// чтобы при записи получить изменение нового набора относительно первоначального.
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияМБПСкладИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияМБПСкладИзменение.Организация КАК Организация,
		|	ДвиженияМБПСкладИзменение.Склад КАК Склад,
		|	ДвиженияМБПСкладИзменение.Номенклатура КАК Номенклатура,
		|	ДвиженияМБПСкладИзменение.Партия КАК Партия,
		|	ДвиженияМБПСкладИзменение.ИнвНомер КАК ИнвНомер,
		|	ДвиженияМБПСкладИзменение.Статус КАК Статус,
		|	ДвиженияМБПСкладИзменение.КоличествоПередЗаписью КАК КоличествоПередЗаписью,
		|	ДвиженияМБПСкладИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью
		|ПОМЕСТИТЬ ДвиженияМБПСкладПередЗаписью
		|ИЗ
		|	ДвиженияМБПСкладИзменение КАК ДвиженияМБПСкладИзменение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МБПСклад.НомерСтроки,
		|	МБПСклад.Организация,
		|	МБПСклад.Склад,
		|	МБПСклад.Номенклатура,
		|	МБПСклад.Партия,
		|	МБПСклад.ИнвНомер,
		|	МБПСклад.Статус,
		|	ВЫБОР
		|		КОГДА МБПСклад.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА МБПСклад.Количество
		|		ИНАЧЕ -МБПСклад.Количество
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА МБПСклад.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА МБПСклад.Сумма
		|		ИНАЧЕ -МБПСклад.Сумма
		|	КОНЕЦ
		|ИЗ
		|	РегистрНакопления.МБПСклад КАК МБПСклад
		|ГДЕ
		|	МБПСклад.Регистратор = &Регистратор
		|	И &Замещение");
		
		Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("Замещение", Замещение);
				
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
	КонецЕсли;
	
	// Временная таблица "ДвиженияМБПСкладИзменение" уничтожается
	// Удаляется информация о ее существовании.
	
	Если СтруктураВременныеТаблицы.Свойство("ДвиженияМБПСкладИзменение") Тогда
		
		Запрос = Новый Запрос("УНИЧТОЖИТЬ ДвиженияМБПСкладИзменение");
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		СтруктураВременныеТаблицы.Удалить("ДвиженияМБПСкладИзменение");
	
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события ПриЗаписи набора записей.
//
Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
		ИЛИ НЕ ДополнительныеСвойства.Свойство("ДляПроведения")
		ИЛИ НЕ ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу "ДвиженияМБПСкладИзменение".
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МИНИМУМ(ДвиженияМБПСкладИзменение.НомерСтроки) КАК НомерСтроки,
	|	ДвиженияМБПСкладИзменение.Организация КАК Организация,
	|	ДвиженияМБПСкладИзменение.Склад КАК Склад,
	|	ДвиженияМБПСкладИзменение.Номенклатура КАК Номенклатура,
	|	ДвиженияМБПСкладИзменение.Партия КАК Партия,
	|	ДвиженияМБПСкладИзменение.Статус,
	|	ДвиженияМБПСкладИзменение.ИнвНомер,
	|	СУММА(ДвиженияМБПСкладИзменение.КоличествоПередЗаписью) КАК КоличествоПередЗаписью,
	|	СУММА(ДвиженияМБПСкладИзменение.КоличествоИзменение) КАК КоличествоИзменение,
	|	СУММА(ДвиженияМБПСкладИзменение.КоличествоПриЗаписи) КАК КоличествоПриЗаписи,
	|	СУММА(ДвиженияМБПСкладИзменение.СуммаПередЗаписью) КАК СуммаПередЗаписью,
	|	СУММА(ДвиженияМБПСкладИзменение.СуммаИзменение) КАК СуммаИзменение,
	|	СУММА(ДвиженияМБПСкладИзменение.СуммаПриЗаписи) КАК СуммаПриЗаписи
	|ПОМЕСТИТЬ ДвиженияМБПСкладИзменение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДвиженияМБПСкладПередЗаписью.НомерСтроки КАК НомерСтроки,
	|		ДвиженияМБПСкладПередЗаписью.Организация КАК Организация,
	|		ДвиженияМБПСкладПередЗаписью.Склад КАК Склад,
	|		ДвиженияМБПСкладПередЗаписью.Номенклатура КАК Номенклатура,
	|		ДвиженияМБПСкладПередЗаписью.Партия КАК Партия,
	|		ДвиженияМБПСкладПередЗаписью.Статус КАК Статус,
	|		ДвиженияМБПСкладПередЗаписью.ИнвНомер КАК ИнвНомер,
	|		ДвиженияМБПСкладПередЗаписью.КоличествоПередЗаписью КАК КоличествоПередЗаписью,
	|		ДвиженияМБПСкладПередЗаписью.КоличествоПередЗаписью КАК КоличествоИзменение,
	|		0 КАК КоличествоПриЗаписи,
	|		ДвиженияМБПСкладПередЗаписью.СуммаПередЗаписью КАК СуммаПередЗаписью,
	|		ДвиженияМБПСкладПередЗаписью.СуммаПередЗаписью КАК СуммаИзменение,
	|		0 КАК СуммаПриЗаписи
	|	ИЗ
	|		ДвиженияМБПСкладПередЗаписью КАК ДвиженияМБПСкладПередЗаписью
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		МБПСкладПриЗаписи.НомерСтроки,
	|		МБПСкладПриЗаписи.Организация,
	|		МБПСкладПриЗаписи.Склад,
	|		МБПСкладПриЗаписи.Номенклатура,
	|		МБПСкладПриЗаписи.Партия,
	|		МБПСкладПриЗаписи.Статус,
	|		МБПСкладПриЗаписи.ИнвНомер,
	|		0,
	|		ВЫБОР
	|			КОГДА МБПСкладПриЗаписи.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -МБПСкладПриЗаписи.Количество
	|			ИНАЧЕ МБПСкладПриЗаписи.Количество
	|		КОНЕЦ,
	|		МБПСкладПриЗаписи.Количество,
	|		0,
	|		ВЫБОР
	|			КОГДА МБПСкладПриЗаписи.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -МБПСкладПриЗаписи.Сумма
	|			ИНАЧЕ МБПСкладПриЗаписи.Сумма
	|		КОНЕЦ,
	|		МБПСкладПриЗаписи.Сумма
	|	ИЗ
	|		РегистрНакопления.МБПСклад КАК МБПСкладПриЗаписи
	|	ГДЕ
	|		МБПСкладПриЗаписи.Регистратор = &Регистратор) КАК ДвиженияМБПСкладИзменение
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияМБПСкладИзменение.Организация,
	|	ДвиженияМБПСкладИзменение.Склад,
	|	ДвиженияМБПСкладИзменение.Номенклатура,
	|	ДвиженияМБПСкладИзменение.Партия,
	|	ДвиженияМБПСкладИзменение.Статус,
	|	ДвиженияМБПСкладИзменение.ИнвНомер
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ДвиженияМБПСкладИзменение.КоличествоИзменение) <> 0
	|		ИЛИ СУММА(ДвиженияМБПСкладИзменение.СуммаИзменение) <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Склад,
	|	Номенклатура,
	|	Партия");
	
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаИзРезультатаЗапроса.Следующий();
	
	// Новые изменения были помещены во временную таблицу "ДвиженияЗапасыИзменение".
	// Добавляется информация о ее существовании и наличии в ней записей об изменении.
	СтруктураВременныеТаблицы.Вставить("ДвиженияМБПСкладИзменение", ВыборкаИзРезультатаЗапроса.Количество > 0);
	
	// Временная таблица "ДвиженияМБПСкладПередЗаписью" уничтожается
	Запрос = Новый Запрос("УНИЧТОЖИТЬ ДвиженияМБПСкладПередЗаписью");
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры // ПриЗаписи()

#КонецОбласти

#КонецЕсли