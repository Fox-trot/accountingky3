///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2018, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Определяет объекты конфигурации, в модулях менеджеров которых размещена процедура ДобавитьКомандыПечати,
// формирующая список команд печати, предоставляемых этим объектом.
// Синтаксис процедуры ДобавитьКомандыПечати см. в документации к подсистеме.
//
// Параметры:
//  СписокОбъектов - Массив - менеджеры объектов с процедурой ДобавитьКомандыПечати.
//
Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт
	
	СписокОбъектов.Добавить(Справочники.ОсновныеСредства);
	СписокОбъектов.Добавить(Справочники.Организации);
	СписокОбъектов.Добавить(Справочники.ФизическиеЛица);
	
	СписокОбъектов.Добавить(Документы.АвансовыйОтчет);
	СписокОбъектов.Добавить(Документы.АктСверкиВзаиморасчетов);
	СписокОбъектов.Добавить(Документы.ПоступлениеБланковСчетовФактур);
	СписокОбъектов.Добавить(Документы.ВедомостьЗаработнойПлаты);
	СписокОбъектов.Добавить(Документы.ВозвратТоваровОтПокупателя);
	СписокОбъектов.Добавить(Документы.ВозвратТоваровПоставщику);
	СписокОбъектов.Добавить(Документы.ГТДПоИмпорту);
	СписокОбъектов.Добавить(Документы.ДвижениеМБП);
	СписокОбъектов.Добавить(Документы.Доверенность);
	СписокОбъектов.Добавить(Документы.ДополнительныеРасходы);
	СписокОбъектов.Добавить(Документы.ЗаявлениеОВвозеТоваров);
	СписокОбъектов.Добавить(Документы.ЗемельныйНалог);
	СписокОбъектов.Добавить(Документы.ИнвентаризацияОС);
	СписокОбъектов.Добавить(Документы.ИнвентаризацияТоваров);
	СписокОбъектов.Добавить(Документы.Командировка);
	СписокОбъектов.Добавить(Документы.Конвертация);
	СписокОбъектов.Добавить(Документы.НалогНаМусор);
	СписокОбъектов.Добавить(Документы.ОперацияБух);
	СписокОбъектов.Добавить(Документы.Отпуск);
	СписокОбъектов.Добавить(Документы.ОтчетПоБланкамСчетовФактур);
	СписокОбъектов.Добавить(Документы.ОтчетПоНалогуНаИмущество);
	СписокОбъектов.Добавить(Документы.ОтчетПоНДС);
	СписокОбъектов.Добавить(Документы.ОтчетПоНСП);
	СписокОбъектов.Добавить(Документы.ОтчетыПоНалогамЗП);
	СписокОбъектов.Добавить(Документы.ПеремещениеОС);
	СписокОбъектов.Добавить(Документы.ПеремещениеТоваров);
	СписокОбъектов.Добавить(Документы.ПлатежноеПоручениеИсходящее);
	СписокОбъектов.Добавить(Документы.ПоступлениеТоваровУслуг);
	СписокОбъектов.Добавить(Документы.ПриемНаРаботу);
	СписокОбъектов.Добавить(Документы.ПринятиеКУчетуОС);
	СписокОбъектов.Добавить(Документы.ПриходныйКассовыйОрдер);
	СписокОбъектов.Добавить(Документы.РаботаВВыходныеИПраздничныеДни);
	СписокОбъектов.Добавить(Документы.РаботаСверхурочно);
	СписокОбъектов.Добавить(Документы.РасходныйКассовыйОрдер);
	СписокОбъектов.Добавить(Документы.РеализацияТоваровУслуг);
	СписокОбъектов.Добавить(Документы.РегламентированныйОтчет);
	СписокОбъектов.Добавить(Документы.СписаниеОС);
	СписокОбъектов.Добавить(Документы.СписаниеТоваров);
	СписокОбъектов.Добавить(Документы.СчетНаОплатуПокупателю);
	СписокОбъектов.Добавить(Документы.СчетФактураВыписанный);
	СписокОбъектов.Добавить(Документы.ТребованиеНакладная);
	СписокОбъектов.Добавить(Документы.ТрудовоеСоглашение);
	СписокОбъектов.Добавить(Документы.Увольнение);
	СписокОбъектов.Добавить(Документы.ОприходованиеТоваров);
	СписокОбъектов.Добавить(Документы.ЕдинаяНалоговаяДекларация);
	СписокОбъектов.Добавить(Документы.ОтчетПоЕдиномуНалогу);
	СписокОбъектов.Добавить(Документы.ОтчетПоКосвеннымНалогам);
	СписокОбъектов.Добавить(Документы.УведомлениеОПолученииТоваров);
	СписокОбъектов.Добавить(Документы.ОтчетВзаимнойОТорговлеЕАЭС);
	СписокОбъектов.Добавить(Документы.КадровоеПеремещение);
	СписокОбъектов.Добавить(Документы.ОтчетПроизводстваЗаСмену);
	СписокОбъектов.Добавить(Документы.СчетФактураПолученный);
	
	СписокОбъектов.Добавить(ЖурналыДокументов.ЖурналОпераций);
	СписокОбъектов.Добавить(ЖурналыДокументов.ПроизводственныеДокументы);
	
	// ЭлектронноеВзаимодействие
	ЭлектронноеВзаимодействие.ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов);
	// Конец ЭлектронноеВзаимодействие
	
КонецПроцедуры

// Переопределяет список команд печати, получаемый функцией УправлениеПечатью.КомандыПечатиФормы.
// Используется для общих форм, у которых нет модуля менеджера для размещения в нем процедуры ДобавитьКомандыПечати,
// для случаев, когда штатных средств добавления команд в такие формы недостаточно. Например, если нужны свои команды,
// которых нет в других объектах.
// 
// Параметры:
//  ИмяФормы             - Строка - полное имя формы, в которой добавляются команды печати;
//  КомандыПечати        - ТаблицаЗначений - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати;
//  СтандартнаяОбработка - Булево - при установке значения Ложь не будет автоматически заполняться коллекция КомандыПечати.
//
Процедура ПередДобавлениемКомандПечати(ИмяФормы, КомандыПечати, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Дополнительные настройки списка команд печати в журналах документов.
//
// Параметры:
//  НастройкиСписка - Структура - модификаторы списка команд печати.
//   * МенеджерКомандПечати     - МенеджерОбъекта - менеджер объекта, в котором формируется список команд печати;
//   * АвтоматическоеЗаполнение - Булево - заполнять команды печати из объектов, входящих в состав журнала.
//                                         Если установлено значение Ложь, то список команд печати журнала будет
//                                         заполнен вызовом метода ДобавитьКомандыПечати из модуля менеджера журнала.
//                                         Значение по умолчанию: Истина - метод ДобавитьКомандыПечати будет вызван из
//                                         модулей менеджеров документов, входящих в состав журнала.
Процедура ПриПолученииНастроекСпискаКомандПечати(НастройкиСписка) Экспорт
	
КонецПроцедуры

// Вызывается после завершения вызова процедуры Печать менеджера печати объекта, имеет те же параметры.
// Может использоваться для постобработки всех печатных форм при их формировании.
// Например, можно вставить в колонтитул дату формирования печатной формы.
//
// Параметры:
//  МассивОбъектов - Массив - список объектов, для которых была выполнена процедура Печать;
//  ПараметрыПечати - Структура - произвольные параметры, переданные при вызове команды печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - содержит табличные документы и дополнительную информацию;
//  ОбъектыПечати - СписокЗначений - соответствие между объектами и именами областей в табличных документах, где
//                                   значение - Объект, представление - имя области с объектом в табличных документах;
//  ПараметрыВывода - Структура - параметры, связанные с выводом табличных документов:
//   * ПараметрыОтправки - Структура - информация для заполнения письма при отправке печатной формы по электронной почте.
//                                     Содержит следующие поля (описание см. в общем модуле конфигурации
//                                     РаботаСПочтовымиСообщениямиКлиент в процедуре СоздатьНовоеПисьмо):
//    ** Получатель;
//    ** Тема,
//    ** Текст.
Процедура ПриПечати(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
	
КонецПроцедуры

// Переопределяет параметры отправки печатных форм при подготовке письма.
// Может использоваться, например, для подготовки текста письма.
//
// Параметры:
//  ПараметрыОтправки - Структура - коллекция параметров:
//   * Получатель - Массив - коллекция имен получателей;
//   * Тема - Строка - тема письма;
//   * Текст - Строка - текст письма;
//   * Вложения - Структура - коллекция вложений:
//    ** АдресВоВременномХранилище - Строка - адрес вложения во временном хранилище;
//    ** Представление - Строка - имя файла вложения.
//  ОбъектыПечати - Массив - коллекция объектов, по которым сформированы печатные формы.
//  ПараметрыВывода - Структура - параметр ПараметрыВывода в вызове процедуры Печать.
//  ПечатныеФормы - ТаблицаЗначений - коллекция табличных документов:
//   * Название - Строка - название печатной формы;
//   * ТабличныйДокумент - ТабличныйДокумент - печатая форма.
Процедура ПередОтправкойПоПочте(ПараметрыОтправки, ПараметрыВывода, ОбъектыПечати, ПечатныеФормы) Экспорт
	
КонецПроцедуры

// Определяет набор подписей и печатей для документов.
//
// Параметры:
//  Документы      - Массив    - коллекция ссылок на объекты печати;
//  ПодписиИПечати - Соответствие - коллекция объектов печати и комплектов подписей/печатей к ним:
//   * Ключ     - ЛюбаяСсылка - ссылка на объект печати;
//   * Значение - Структура   - комплект подписей и печатей:
//     ** Ключ     - Строка - идентификатор подписи или печати в макете печатной формы, 
//                            должен начинаться с "Подпись...", "Печать..." или "Факсимиле...",
//                            например, "ПодписьРуководителя", "ПечатьОрганизации";
//     ** Значение - Картинка - изображение подписи или печати.
//
Процедура ПриПолученииПодписейИПечатей(Документы, ПодписиИПечати) Экспорт
	
	// БПКР
	ДокументыПоТипам = Новый Соответствие;
	Для Каждого Документ Из Документы Цикл
		ТипДокумента = ТипЗнч(Документ);
		Если ДокументыПоТипам[ТипДокумента] = Неопределено Тогда
			ДокументыПоТипам[ТипДокумента] = Новый Массив;
		КонецЕсли;
		ДокументыПоТипам[ТипДокумента].Добавить(Документ);
	КонецЦикла;
	
	ПустаяКартинка = Новый Картинка;
	
	КомплектыПодписейИПечатей = Новый Соответствие;
	Для Каждого ДокументыПоТипу Из ДокументыПоТипам Цикл
		ТипДокумента = ДокументыПоТипу.Ключ;
		СписокДокументов = ДокументыПоТипу.Значение;
		Если ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")
			Или ТипДокумента = Тип("ДокументСсылка.РеализацияТоваровУслуг") 
			Или ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуПокупателю") 
			Или ТипДокумента = Тип("ДокументСсылка.СчетФактураВыписанный") Тогда
			
			ОрганизацииВДокументах = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(СписокДокументов, "Организация");
			Для Каждого ОрганизацияВДокументе Из ОрганизацииВДокументах Цикл
				Документ = ОрганизацияВДокументе.Ключ;
				Организация = ОрганизацияВДокументе.Значение;
				КомплектПодписейИПечатей = КомплектыПодписейИПечатей[Организация];
				Если КомплектПодписейИПечатей = Неопределено Тогда
					
					КомплектПодписейИПечатей = Новый Соответствие; // Ключ - имя каринки в области, Значение - картинка
					КомплектПодписейИПечатей.Вставить("ПодписьРуководителя", ПустаяКартинка);
					КомплектПодписейИПечатей.Вставить("ПодписьГлавногоБухгалтера", ПустаяКартинка);
					КомплектПодписейИПечатей.Вставить("ПечатьОрганизации", ПустаяКартинка);
					
					ОтветственныеЛица = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизаций(Организация, Документ.Дата);
					
					Если ЗначениеЗаполнено(ОтветственныеЛица.ФаксимилеРуководителя) Тогда 
						ДвоичныеДанные = РаботаСФайлами.ДвоичныеДанныеФайла(ОтветственныеЛица.ФаксимилеРуководителя);
						Если ЗначениеЗаполнено(ДвоичныеДанные) Тогда				
							КомплектПодписейИПечатей["ПодписьРуководителя"] = Новый Картинка(ДвоичныеДанные);				
						КонецЕсли;
					КонецЕсли;	
					Если ЗначениеЗаполнено(ОтветственныеЛица.ФаксимилеГлавногоБухгалтера) Тогда 
						ДвоичныеДанные = РаботаСФайлами.ДвоичныеДанныеФайла(ОтветственныеЛица.ФаксимилеГлавногоБухгалтера);
						Если ЗначениеЗаполнено(ДвоичныеДанные) Тогда				
							КомплектПодписейИПечатей["ПодписьГлавногоБухгалтера"] = Новый Картинка(ДвоичныеДанные);				
						КонецЕсли;
					КонецЕсли;	
					
					Если ЗначениеЗаполнено(Организация.ФайлФаксимильнаяПечать) Тогда 
						ДвоичныеДанные = РаботаСФайлами.ДвоичныеДанныеФайла(Организация.ФайлФаксимильнаяПечать);
						Если ЗначениеЗаполнено(ДвоичныеДанные) Тогда				
							КомплектПодписейИПечатей["ПечатьОрганизации"] = Новый Картинка(ДвоичныеДанные);
						КонецЕсли;
					КонецЕсли;	
					
					КомплектыПодписейИПечатей.Вставить(Организация, КомплектПодписейИПечатей);
				КонецЕсли;
				ПодписиИПечати.Вставить(Документ, КомплектПодписейИПечатей);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	// Конец БПКР
	
КонецПроцедуры

// Переопределяемая часть обработчика формы ПриСозданииНаСервере.
//
// Параметры:
//  Форма                - УправляемаяФорма - форма ПечатьДокументов.
//  Отказ                - Булево - признак отказа от создания формы. Если в теле процедуры-обработчика установить
//                                  данному параметру значение Истина, то форма создана не будет.
//  СтандартнаяОбработка - Булево - в данный параметр передается признак выполнения стандартной (системной) обработки
//                                  события. Если в теле процедуры-обработчика установить данному параметру
//                                  значение Ложь, стандартная обработка события производиться не будет.
//
Процедура ПечатьДокументовПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	
	
КонецПроцедуры

// Переопределяемая часть обработчика формы ПриЗагрузкеДанныхИзНастроекНаСервере.
//
// Параметры:
//  Форма     - УправляемаяФорма - форма ПечатьДокументов.
//  Настройки - Соответствие     - значения реквизитов формы.
//
Процедура ПечатьДокументовПриЗагрузкеДанныхИзНастроекНаСервере(Форма, Настройки) Экспорт
	
КонецПроцедуры

// Переопределяемая часть обработчика формы ПриСохраненииДанныхВНастройкахНаСервере.
//
// Параметры:
//  Форма     - УправляемаяФорма - форма ПечатьДокументов.
//  Настройки - Соответствие     - значения реквизитов формы.
//
Процедура ПечатьДокументовПриСохраненииДанныхВНастройкахНаСервере(Форма, Настройки) Экспорт

КонецПроцедуры

// Серверная часть обработчика динамически подключенной команды на форме ПечатьДокументов.
// См. УправлениеПечатьюКлиентПереопределяемый.ПечатьДокументовВыполнитьКоманду.
//
// Параметры:
//  Форма                   - УправляемаяФорма - форма ПечатьДокументов.
//  ДополнительныеПараметры - Произвольный     - параметры, переданные из УправлениеПечатьюКлиентПереопределяемый.ПечатьДокументовВыполнитьКоманду.
//
Процедура ПечатьДокументовПриВыполненииКоманды(Форма, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Переопределяет таблицу возможных форматов для сохранения табличного документа.
// Используется в случае, когда необходимо сократить список форматов сохранения, предлагаемый пользователю
// перед сохранением печатной формы в файл, либо перед отправкой по почте.
//
// Параметры:
//  ТаблицаФорматов - ТаблицаЗначений - коллекция форматов сохранения:
//   * ТипФайлаТабличногоДокумента - ТипФайлаТабличногоДокумента - значение в платформе, соответствующее формату;
//   * Ссылка        - ПеречислениеСсылка.ФорматыСохраненияОтчетов - ссылка на метаданные, где хранится представление;
//   * Представление - Строка - представление типа файла (заполняется из перечисления);
//   * Расширение    - Строка - тип файла для операционной системы;
//   * Картинка      - Картинка - значок формата.
//
Процедура ПриЗаполненииНастроекФорматовСохраненияТабличногоДокумента(ТаблицаФорматов) Экспорт
	
КонецПроцедуры

#КонецОбласти
