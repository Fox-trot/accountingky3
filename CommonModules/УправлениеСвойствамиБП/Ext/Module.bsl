
#Область ПрограммныйИнтерфейс

Функция ЗаполнитьДополнительныеПараметры(Объект = Неопределено, ИмяЭлементаДляРазмещения = Неопределено, ПроизвольныйОбъект = Неопределено, ИмяЭлементаКоманднойПанели = Неопределено, СкрытьУдаленные = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Структура;
	
	Если Объект <> Неопределено Тогда
		
		ДополнительныеПараметры.Вставить("Объект", Объект);
		
	КонецЕсли;
	
	Если ИмяЭлементаДляРазмещения <> Неопределено Тогда
		
		ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", ИмяЭлементаДляРазмещения);
		
	КонецЕсли;
	
	Если ПроизвольныйОбъект <> Неопределено Тогда
		
		ДополнительныеПараметры.Вставить("ПроизвольныйОбъект", ПроизвольныйОбъект);
		
	КонецЕсли;
	
	Если ИмяЭлементаКоманднойПанели <> Неопределено Тогда
		
		ДополнительныеПараметры.Вставить("ИмяЭлементаКоманднойПанели", ИмяЭлементаКоманднойПанели);
		
	КонецЕсли;
	
	Если СкрытьУдаленные <> Неопределено Тогда
		
		ДополнительныеПараметры.Вставить("СкрытьУдаленные", СкрытьУдаленные);
		
	КонецЕсли;
	
	Возврат ДополнительныеПараметры;
	
КонецФункции

Процедура ТаблицаСвойствПриСозданииНаСервере(Форма, Объект = Неопределено, ВладелецСвойств = Неопределено, ЗаполнитьОписаниеЗависимостей = Истина) Экспорт
	
	Реквизиты = Новый Массив;
	
	// Проверка значения функциональной опции "Использование свойств".
	ОпцияИспользоватьСвойства = Форма.ПолучитьФункциональнуюОпциюФормы("ИспользоватьДополнительныеРеквизитыИСведения");
	РеквизитИспользоватьСвойства = Новый РеквизитФормы("Свойства_ИспользоватьСвойства", Новый ОписаниеТипов("Булево"));
	Реквизиты.Добавить(РеквизитИспользоватьСвойства);
	
	Если ОпцияИспользоватьСвойства Тогда
		
		// Добавление реквизита содержащего используемые наборы дополнительных реквизитов.
		Реквизиты.Добавить(Новый РеквизитФормы(
			"Свойства_НаборыДополнительныхРеквизитовОбъекта", Новый ОписаниеТипов("СписокЗначений")));
		
		// Добавление реквизита описания зависимых реквизитов.
		ТаблицаЗависимыхРеквизитов = "Свойства_ОписаниеЗависимыхДополнительныхРеквизитов";
		
		Реквизиты.Добавить(Новый РеквизитФормы(
			ТаблицаЗависимыхРеквизитов, Новый ОписаниеТипов("ТаблицаЗначений")));
		
		Реквизиты.Добавить(Новый РеквизитФормы(
			"Свойство", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения"), ТаблицаЗависимыхРеквизитов));
		
		Реквизиты.Добавить(Новый РеквизитФормы(
			"Доступен", Новый ОписаниеТипов("Булево"), ТаблицаЗависимыхРеквизитов));
		
		Реквизиты.Добавить(Новый РеквизитФормы(
			"УсловиеДоступности", Новый ОписаниеТипов(), ТаблицаЗависимыхРеквизитов));
		
		Реквизиты.Добавить(Новый РеквизитФормы(
			"Виден", Новый ОписаниеТипов("Булево"), ТаблицаЗависимыхРеквизитов));
			
		Реквизиты.Добавить(Новый РеквизитФормы(
			"УсловиеВидимости", Новый ОписаниеТипов(), ТаблицаЗависимыхРеквизитов));
		
		Реквизиты.Добавить(Новый РеквизитФормы(
			"ЗаполнятьОбязательно", Новый ОписаниеТипов("Булево"), ТаблицаЗависимыхРеквизитов));
		
		Реквизиты.Добавить(Новый РеквизитФормы(
			"УсловиеОбязательностиЗаполнения", Новый ОписаниеТипов(), ТаблицаЗависимыхРеквизитов));
		
		// Добавление команды формы, если установлена роль "ДобавлениеИзменениеДополнительныхРеквизитовИСведений" или это
		// полноправный пользователь.
		Если Пользователи.РолиДоступны("ДобавлениеИзменениеДополнительныхРеквизитовИСведений") Тогда
			// Добавление команды.
			Команда = Форма.Команды.Добавить("РедактироватьСоставДополнительныхРеквизитов");
			Команда.Заголовок = НСтр("ru = 'Изменить состав дополнительных реквизитов'");
			Команда.Действие = "Подключаемый_РедактироватьСоставСвойств";
			Команда.Подсказка = НСтр("ru = 'Изменить состав дополнительных реквизитов'");
			Команда.Картинка = БиблиотекаКартинок.НастройкаСписка;
			
			Кнопка = Форма.Элементы.Добавить(
				"РедактироватьСоставДополнительныхРеквизитов",
				Тип("КнопкаФормы"),
				Форма.КоманднаяПанель
			);
			
			Кнопка.ТолькоВоВсехДействиях = Истина;
			Кнопка.ИмяКоманды = "РедактироватьСоставДополнительныхРеквизитов";
		КонецЕсли;
		
	КонецЕсли;
	
	Форма.ИзменитьРеквизиты(Реквизиты);
	
	Форма.Свойства_ИспользоватьСвойства = ОпцияИспользоватьСвойства;
	
	ЗаполнитьДополнительныеРеквизитыВФорме(Форма, Объект, ВладелецСвойств, ЗаполнитьОписаниеЗависимостей);
	
КонецПроцедуры

Процедура ТаблицаСвойствОбработкаПроверкиЗаполненияНаСервере(Форма, Объект = Неопределено, Отказ) Экспорт
	
	Ошибки = Неопределено;
	
	Итератор = 0;
	Для каждого Строка Из Форма.Свойства_ТаблицаСвойстваИЗначения Цикл
		
		Если Строка.ЗаполнятьОбязательно Тогда
			
			Результат = Истина;
			
			Если Объект = Неопределено Тогда
				ОписаниеОбъекта = Форма.Объект;
			Иначе
				ОписаниеОбъекта = Объект;
			КонецЕсли;
			
			Для Каждого ЗависимыйРеквизит Из Форма.Свойства_ОписаниеЗависимыхДополнительныхРеквизитов Цикл
				
				Если ЗависимыйРеквизит.Свойство = Строка.Свойство
					И ЗависимыйРеквизит.УсловиеОбязательностиЗаполнения <> Неопределено Тогда
					
					ЗначенияПараметров = ЗависимыйРеквизит.УсловиеОбязательностиЗаполнения.ЗначенияПараметров;
					КодУсловия         = ЗависимыйРеквизит.УсловиеОбязательностиЗаполнения.КодУсловия;
					Выполнить("Результат = (" + КодУсловия + ")");
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			Если НЕ Результат Тогда
				Продолжить;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Строка.Значение) Тогда
				
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки,
					Форма.Свойства_ТаблицаСвойстваИЗначения[Итератор].Значение,
					СтрШаблон(НСтр("ru = 'Поле ""%1"" не заполнено.'"), Строка.Наименование),
					"");
				КонецЕсли;
				
		КонецЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
КонецПроцедуры

Процедура ТаблицаСвойствПередЗаписьюНаСервере(Форма, Объект) Экспорт
	
	Объект.ДополнительныеРеквизиты.Очистить();
	
	Для каждого Стр Из Форма.Свойства_ТаблицаСвойстваИЗначения Цикл
		
		Если НЕ ЗначениеЗаполнено(Стр.Значение) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Объект.ДополнительныеРеквизиты.Добавить();
		НоваяСтрока.Свойство = Стр.Свойство;
		НоваяСтрока.Значение = Стр.Значение;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДополнительныеРеквизитыВФорме(Форма, Объект = Неопределено, ВладелецСвойств = Неопределено, ЗаполнитьОписаниеЗависимостей = Истина) Экспорт
	
	Если НЕ Форма.Свойства_ИспользоватьСвойства Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект = Неопределено Тогда
		ОписаниеОбъекта = Форма.Объект;
	Иначе
		ОписаниеОбъекта = Объект;
	КонецЕсли;
	
	Форма.Свойства_НаборыДополнительныхРеквизитовОбъекта = Новый СписокЗначений;
	
	НаборыСвойствОбъекта = УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(ОписаниеОбъекта);
	
	Для каждого Строка Из НаборыСвойствОбъекта Цикл
		Если УправлениеСвойствамиСлужебный.ВидыСвойствНабора(Строка.Набор).ДополнительныеРеквизиты Тогда
			
			Форма.Свойства_НаборыДополнительныхРеквизитовОбъекта.Добавить(
				Строка.Набор, Строка.Заголовок);
		КонецЕсли;
	КонецЦикла;
	
	ОписаниеСвойств = УправлениеСвойствамиСлужебный.ЗначенияСвойств(
		ОписаниеОбъекта.ДополнительныеРеквизиты.Выгрузить(),
		Форма.Свойства_НаборыДополнительныхРеквизитовОбъекта,
		Ложь
	);
	
	Форма.Свойства_ТаблицаСвойстваИЗначения.Загрузить(ОписаниеСвойств);
	Для каждого Эл Из Форма.Свойства_ТаблицаСвойстваИЗначения Цикл
		Эл.ФорматСвойства = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Эл.Свойство, "ФорматСвойства");
	КонецЦикла;
	
	Итератор = 0;
	Для каждого ОписаниеСвойства Из ОписаниеСвойств Цикл
		
		Если НЕ ЗаполнитьОписаниеЗависимостей Тогда
			Продолжить;
		КонецЕсли;
		
		// Заполнение таблицы зависимых дополнительных реквизитов.
		Если ОписаниеСвойства.ЗависимостиДополнительныхРеквизитов.Количество() > 0 Тогда
			ОписаниеЗависимогоРеквизита = Форма.Свойства_ОписаниеЗависимыхДополнительныхРеквизитов.Добавить();
			ЗаполнитьЗначенияСвойств(ОписаниеЗависимогоРеквизита, ОписаниеСвойства);
		КонецЕсли;
		
		Для каждого СтрокаТаблицы Из ОписаниеСвойства.ЗависимостиДополнительныхРеквизитов Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ЗависимоеСвойство)
				И НЕ ЗначениеЗаполнено(СтрокаТаблицы.Условие)
				И СтрокаТаблицы.Реквизит = Неопределено Тогда
				
				Продолжить;
			КонецЕсли;
			
			Если ТипЗнч(СтрокаТаблицы.Реквизит) = Тип("Строка") Тогда
				ПутьКРеквизиту = "ОписаниеОбъекта." + СтрокаТаблицы.Реквизит;
			Иначе
				Строки = Форма.Свойства_ТаблицаСвойстваИЗначения.НайтиСтроки(Новый Структура("Свойство", СтрокаТаблицы.Реквизит));
				Если Строки.Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;
				Для каждого Стр Из Строки Цикл
					ПутьКРеквизиту = "Форма.Свойства_ТаблицаСвойстваИЗначения" + "[" + Стр.ПолучитьИдентификатор() + "]" + ".Значение";
				КонецЦикла;
			КонецЕсли;
			
			ШаблонУсловия = "";
			Если СтрокаТаблицы.Условие = "Равно" Тогда
				ШаблонУсловия = "%1 = %2";
			ИначеЕсли СтрокаТаблицы.Условие = "Не равно" Тогда // не ошибка, идентификатор.
				ШаблонУсловия = "%1 <> %2";
			КонецЕсли;
			
			ПравоеЗначение = "";
			Если ЗначениеЗаполнено(ШаблонУсловия) Тогда
				ПравоеЗначение = "ЗначенияПараметров[""" + ПутьКРеквизиту + """]";
			КонецЕсли;
			
			Если СтрокаТаблицы.Условие = "Заполнено" Тогда
				ШаблонУсловия = "ЗначениеЗаполнено(%1)";
			ИначеЕсли СтрокаТаблицы.Условие = "Не заполнено" Тогда // не ошибка, идентификатор.
				ШаблонУсловия = "Не ЗначениеЗаполнено(%1)";
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ПравоеЗначение) Тогда
				КодУсловия = СтрШаблон(ШаблонУсловия, ПутьКРеквизиту, ПравоеЗначение);
			Иначе
				КодУсловия = СтрШаблон(ШаблонУсловия, ПутьКРеквизиту);
			КонецЕсли;
			
			Если СтрокаТаблицы.ЗависимоеСвойство = "Доступен" Тогда
				УстановитьУсловиеЗависимости(ОписаниеЗависимогоРеквизита.УсловиеДоступности, ПутьКРеквизиту, СтрокаТаблицы, КодУсловия);
			ИначеЕсли СтрокаТаблицы.ЗависимоеСвойство = "Виден" Тогда
				УстановитьУсловиеЗависимости(ОписаниеЗависимогоРеквизита.УсловиеВидимости, ПутьКРеквизиту, СтрокаТаблицы, КодУсловия);
			Иначе
				УстановитьУсловиеЗависимости(ОписаниеЗависимогоРеквизита.УсловиеОбязательностиЗаполнения, ПутьКРеквизиту, СтрокаТаблицы, КодУсловия);
			КонецЕсли;
		КонецЦикла;
		
		Итератор = Итератор + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьУсловиеЗависимости(СтруктураЗависимостей, ПутьКРеквизиту, СтрокаТаблицы, КодУсловия)
	Если СтруктураЗависимостей = Неопределено Тогда
		ЗначенияПараметров = Новый Соответствие;
		ЗначенияПараметров.Вставить(ПутьКРеквизиту, СтрокаТаблицы.Значение);
		СтруктураЗависимостей = Новый Структура;
		СтруктураЗависимостей.Вставить("КодУсловия", КодУсловия);
		СтруктураЗависимостей.Вставить("ЗначенияПараметров", ЗначенияПараметров);
	Иначе
		СтруктураЗависимостей.КодУсловия = СтруктураЗависимостей.КодУсловия + " И " + КодУсловия;
		СтруктураЗависимостей.ЗначенияПараметров.Вставить(ПутьКРеквизиту, СтрокаТаблицы.Значение);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
