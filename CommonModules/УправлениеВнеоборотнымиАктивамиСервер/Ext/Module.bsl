
// Расчитывает сумму амортизации по указаному основному средству по бух учету
//
// Параметры:
//  ДатаРасчета			 - Дата	 - дата расчета амортизации
//  Организация			 - СправочникСсылка.Организации	- Организация для отбора
//  ОсновноеСредство	 - СправочникСсылка.ОсновныеСредства - ОсновноеСредство для отбора
// 
// Возвращаемое значение:
//  ТаблицаАмортизации - Таблица значений
//
Функция РасчетАмортизацииБухРегл(ДатаРасчета, Организация, ОсновноеСредство = Неопределено) Экспорт
	
	ТаблицаАмортизации = Новый ТаблицаЗначений();
	
	ТаблицаАмортизации.Колонки.Добавить("ОС"                    , Новый ОписаниеТипов("СправочникСсылка.ОсновныеСредства"));
	ТаблицаАмортизации.Колонки.Добавить("СчетУчета"           	, Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаАмортизации.Колонки.Добавить("СчетРасходовАО"        , Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаАмортизации.Колонки.Добавить("СчетАмортизацииБУ"     , Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаАмортизации.Колонки.Добавить("СпособОтраженияРасходовПоАмортизации", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияРасходовПоАмортизации"));
	
	Массив = Новый Массив;
	
	Массив.Добавить(Тип("Число"));
	КвалификаторЧисла = Новый КвалификаторыЧисла(15, 2);   	   	
	
	ТаблицаАмортизации.Колонки.Добавить("Бух",                    Новый ОписаниеТипов(Массив, КвалификаторЧисла));
	ТаблицаАмортизации.Колонки.Добавить("НакопленнаяАмортизация", Новый ОписаниеТипов(Массив, КвалификаторЧисла)); 
	ТаблицаАмортизации.Колонки.Добавить("СтоимостьДляВычисленияАмортизации", Новый ОписаниеТипов(Массив, КвалификаторЧисла)); 
	ТаблицаАмортизации.Колонки.Добавить("ЛиквидационнаяСтоимость", Новый ОписаниеТипов(Массив, КвалификаторЧисла)); 
	ТаблицаАмортизации.Колонки.Добавить("СрокСлужбы", Новый ОписаниеТипов(Массив, КвалификаторЧисла));
	ТаблицаАмортизации.Колонки.Добавить("НормаАмортизации", Новый ОписаниеТипов(Массив, КвалификаторЧисла));
	ТаблицаАмортизации.Колонки.Добавить("ИнвентарныйНомер");
	
	УПП = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьДанныеУчетнойПолитикиОрганизаций(ДатаРасчета, Организация);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("НачалоГода",                НачалоГода(ДатаРасчета));
	Запрос.УстановитьПараметр("Организация",               Организация);
	Запрос.УстановитьПараметр("НачалоПериода",             НачалоМесяца(ДатаРасчета));
		Запрос.УстановитьПараметр("КонецПериода",          КонецМесяца(ДатаРасчета));
	Запрос.УстановитьПараметр("НеНачислять", 			   Перечисления.СпособыНачисленияАмортизацииОС.НеНачислять);
	
	СубконтоОС = Новый Массив();
	СубконтоОС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	
	Запрос.УстановитьПараметр("СубконтоОС", 				СубконтоОС);
	Запрос.УстановитьПараметр("Поступило", 					Перечисления.ВидыСостоянийОС.Поступило);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СостоянияОССрез.ОсновноеСредство,
		|	СостоянияОССрез.Период
		|ПОМЕСТИТЬ ВТ_ПринятыеКУчету
		|ИЗ
		|	РегистрСведений.СостоянияОС.СрезПоследних(
		|			&КонецПериода,
		|			Организация = &Организация
		|				И Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСОстоянийОС.ПРинятоКУчету)) КАК СостоянияОССрез
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СостоянияОССрезПоследних.ОсновноеСредство,
		|	СостоянияОССрезПоследних.Период
		|ПОМЕСТИТЬ ВТ_СнятыеСУчета
		|ИЗ
		|	РегистрСведений.СостоянияОС.СрезПоследних(&КонецПериода, Организация = &Организация) КАК СостоянияОССрезПоследних
		|ГДЕ
		|	СостоянияОССрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.СнятоСУчета)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаУчетаОсновныхСредствСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	ЕСТЬNULL(Стоимость.СуммаОстатокДт, 0) - ЕСТЬNULL(Амортизация.СуммаОстатокКт, 0) КАК СтоимостьНаНачалоГода
		|ПОМЕСТИТЬ ВТ_СтоимостьОСНГ
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(&НачалоГода, Организация = &Организация) КАК СчетаУчетаОсновныхСредствСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&НачалоГода, , &СубконтоОС, Организация = &Организация) КАК Стоимость
		|		ПО СчетаУчетаОсновныхСредствСрезПоследних.ОсновноеСредство = Стоимость.Субконто1
		|			И СчетаУчетаОсновныхСредствСрезПоследних.СчетУчета = Стоимость.Счет
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&НачалоГода, , &СубконтоОС, Организация = &Организация) КАК Амортизация
		|		ПО СчетаУчетаОсновныхСредствСрезПоследних.ОсновноеСредство = Амортизация.Субконто1
		|			И СчетаУчетаОсновныхСредствСрезПоследних.СчетУчета.ПарныйСчет = Амортизация.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПараметрыУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ПараметрыУчетаОС.СрокСлужбы КАК СрокИспользованияДляВычисленияАмортизации,
		|	ПараметрыУчетаОС.ПервоначальнаяСтоимость - ПараметрыУчетаОС.ЛиквидационнаяСтоимость КАК СтоимостьДляВычисленияАмортизации,
		|	ПараметрыУчетаОС.ОбъемПродукцииРабот КАК ОбъемПродукцииРабот,
		|	ПараметрыУчетаОС.Период КАК Период,
		|	ПараметрыУчетаОС.КоэффициентУскорения КАК КоэффициентУскорения,
		|	ПараметрыУчетаОС.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
		|	ПараметрыУчетаОС.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
		|	ЕСТЬNULL(СтоимостьОС_БУ.СуммаНачальныйОстатокДт, 0) КАК СтоимостьНачальныйОстаток,
		|	ЕСТЬNULL(СтоимостьОС_БУ.СуммаКонечныйОстатокДт, 0) КАК СтоимостьКонечныйОстаток,
		|	ЕСТЬNULL(АмортизацияОС_БУ.СуммаКонечныйОстатокКт, 0) КАК АмортизацияКонечныйОстаток,
		|	ЕСТЬNULL(АмортизацияОС_БУ.СуммаОборотКт, 0) КАК АмортизацияОборот,
		|	ПараметрыУчетаОС.СчетУчета КАК СчетУчета,
		|	ПараметрыУчетаОС.СчетУчета.ПарныйСчет КАК СчетНачисленияАмортизацииБУ,
		|	ПараметрыУчетаОС.СпособОтраженияРасходовПоАмортизации КАК СпособОтраженияРасходовПоАмортизации,
		|	ЕСТЬNULL(ВТ_СтоимостьОСНГ.СтоимостьНаНачалоГода, 0) КАК СтоимостьНаНачалоГода,
		|	ЕСТЬNULL(ВТ_ПринятыеКУчету.Период, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПринятияКУчету,
		|	ЕСТЬNULL(ВТ_СнятыеСУчета.Период, ДОБАВИТЬКДАТЕ(ЕСТЬNULL(ВТ_ПринятыеКУчету.Период, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), МЕСЯЦ, ПараметрыУчетаОС.СрокСлужбы)) КАК ДатаСнятияСУчета,
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.СчетЗатрат КАК СчетРасходовАО,
		|	АмортизацияОС_БУ.СуммаНачальныйОстатокКт КАК АмортизацияНачальныйОстаток,
		|	ПараметрыУчетаОС.НормаАмортизации КАК НормаАмортизации,
		|	АмортизацияОС_БУ.СуммаКонечныйОстатокКт КАК НакопленнаяАмортизация,
		|	ПараметрыУчетаОС.ИнвентарныйНомер КАК ИнвентарныйНомер
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС КАК ПараметрыУчетаОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьОСНГ КАК ВТ_СтоимостьОСНГ
		|		ПО ПараметрыУчетаОС.ОсновноеСредство = ВТ_СтоимостьОСНГ.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , , &СубконтоОС, Организация = &Организация) КАК СтоимостьОС_БУ
		|		ПО ПараметрыУчетаОС.ОсновноеСредство = СтоимостьОС_БУ.Субконто1
		|			И ПараметрыУчетаОС.СчетУчета = СтоимостьОС_БУ.Счет
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Авто, , , &СубконтоОС, Организация = &Организация) КАК АмортизацияОС_БУ
		|		ПО ПараметрыУчетаОС.ОсновноеСредство = АмортизацияОС_БУ.Субконто1
		|			И ПараметрыУчетаОС.СчетУчета.ПарныйСчет = АмортизацияОС_БУ.Счет
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияРасходовПоАмортизации КАК СпособыОтраженияРасходовПоАмортизацииСпособы
		|		ПО ПараметрыУчетаОС.СпособОтраженияРасходовПоАмортизации = СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СнятыеСУчета КАК ВТ_СнятыеСУчета
		|		ПО ПараметрыУчетаОС.ОсновноеСредство = ВТ_СнятыеСУчета.ОсновноеСредство
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПринятыеКУчету КАК ВТ_ПринятыеКУчету
		|		ПО ПараметрыУчетаОС.ОсновноеСредство = ВТ_ПринятыеКУчету.ОсновноеСредство
		|ГДЕ
		|	ВТ_СнятыеСУчета.ОсновноеСредство ЕСТЬ NULL 
		|	И ПараметрыУчетаОС.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ДЕНЬ(ПараметрыУчетаОС.Период) <> ДЕНЬ(&НачалоПериода)
		|	И ДЕНЬ(ПараметрыУчетаОС.Период) <> ДЕНЬ(&КонецПериода)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПараметрыАмортизации.ОсновноеСредство,
		|	ВЫБОР
		|		КОГДА ПараметрыАмортизации.СрокСлужбы = 0
		|			ТОГДА ПараметрыУчетаОС_ПринятыеВТекущемМесяце.СрокСлужбы
		|		ИНАЧЕ ПараметрыАмортизации.СрокСлужбы
		|	КОНЕЦ,
		|	ПараметрыАмортизации.ПервоначальнаяСтоимость - ПараметрыАмортизации.ЛиквидационнаяСтоимость,
		|	ПараметрыАмортизации.ОбъемПродукцииРабот,
		|	&НачалоПериода,
		|	ПараметрыАмортизации.КоэффициентУскорения,
		|	ЕСТЬNULL(ПараметрыАмортизации.ЛиквидационнаяСтоимость, 0),
		|	ПараметрыАмортизации.СпособНачисленияАмортизации,
		|	ЕСТЬNULL(СтоимостьОС_БУ.СуммаНачальныйОстатокДт, 0),
		|	ЕСТЬNULL(СтоимостьОС_БУ.СуммаКонечныйОстатокДт, 0),
		|	ЕСТЬNULL(АмортизацияОС_БУ.СуммаКонечныйОстатокКт, 0),
		|	ЕСТЬNULL(АмортизацияОС_БУ.СуммаОборотКт, 0),
		|	ЕСТЬNULL(ПараметрыАмортизации.СчетУчета, 0),
		|	ЕСТЬNULL(ПараметрыАмортизации.СчетУчета.ПарныйСчет, 0),
		|	ПараметрыАмортизации.СпособОтраженияРасходовПоАмортизации,
		|	ЕСТЬNULL(ВТ_СтоимостьОСНГ.СтоимостьНаНачалоГода, 0),
		|	ЕСТЬNULL(ВТ_ПринятыеКУчету.Период, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)),
		|	ЕСТЬNULL(ВТ_СнятыеСУчета.Период, ДОБАВИТЬКДАТЕ(ЕСТЬNULL(ВТ_ПринятыеКУчету.Период, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), МЕСЯЦ, ПараметрыАмортизации.СрокСлужбы)),
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.СчетЗатрат,
		|	АмортизацияОС_БУ.СуммаНачальныйОстатокКт,
		|	ПараметрыАмортизации.НормаАмортизации,
		|	АмортизацияОС_БУ.СуммаКонечныйОстатокКт,
		|	ПараметрыАмортизации.ИнвентарныйНомер
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|			&НачалоПериода,
		|			Организация = &Организация
		|				И ОсновноеСредство В (&ОсновноеСредство)) КАК ПараметрыАмортизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьОСНГ КАК ВТ_СтоимостьОСНГ
		|		ПО ПараметрыАмортизации.ОсновноеСредство = ВТ_СтоимостьОСНГ.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СнятыеСУчета КАК ВТ_СнятыеСУчета
		|		ПО ПараметрыАмортизации.ОсновноеСредство = ВТ_СнятыеСУчета.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , , &СубконтоОС, Организация = &Организация) КАК СтоимостьОС_БУ
		|		ПО ПараметрыАмортизации.ОсновноеСредство = СтоимостьОС_БУ.Субконто1
		|			И ПараметрыАмортизации.СчетУчета = СтоимостьОС_БУ.Счет
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Авто, , , &СубконтоОС, Организация = &Организация) КАК АмортизацияОС_БУ
		|		ПО ПараметрыАмортизации.ОсновноеСредство = АмортизацияОС_БУ.Субконто1
		|			И ПараметрыАмортизации.СчетУчета.ПарныйСчет = АмортизацияОС_БУ.Счет
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияРасходовПоАмортизации КАК СпособыОтраженияРасходовПоАмортизацииСпособы
		|		ПО ПараметрыАмортизации.СпособОтраженияРасходовПоАмортизации = СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|				&КонецПериода,
		|				Организация = &Организация
		|					И ОсновноеСредство В (&ОсновноеСредство)) КАК ПараметрыУчетаОС_ПринятыеВТекущемМесяце
		|		ПО ПараметрыАмортизации.ОсновноеСредство = ПараметрыУчетаОС_ПринятыеВТекущемМесяце.ОсновноеСредство
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПринятыеКУчету КАК ВТ_ПринятыеКУчету
		|		ПО ПараметрыАмортизации.ОсновноеСредство = ВТ_ПринятыеКУчету.ОсновноеСредство
		|ГДЕ
		|	ПараметрыАмортизации.СпособНачисленияАмортизации <> &НеНачислять
		|	И ПараметрыАмортизации.Организация = &Организация
		|	И ВТ_СнятыеСУчета.ОсновноеСредство ЕСТЬ NULL 
		|	И ПараметрыАмортизации.ПервоначальнаяСтоимость - ЕСТЬNULL(АмортизацияОС_БУ.СуммаКонечныйОстатокКт, 0) - ПараметрыАмортизации.ЛиквидационнаяСтоимость > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПараметрыАмортизации.ОсновноеСредство,
		|	ПараметрыАмортизации.СрокСлужбы,
		|	ПараметрыАмортизации.ПервоначальнаяСтоимость - ПараметрыАмортизации.ЛиквидационнаяСтоимость,
		|	ПараметрыАмортизации.ОбъемПродукцииРабот,
		|	&КонецПериода,
		|	ПараметрыАмортизации.КоэффициентУскорения,
		|	ЕСТЬNULL(ПараметрыАмортизации.ЛиквидационнаяСтоимость, 0),
		|	ПараметрыАмортизации.СпособНачисленияАмортизации,
		|	ЕСТЬNULL(СтоимостьОС_БУ.СуммаНачальныйОстатокДт, 0),
		|	ЕСТЬNULL(СтоимостьОС_БУ.СуммаКонечныйОстатокДт, 0),
		|	ЕСТЬNULL(АмортизацияОС_БУ.СуммаКонечныйОстатокКт, 0),
		|	ЕСТЬNULL(АмортизацияОС_БУ.СуммаОборотКт, 0),
		|	ЕСТЬNULL(ПараметрыАмортизации.СчетУчета, 0),
		|	ЕСТЬNULL(ПараметрыАмортизации.СчетУчета.ПарныйСчет, 0),
		|	ПараметрыАмортизации.СпособОтраженияРасходовПоАмортизации,
		|	ЕСТЬNULL(ВТ_СтоимостьОСНГ.СтоимостьНаНачалоГода, 0),
		|	ЕСТЬNULL(ВТ_ПринятыеКУчету.Период, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)),
		|	ЕСТЬNULL(ВТ_СнятыеСУчета.Период, ДОБАВИТЬКДАТЕ(ЕСТЬNULL(ВТ_ПринятыеКУчету.Период, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), МЕСЯЦ, ПараметрыАмортизации.СрокСлужбы)),
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.СчетЗатрат,
		|	АмортизацияОС_БУ.СуммаНачальныйОстатокКт,
		|	ПараметрыАмортизации.НормаАмортизации,
		|	АмортизацияОС_БУ.СуммаКонечныйОстатокКт,
		|	ПараметрыАмортизации.ИнвентарныйНомер
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|			&КонецПериода,
		|			Организация = &Организация
		|				И ОсновноеСредство В (&ОсновноеСредство)) КАК ПараметрыАмортизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьОСНГ КАК ВТ_СтоимостьОСНГ
		|		ПО ПараметрыАмортизации.ОсновноеСредство = ВТ_СтоимостьОСНГ.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СнятыеСУчета КАК ВТ_СнятыеСУчета
		|		ПО ПараметрыАмортизации.ОсновноеСредство = ВТ_СнятыеСУчета.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , , &СубконтоОС, Организация = &Организация) КАК СтоимостьОС_БУ
		|		ПО ПараметрыАмортизации.ОсновноеСредство = СтоимостьОС_БУ.Субконто1
		|			И ПараметрыАмортизации.СчетУчета = СтоимостьОС_БУ.Счет
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Авто, , , &СубконтоОС, Организация = &Организация) КАК АмортизацияОС_БУ
		|		ПО ПараметрыАмортизации.ОсновноеСредство = АмортизацияОС_БУ.Субконто1
		|			И ПараметрыАмортизации.СчетУчета.ПарныйСчет = АмортизацияОС_БУ.Счет
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияРасходовПоАмортизации КАК СпособыОтраженияРасходовПоАмортизацииСпособы
		|		ПО ПараметрыАмортизации.СпособОтраженияРасходовПоАмортизации = СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПринятыеКУчету КАК ВТ_ПринятыеКУчету
		|		ПО ПараметрыАмортизации.ОсновноеСредство = ВТ_ПринятыеКУчету.ОсновноеСредство
		|ГДЕ
		|	ПараметрыАмортизации.СпособНачисленияАмортизации <> &НеНачислять
		|	И ПараметрыАмортизации.Организация = &Организация
		|	И ВТ_СнятыеСУчета.ОсновноеСредство ЕСТЬ NULL 
		|	И НЕ(МЕСЯЦ(ЕСТЬNULL(ВТ_СнятыеСУчета.Период, ДОБАВИТЬКДАТЕ(ЕСТЬNULL(ВТ_ПринятыеКУчету.Период, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), МЕСЯЦ, ПараметрыАмортизации.СрокСлужбы))) = МЕСЯЦ(&НачалоПериода)
		|				И ГОД(ЕСТЬNULL(ВТ_СнятыеСУчета.Период, ДОБАВИТЬКДАТЕ(ЕСТЬNULL(ВТ_ПринятыеКУчету.Период, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), МЕСЯЦ, ПараметрыАмортизации.СрокСлужбы))) = ГОД(&НачалоПериода))
		|	И ПараметрыАмортизации.ПервоначальнаяСтоимость - ЕСТЬNULL(АмортизацияОС_БУ.СуммаКонечныйОстатокКт, 0) - ПараметрыАмортизации.ЛиквидационнаяСтоимость > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОсновноеСредство,
		|	Период
		|ИТОГИ
		|	МАКСИМУМ(СрокИспользованияДляВычисленияАмортизации),
		|	МАКСИМУМ(СтоимостьДляВычисленияАмортизации),
		|	МАКСИМУМ(ОбъемПродукцииРабот),
		|	МИНИМУМ(Период),
		|	МАКСИМУМ(КоэффициентУскорения),
		|	МАКСИМУМ(ЛиквидационнаяСтоимость),
		|	МАКСИМУМ(СпособНачисленияАмортизации),
		|	МАКСИМУМ(СтоимостьНачальныйОстаток),
		|	МАКСИМУМ(СтоимостьКонечныйОстаток),
		|	МАКСИМУМ(АмортизацияКонечныйОстаток),
		|	МАКСИМУМ(АмортизацияОборот),
		|	МАКСИМУМ(СчетУчета),
		|	МАКСИМУМ(СчетНачисленияАмортизацииБУ),
		|	МАКСИМУМ(СпособОтраженияРасходовПоАмортизации),
		|	МАКСИМУМ(СтоимостьНаНачалоГода),
		|	МАКСИМУМ(ДатаПринятияКУчету),
		|	МАКСИМУМ(ДатаСнятияСУчета),
		|	МАКСИМУМ(СчетРасходовАО),
		|	МАКСИМУМ(АмортизацияНачальныйОстаток),
		|	МАКСИМУМ(НормаАмортизации),
		|	МАКСИМУМ(НакопленнаяАмортизация),
		|	МАКСИМУМ(ИнвентарныйНомер)
		|ПО
		|	ОсновноеСредство
		|АВТОУПОРЯДОЧИВАНИЕ";
 
	Если ОсновноеСредство = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ОсновноеСредство В (&ОсновноеСредство)", "");
	Иначе		
		Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
	Конецесли;
	
	Отказ = Ложь;
	
	ГлавнаяВыборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ГлавнаяВыборка.Следующий() Цикл
		СуммаАмортизации = 0;
		ДеньПредпоследнейДаты = ?(НачалоМесяца(ГлавнаяВыборка.ДатаПринятияКУчету) = НачалоМесяца(ДатаРасчета), День(ГлавнаяВыборка.ДатаПринятияКУчету) - 1, 0);
		
		Если НЕ ЗначениеЗаполнено(ГлавнаяВыборка.СчетНачисленияАмортизацииБУ) Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Бух. расчет амортизации: для основного средства ""%1"" не указан счет для начисления амортизации.'"),
				ГлавнаяВыборка.ОсновноеСредство);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ГлавнаяВыборка.СтоимостьДляВычисленияАмортизации) Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Бух. расчет амортизации: для основного средства ""%1"" стоимость для вычисления амортизации равна 0.'"),
				ГлавнаяВыборка.ОсновноеСредство);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ГлавнаяВыборка.СрокИспользованияДляВычисленияАмортизации) Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Бух. расчет амортизации: для основного средства ""%1"" срок использования для вычисления амортизации равна 0.'"),
				ГлавнаяВыборка.ОсновноеСредство);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
			Продолжить;
		КонецЕсли;
		
		Если ГлавнаяВыборка.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.ПоНормеАО Тогда
			СуммаАмортизации = ГлавнаяВыборка.НормаАмортизации;
			
		ИначеЕсли ГлавнаяВыборка.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.Линейный 
			ИЛИ ГлавнаяВыборка.СпособНачисленияАмортизации.Пустая() Тогда
			
			СуммаГодовойАмортизации = ГлавнаяВыборка.СтоимостьДляВычисленияАмортизации/ГлавнаяВыборка.СрокИспользованияДляВычисленияАмортизации * 12;
			Если УПП.РасчетАмортизационныхОтчисленийПоМесяцам Тогда
				//Расчет амортизации по месяцам	
				Если (НачалоМесяца(ГлавнаяВыборка.ДатаПринятияКУчету) = НачалоМесяца(ДатаРасчета) И День(ГлавнаяВыборка.ДатаПринятияКУчету) <= 15) 
					ИЛИ (НачалоМесяца(ГлавнаяВыборка.ДатаСнятияСУчета) = НачалоМесяца(ДатаРасчета) И День(ГлавнаяВыборка.ДатаСнятияСУчета) > 15)
				    ИЛИ (НачалоМесяца(ГлавнаяВыборка.ДатаПринятияКУчету) <> НачалоМесяца(ДатаРасчета) И НачалоМесяца(ГлавнаяВыборка.ДатаСнятияСУчета) <> НачалоМесяца(ДатаРасчета)
					И (НачалоМесяца(ДатаРасчета) < НачалоМесяца(ГлавнаяВыборка.ДатаСнятияСУчета))) Тогда
					
				    СуммаАмортизации = Окр(СуммаГодовойАмортизации / 12, 2);
				КонецЕсли;				
				
			Иначе
				ВыборкаПоОС = ГлавнаяВыборка.Выбрать();				
				Пока ВыборкаПоОС.Следующий() Цикл
					СуммаАмортизации = СуммаАмортизации + СуммаГодовойАмортизации / 12 / День(КонецМесяца(ДатаРасчета)) * (День(ВыборкаПоОС.Период) - ДеньПредпоследнейДаты );
					ДеньПредпоследнейДаты = День(ВыборкаПоОС.Период);
				КонецЦикла;							
			КонецЕсли;
												
		ИначеЕсли ГлавнаяВыборка.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.Производственный Тогда
			
			Если НЕ ЗначениеЗаполнено(ГлавнаяВыборка.Количество) Тогда
				Продолжить;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ГлавнаяВыборка.ОбъемПродукцииРаботДляВычисленияАмортизации) Тогда
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Бух. расчет амортизации: для основного средства ""%1"" объем продукции для вычисления не определен.'"),
					ГлавнаяВыборка.ОсновноеСредство);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
				Продолжить;
			КонецЕсли;
			
			СуммаАмортизации = ГлавнаяВыборка.СтоимостьДляВычисленияАмортизации * ГлавнаяВыборка.Количество / ГлавнаяВыборка.ОбъемПродукцииРаботДляВычисленияАмортизации;
			
		ИначеЕсли ГлавнаяВыборка.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка Тогда
			КоэффициентУскорения	= ГлавнаяВыборка.КоэффициентУскорения;
			Если КоэффициентУскорения <=0 Тогда 
				КоэффициентУскорения = 2;
			КонецЕсли;
			СуммаАмортизации = ((ГлавнаяВыборка.СтоимостьДляВычисленияАмортизации - ГлавнаяВыборка.АмортизацияКонечныйОстаток)/ГлавнаяВыборка.СрокИспользованияДляВычисленияАмортизации) * КоэффициентУскорения;
			
		ИначеЕсли ГлавнаяВыборка.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛет Тогда
			
			// Дата последнего изменения параметров
			Если ГлавнаяВыборка.Период = Null Тогда
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Бух. расчет амортизации: для основного средства ""%1"" не определилась дата начала использования (изменения параметров).'"),
					ГлавнаяВыборка.ОсновноеСредство);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
				Продолжить;
			КонецЕсли; 
			
			ДатаНачалаРасчета = НачалоМесяца(ДобавитьМесяц(ГлавнаяВыборка.Период,1));
			
			ЧислоЛетПользования       = ГлавнаяВыборка.СрокИспользованияДляВычисленияАмортизации / 12;
			ЧислоЛетПользования       = Цел(Макс( 1, ЧислоЛетПользования));
			СуммаЧислеЛет             = 0;
			ГодИспользования          = Год(ДатаРасчета) - Год(ДатаНачалаРасчета);
			ГодовщинаНачалаИспользования = Дата(Год(ДатаРасчета), Месяц(ДатаНачалаРасчета), День(ДатаНачалаРасчета));
			
			Если КонецМесяца(ДатаРасчета) >= КонецМесяца(ГодовщинаНачалаИспользования) Тогда
				ГодИспользования = ГодИспользования + 1;
			КонецЕсли;    
			
			ГодИспользования = Макс(ГодИспользования,1);
			
			// Формула суммы чисел от 1 до N
			//		S = (N + 1) * N / 2
			СуммаЧислеЛет = (ЧислоЛетПользования + 1) * ЧислоЛетПользования / 2;
			
			ПроцентГодовойАмортизации	= Макс((ЧислоЛетПользования - ГодИспользования + 1),1) / СуммаЧислеЛет;
			СуммаГодовойАмортизации		= ГлавнаяВыборка.СтоимостьДляВычисленияАмортизации * ПроцентГодовойАмортизации;
			
			СуммаАмортизации		= СуммаГодовойАмортизации / 12;
			
		КонецЕсли;
		
		Если СуммаАмортизации = 0 Тогда
			Продолжить
			
		КонецЕсли;
		
		СуммаАмортизации = Окр(СуммаАмортизации, 2);
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ОС", ГлавнаяВыборка.ОсновноеСредство);
		МассивСтрок = ТаблицаАмортизации.НайтиСтроки(ПараметрыОтбора);
		Если МассивСтрок.Количество() = 0 Тогда
			СтрокаАмортизации						= ТаблицаАмортизации.Добавить();
			СтрокаАмортизации.Бух					= СуммаАмортизации;
		Иначе
			СтрокаАмортизации						= МассивСтрок[0];
			СтрокаАмортизации.Бух               	= СтрокаАмортизации.Бух + СуммаАмортизации;			
		КонецЕсли;						
		СтрокаАмортизации.ОС						= ГлавнаяВыборка.ОсновноеСредство;
		СтрокаАмортизации.СчетУчета					= ГлавнаяВыборка.СчетУчета;
		СтрокаАмортизации.СчетРасходовАО			= ГлавнаяВыборка.СчетРасходовАО;
		СтрокаАмортизации.СчетАмортизацииБУ			= ГлавнаяВыборка.СчетНачисленияАмортизацииБУ;
		СтрокаАмортизации.СпособОтраженияРасходовПоАмортизации	= ГлавнаяВыборка.СпособОтраженияРасходовПоАмортизации;
		СтрокаАмортизации.ЛиквидационнаяСтоимость	= ГлавнаяВыборка.ЛиквидационнаяСтоимость;
		СтрокаАмортизации.НакопленнаяАмортизация  	= ГлавнаяВыборка.НакопленнаяАмортизация;
		СтрокаАмортизации.СрокСлужбы  				= ГлавнаяВыборка.СрокИспользованияДляВычисленияАмортизации;
		СтрокаАмортизации.НормаАмортизации			= ГлавнаяВыборка.НормаАмортизации;
		СтрокаАмортизации.ИнвентарныйНомер			= ГлавнаяВыборка.ИнвентарныйНомер;
		
		СтрокаАмортизации.СтоимостьДляВычисленияАмортизации = ГлавнаяВыборка.СтоимостьДляВычисленияАмортизации;
					
		СтрокаАмортизации.Бух = Мин(СтрокаАмортизации.Бух, ГлавнаяВыборка.СтоимостьДляВычисленияАмортизации - ГлавнаяВыборка.АмортизацияКонечныйОстаток - ГлавнаяВыборка.ЛиквидационнаяСтоимость);
		
	КонецЦикла;

	Возврат ТаблицаАмортизации;	
		
КонецФункции // РасчетАмортизацииБухРегл()

// Расчитывает сумму амортизации по указаному основному средству
//
// Параметры:
//  Период				 - Дата	 - дата расчета амортизации
//  Организация			 - СправочникСсылка.Организации	- Организация для отбора
//  ОсновноеСредство	 - СправочникСсылка.ОсновныеСредства - ОсновноеСредство для отбора
// 
// Возвращаемое значение:
//  СуммаАмортизации - Число
//
Функция РасчетАмортизации(Период, Организация, ОсновноеСредство = Неопределено) Экспорт
	АмортизацияЗаМесяц = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыУчетаОССрезПоследних.ОсновноеСредство,
		|	ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.СрокСлужбы,
		|	ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации,
		|	ПараметрыУчетаОССрезПоследних.НормаАмортизации,
		|	ДЕНЬ(&Период) КАК КоличествоДнейВМесяце,
		|	ВЫБОР
		|		КОГДА ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоНормеАО)
		|			ТОГДА ПараметрыУчетаОССрезПоследних.НормаАмортизации
		|		КОГДА ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Линейный)
		|				И НЕ ПараметрыУчетаОССрезПоследних.СрокСлужбы = 0
		|			ТОГДА ВЫРАЗИТЬ((ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость - ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость) / ПараметрыУчетаОССрезПоследних.СрокСлужбы / ДЕНЬ(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)) * ДЕНЬ(&Период) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК АмортизацияЗаМесяц
		|ПОМЕСТИТЬ ВременнаяТаблицаПараметрыУчетаОС
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И ОсновноеСредство = &ОсновноеСредство) КАК ПараметрыУчетаОССрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УчетнаяПолитикаОрганизацийСрезПоследних.РасчетАмортизационныхОтчисленийПоМесяцам
		|ПОМЕСТИТЬ ВременнаяТаблицаПараметрыУПП
		|ИЗ
		|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Период, Организация = &Организация) КАК УчетнаяПолитикаОрганизацийСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаПараметрыУчетаОС.ОсновноеСредство,
		|	ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость,
		|	ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость,
		|	ВременнаяТаблицаПараметрыУчетаОС.СрокСлужбы,
		|	ВременнаяТаблицаПараметрыУчетаОС.СпособНачисленияАмортизации,
		|	ВременнаяТаблицаПараметрыУчетаОС.НормаАмортизации,
		|	ВременнаяТаблицаПараметрыУчетаОС.КоличествоДнейВМесяце,
		|	ХозрасчетныйОстатки.Счет КАК СчетАмортизации,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаПараметрыУПП.РасчетАмортизационныхОтчисленийПоМесяцам
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйОстатки.СуммаОстатокКт >= ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость
		|						ТОГДА 0
		|					КОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ХозрасчетныйОстатки.СуммаОстатокКт < ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|						ТОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ХозрасчетныйОстатки.СуммаОстатокКт
		|					ИНАЧЕ ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВременнаяТаблицаПараметрыУчетаОС.СпособНачисленияАмортизации <> ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоНормеАО)
		|					ТОГДА ВЫБОР
		|							КОГДА ХозрасчетныйОстатки.СуммаОстатокКт >= ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость
		|								ТОГДА 0
		|							КОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ХозрасчетныйОстатки.СуммаОстатокКт < ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|								ТОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ХозрасчетныйОстатки.СуммаОстатокКт
		|							ИНАЧЕ ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|						КОНЕЦ
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ДЕНЬ(КОНЕЦПЕРИОДА(&НачалоМесяца, ДЕНЬ))  = 1
		|							ТОГДА 0
		|						ИНАЧЕ ВЫРАЗИТЬ(ВЫБОР
		|									КОГДА ХозрасчетныйОстатки.СуммаОстатокКт >= ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость
		|										ТОГДА 0
		|									КОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ХозрасчетныйОстатки.СуммаОстатокКт < ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|										ТОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ХозрасчетныйОстатки.СуммаОстатокКт
		|									ИНАЧЕ ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|								КОНЕЦ * ДЕНЬ(КОНЕЦПЕРИОДА(&Период, ДЕНЬ)) / ДЕНЬ(КОНЕЦПЕРИОДА(&ПЕриод, МЕСЯЦ)) КАК ЧИСЛО(15, 2))
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК АмортизацияЗаМесяц
		|ИЗ
		|	ВременнаяТаблицаПараметрыУчетаОС КАК ВременнаяТаблицаПараметрыУчетаОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
		|				&Период,
		|				,
		|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|				Организация = &Организация
		|					И Субконто1 = &ОсновноеСредство) КАК ХозрасчетныйОстатки
		|		ПО ВременнаяТаблицаПараметрыУчетаОС.ОсновноеСредство = ХозрасчетныйОстатки.Субконто1
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметрыУПП КАК ВременнаяТаблицаПараметрыУПП
		|		ПО (ИСТИНА)";
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("НачалоМесяца", Период + 1);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
	 	АмортизацияЗаМесяц = ВыборкаДетальныеЗаписи.АмортизацияЗаМесяц;		
	КонецЕсли;
	
	Возврат АмортизацияЗаМесяц;	
КонецФункции // РасчетАмортизации()

// Расчитывает сумму амортизации по указаному основному средству
//
// Параметры:
//  ДокументСсылка			- Ссылка - ссылка на документ
//  Период 					- Дата - дата расчета амортизации
//  Организация				- СправочникСсылка.Организации	- Организация для отбора
//  ТабличнаяЧасть 			- ТабличнаяЧасть - табличная часть объекта
// 		* ОсновноеСредство 		- СправочникСсылка.ОсновныеСредства
// 		* АмортизацияЗаМесяц 	- Число
//  МассивОсновныхСредств 	- Массив - ОсновноеСредство для отбора
//
Процедура ЗаполнитьДанныеОсновныхСредствВТабличнойЧасти(ДокументСсылка, Период, Организация, ТабличнаяЧасть, МассивОсновныхСредств = Неопределено) Экспорт
	Если МассивОсновныхСредств = Неопределено Тогда 
		МассивОсновныхСредств = ТабличнаяЧасть.Выгрузить().ВыгрузитьКолонку("ОсновноеСредство");
	КонецЕсли;	
	
	// 1. Остаточная стоимость
	// 2. Накопленная амортизация
	// 3. Параметры учета
	// 4. Расчет амортизации
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетнаяПолитикаОрганизацийСрезПоследних.РасчетАмортизационныхОтчисленийПоМесяцам
		|ПОМЕСТИТЬ ВременнаяТаблицаУПП
		|ИЗ
		|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Период, Организация = &Организация) КАК УчетнаяПолитикаОрганизацийСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1 КАК ОсновноеСредство,
		|	ХозрасчетныйОстатки.СуммаОстатокДт КАК БалансоваяСтоимость,
		|	0 КАК НакопленнаяАмортизация,
		|	ХозрасчетныйОстатки.Счет
		|ПОМЕСТИТЬ ВременнаяТаблицаОстатки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			,
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация = &Организация
		|				И Субконто1 В (&МассивОсновныхСредств)) КАК ХозрасчетныйОстатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1,
		|	0,
		|	ХозрасчетныйОстатки.СуммаОстатокКт,
		|	ХозрасчетныйОстатки.Счет
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			,
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация = &Организация
		|				И Субконто1 В (&МассивОсновныхСредств)) КАК ХозрасчетныйОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОстатки.ОсновноеСредство,
		|	СУММА(ВременнаяТаблицаОстатки.БалансоваяСтоимость - ВременнаяТаблицаОстатки.НакопленнаяАмортизация) КАК ОстаточнаяСтоимость,
		|	СУММА(ВременнаяТаблицаОстатки.НакопленнаяАмортизация) КАК НакопленнаяАмортизация
		|ПОМЕСТИТЬ ВременнаяТаблицаОстаткиГруппировка
		|ИЗ
		|	ВременнаяТаблицаОстатки КАК ВременнаяТаблицаОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаОстатки.ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПараметрыУчетаОССрезПоследних.ОсновноеСредство,
		|	ПараметрыУчетаОССрезПоследних.ИнвентарныйНомер,
		|	ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.СрокСлужбы,
		|	ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации,
		|	ПараметрыУчетаОССрезПоследних.СпособОтраженияРасходовПоАмортизации,
		|	ПараметрыУчетаОССрезПоследних.НормаАмортизации,
		|	ДЕНЬ(&Период) КАК КоличествоДнейВМесяце,
		|	ВЫБОР
		|		КОГДА ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоНормеАО)
		|				И НЕ ПараметрыУчетаОССрезПоследних.СрокСлужбы = 0
		|			ТОГДА ВЫБОР
		|					КОГДА ВременнаяТаблицаУПП.РасчетАмортизационныхОтчисленийПоМесяцам
		|						ТОГДА ПараметрыУчетаОССрезПоследних.НормаАмортизации
		|					ИНАЧЕ ВЫРАЗИТЬ(ПараметрыУчетаОССрезПоследних.НормаАмортизации / ДЕНЬ(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)) * (ДЕНЬ(&Период) - 1) КАК ЧИСЛО(15, 2))
		|				КОНЕЦ
		|		КОГДА ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Линейный)
		|				И НЕ ПараметрыУчетаОССрезПоследних.СрокСлужбы = 0
		|			ТОГДА ВЫРАЗИТЬ((ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость - ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость) / ПараметрыУчетаОССрезПоследних.СрокСлужбы / ДЕНЬ(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)) * (ДЕНЬ(&Период) - 1) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК АмортизацияЗаМесяц,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета
		|ПОМЕСТИТЬ ВременнаяТаблицаПараметрыУчетаОС
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|			&Период,
		|			НЕ Регистратор = &Ссылка
		|				И Организация = &Организация
		|				И ОсновноеСредство В (&МассивОсновныхСредств)) КАК ПараметрыУчетаОССрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаУПП КАК ВременнаяТаблицаУПП
		|		ПО (ИСТИНА)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаПараметрыУчетаОС.ОсновноеСредство,
		|	ВременнаяТаблицаПараметрыУчетаОС.ИнвентарныйНомер,
		|	ВременнаяТаблицаПараметрыУчетаОС.СчетУчета,
		|	ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость,
		|	ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость,
		|	ВременнаяТаблицаПараметрыУчетаОС.СрокСлужбы,
		|	ВременнаяТаблицаПараметрыУчетаОС.СпособНачисленияАмортизации,
		|	ВременнаяТаблицаПараметрыУчетаОС.СпособОтраженияРасходовПоАмортизации,
		|	ВременнаяТаблицаПараметрыУчетаОС.НормаАмортизации,
		|	ВременнаяТаблицаПараметрыУчетаОС.КоличествоДнейВМесяце,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОстаткиГруппировка.НакопленнаяАмортизация >= ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость
		|			ТОГДА 0
		|		КОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ВременнаяТаблицаОстаткиГруппировка.НакопленнаяАмортизация < ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|			ТОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ВременнаяТаблицаОстаткиГруппировка.НакопленнаяАмортизация
		|		ИНАЧЕ ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|	КОНЕЦ КАК АмортизацияЗаМесяц,
		|	ВременнаяТаблицаОстаткиГруппировка.ОстаточнаяСтоимость,
		|	ВременнаяТаблицаОстаткиГруппировка.НакопленнаяАмортизация
		|ИЗ
		|	ВременнаяТаблицаПараметрыУчетаОС КАК ВременнаяТаблицаПараметрыУчетаОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОстаткиГруппировка КАК ВременнаяТаблицаОстаткиГруппировка
		|		ПО ВременнаяТаблицаПараметрыУчетаОС.ОсновноеСредство = ВременнаяТаблицаОстаткиГруппировка.ОсновноеСредство";
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("МассивОсновныхСредств", МассивОсновныхСредств);

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл  
		СтрокиТабличнойЧасти = ТабличнаяЧасть.НайтиСтроки(Новый Структура("ОсновноеСредство", ВыборкаДетальныеЗаписи.ОсновноеСредство));
		Для Каждого СтрокаТабличнойЧасти Из СтрокиТабличнойЧасти Цикл
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ВыборкаДетальныеЗаписи);	
		КонецЦикла;		
	КонецЦикла;
КонецПроцедуры // ЗаполнитьДанныеОсновныхСредствВТабличнойЧасти()

// Функция получает таблицу значений с указанием списка ОС или НМА и сумм амортизации
//  возвращает таблицу значений с распределенными значениями амортизации
//
// Параметры:
//  ДокОбъект		 - 	 - 
//  Отказ			 - 	 - 
//  Заголовок		 - 	 - 
//  ТабАмортизации	 - 	 - 
//  Организация		 - 	 - 
//  ТипУчета		 - 	 - 
//  НомерЖурнала	 - 	 - 
//  ТекстПроводки	 - 	 - 
// 
// Возвращаемое значение:
//   - 
//
Функция ПолучитьРаспределениеАмортизацииПоНаправлениямРегл(ДокОбъект, Отказ, Заголовок, ТабАмортизации, Организация, ТипУчета, НомерЖурнала, ТекстПроводки = Неопределено) Экспорт 
	
	ДатаРасчета = ДокОбъект.Дата;
	
	// определим структуру выходной таблицы 	
	Массив = Новый Массив;
	
	Массив.Добавить(Тип("Число"));
	КвалификаторЧисла = Новый КвалификаторыЧисла(15, 2); 
	
	ТабЗатрат = Новый ТаблицаЗначений;
	ТабЗатрат.Колонки.Добавить("Сумма", 				 Новый ОписаниеТипов(Массив, КвалификаторЧисла)); 
	ТабЗатрат.Колонки.Добавить("СчетЗатрат", 			 Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТабЗатрат.Колонки.Добавить("СчетАмортизации", 		 Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТабЗатрат.Колонки.Добавить("СчетУчета", 			 Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТабЗатрат.Колонки.Добавить("ОсновноеСредство", 			 Новый ОписаниеТипов("СправочникСсылка.ОсновныеСредства"));
	ТабЗатрат.Колонки.Добавить("ИнвентарныйНомер");	
	ТабЗатрат.Колонки.Добавить("Субконто1", 			 Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные"));                      
	ТабЗатрат.Колонки.Добавить("Субконто2", 			 Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные"));
	ТабЗатрат.Колонки.Добавить("Субконто3", 			 Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные"));
	ТабЗатрат.Колонки.Добавить("СпособОтраженияРасходовПоАмортизации", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияРасходовПоАмортизации"));

	ТабЗатрат.Колонки.Добавить("ВходитВСостав", Новый ОписаниеТипов("Булево"));
	ТабЗатрат.Колонки.Добавить("ЭтоКомплект", 	Новый ОписаниеТипов("Булево"));
	ТабЗатрат.Колонки.Добавить("Комплект", 		Новый ОписаниеТипов("СправочникСсылка.ОсновныеСредства"));
	ТабЗатрат.Колонки.Добавить("ПоследнийМесяцНачисления", Новый ОписаниеТипов("Булево"));
	
	МассивКоэф = Новый Массив;
	
	// цикл по Объектам из ТабАмортизации
	Для Каждого СтрокаТЗ Из ТабАмортизации Цикл
		
		Если СтрокаТЗ.Сумма=0 тогда
			//Распределять амортизацию не надо, так как распределять нечего.
			Продолжить;
		КонецЕсли;
		
		Если не ЗначениеЗаполнено(СтрокаТЗ.СпособОтраженияРасходовПоАмортизации) Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаТЗ.СпособОтраженияРасходовПоАмортизации.Способы.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		МассивКоэф.Очистить();
		Для Каждого СтрокаНапр Из СтрокаТЗ.СпособОтраженияРасходовПоАмортизации.Способы Цикл
			МассивКоэф.Добавить(СтрокаНапр.Коэффициент);
		КонецЦикла;
		
		МассивСумм = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаТЗ.Сумма, МассивКоэф);
		Если МассивСумм = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если МассивСумм.Количество() <> МассивКоэф.Количество() Тогда
			Продолжить;
		КонецЕсли;
		
		
		Для Каждого СтрокаНапр Из СтрокаТЗ.СпособОтраженияРасходовПоАмортизации.Способы Цикл
			НоваяСтрока = ТабЗатрат.Добавить();
			НоваяСтрока.СчетЗатрат		= СтрокаНапр.СчетЗатрат;
			
			// заполнение колонки счет затрат в док. Закрытие месяца
			Если НЕ ТабАмортизации.Колонки.Найти("СчетЗатрат") = НЕопределено Тогда 
				СтрокаТЗ.СчетЗатрат = СтрокаНапр.СчетЗатрат;
			КонецЕсли;
			
			Если НЕ ТабАмортизации.Колонки.Найти("СпособОтраженияРасходовПоАмортизации") = НЕопределено Тогда 
				
				НоваяСтрока.СпособОтраженияРасходовПоАмортизации = СтрокаТЗ.СпособОтраженияРасходовПоАмортизации;
			КонецЕсли;
						
			НоваяСтрока.ОсновноеСредство		= СтрокаТЗ.ОсновноеСредство;
			НоваяСтрока.ИнвентарныйНомер= СтрокаТЗ.ИнвентарныйНомер;
			НоваяСтрока.СчетАмортизации	= СтрокаТЗ.СчетАмортизации;
			НоваяСтрока.СчетУчета		= СтрокаТЗ.СчетУчета;
			НоваяСтрока.Субконто1		= СтрокаНапр.Субконто1;
			НоваяСтрока.Субконто2		= СтрокаНапр.Субконто2;
			НоваяСтрока.Субконто3		= СтрокаНапр.Субконто3;  			
						
			НоваяСтрока.Сумма			= МассивСумм[СтрокаНапр.НомерСтроки - 1];
		КонецЦикла;
				
		Если НЕ ТабАмортизации.Колонки.НАйти("ЭтоКомплект") = Неопределено Тогда 
			НоваяСтрока.ЭтоКомплект		= СтрокаТЗ.ЭтоКомплект;
		КонецЕсли;
				
		Если НЕ ТабАмортизации.Колонки.НАйти("ПоследнийМесяцНачисления") = Неопределено Тогда 
			НоваяСтрока.ПоследнийМесяцНачисления = СтрокаТЗ.ПоследнийМесяцНачисления;
		КонецЕсли;
	КонецЦикла;    
	
	Возврат ТабЗатрат;
	
КонецФункции // ПолучитьРаспределениеАмортизацииПоНаправлениямРегл()

// Функция - Получить параметры учета ОС
//
// Параметры:
//  Период			 - Дата	 								- дата, на которую нужно получить сведения
//  Организация		 - СправочникСсылка.Организации	 		- организация для отбора
//  ОсновноеСредство - СправочникСсылка.ОсновноеСредство	- основное средство для отбора
// 
// Возвращаемое значение:
//  ПараметрыУчетаОС - Структура с параметрами 
//
Функция ПолучитьПараметрыУчетаОС(Период, Организация, ОсновноеСредство) Экспорт
	
	ПараметрыОтбора = Новый Структура("Организация, ОсновноеСредство",  Организация, ОсновноеСредство);
	ПараметрыУчетаОС = РегистрыСведений.ПараметрыУчетаОС.ПолучитьПоследнее(Период, ПараметрыОтбора);
	ПараметрыУчетаОС.Вставить("СчетРасходовПоИзносу", ПараметрыУчетаОС.СпособОтраженияРасходовПоАмортизации.СчетЗатрат);
	
	ПараметрыУчетаОС.Вставить("ОстаточнаяСтоимость", 0);
	ПараметрыУчетаОС.Вставить("НакопленнаяАмортизация", 0);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1 КАК ОсновноеСредство,
		|	ХозрасчетныйОстатки.СуммаОстатокДт КАК ОстаточнаяСтоимость,
		|	0 КАК НакопленнаяАмортизация,
		|	ХозрасчетныйОстатки.Счет
		|ПОМЕСТИТЬ ВременнаяТаблицаОстатки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			,
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация = &Организация
		|				И Субконто1 = &ОсновноеСредство) КАК ХозрасчетныйОстатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1,
		|	0,
		|	ХозрасчетныйОстатки.СуммаОстатокКт,
		|	ХозрасчетныйОстатки.Счет
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			,
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация = &Организация
		|				И Субконто1 = &ОсновноеСредство) КАК ХозрасчетныйОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОстатки.ОсновноеСредство,
		|	СУММА(ВременнаяТаблицаОстатки.ОстаточнаяСтоимость) КАК ОстаточнаяСтоимость,
		|	СУММА(ВременнаяТаблицаОстатки.НакопленнаяАмортизация) КАК НакопленнаяАмортизация
		|ИЗ
		|	ВременнаяТаблицаОстатки КАК ВременнаяТаблицаОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаОстатки.ОсновноеСредство";
	Запрос.УстановитьПараметр("Период",							Период);
	Запрос.УстановитьПараметр("Организация",       				Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство",  				ОсновноеСредство);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	// Обход выборки
	Если Выборка.Следующий() Тогда 
		ЗаполнитьЗначенияСвойств(ПараметрыУчетаОС, Выборка);
	КонецЕсли; 
	
	Возврат ПараметрыУчетаОС;
КонецФункции // ОпределитьСтоимостьПоСпискуОС()

