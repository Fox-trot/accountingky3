
#Область ПрограммныйИнтерфейс

// Функция - Получить ставку НДС
//
// Параметры:
//  Период		 - дата	- дата на которую нужно получить значения ставки
//  СтавкаНДС	 - СправочникСсылка.СтавкиНДС - ссылка на справочник ставки НДС
// Возвращаемое значение:
//   - число - размер ставки
Функция ПолучитьСтавкуНДС(Период, СтавкаНДС) Экспорт
	Возврат УчетНДСПовтИсп.ПолучитьСтавкуНДС(НачалоМесяца(Период), СтавкаНДС);
КонецФункции // ПолучитьСтавкуНДС()

// Функция - Получить ставку НСП
//
// Параметры:
//  Период		 - дата	- дата на которую нужно получить значения ставки
//  Организация	 - СправочникСсылка.Организации - ссылка на справочник Организация
//  СтавкаНСП	 - СправочникСсылка.СтавкаНСП - ссылка на справочник ставки НСП
// Возвращаемое значение:
//   - число - размер ставки
Функция ПолучитьСтавкуНСП(Период, Организация, СтавкаНСП) Экспорт
	Возврат УчетНДСПовтИсп.ПолучитьСтавкуНСП(НачалоМесяца(Период), Организация, СтавкаНСП);
КонецФункции // ПолучитьСтавкуНСП()  

// Функция - Получить значения ставок НДС и НСП
//
// Параметры:
//  Период		- Дата - дата на которую нужно получить значения ставки
//  Контрагент	- СправочникСсылка.Контрагенты	- ссылка на справочник Контрагент
//  Договор	 	- СправочникСсылка.ДоговорыКонтрагентов	- ссылка на справочник Договоры контрагентов
// 
// Возвращаемое значение:
//   - Структура 
//		* ЗначениеСтавкиНДС - число
//		* ЗначениеСтавкиНСП - число
//
Функция ПолучитьЗначенияСтавокНДСиНСП(Период, Контрагент, Договор) Экспорт
	
	СтруктураДанные = Новый Структура("ЗначениеСтавкиНДС, ЗначениеСтавкиНСП", 0, 0);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗначениеСтавокНалоговНДСиНСПСрезПоследних.ЗначениеСтавкиНДС КАК ЗначениеСтавкиНДС,
		|	ЗначениеСтавокНалоговНДСиНСПСрезПоследних.ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП
		|ИЗ
		|	РегистрСведений.ЗначенияСтавокНалоговНДСиНСП.СрезПоследних(
		|			&Период,
		|			Контрагент = &Контрагент
		|				И ДоговорКонтрагента = &Договор) КАК ЗначениеСтавокНалоговНДСиНСПСрезПоследних";
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Договор", Договор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
		ЗаполнитьЗначенияСвойств(СтруктураДанные, ВыборкаДетальныеЗаписи);		
	КонецЕсли;             

	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьЗначенияСтавокНДСиНСП()

// Функция - Расчет всех сумм отчета НДС - как основных сумм, например, "050",
//           так и вспомогательных, например, СуммаДоотгрузки или КоэффициентОсвобожденныхПоставок
//
// Параметры:
//  ВидСуммы	- строка - вид расчета суммы. Например, расчет суммы строки отчета "050" или вспомогательной суммы СуммаДоотгрузки
//  Параметры 	- структура - содержит перечень всех используемых данных для каждого вида расчета суммы.
// Возвращаемое значение:
//   - число 	- значение расчитанной суммы
Функция РасчетСуммыОтчетаНДС(ВидСуммы, Знач Параметры) Экспорт
	СтруктураВозврата = Новый Структура;
	РезультатРасчета = 0;
	ТаблицаРасшифровка = Неопределено;
	
	Если ВидСуммы = "СуммаДоотгрузки" Тогда
		// Параметры.Таблица - табличная часть Доотгрузка
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			Если СтрокаТабличнойЧасти.СтавкаНДС <> Справочники.СтавкиНДС.Нулевая Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.Сумма;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ВидСуммы = "СуммаНДСДоотгрузки" Тогда
		// Параметры.Таблица - табличная часть Доотгрузка
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			Если СтрокаТабличнойЧасти.СтавкаНДС <> Справочники.СтавкиНДС.Нулевая Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.СуммаНДС;
			КонецЕсли;
		КонецЦикла;		
		
	ИначеЕсли ВидСуммы = "СуммаДоотгрузкаНулеваяСтавка" Тогда
		// Параметры.Таблица - табличная часть Доотгрузка 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			Если СтрокаТабличнойЧасти.СтавкаНДС = Справочники.СтавкиНДС.Нулевая Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.Сумма;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ВидСуммы = "СуммаНДСДоотгрузкаНулеваяСтавка" Тогда
		// Параметры.Таблица - табличная часть Доотгрузка 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			Если СтрокаТабличнойЧасти.СтавкаНДС = Справочники.СтавкиНДС.Нулевая Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.СуммаНДС;
			КонецЕсли;
		КонецЦикла;
				
	ИначеЕсли ВидСуммы = "СуммаДоотгрузкаОсвобожденнаяСтавка" Тогда
		// Параметры.Таблица - табличная часть Доотгрузка 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			Если СтрокаТабличнойЧасти.СтавкаНДС = Справочники.СтавкиНДС.Освобожденная Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.Сумма;
			КонецЕсли;
		КонецЦикла;		
						
	ИначеЕсли ВидСуммы = "СуммаНДСДоотгрузкаОсвобожденнаяСтавка" Тогда
		// Параметры.Таблица - табличная часть Доотгрузка 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			Если СтрокаТабличнойЧасти.СтавкаНДС = Справочники.СтавкиНДС.Освобожденная Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.СуммаНДС;
			КонецЕсли;
		КонецЦикла;		
		
	ИначеЕсли ВидСуммы = "СуммаАвансы" Тогда
		// Параметры.Таблица - табличная часть Авансы 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			Если СтрокаТабличнойЧасти.СтавкаНДС <> Справочники.СтавкиНДС.Нулевая Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.Сумма;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ВидСуммы = "СуммаНДСАвансы" Тогда
		// Параметры.Таблица - табличная часть Авансы 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			Если СтрокаТабличнойЧасти.СтавкаНДС <> Справочники.СтавкиНДС.Нулевая Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.СуммаНДС;
			КонецЕсли;
		КонецЦикла;		
		
	ИначеЕсли ВидСуммы = "СуммаАвансыНулеваяСтавка" Тогда
		// Параметры.Таблица - табличная часть Авансы 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			Если СтрокаТабличнойЧасти.СтавкаНДС = Справочники.СтавкиНДС.Нулевая Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.Сумма;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ВидСуммы = "СуммаНДСАвансыНулеваяСтавка" Тогда
		// Параметры.Таблица - табличная часть Авансы 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			Если СтрокаТабличнойЧасти.СтавкаНДС = Справочники.СтавкиНДС.Нулевая Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.СуммаНДС;
			КонецЕсли;
		КонецЦикла;
				
	ИначеЕсли ВидСуммы = "СуммаАвансыОсвобожденнаяСтавка" Тогда
		// Параметры.Таблица - табличная часть Авансы 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			Если СтрокаТабличнойЧасти.СтавкаНДС = Справочники.СтавкиНДС.Освобожденная Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.Сумма;
			КонецЕсли;
		КонецЦикла;		
						
	ИначеЕсли ВидСуммы = "СуммаНДСАвансыОсвобожденнаяСтавка" Тогда
		// Параметры.Таблица - табличная часть Авансы 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			Если СтрокаТабличнойЧасти.СтавкаНДС = Справочники.СтавкиНДС.Освобожденная Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.СуммаНДС;
			КонецЕсли;
		КонецЦикла;		
						
	ИначеЕсли ВидСуммы = "СуммаПродажОбщая" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о реализации 
		РезультатРасчета  = Параметры.Таблица.Итог("СуммаБезНДС") + Параметры.СуммаАвансы - Параметры.СуммаДоотгрузки;		
						
	ИначеЕсли ВидСуммы = "СуммаПродажОсвобожденная" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о реализации
		Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл		
			Если СтрокаТаблицыЗначений.СтавкаНДС = Справочники.СтавкиНДС.Освобожденная Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаБезНДС;
			КонецЕсли;					
		КонецЦикла;		
		 РезультатРасчета = РезультатРасчета + Параметры.СуммаАвансы - Параметры.СуммаДоотгрузки;
						
	 ИначеЕсли ВидСуммы = "КоэффициентРаспределения" Тогда
		КоэффициентОсвобожденныхПоставок = Параметры.КоэффициентОсвобожденныхПоставок;
		Если НЕ Параметры.ВводКоэффициентаОсвобожденныхПоставокВЗакрытииМесяца Тогда
			Если Параметры.СуммаПродажОбщая = 0 Тогда
				КоэффициентОсвобожденныхПоставок = 0;
			Иначе
				КоэффициентОсвобожденныхПоставок = Окр(Параметры.СуммаПродажОсвобожденная / Параметры.СуммаПродажОбщая, 4);
			КонецЕсли;			
		КонецЕсли;
		РезультатРасчета = 1 - ?(КоэффициентОсвобожденныхПоставок < 0.05, 0, КоэффициентОсвобожденныхПоставок);
		
	//Сумма НДС распределение не зачет
	ИначеЕсли ВидСуммы = "НДСРаспределениеНеЗачет" Тогда		
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаБезНДС");
		
		Если Параметры.УказыватьПризнакЗачетаНДСПриПоступлении Тогда 			
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ЗачетНДС = Перечисления.ВидыЗачетаНДС.Распределение Тогда
					СуммаРаспределения = СтрокаТаблицыЗначений.СуммаНДС - Окр(СтрокаТаблицыЗначений.СуммаНДС * Параметры.КоэффициентРаспределения, 2);
					РезультатРасчета = РезультатРасчета + СуммаРаспределения;
				КонецЕсли;
			КонецЦикла;
		Иначе
			// Параметры.Таблица - таблица значений из РС Сведения о поступлении 
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС - Окр(СтрокаТаблицыЗначений.СуммаНДС * Параметры.КоэффициентРаспределения, 2);
				СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
			КонецЦикла;
			
		КонецЕсли;	 
		СтруктураВозврата.Вставить("ТаблицаРасшифровка", 	ТаблицаРасшифровка);		
		
	ИначеЕсли ВидСуммы = "Сумма050" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о реализации
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаБезНДС");
		//КолонкаРегистратор = ТаблицаРасшифровка.Колонки.Найти("Регистратор");
		
		
		Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
			Если НЕ (СтрокаТаблицыЗначений.СтавкаНДС = Справочники.СтавкиНДС.Освобожденная 
				ИЛИ СтрокаТаблицыЗначений.СтавкаНДС = Справочники.СтавкиНДС.Нулевая) Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаБезНДС;
				СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);				
			КонецЕсли;
		КонецЦикла;
		СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
		СтрокаРасшифровки.Регистратор = "Авансы";
		СтрокаРасшифровки.СуммаБезНДС = Параметры.СуммаАвансы;
		
		СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
		СтрокаРасшифровки.Регистратор = "Доотгрузка";
		СтрокаРасшифровки.СуммаБезНДС = -Параметры.СуммаДоотгрузки;		
		
		РезультатРасчета = РезультатРасчета + Параметры.СуммаАвансы - Параметры.СуммаДоотгрузки;
		
	ИначеЕсли ВидСуммы = "Сумма051" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о реализации
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаБезНДС");
		
		Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
			Если СтрокаТаблицыЗначений.СтавкаНДС = Справочники.СтавкиНДС.Нулевая Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаБезНДС;
				СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);				
			КонецЕсли;
		КонецЦикла;
		СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
		СтрокаРасшифровки.Регистратор = "Авансы";
		СтрокаРасшифровки.СуммаБезНДС = Параметры.СуммаАвансыНулеваяСтавка;
		
		СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
		СтрокаРасшифровки.Регистратор = "Доотгрузка";
		СтрокаРасшифровки.СуммаБезНДС = -Параметры.СуммаДоотгрузкаНулеваяСтавка;
		
		РезультатРасчета = РезультатРасчета + Параметры.СуммаАвансыНулеваяСтавка - Параметры.СуммаДоотгрузкаНулеваяСтавка;	
						
	ИначеЕсли ВидСуммы = "Сумма052" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о реализации
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаБезНДС");
		
		Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
			Если СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаБезНДС;
				СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);				
			КонецЕсли;
		КонецЦикла;		
		РезультатРасчета = РезультатРасчета;		
						
	ИначеЕсли ВидСуммы = "Сумма053" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о реализации
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаБезНДС");
		
		Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
			Если СтрокаТаблицыЗначений.СтавкаНДС = Справочники.СтавкиНДС.Освобожденная Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаБезНДС;
				СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);				
			КонецЕсли;
		КонецЦикла;
		СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
		СтрокаРасшифровки.Регистратор = "Авансы";
		СтрокаРасшифровки.СуммаБезНДС = Параметры.СуммаАвансыОсвобожденнаяСтавка;
		
		СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
		СтрокаРасшифровки.Регистратор = "Доотгрузка";
		СтрокаРасшифровки.СуммаБезНДС = -Параметры.СуммаДоотгрузкаОсвобожденнаяСтавка;
		
		РезультатРасчета = РезультатРасчета + Параметры.СуммаАвансыОсвобожденнаяСтавка - Параметры.СуммаДоотгрузкаОсвобожденнаяСтавка;		
								
	ИначеЕсли ВидСуммы = "Сумма054" Тогда
		// Параметры - суммы ранне расчитанных строк 050, 051 и 053 	
		РезультатРасчета = Параметры.Сумма050 + Параметры.Сумма051 + Параметры.Сумма053;		
								
	ИначеЕсли ВидСуммы = "Сумма055" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о поступлении
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаБезНДС");
		
		Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
			Если НЕ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС 
				И НЕ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ИмпортЭкспорт Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаБезНДС;
				СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);				
			КонецЕсли;
		КонецЦикла;		
								
	ИначеЕсли ВидСуммы = "Сумма056" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о поступлении
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаБезНДС");
		
		Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
			Если СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС
				И СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ИмпортЭкспорт Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаБезНДС;
				СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);				
			КонецЕсли;
		КонецЦикла;			
								
	ИначеЕсли ВидСуммы = "Сумма057" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о поступлении
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаБезНДС");
		
		Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
			Если СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаБезНДС;
				СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);				
			КонецЕсли;
		КонецЦикла;		
									
	ИначеЕсли ВидСуммы = "Сумма058" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о поступлении
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаБезНДС");
		Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
			СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);				
		КонецЦикла;
		
		РезультатРасчета = Параметры.Таблица.Итог("СуммаБезНДС");
	
	ИначеЕсли ВидСуммы = "Сумма059" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о реализации
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаНДС");
		
		Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
			Если НЕ (СтрокаТаблицыЗначений.СтавкаНДС = Справочники.СтавкиНДС.Освобожденная 
				ИЛИ СтрокаТаблицыЗначений.СтавкаНДС = Справочники.СтавкиНДС.Нулевая) Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
				СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);				
			КонецЕсли;
		КонецЦикла;
		СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
		СтрокаРасшифровки.Регистратор = "Авансы";
		СтрокаРасшифровки.СуммаНДС = Параметры.СуммаНДСАвансы;
		
		СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
		СтрокаРасшифровки.Регистратор = "Доотгрузка";
		СтрокаРасшифровки.СуммаНДС = -Параметры.СуммаНДСДоотгрузки;
		
		РезультатРасчета = РезультатРасчета + Параметры.СуммаНДСАвансы - Параметры.СуммаНДСДоотгрузки;						
		
	//НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ, ПОДЛЕЖАЩИЙ ЗАЧЕТУ		
	//
	ИначеЕсли ВидСуммы = "Сумма060" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о поступлении
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, ЗачетНДС, СуммаНДС");
		
		Если Параметры.УказыватьПризнакЗачетаНДСПриПоступлении Тогда 
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если НЕ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ИмпортЭкспорт
					И НЕ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС Тогда
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;						
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ЗачетНДС = Перечисления.ВидыЗачетаНДС.Себестоимость
					И НЕ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ИмпортЭкспорт
					И НЕ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС Тогда
					РезультатРасчета = РезультатРасчета - СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаРасшифровки.СуммаНДС = -СтрокаТаблицыЗначений.СуммаНДС;
				КонецЕсли;
			КонецЦикла;			
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ЗачетНДС = Перечисления.ВидыЗачетаНДС.Распределение
					И НЕ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ИмпортЭкспорт
					И НЕ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС Тогда
					СуммаРаспределения = СтрокаТаблицыЗначений.СуммаНДС - Окр(СтрокаТаблицыЗначений.СуммаНДС * Параметры.КоэффициентРаспределения, 2);
					РезультатРасчета = РезультатРасчета - СуммаРаспределения;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаРасшифровки.СуммаНДС = -СуммаРаспределения;
				КонецЕсли;
			КонецЦикла;
		Иначе
			// Параметры.Таблица - таблица значений из РС Сведения о поступлении 
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если НЕ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ИмпортЭкспорт
					И НЕ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС Тогда
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС - Окр(СтрокаТаблицыЗначений.СуммаНДС * Параметры.КоэффициентРаспределения, 2);
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;	 
		СтруктураВозврата.Вставить("ТаблицаРасшифровка", 	ТаблицаРасшифровка);
		
	// НДС НА ИМПОРТ ПОДЛЕЖАЩИЙ ЗАЧЕТУ
	//
	ИначеЕсли ВидСуммы = "Сумма061" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о поступлении
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, ЗачетНДС, СуммаНДС");
		
		Если Параметры.УказыватьПризнакЗачетаНДСПриПоступлении Тогда 			
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ИмпортЭкспорт 
					ИЛИ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС Тогда
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);					
				КонецЕсли;
			КонецЦикла;										 
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ЗачетНДС = Перечисления.ВидыЗачетаНДС.Себестоимость
					И (СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ИмпортЭкспорт
					ИЛИ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС) Тогда
					РезультатРасчета = РезультатРасчета - СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаРасшифровки.СуммаНДС = -СтрокаТаблицыЗначений.СуммаНДС;					
				КонецЕсли;
			КонецЦикла;					
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ЗачетНДС = Перечисления.ВидыЗачетаНДС.Распределение
					И (СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ИмпортЭкспорт 
					ИЛИ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС) Тогда
					СуммаРаспределения = СтрокаТаблицыЗначений.СуммаНДС - Окр(СтрокаТаблицыЗначений.СуммаНДС * Параметры.КоэффициентРаспределения, 2);
					РезультатРасчета = РезультатРасчета - СуммаРаспределения;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаРасшифровки.СуммаНДС = -СуммаРаспределения;
				КонецЕсли;
			КонецЦикла;					
			
		Иначе
			// Параметры.Таблица - таблица значений из РС Сведения о поступлении 
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ИмпортЭкспорт
					ИЛИ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС Тогда
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС - Окр(СтрокаТаблицыЗначений.СуммаНДС * Параметры.КоэффициентРаспределения, 2);
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;			
		КонецЕсли;				 
		СтруктураВозврата.Вставить("ТаблицаРасшифровка", 	ТаблицаРасшифровка);		
		
	// В ТОМ ЧИСЛЕ ИЗ ЕВРАЗИЙСКОГО ЭКОНОМИЧЕСКОГО  СОЮЗА
	//
	ИначеЕсли ВидСуммы = "Сумма062" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о поступлении
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, ЗачетНДС, СуммаНДС");
		
		Если Параметры.УказыватьПризнакЗачетаНДСПриПоступлении Тогда 
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС Тогда
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);					
				КонецЕсли;
			КонецЦикла;		
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ЗачетНДС = Перечисления.ВидыЗачетаНДС.Себестоимость
					И СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС Тогда
					РезультатРасчета = РезультатРасчета - СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаРасшифровки.СуммаНДС = -СтрокаТаблицыЗначений.СуммаНДС;					
				КонецЕсли;
			КонецЦикла;					
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ЗачетНДС = Перечисления.ВидыЗачетаНДС.Распределение
					И СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС Тогда
					СуммаРаспределения = СтрокаТаблицыЗначений.СуммаНДС - Окр(СтрокаТаблицыЗначений.СуммаНДС * Параметры.КоэффициентРаспределения, 2);
					РезультатРасчета = РезультатРасчета - СуммаРаспределения;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаРасшифровки.СуммаНДС = -СуммаРаспределения;
				КонецЕсли;
			КонецЦикла;			
			
		Иначе
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС Тогда
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС - Окр(СтрокаТаблицыЗначений.СуммаНДС * Параметры.КоэффициентРаспределения, 2);
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);					
				КонецЕсли;
			КонецЦикла;			
		КонецЕсли;				 
		СтруктураВозврата.Вставить("ТаблицаРасшифровка", 	ТаблицаРасшифровка);		
		
	// НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ, НЕ ПОДЛЕЖАЩИЙ ЗАЧЕТУ
	//
	ИначеЕсли ВидСуммы = "Сумма063" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о поступлении
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, ЗачетНДС, СуммаНДС");
		
		Если Параметры.УказыватьПризнакЗачетаНДСПриПоступлении Тогда			
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ЗачетНДС = Перечисления.ВидыЗачетаНДС.Себестоимость Тогда
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаРасшифровки.СуммаНДС = СтрокаТаблицыЗначений.СуммаНДС;
				КонецЕсли;
			КонецЦикла;			
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ЗачетНДС = Перечисления.ВидыЗачетаНДС.Распределение Тогда
					СуммаРаспределения = СтрокаТаблицыЗначений.СуммаНДС - Окр(СтрокаТаблицыЗначений.СуммаНДС * Параметры.КоэффициентРаспределения, 2);
					РезультатРасчета = РезультатРасчета + СуммаРаспределения;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаРасшифровки.СуммаНДС = СуммаРаспределения;
				КонецЕсли;
			КонецЦикла;		

		Иначе
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС - Окр(СтрокаТаблицыЗначений.СуммаНДС * Параметры.КоэффициентРаспределения, 2);
				СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);					
			КонецЦикла;						
		КонецЕсли;				 
		СтруктураВозврата.Вставить("ТаблицаРасшифровка", 	ТаблицаРасшифровка);				
				
	//НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ, ПОДЛЕЖАЩИЙ ЗАЧЕТУ		
	//
	ИначеЕсли ВидСуммы = "Сумма064" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о поступлении
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, ЗачетНДС, СуммаНДС");
		
		Если Параметры.УказыватьПризнакЗачетаНДСПриПоступлении Тогда 
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
				СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
			КонецЦикла;						
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ЗачетНДС = Перечисления.ВидыЗачетаНДС.Себестоимость Тогда
					РезультатРасчета = РезультатРасчета - СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаРасшифровки.СуммаНДС = -СтрокаТаблицыЗначений.СуммаНДС;
				КонецЕсли;
			КонецЦикла;			
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ЗачетНДС = Перечисления.ВидыЗачетаНДС.Распределение Тогда
					СуммаРаспределения = СтрокаТаблицыЗначений.СуммаНДС - Окр(СтрокаТаблицыЗначений.СуммаНДС * Параметры.КоэффициентРаспределения, 2);
					РезультатРасчета = РезультатРасчета - СуммаРаспределения;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаРасшифровки.СуммаНДС = -СуммаРаспределения;
				КонецЕсли;
			КонецЦикла;
		Иначе
			// Параметры.Таблица - таблица значений из РС Сведения о поступлении 
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				РезультатРасчета = РезультатРасчета + Окр(СтрокаТаблицыЗначений.СуммаНДС * Параметры.КоэффициентРаспределения, 2);
				СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
			КонецЦикла;
			
		КонецЕсли;	 
		СтруктураВозврата.Вставить("ТаблицаРасшифровка", 	ТаблицаРасшифровка);				
		
	// В ТОМ ЧИСЛЕ НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ, ИСПОЛЬЗУЕМЫЕ ДЛЯ ПОСТАВОК С НУЛЕВОЙ СТАВКОЙ
	//
	ИначеЕсли ВидСуммы = "Сумма065" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о поступлении
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, ЗачетНДС, СуммаНДС");

		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			Если (СтрокаТабличнойЧасти.ЗачетНДС = Перечисления.ВидыЗачетаНДС.Зачет
				ИЛИ СтрокаТабличнойЧасти.ЗачетНДС = Перечисления.ВидыЗачетаНДС.ПустаяСсылка())
				И СтрокаТабличнойЧасти.СтавкаНДС = Справочники.СтавкиНДС.Нулевая Тогда
				СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
				РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.СуммаНДС;
			КонецЕсли;
		КонецЦикла;	 
		СтруктураВозврата.Вставить("ТаблицаРасшифровка", 	ТаблицаРасшифровка);		
		
	// НАЛОГОВОЕ ОБЯЗАТЕЛЬСТВО (=059-064) (УКАЖИТЕ ЗНАК МИНУС, ЕСЛИ ЗНАЧЕНИЕ ОТРИЦАТЕЛЬНОЕ)
	//
	ИначеЕсли ВидСуммы = "Сумма066" Тогда
		РезультатРасчета = Параметры.Сумма059 - Параметры.Сумма064;		
		
	// НАЛОГОВОЕ ОБЯЗАТЕЛЬСТВО ВСЕГО (=066-067) (УКАЖИТЕ ЗНАК МИНУС, ЕСЛИ ЗНАЧЕНИЕ ОТРИЦАТЕЛЬНОЕ)
	//
	ИначеЕсли ВидСуммы = "Сумма068" Тогда
		РезультатРасчета = Параметры.Сумма059 - Параметры.Сумма064;		
		
	Иначе
	    РезультатРасчета = 0;           
			
	КонецЕсли;
	
	СтруктураВозврата.Вставить("РезультатРасчета", 		РезультатРасчета);
	СтруктураВозврата.Вставить("ТаблицаРасшифровка", 	ТаблицаРасшифровка);
	
	Возврат СтруктураВозврата;
	
КонецФункции // РасчетСуммыОТчетаНДС()

Функция ВсеСведенияОРеализации(Организация, НачалоМесяца, КонецМесяца) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ИСТИНА
		|			ТОГДА СчетаФактурыВыписанные.Регистратор
		|		ИНАЧЕ ""             ""
		|	КОНЕЦ КАК Регистратор,
		|	СчетаФактурыВыписанные.Организация КАК Организация,
		|	СчетаФактурыВыписанные.Контрагент КАК Контрагент,
		|	СчетаФактурыВыписанные.Контрагент.ПризнакСтраны КАК ПризнакСтраны,
		|	СчетаФактурыВыписанные.ДатаПоставки КАК ДатаПоставки,
		|	СчетаФактурыВыписанные.СтавкаНДС КАК СтавкаНДС,
		|	СчетаФактурыВыписанные.СуммаБезНДС КАК СуммаБезНДС,
		|	СчетаФактурыВыписанные.СуммаНДС КАК СуммаНДС,
		|	СчетаФактурыВыписанные.Документ КАК ДокументРеализации,
		|	СчетаФактурыВыписанные.Период КАК Период,
		|	СчетаФактурыВыписанные.СерияБланкаСФ КАК СерияБланкаСФ
		|ИЗ
		|	РегистрСведений.СчетаФактурыВыписанные КАК СчетаФактурыВыписанные
		|ГДЕ
		|	ВЫБОР
		|			КОГДА СчетаФактурыВыписанные.Документ ССЫЛКА Документ.ВозвратТоваровОтПокупателя
		|				ТОГДА СчетаФактурыВыписанные.ДатаПоставки <= &КонецМесяца
		|						И (СчетаФактурыВыписанные.Период МЕЖДУ &НачалоМесяца И &КонецМесяца)
		|			ИНАЧЕ СчетаФактурыВыписанные.ДатаПоставки МЕЖДУ &НачалоМесяца И &КонецМесяца
		|		КОНЕЦ
		|	И СчетаФактурыВыписанные.Организация = &Организация
		|	И НЕ СчетаФактурыВыписанные.Регистратор ССЫЛКА Документ.СчетФактураВыписанный";
	
	Запрос.УстановитьПараметр("КонецМесяца", 	КонецМесяца);
	Запрос.УстановитьПараметр("НачалоМесяца", 	НачалоМесяца);
	Запрос.УстановитьПараметр("Организация", 	Организация);
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции // ВсеСведенияОРеализации()

Функция ВсеСведенияОПоступлении(Организация, НачалоМесяца, КонецМесяца) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СведенияОПоступлении.Контрагент КАК Контрагент,
		|	СведенияОПоступлении.ЗачетНДС КАК ЗачетНДС,
		|	СведенияОПоступлении.СуммаБезНДС КАК СуммаБезНДС,
		|	СведенияОПоступлении.СуммаНДС КАК СуммаНДС,
		|	СведенияОПоступлении.СуммаНеоблагаемая КАК СуммаНеоблагаемая,
		|	ВЫБОР
		|		КОГДА СведенияОПоступлении.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗАчетаНДС.Зачет)
		|				ИЛИ СведенияОПоступлении.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗАчетаНДС.ПустаяСсылка)
		|			ТОГДА СведенияОПоступлении.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаНДСЗачет,
		|	СведенияОПоступлении.ПризнакСтраны КАК ПризнакСтраны,
		|	СведенияОПоступлении.Регистратор КАК Регистратор,
		|	СведенияОПоступлении.ДоговорКонтрагента КАК ДоговорКонтрагента
		|ИЗ
		|	РегистрСведений.СведенияОПоступлении КАК СведенияОПоступлении
		|ГДЕ
		|	СведенияОПоступлении.ДатаСФ МЕЖДУ &НачалоМесяца И &КонецМесяца
		|	И СведенияОПоступлении.Организация = &Организация
		|	И СведенияОПоступлении.Патентник <> """"
		|	И НЕ СведенияОПоступлении.Регистратор ССЫЛКА Документ.СчетФактураПолученный";
	Запрос.УстановитьПараметр("КонецМесяца", 	КонецМесяца);
	Запрос.УстановитьПараметр("НачалоМесяца", 	НачалоМесяца);
	Запрос.УстановитьПараметр("Организация", 	Организация);
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции // ВсеСведенияОРеализации()

#КонецОбласти
