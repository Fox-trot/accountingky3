
#Область ОперационнаяКурсоваяРазница

Процедура СформироватьДвиженияОперационнаяКурсоваяРазница(ДополнительныеСвойства, Движения, Отказ, ПриходДенежныхСредств) Экспорт
	
	ТаблицаКурсовыеРазницы = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаКурсовыеРазницы;
	ТаблицаРеквизиты = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРеквизиты;
	
	Параметры = ПодготовитьПараметрыОперационнаяКурсоваяРазница(ТаблицаКурсовыеРазницы, ТаблицаРеквизиты);
	
	Если Параметры.ТаблицаКурсовыеРазницы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = Параметры.Реквизиты[0];
	
	СвойстваСчетаКеш = Новый Соответствие;

	СчетУчетаДоходыОКР = ПланыСчетов.Хозрасчетный.ДоходыОтОперационныхКурсовыхРазниц;
	СчетУчетаУбыткиОКР = ПланыСчетов.Хозрасчетный.УбыткиОтОперационныхКурсовыхРазниц;
	
	Для Каждого СтрокаТаблицы Из Параметры.ТаблицаКурсовыеРазницы Цикл
		
		// Валюта взаиморасчетов в валюте регламентированного учета. 
		Если Реквизиты.ВалютаРасчетов = Реквизиты.ВалютаРегламентированногоУчета Тогда 
			СуммаКурсовойРазницы = СтрокаТаблицы.СуммаВзаиморасчетов - СтрокаТаблицы.СуммаПлатежа * СтрокаТаблицы.КурсВзаиморасчетовПоНацБанку / СтрокаТаблицы.КратностьВзаиморасчетовПоНацБанку;
		// В документа в валюте регламентированного учета.	
		ИначеЕсли Реквизиты.ВалютаДокумента = Реквизиты.ВалютаРегламентированногоУчета Тогда
			СуммаКурсовойРазницы = СтрокаТаблицы.СуммаПлатежа - СтрокаТаблицы.СуммаВзаиморасчетов * СтрокаТаблицы.КурсВзаиморасчетовПоНацБанку / СтрокаТаблицы.КратностьВзаиморасчетовПоНацБанку;
		// Валюты отличны от валюты регламентированного учета.
		Иначе 
			КурсРачета = Окр(Реквизиты.КурсДокумента * СтрокаТаблицы.КратностьВзаиморасчетовПоНацБанку /  СтрокаТаблицы.КурсВзаиморасчетовПоНацБанку * Реквизиты.КратностьДокумента, 4);
			СуммаКурсовойРазницы = СтрокаТаблицы.СуммаПлатежа * (КурсРачета - СтрокаТаблицы.КурсВзаиморасчетов * СтрокаТаблицы.КратностьВзаиморасчетов);
		КонецЕсли;			
		
		Если Окр(СуммаКурсовойРазницы, 2) = 0 Тогда 
			Продолжить;
		КонецЕсли;	
		
		Доход = Истина;
		Если ПриходДенежныхСредств И СуммаКурсовойРазницы > 0 Тогда 
			Доход = Ложь;
		КонецЕсли;	
		
		Проводка = Движения.Хозрасчетный.Добавить();
		
		Проводка.Период      	= Реквизиты.Период;
		Проводка.Организация 	= Реквизиты.Организация;
		
		Если Доход Тогда 
			Проводка.СчетДт = Реквизиты.СчетРасчетов;
			Проводка.СчетКт = СчетУчетаДоходыОКР;
			БухгалтерскийУчетСервер.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Контрагенты", Реквизиты.Контрагент);
			БухгалтерскийУчетСервер.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Договоры", Реквизиты.ДоговорКонтрагента);
			
			Проводка.Содержание = НСтр("ru = 'Доходы от операционных курсовых разниц'");
			
			Проводка.ВалютаДт = Реквизиты.ВалютаРасчетов;
		Иначе 
			Проводка.СчетДт = СчетУчетаУбыткиОКР;
			Проводка.СчетКт = Реквизиты.СчетРасчетов;
			БухгалтерскийУчетСервер.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Контрагенты", Реквизиты.Контрагент);
			БухгалтерскийУчетСервер.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Договоры", Реквизиты.ДоговорКонтрагента);
			
			Проводка.Содержание = НСтр("ru = 'Убытки от операционных курсовых разниц'");
			
			Проводка.ВалютаКт = Реквизиты.ВалютаРасчетов;
		КонецЕсли;
		
		Проводка.Сумма = ?(СуммаКурсовойРазницы > 0, СуммаКурсовойРазницы, СуммаКурсовойРазницы * (-1));;
	КонецЦикла;
	
	Движения.Хозрасчетный.Записывать = Истина;
	
КонецПроцедуры

Функция ПодготовитьПараметрыОперационнаяКурсоваяРазница(ТаблицаКурсовыеРазницы, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаКурсовыеРазницы

	СписокОбязательныхКолонок = ""
	+ "СуммаПлатежа,"           	// <Число,15,2> - сумма в валюте регламентированного учета
	+ "СуммаВзаиморасчетов," 		// <Число,15,2> - сумма в валюте взаиморасчетов
	+ "КурсВзаиморасчетов,"     	// <Число,10,4> - курс валюты взаиморасчетов
	+ "КратностьВзаиморасчетов,"	// <Число,10,0> - кратность валюты взаиморасчетов
	+ "КурсВзаиморасчетовПоНацБанку,"     	// <Число,10,4> - курс валюты взаиморасчетов но НБКР
	+ "КратностьВзаиморасчетовПоНацБанку";	// <Число,10,0> - кратность валюты взаиморасчетов по НБКР


	Параметры.Вставить("ТаблицаКурсовыеРазницы",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаКурсовыеРазницы, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                         	// <Дата> - период движений - дата документа
	+ "Организация,"                    	// <СправочникСсылка.Организация> - организация
	+ "Контрагент,"                    		// <СправочникСсылка.Контрагенты> - контрагент
	+ "ДоговорКонтрагента,"                 // <СправочникСсылка.ДоговорыКонтрагентов> - договор
	+ "ВалютаДокумента,"     				// <СправочникСсылка.Валюты> - валюта кассы/банка
	+ "ВалютаРегламентированногоУчета,"     // <СправочникСсылка.Валюты> - валюта регл.учета
	+ "ВалютаРасчетов,"           			// <СправочникСсылка.Валюты> - валюта взаиморасчетов
	+ "КурсДокумента,"     					// <Число,10,4> - курс валюты документа
	+ "КратностьДокумента,"					// <Число,10,0> - кратность валюты документа
	+ "СчетРасчетов";          				// <ПланСчетовСсылка.Хозрасчетный> - счет учета расчетов с контрагентом

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

#КонецОбласти