///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Позволяет настроить общие параметры подсистемы.
//
// Параметры:
//  ОбщиеПараметры - Структура - структура со свойствами:
//      * ИмяФормыПерсональныхНастроек            - Строка - имя формы для редактирования персональных настроек.
//                                                           Ранее определялись в
//                                                           ОбщегоНазначенияПереопределяемый.ИмяФормыПерсональныхНастроек.
//      * ЗапрашиватьПодтверждениеПриЗавершенииПрограммы - Булево - по умолчанию Истина. Если установить в Ложь, то 
//                                                                  подтверждение при завершении работы программы не
//                                                                  будет запрашиваться,  если явно не разрешить в
//                                                                  персональных настройках программы.
//      * МинимальнаяВерсияПлатформы              - Строка - минимальная версии платформы, требуемая для запуска программы.
//                                                           Запуск программы на версии платформы ниже указанной будет невозможен.
//                                                           Например, "8.3.6.1650".
//      * РекомендуемаяВерсияПлатформы            - Строка - рекомендуемая версия платформы для запуска программы.
//                                                           Например, "8.3.8.2137".
//      * ОтключитьИдентификаторыОбъектовМетаданных - Булево - отключает заполнение справочников ИдентификаторыОбъектовМетаданных
//              и ИдентификаторыОбъектовРасширений, процедуру выгрузки и загрузки в узлах РИБ.
//              Для частичного встраивания отдельных функций библиотеки в конфигурации без постановки на поддержку.
//      * РекомендуемыйОбъемОперативнойПамяти - Число - объем памяти в гигабайтах, рекомендуемый для комфортной работы в
//                                                      программе.
//
//    Устарели, следует использовать свойства МинимальнаяВерсияПлатформы и РекомендуемаяВерсияПлатформы:
//      * МинимальноНеобходимаяВерсияПлатформы    - Строка - полный номер версии платформы для запуска программы.
//                                                           Например, "8.3.4.365".
//                                                           Ранее определялись в
//                                                           ОбщегоНазначенияПереопределяемый.ПолучитьМинимальноНеобходимуюВерсиюПлатформы.
//      * РаботаВПрограммеЗапрещена               - Булево - начальное значение Ложь.
//
Процедура ПриОпределенииОбщихПараметровБазовойФункциональности(ОбщиеПараметры) Экспорт
	
	ОбщиеПараметры.Вставить("МинимальноНеобходимаяВерсияПлатформы", "8.3.14.1630");
	
КонецПроцедуры

// Позволяет задать значения параметров, необходимых для работы клиентского кода
// при запуске конфигурации (в обработчиках событий ПередНачаломРаботыСистемы и ПриНачалеРаботыСистемы) 
// без дополнительных серверных вызовов. 
// Для получения значений этих параметров из клиентского кода
// см. СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске.
//
// Важно: недопустимо использовать команды сброса кэша повторно используемых модулей, 
// иначе запуск может привести к непредсказуемым ошибкам и лишним серверным вызовам.
//
// Параметры:
//   Параметры - Структура - имена и значения параметров работы клиента при запуске, которые необходимо задать.
//                           Для установки параметров работы клиента при запуске:
//                           Параметры.Вставить(<ИмяПараметра>, <код получения значения параметра>);
//
Процедура ПриДобавленииПараметровРаботыКлиентаПриЗапуске(Параметры) Экспорт
	
	Если НЕ Параметры.Свойство("ЗаголовокПриложения") Тогда 
		Параметры.Вставить("ЗаголовокПриложения", "");
	КонецЕсли;	
		
	ОсновнаяОрганизация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	ПредставлениеЗаголовка = ?(ЗначениеЗаполнено(ОсновнаяОрганизация), ОсновнаяОрганизация.Наименование, "");
	Параметры.ЗаголовокПриложения = ПредставлениеЗаголовка;
	
	// НачалоРаботыСПрограммой
	НачалоРаботыСПрограммойСервер.ПараметрыРаботыКлиентаПриЗапуске(Параметры);
	// Конец НачалоРаботыСПрограммой

	// Информация о необходимости обновить конфигурацию
	Параметры.Вставить("ПоказатьПредложитьОбновитьВерсиюПрограммы", ОбщегоНазначенияБПСервер.ПредлагатьОбновитьВерсиюПрограммы(Параметры));

	ДатаПервогоВходаВСистемуЗаполнена = ЗначениеЗаполнено(Константы.ДатаПервогоВходаВСистему.Получить());
	
	// ЗнакомствоСРедакциейВ30
	Если НЕ ДатаПервогоВходаВСистемуЗаполнена Тогда
		ПоказатьЗнакомствоСРедакциейВ30 = Ложь;
	Иначе	
		ПоказатьЗнакомствоСРедакциейВ30 = ОбщегоНазначенияПовтИсп.ДоступноИспользованиеРазделенныхДанных()
			И ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НачалоРаботыВ30", "Показывать", Истина);
	КонецЕсли;
	
	Если ПоказатьЗнакомствоСРедакциейВ30 Тогда
		ИмяОбработкиЗнакомствоСРедакциейВ30 = "НачинаемРаботатьВ30";
			
		Если Не ПравоДоступа("Использование", Метаданные.Обработки[ИмяОбработкиЗнакомствоСРедакциейВ30]) Тогда
			ПоказатьЗнакомствоСРедакциейВ30 = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Параметры.Вставить("ПоказатьЗнакомствоСРедакциейВ30",     ПоказатьЗнакомствоСРедакциейВ30);
	Параметры.Вставить("ИмяОбработкиЗнакомствоСРедакциейВ30", ИмяОбработкиЗнакомствоСРедакциейВ30);
	// Конец ЗнакомствоСРедакциейВ30
	
	// ПечатьПараметровУчета
	Если НЕ ДатаПервогоВходаВСистемуЗаполнена ИЛИ НЕ ПравоДоступа("Изменение", Метаданные.Справочники.Организации) Тогда  
		ПоказатьПечатьПараметровУчета = Ложь;
	Иначе
		ПоказатьПечатьПараметровУчета = ОбщегоНазначенияПовтИсп.ДоступноИспользованиеРазделенныхДанных()
			И ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ПечатьПараметровУчета", "Показывать", Истина);
	КонецЕсли;
	
	Если ПоказатьПечатьПараметровУчета Тогда
		ИмяОбработкиПечатьПараметровУчета = "ПечатьПараметровУчета";
			
		Если Не ПравоДоступа("Использование", Метаданные.Обработки[ИмяОбработкиПечатьПараметровУчета]) Тогда
			ПоказатьПечатьПараметровУчета = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Параметры.Вставить("ПоказатьПечатьПараметровУчета",     ПоказатьПечатьПараметровУчета);
	Параметры.Вставить("ИмяОбработкиПечатьПараметровУчета", ИмяОбработкиПечатьПараметровУчета);
	// Конец ПечатьПараметровУчета
	
КонецПроцедуры

// Задает параметры функциональных опций, действие которых распространяется на командный интерфейс и рабочий стол.
// Например, если значения функциональной опции хранятся в ресурсах регистра сведений,
// то параметры функциональных опций могут определять условия отборов по измерениям регистра,
// которые будут применяться при чтении значения этой функциональной опции.
//
// См. в синтакс-помощнике методы ПолучитьФункциональнуюОпциюИнтерфейса,
// УстановитьПараметрыФункциональныхОпцийИнтерфейса и ПолучитьПараметрыФункциональныхОпцийИнтерфейса.
//
// Параметры:
//   ОпцииИнтерфейса - Структура - значения параметров функциональных опций, установленных для командного интерфейса.
//       Ключ элемента структуры определяет имя параметра, а значение элемента - текущее значение параметра.
//
Процедура ПриОпределенииПараметровФункциональныхОпцийИнтерфейса(ОпцииИнтерфейса) Экспорт
	ОпцииИнтерфейса.Вставить("Организация", Справочники.Организации.ОрганизацияПоУмолчанию());
КонецПроцедуры

#КонецОбласти
