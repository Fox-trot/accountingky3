
// Расчитывает сумму амортизации по указаному основному средству
//
// Параметры:
//  Период				 - Дата	 - дата расчета амортизации
//  Организация			 - СправочникСсылка.Организации	- Организация для отбора
//  ОсновноеСредство	 - СправочникСсылка.ОсновныеСредства - ОсновноеСредство для отбора
// 
// Возвращаемое значение:
//  СуммаАмортизации - Число
//
Функция РасчетАмортизации(ПериодСтоимости, ПериодОстатков, Организация, ОсновноеСредство = Неопределено) Экспорт
	АмортизацияЗаМесяц = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
		|	ПараметрыУчетаОССрезПоследних.ОсновноеСредство,
		|	ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость,
		|	ВЫБОР
		|		КОГДА ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Линейный)
		|				И НЕ ПараметрыУчетаОССрезПоследних.СрокСлужбы = 0
		|			ТОГДА ВЫРАЗИТЬ((ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость - ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость) / ПараметрыУчетаОССрезПоследних.СрокСлужбы / ДЕНЬ(КОНЕЦПЕРИОДА(&ПериодСтоимости, МЕСЯЦ)) * &КоличествоДней КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК АмортизацияЗаМесяц
		|ПОМЕСТИТЬ ВременнаяТаблицаПараметрыУчетаОС
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|			&ПериодСтоимости,
		|			Организация = &Организация
		|				И ОсновноеСредство = &ОсновноеСредство
		|				И (Регистратор Ссылка Документ.ПринятиеКУчетуОС
		|				ИЛИ Регистратор Ссылка Документ.МодернизацияОС)) КАК ПараметрыУчетаОССрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт >= ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость
		|			ТОГДА 0
		|		КОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость < ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|			ТОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость
		|		ИНАЧЕ ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|	КОНЕЦ КАК АмортизацияЗаМесяц
		|ИЗ
		|	ВременнаяТаблицаПараметрыУчетаОС КАК ВременнаяТаблицаПараметрыУчетаОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
		|				&ПериодОстатков,
		|				,
		|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|				Организация = &Организация
		|					И Субконто1 = &ОсновноеСредство) КАК ХозрасчетныйОстатки
		|		ПО ВременнаяТаблицаПараметрыУчетаОС.ОсновноеСредство = ХозрасчетныйОстатки.Субконто1";
		//"ВЫБРАТЬ
		//|	ПараметрыУчетаОССрезПоследних.ОсновноеСредство,
		//|	ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость,
		//|	ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость,
		//|	ПараметрыУчетаОССрезПоследних.СрокСлужбы,
		//|	ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации,
		//|	ДЕНЬ(&Период) КАК КоличествоДнейВМесяце,
		//|	ВЫБОР
		//|		КОГДА ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Линейный)
		//|				И НЕ ПараметрыУчетаОССрезПоследних.СрокСлужбы = 0
		//|			ТОГДА ВЫРАЗИТЬ((ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость - ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость) / ПараметрыУчетаОССрезПоследних.СрокСлужбы / ДЕНЬ(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)) * ДЕНЬ(&Период) КАК ЧИСЛО(15, 2))
		//|		ИНАЧЕ 0
		//|	КОНЕЦ КАК АмортизацияЗаМесяц
		//|ПОМЕСТИТЬ ВременнаяТаблицаПараметрыУчетаОС
		//|ИЗ
		//|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		//|			&Период,
		//|			Организация = &Организация
		//|				И ОсновноеСредство = &ОсновноеСредство) КАК ПараметрыУчетаОССрезПоследних
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	УчетнаяПолитикаОрганизацийСрезПоследних.НачислениеАмортизацииОСПоМесяцам
		//|ПОМЕСТИТЬ ВременнаяТаблицаПараметрыУПП
		//|ИЗ
		//|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Период, Организация = &Организация) КАК УчетнаяПолитикаОрганизацийСрезПоследних
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	ВременнаяТаблицаПараметрыУчетаОС.ОсновноеСредство,
		//|	ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость,
		//|	ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость,
		//|	ВременнаяТаблицаПараметрыУчетаОС.СрокСлужбы,
		//|	ВременнаяТаблицаПараметрыУчетаОС.СпособНачисленияАмортизации,
		//|	ВременнаяТаблицаПараметрыУчетаОС.КоличествоДнейВМесяце,
		//|	ХозрасчетныйОстатки.Счет КАК СчетАмортизации,
		//|	ВЫБОР
		//|		КОГДА ВременнаяТаблицаПараметрыУПП.НачислениеАмортизацииОСПоМесяцам
		//|			ТОГДА ВЫБОР
		//|					КОГДА ХозрасчетныйОстатки.СуммаОстатокКт >= ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость
		//|						ТОГДА 0
		//|					КОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ХозрасчетныйОстатки.СуммаОстатокКт < ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		//|						ТОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ХозрасчетныйОстатки.СуммаОстатокКт
		//|					ИНАЧЕ ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		//|				КОНЕЦ
		//|		ИНАЧЕ ВЫБОР
		//|				КОГДА ДЕНЬ(КОНЕЦПЕРИОДА(&НачалоМесяца, ДЕНЬ)) = 1
		//|					ТОГДА 0
		//|				ИНАЧЕ ВЫРАЗИТЬ(ВЫБОР
		//|							КОГДА ХозрасчетныйОстатки.СуммаОстатокКт >= ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость
		//|								ТОГДА 0
		//|							КОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ХозрасчетныйОстатки.СуммаОстатокКт < ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		//|								ТОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ХозрасчетныйОстатки.СуммаОстатокКт
		//|							ИНАЧЕ ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		//|						КОНЕЦ * ДЕНЬ(КОНЕЦПЕРИОДА(&Период, ДЕНЬ)) / ДЕНЬ(КОНЕЦПЕРИОДА(&ПЕриод, МЕСЯЦ)) КАК ЧИСЛО(15, 2))
		//|			КОНЕЦ
		//|	КОНЕЦ КАК АмортизацияЗаМесяц
		//|ИЗ
		//|	ВременнаяТаблицаПараметрыУчетаОС КАК ВременнаяТаблицаПараметрыУчетаОС
		//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
		//|				&Период,
		//|				,
		//|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		//|				Организация = &Организация
		//|					И Субконто1 = &ОсновноеСредство) КАК ХозрасчетныйОстатки
		//|		ПО ВременнаяТаблицаПараметрыУчетаОС.ОсновноеСредство = ХозрасчетныйОстатки.Субконто1
		//|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметрыУПП КАК ВременнаяТаблицаПараметрыУПП
		//|		ПО (ИСТИНА)";
	//Запрос.УстановитьПараметр("Период", Период);
	//Запрос.УстановитьПараметр("НачалоМесяца", Период + 1);
	Запрос.УстановитьПараметр("ПериодСтоимости", ПериодСтоимости);
	Запрос.УстановитьПараметр("ПериодОстатков", ПериодОстатков);
	Запрос.УстановитьПараметр("КоличествоДней", (ПериодОстатков - ПериодСтоимости + 1) / 86400); 
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
	 	АмортизацияЗаМесяц = ВыборкаДетальныеЗаписи.АмортизацияЗаМесяц;		
	КонецЕсли;
	
	Возврат АмортизацияЗаМесяц;	
КонецФункции // РасчетАмортизации()

// Расчитывает сумму амортизации по указаному основному средству
//
// Параметры:
//  ДокументСсылка			- Ссылка - ссылка на документ
//  Период 					- Дата - дата расчета амортизации
//  Организация				- СправочникСсылка.Организации	- Организация для отбора
//  ТабличнаяЧасть 			- ТабличнаяЧасть - табличная часть объекта
// 		* ОсновноеСредство 		- СправочникСсылка.ОсновныеСредства
// 		* АмортизацияЗаМесяц 	- Число
//  МассивОсновныхСредств 	- Массив - ОсновноеСредство для отбора
//
Процедура ЗаполнитьДанныеОсновныхСредствВТабличнойЧасти(ДокументСсылка, Период, Организация, ТабличнаяЧасть, МассивОсновныхСредств = Неопределено) Экспорт
	Если МассивОсновныхСредств = Неопределено Тогда 
		МассивОсновныхСредств = ТабличнаяЧасть.Выгрузить().ВыгрузитьКолонку("ОсновноеСредство");
	КонецЕсли;	
	
	// 1. Параметры учета
	// 2. Остаточная стоимость
	// 3. Накопленная амортизация
	// 4. Расчет амортизации
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыУчетаОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	ПараметрыУчетаОССрезПоследних.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.СрокСлужбы КАК СрокСлужбы,
		|	ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
		|	ПараметрыУчетаОССрезПоследних.СпособОтраженияРасходовПоАмортизации КАК СпособОтраженияРасходовПоАмортизации,
		|	ДЕНЬ(&Период) КАК КоличествоДнейВМесяце,
		|	ВЫБОР
		|		КОГДА ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Линейный)
		|				И НЕ ПараметрыУчетаОССрезПоследних.СрокСлужбы = 0
		|			ТОГДА ВЫРАЗИТЬ((ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость - ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость) / ПараметрыУчетаОССрезПоследних.СрокСлужбы / ДЕНЬ(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)) * (ДЕНЬ(&Период) - 1) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК АмортизацияЗаМесяц,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета КАК СчетУчета,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета.ПарныйСчет КАК СчетУчетаАмортизации,
		|	ВЫБОР
		|		КОГДА СостоянияОССрезПоследних.Состояние ЕСТЬ NULL
		|			ТОГДА 0
		|		ИНАЧЕ РАЗНОСТЬДАТ(&Период, ДОБАВИТЬКДАТЕ(СостоянияОССрезПоследних.Период, МЕСЯЦ, ПараметрыУчетаОССрезПоследних.СрокСлужбы), МЕСЯЦ)
		|	КОНЕЦ КАК ОстаточныйСрокСлужбы,
		|	МестонахождениеОССрезПоследних.Подразделение КАК Подразделение,
		|	МестонахождениеОССрезПоследних.МОЛ КАК МОЛ
		|ПОМЕСТИТЬ ВременнаяТаблицаПараметрыУчетаОС
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|			&Период,
		|			НЕ Регистратор = &Ссылка
		|				И Организация = &Организация
		|				И ОсновноеСредство В (&МассивОсновныхСредств)) КАК ПараметрыУчетаОССрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОС.СрезПоследних(
		|				&Период,
		|				НЕ Регистратор = &Ссылка
		|					И Организация = &Организация
		|					И ОсновноеСредство В (&МассивОсновныхСредств)
		|					И Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.ПринятоКУчету)) КАК СостоянияОССрезПоследних
		|		ПО ПараметрыУчетаОССрезПоследних.ОсновноеСредство = СостоянияОССрезПоследних.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(
		|				&Период,
		|				НЕ Регистратор = &Ссылка
		|					И Организация = &Организация
		|					И ОсновноеСредство В (&МассивОсновныхСредств)) КАК МестонахождениеОССрезПоследних
		|		ПО ПараметрыУчетаОССрезПоследних.ОсновноеСредство = МестонахождениеОССрезПоследних.ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1 КАК ОсновноеСредство,
		//|	0 КАК БалансоваяСтоимость,
		|	ХозрасчетныйОстатки.СуммаОстатокКт КАК НакопленнаяАмортизация
		//|	ХозрасчетныйОстатки.Счет КАК Счет
		|ПОМЕСТИТЬ ВременнаяТаблицаОстатки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			Счет В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВременнаяТаблицаПараметрыУчетаОС.СчетУчетаАмортизации
		|				ИЗ
		|					ВременнаяТаблицаПараметрыУчетаОС КАК ВременнаяТаблицаПараметрыУчетаОС),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация = &Организация
		|				И Субконто1 В (&МассивОсновныхСредств)) КАК ХозрасчетныйОстатки
		|
		// после проверки- удалить
		//|ОБЪЕДИНИТЬ ВСЕ
		//|
		//|ВЫБРАТЬ
		//|	ХозрасчетныйОстатки.Субконто1,
		//|	ХозрасчетныйОстатки.СуммаОстатокДт,
		//|	0,
		//|	ХозрасчетныйОстатки.Счет
		//|ИЗ
		//|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		//|			&Период,
		//|			,
		//|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		//|			Организация = &Организация
		//|				И Субконто1 В (&МассивОсновныхСредств)) КАК ХозрасчетныйОстатки
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	ВременнаяТаблицаОстатки.ОсновноеСредство КАК ОсновноеСредство,
		//|	СУММА(ВременнаяТаблицаОстатки.БалансоваяСтоимость - ВременнаяТаблицаОстатки.НакопленнаяАмортизация) КАК ОстаточнаяСтоимость,
		//|	СУММА(ВременнаяТаблицаОстатки.НакопленнаяАмортизация) КАК НакопленнаяАмортизация
		//|ПОМЕСТИТЬ ВременнаяТаблицаОстаткиГруппировка
		//|ИЗ
		//|	ВременнаяТаблицаОстатки КАК ВременнаяТаблицаОстатки
		//|
		//|СГРУППИРОВАТЬ ПО
		//|	ВременнаяТаблицаОстатки.ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаПараметрыУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ВременнаяТаблицаПараметрыУчетаОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ВременнаяТаблицаПараметрыУчетаОС.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
		|	ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
		|	ВременнаяТаблицаПараметрыУчетаОС.СрокСлужбы КАК СрокСлужбы,
		|	ВременнаяТаблицаПараметрыУчетаОС.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
		|	ВременнаяТаблицаПараметрыУчетаОС.СпособОтраженияРасходовПоАмортизации КАК СпособОтраженияРасходовПоАмортизации,
		|	ВременнаяТаблицаПараметрыУчетаОС.КоличествоДнейВМесяце КАК КоличествоДнейВМесяце,
		|	ВременнаяТаблицаПараметрыУчетаОС.ОстаточныйСрокСлужбы КАК ОстаточныйСрокСлужбы,
		|	ВременнаяТаблицаПараметрыУчетаОС.Подразделение КАК Подразделение,
		|	ВременнаяТаблицаПараметрыУчетаОС.МОЛ КАК МОЛ,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВременнаяТаблицаОстатки.НакопленнаяАмортизация, 0) >= ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость
		|			ТОГДА 0
		|		КОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ЕСТЬNULL(ВременнаяТаблицаОстатки.НакопленнаяАмортизация, 0) < ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|			ТОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ЕСТЬNULL(ВременнаяТаблицаОстатки.НакопленнаяАмортизация, 0)
		|		ИНАЧЕ ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|	КОНЕЦ КАК АмортизацияЗаМесяц,
		|	ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ЕСТЬNULL(ВременнаяТаблицаОстатки.НакопленнаяАмортизация, 0) - ВЫБОР
		|		КОГДА ЕСТЬNULL(ВременнаяТаблицаОстатки.НакопленнаяАмортизация, 0) >= ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость
		|			ТОГДА 0
		|		КОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ЕСТЬNULL(ВременнаяТаблицаОстатки.НакопленнаяАмортизация, 0) < ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|			ТОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ЕСТЬNULL(ВременнаяТаблицаОстатки.НакопленнаяАмортизация, 0)
		|		ИНАЧЕ ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|	КОНЕЦ КАК ОстаточнаяСтоимость,
		|	ЕСТЬNULL(ВременнаяТаблицаОстатки.НакопленнаяАмортизация, 0) КАК НакопленнаяАмортизация
		|ИЗ
		|	ВременнаяТаблицаПараметрыУчетаОС КАК ВременнаяТаблицаПараметрыУчетаОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОстатки КАК ВременнаяТаблицаОстатки
		|		ПО ВременнаяТаблицаПараметрыУчетаОС.ОсновноеСредство = ВременнаяТаблицаОстатки.ОсновноеСредство";
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("МассивОсновныхСредств", МассивОсновныхСредств);

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл  
		СтрокиТабличнойЧасти = ТабличнаяЧасть.НайтиСтроки(Новый Структура("ОсновноеСредство", ВыборкаДетальныеЗаписи.ОсновноеСредство));
		Для Каждого СтрокаТабличнойЧасти Из СтрокиТабличнойЧасти Цикл
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ВыборкаДетальныеЗаписи);	
		КонецЦикла;		
	КонецЦикла;
КонецПроцедуры // ЗаполнитьДанныеОсновныхСредствВТабличнойЧасти()

// Функция - Получить параметры учета ОС
//
// Параметры:
//  Период			 - Дата	 								- дата, на которую нужно получить сведения
//  Организация		 - СправочникСсылка.Организации	 		- организация для отбора
//  ОсновноеСредство - СправочникСсылка.ОсновноеСредство	- основное средство для отбора
// 
// Возвращаемое значение:
//  ПараметрыУчетаОС - Структура с параметрами 
//
Функция ПолучитьПараметрыУчетаОС(Период, Организация, ОсновноеСредство) Экспорт
	
	ПараметрыОтбора = Новый Структура("Организация, ОсновноеСредство",  Организация, ОсновноеСредство);
	ПараметрыУчетаОС = РегистрыСведений.ПараметрыУчетаОС.ПолучитьПоследнее(Период, ПараметрыОтбора);
	ПараметрыУчетаОС.Вставить("СчетРасходовПоИзносу", ПараметрыУчетаОС.СпособОтраженияРасходовПоАмортизации.СчетЗатрат);
	
	ПараметрыУчетаОС.Вставить("ОстаточнаяСтоимость", 0);
	ПараметрыУчетаОС.Вставить("НакопленнаяАмортизация", 0);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1 КАК ОсновноеСредство,
		|	ХозрасчетныйОстатки.СуммаОстатокДт КАК ОстаточнаяСтоимость,
		|	0 КАК НакопленнаяАмортизация,
		|	ХозрасчетныйОстатки.Счет
		|ПОМЕСТИТЬ ВременнаяТаблицаОстатки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			,
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация = &Организация
		|				И Субконто1 = &ОсновноеСредство) КАК ХозрасчетныйОстатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1,
		|	0,
		|	ХозрасчетныйОстатки.СуммаОстатокКт,
		|	ХозрасчетныйОстатки.Счет
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			,
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация = &Организация
		|				И Субконто1 = &ОсновноеСредство) КАК ХозрасчетныйОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОстатки.ОсновноеСредство,
		|	СУММА(ВременнаяТаблицаОстатки.ОстаточнаяСтоимость) КАК ОстаточнаяСтоимость,
		|	СУММА(ВременнаяТаблицаОстатки.НакопленнаяАмортизация) КАК НакопленнаяАмортизация
		|ИЗ
		|	ВременнаяТаблицаОстатки КАК ВременнаяТаблицаОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаОстатки.ОсновноеСредство";
	Запрос.УстановитьПараметр("Период",							Период);
	Запрос.УстановитьПараметр("Организация",       				Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство",  				ОсновноеСредство);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	// Обход выборки
	Если Выборка.Следующий() Тогда 
		ЗаполнитьЗначенияСвойств(ПараметрыУчетаОС, Выборка);
	КонецЕсли; 
	
	Возврат ПараметрыУчетаОС;
КонецФункции // ОпределитьСтоимостьПоСпискуОС()

// Процедура - Распределяет по коэффициентам, указанным в способе отражения расходов по амортизации
//
// Параметры:
//  ТаблицаДвижений	 - ТаблицаЗначений	 - Предварительно подготовленная таблица движений
// 
// Возвращаемое значение:
//  ТаблицаХозрасчетный - ТаблицаЗначений- Результат распределния
//
Функция РаспределениеПоСпособуОтраженияРасходовПоАмортизации(ТаблицаДвижений) Экспорт 

	// Результирующая таблица с теми же колонками, что и в запросе.
	ТаблицаХозрасчетный = ТаблицаДвижений.СкопироватьКолонки();

	КэшДанныхСпрСпособыОтрРасхПоАморт = Новый Соответствие();
	
	// Данный цикл перебирает строки ТЗ, полученные из запроса.
	//
	// 1. Если накопленная амортизация не равна нуля, тогда по данной строке идет проверка способа отражения 
	// расходов по амортизации. Обращаемся к табличной части данного справочника и в зависимости от количества 
	// строк в ТЧ строка ТЗ дублируется и записывается в результирующую ТЗ. Записывается счет затрат (СчетДт) и в 
	// зависимости от коэффициентов в строках ТЧ распределяется сумма. А также заполняются созданные колонки "СубконтоДт".
	//
	// 2. В остальных случаях распределять сумму по коэффициенам не нужно, поэтому мы просто копируем строку 
	// в исходную ТЗ и заполняем созданные колонки "СубконтоДт" значениями из колонок "ЗначениеСубконтоДт"
	Для Каждого СтрокаТаблицыЗначений Из ТаблицаДвижений Цикл
		
		Если НЕ СтрокаТаблицыЗначений.РаспределятьПоКоэффициентам Тогда
			СтрокаРезультирующейТЗ = ТаблицаХозрасчетный.Добавить();			
			ЗаполнитьЗначенияСвойств(СтрокаРезультирующейТЗ, СтрокаТаблицыЗначений);
			
			СтрокаРезультирующейТЗ.СубконтоДт1 = СтрокаРезультирующейТЗ.ЗначениеСубконтоДт1;
			СтрокаРезультирующейТЗ.СубконтоДт2 = СтрокаРезультирующейТЗ.ЗначениеСубконтоДт2;
			СтрокаРезультирующейТЗ.СубконтоДт3 = СтрокаРезультирующейТЗ.ЗначениеСубконтоДт3;
			
			Продолжить;
		КонецЕсли;
		
		// В соответствие записывается: 
		// Ключ - ссылка на справочник "СпособыОтраженияРасходовПоАмортизации".
		// Значение - ТЗ из запроса к данному элементу справочника.
		// При каждом шаге основного цикла (перебор ТЗ из данных документа) проверяется наличие строки соответствия 
		// по ссылке на справочник, чтобы не обращаться к запросу каждый раз.
		ТЗСпособаОтражения = КэшДанныхСпрСпособыОтрРасхПоАморт.Получить(СтрокаТаблицыЗначений.СпособОтраженияРасходовПоАмортизации);
		
		Если ТЗСпособаОтражения = Неопределено Тогда
			ТЗСпособаОтражения = УправлениеВнеоборотнымиАктивамиПовтИсп.СпособыОтраженияРасходовПоАмортизации(СтрокаТаблицыЗначений.СпособОтраженияРасходовПоАмортизации); 
			КэшДанныхСпрСпособыОтрРасхПоАморт.Вставить(СтрокаТаблицыЗначений.СпособОтраженияРасходовПоАмортизации, ТЗСпособаОтражения);
		КонецЕсли;
		
		МассивКоэффициентов = ТЗСпособаОтражения.ВыгрузитьКолонку("Коэффициент");
		
		МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаТаблицыЗначений.Сумма, МассивКоэффициентов, 2);
		
		Если МассивСумм = Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		
		ИндексМассива = 0;
		Для Каждого СтрокаМассива Из МассивСумм Цикл
			СтрокаРезультирующейТЗ = ТаблицаХозрасчетный.Добавить();			
			ЗаполнитьЗначенияСвойств(СтрокаРезультирующейТЗ, СтрокаТаблицыЗначений);
			
			СтрокаРезультирующейТЗ.Сумма		   = СтрокаМассива;
			СтрокаРезультирующейТЗ.ВалютнаяСуммаДт = СтрокаМассива;
			СтрокаРезультирующейТЗ.ВалютнаяСуммаКт = СтрокаМассива;
			
			СтрокаРезультирующейТЗ.СчетДт		   = ТЗСпособаОтражения[ИндексМассива].СчетЗатрат;
			СтрокаРезультирующейТЗ.СубконтоДт1     = ТЗСпособаОтражения[ИндексМассива].Субконто1;
			СтрокаРезультирующейТЗ.СубконтоДт2     = ТЗСпособаОтражения[ИндексМассива].Субконто2;
			СтрокаРезультирующейТЗ.СубконтоДт3     = ТЗСпособаОтражения[ИндексМассива].Субконто3;
			
			ИндексМассива = ИндексМассива + 1;
		КонецЦикла;
	КонецЦикла;

	Возврат ТаблицаХозрасчетный;
	
КонецФункции // РаспределениеПоСпособуОтраженияРасходовПоАмортизации()
