
// Расчитывает сумму амортизации по указаному основному средству
//
// Параметры:
//  Период				 - Дата	 - дата расчета амортизации
//  Организация			 - СправочникСсылка.Организации	- Организация для отбора
//  ОсновноеСредство	 - СправочникСсылка.ОсновныеСредства - ОсновноеСредство для отбора
// 
// Возвращаемое значение:
//  СуммаАмортизации - Число
//
Функция РасчетАмортизации(Период, Организация, ОсновноеСредство = Неопределено) Экспорт
	АмортизацияЗаМесяц = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыУчетаОССрезПоследних.ОсновноеСредство,
		|	ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.СрокСлужбы,
		|	ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации,
		|	ДЕНЬ(&Период) КАК КоличествоДнейВМесяце,
		|	ВЫБОР
		|		КОГДА ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Линейный)
		|				И НЕ ПараметрыУчетаОССрезПоследних.СрокСлужбы = 0
		|			ТОГДА ВЫРАЗИТЬ((ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость - ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость) / ПараметрыУчетаОССрезПоследних.СрокСлужбы / ДЕНЬ(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)) * ДЕНЬ(&Период) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК АмортизацияЗаМесяц
		|ПОМЕСТИТЬ ВременнаяТаблицаПараметрыУчетаОС
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И ОсновноеСредство = &ОсновноеСредство) КАК ПараметрыУчетаОССрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УчетнаяПолитикаОрганизацийСрезПоследних.РасчетАмортизационныхОтчисленийПоМесяцам
		|ПОМЕСТИТЬ ВременнаяТаблицаПараметрыУПП
		|ИЗ
		|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Период, Организация = &Организация) КАК УчетнаяПолитикаОрганизацийСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаПараметрыУчетаОС.ОсновноеСредство,
		|	ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость,
		|	ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость,
		|	ВременнаяТаблицаПараметрыУчетаОС.СрокСлужбы,
		|	ВременнаяТаблицаПараметрыУчетаОС.СпособНачисленияАмортизации,
		|	ВременнаяТаблицаПараметрыУчетаОС.КоличествоДнейВМесяце,
		|	ХозрасчетныйОстатки.Счет КАК СчетАмортизации,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаПараметрыУПП.РасчетАмортизационныхОтчисленийПоМесяцам
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйОстатки.СуммаОстатокКт >= ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость
		|						ТОГДА 0
		|					КОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ХозрасчетныйОстатки.СуммаОстатокКт < ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|						ТОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ХозрасчетныйОстатки.СуммаОстатокКт
		|					ИНАЧЕ ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ДЕНЬ(КОНЕЦПЕРИОДА(&НачалоМесяца, ДЕНЬ)) = 1
		|					ТОГДА 0
		|				ИНАЧЕ ВЫРАЗИТЬ(ВЫБОР
		|							КОГДА ХозрасчетныйОстатки.СуммаОстатокКт >= ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость
		|								ТОГДА 0
		|							КОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ХозрасчетныйОстатки.СуммаОстатокКт < ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|								ТОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ХозрасчетныйОстатки.СуммаОстатокКт
		|							ИНАЧЕ ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|						КОНЕЦ * ДЕНЬ(КОНЕЦПЕРИОДА(&Период, ДЕНЬ)) / ДЕНЬ(КОНЕЦПЕРИОДА(&ПЕриод, МЕСЯЦ)) КАК ЧИСЛО(15, 2))
		|			КОНЕЦ
		|	КОНЕЦ КАК АмортизацияЗаМесяц
		|ИЗ
		|	ВременнаяТаблицаПараметрыУчетаОС КАК ВременнаяТаблицаПараметрыУчетаОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
		|				&Период,
		|				,
		|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|				Организация = &Организация
		|					И Субконто1 = &ОсновноеСредство) КАК ХозрасчетныйОстатки
		|		ПО ВременнаяТаблицаПараметрыУчетаОС.ОсновноеСредство = ХозрасчетныйОстатки.Субконто1
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметрыУПП КАК ВременнаяТаблицаПараметрыУПП
		|		ПО (ИСТИНА)";
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("НачалоМесяца", Период + 1);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
	 	АмортизацияЗаМесяц = ВыборкаДетальныеЗаписи.АмортизацияЗаМесяц;		
	КонецЕсли;
	
	Возврат АмортизацияЗаМесяц;	
КонецФункции // РасчетАмортизации()

// Расчитывает сумму амортизации по указаному основному средству
//
// Параметры:
//  ДокументСсылка			- Ссылка - ссылка на документ
//  Период 					- Дата - дата расчета амортизации
//  Организация				- СправочникСсылка.Организации	- Организация для отбора
//  ТабличнаяЧасть 			- ТабличнаяЧасть - табличная часть объекта
// 		* ОсновноеСредство 		- СправочникСсылка.ОсновныеСредства
// 		* АмортизацияЗаМесяц 	- Число
//  МассивОсновныхСредств 	- Массив - ОсновноеСредство для отбора
//
Процедура ЗаполнитьДанныеОсновныхСредствВТабличнойЧасти(ДокументСсылка, Период, Организация, ТабличнаяЧасть, МассивОсновныхСредств = Неопределено) Экспорт
	Если МассивОсновныхСредств = Неопределено Тогда 
		МассивОсновныхСредств = ТабличнаяЧасть.Выгрузить().ВыгрузитьКолонку("ОсновноеСредство");
	КонецЕсли;	
	
	ДанныеУчетнойПолитикиОрганизаций = БухгалтерскийУчетСервер.ПолучитьДанныеУчетнойПолитикиОрганизаций(Период, Организация);

	// 1. Параметры учета
	// 2. Остаточная стоимость
	// 3. Накопленная амортизация
	// 4. Расчет амортизации
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыУчетаОССрезПоследних.ОсновноеСредство,
		|	ПараметрыУчетаОССрезПоследних.ИнвентарныйНомер,
		|	ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.СрокСлужбы,
		|	ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации,
		|	ПараметрыУчетаОССрезПоследних.СпособОтраженияРасходовПоАмортизации,
		|	ДЕНЬ(&Период) КАК КоличествоДнейВМесяце,
		|	ВЫБОР
		|		КОГДА ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Линейный)
		|				И НЕ ПараметрыУчетаОССрезПоследних.СрокСлужбы = 0
		|			ТОГДА ВЫРАЗИТЬ((ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость - ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость) / ПараметрыУчетаОССрезПоследних.СрокСлужбы / ДЕНЬ(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)) * (ДЕНЬ(&Период) - 1) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК АмортизацияЗаМесяц,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета,
		|	ВЫБОР
		|		КОГДА СостоянияОССрезПоследних.Состояние ЕСТЬ NULL
		|			ТОГДА 0
		|		ИНАЧЕ РАЗНОСТЬДАТ(&Период, ДОБАВИТЬКДАТЕ(СостоянияОССрезПоследних.Период, МЕСЯЦ, ПараметрыУчетаОССрезПоследних.СрокСлужбы), МЕСЯЦ)
		|	КОНЕЦ КАК ОстаточныйСрокСлужбы,
		|	МестонахождениеОССрезПоследних.Подразделение КАК Подразделение,
		|	МестонахождениеОССрезПоследних.МОЛ КАК МОЛ
		|ПОМЕСТИТЬ ВременнаяТаблицаПараметрыУчетаОС
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|			&Период,
		|			НЕ Регистратор = &Ссылка
		|				И Организация = &Организация
		|				И ОсновноеСредство В (&МассивОсновныхСредств)) КАК ПараметрыУчетаОССрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОС.СрезПоследних(
		|				&Период,
		|				НЕ Регистратор = &Ссылка
		|					И Организация = &Организация
		|					И ОсновноеСредство В (&МассивОсновныхСредств)
		|					И Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.ПринятоКУчету)) КАК СостоянияОССрезПоследних
		|		ПО ПараметрыУчетаОССрезПоследних.ОсновноеСредство = СостоянияОССрезПоследних.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(
		|				&Период,
		|				НЕ Регистратор = &Ссылка
		|					И Организация = &Организация
		|					И ОсновноеСредство В (&МассивОсновныхСредств)) КАК МестонахождениеОССрезПоследних
		|		ПО ПараметрыУчетаОССрезПоследних.ОсновноеСредство = МестонахождениеОССрезПоследних.ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1 КАК ОсновноеСредство,
		|	ХозрасчетныйОстатки.СуммаОстатокДт КАК БалансоваяСтоимость,
		|	0 КАК НакопленнаяАмортизация,
		|	ХозрасчетныйОстатки.Счет
		|ПОМЕСТИТЬ ВременнаяТаблицаОстатки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			,
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация = &Организация
		|				И Субконто1 В (&МассивОсновныхСредств)) КАК ХозрасчетныйОстатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1,
		|	0,
		|	ХозрасчетныйОстатки.СуммаОстатокКт,
		|	ХозрасчетныйОстатки.Счет
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			,
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация = &Организация
		|				И Субконто1 В (&МассивОсновныхСредств)) КАК ХозрасчетныйОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОстатки.ОсновноеСредство,
		|	СУММА(ВременнаяТаблицаОстатки.БалансоваяСтоимость - ВременнаяТаблицаОстатки.НакопленнаяАмортизация) КАК ОстаточнаяСтоимость,
		|	СУММА(ВременнаяТаблицаОстатки.НакопленнаяАмортизация) КАК НакопленнаяАмортизация
		|ПОМЕСТИТЬ ВременнаяТаблицаОстаткиГруппировка
		|ИЗ
		|	ВременнаяТаблицаОстатки КАК ВременнаяТаблицаОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаОстатки.ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаПараметрыУчетаОС.ОсновноеСредство,
		|	ВременнаяТаблицаПараметрыУчетаОС.ИнвентарныйНомер,
		|	ВременнаяТаблицаПараметрыУчетаОС.СчетУчета,
		|	ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость,
		|	ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость,
		|	ВременнаяТаблицаПараметрыУчетаОС.СрокСлужбы,
		|	ВременнаяТаблицаПараметрыУчетаОС.СпособНачисленияАмортизации,
		|	ВременнаяТаблицаПараметрыУчетаОС.СпособОтраженияРасходовПоАмортизации,
		|	ВременнаяТаблицаПараметрыУчетаОС.КоличествоДнейВМесяце,
		|	ВременнаяТаблицаПараметрыУчетаОС.ОстаточныйСрокСлужбы,
		|	ВременнаяТаблицаПараметрыУчетаОС.Подразделение,
		|	ВременнаяТаблицаПараметрыУчетаОС.МОЛ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОстаткиГруппировка.НакопленнаяАмортизация >= ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость
		|			ТОГДА 0
		|		КОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ВременнаяТаблицаОстаткиГруппировка.НакопленнаяАмортизация < ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|			ТОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ВременнаяТаблицаОстаткиГруппировка.НакопленнаяАмортизация
		|		ИНАЧЕ ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|	КОНЕЦ КАК АмортизацияЗаМесяц,
		|	ВременнаяТаблицаОстаткиГруппировка.ОстаточнаяСтоимость,
		|	ВременнаяТаблицаОстаткиГруппировка.НакопленнаяАмортизация
		|ИЗ
		|	ВременнаяТаблицаПараметрыУчетаОС КАК ВременнаяТаблицаПараметрыУчетаОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОстаткиГруппировка КАК ВременнаяТаблицаОстаткиГруппировка
		|		ПО ВременнаяТаблицаПараметрыУчетаОС.ОсновноеСредство = ВременнаяТаблицаОстаткиГруппировка.ОсновноеСредство";
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("МассивОсновныхСредств", МассивОсновныхСредств);
	Запрос.УстановитьПараметр("РасчетАмортизационныхОтчисленийПоМесяцам", ДанныеУчетнойПолитикиОрганизаций.РасчетАмортизационныхОтчисленийПоМесяцам);

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл  
		СтрокиТабличнойЧасти = ТабличнаяЧасть.НайтиСтроки(Новый Структура("ОсновноеСредство", ВыборкаДетальныеЗаписи.ОсновноеСредство));
		Для Каждого СтрокаТабличнойЧасти Из СтрокиТабличнойЧасти Цикл
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ВыборкаДетальныеЗаписи);	
		КонецЦикла;		
	КонецЦикла;
КонецПроцедуры // ЗаполнитьДанныеОсновныхСредствВТабличнойЧасти()

// Функция получает таблицу значений с указанием списка ОС или НМА и сумм амортизации
//  возвращает таблицу значений с распределенными значениями амортизации
//
// Параметры:
//  ДокОбъект		 - 	 - 
//  Отказ			 - 	 - 
//  Заголовок		 - 	 - 
//  ТабАмортизации	 - 	 - 
//  Организация		 - 	 - 
//  ТипУчета		 - 	 - 
//  НомерЖурнала	 - 	 - 
//  ТекстПроводки	 - 	 - 
// 
// Возвращаемое значение:
//   - 
//
Функция ПолучитьРаспределениеАмортизацииПоНаправлениямРегл(ДокОбъект, Отказ, Заголовок, ТабАмортизации, Организация, ТипУчета, НомерЖурнала, ТекстПроводки = Неопределено) Экспорт 
	
	ДатаРасчета = ДокОбъект.Дата;
	
	// определим структуру выходной таблицы 	
	Массив = Новый Массив;
	
	Массив.Добавить(Тип("Число"));
	КвалификаторЧисла = Новый КвалификаторыЧисла(15, 2); 
	
	ТабЗатрат = Новый ТаблицаЗначений;
	ТабЗатрат.Колонки.Добавить("Сумма", 				 Новый ОписаниеТипов(Массив, КвалификаторЧисла)); 
	ТабЗатрат.Колонки.Добавить("СчетЗатрат", 			 Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТабЗатрат.Колонки.Добавить("СчетАмортизации", 		 Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТабЗатрат.Колонки.Добавить("СчетУчета", 			 Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТабЗатрат.Колонки.Добавить("ОсновноеСредство", 			 Новый ОписаниеТипов("СправочникСсылка.ОсновныеСредства"));
	ТабЗатрат.Колонки.Добавить("ИнвентарныйНомер");	
	ТабЗатрат.Колонки.Добавить("Субконто1", 			 Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные"));                      
	ТабЗатрат.Колонки.Добавить("Субконто2", 			 Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные"));
	ТабЗатрат.Колонки.Добавить("Субконто3", 			 Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные"));
	ТабЗатрат.Колонки.Добавить("СпособОтраженияРасходовПоАмортизации", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияРасходовПоАмортизации"));

	ТабЗатрат.Колонки.Добавить("ВходитВСостав", Новый ОписаниеТипов("Булево"));
	ТабЗатрат.Колонки.Добавить("ЭтоКомплект", 	Новый ОписаниеТипов("Булево"));
	ТабЗатрат.Колонки.Добавить("Комплект", 		Новый ОписаниеТипов("СправочникСсылка.ОсновныеСредства"));
	ТабЗатрат.Колонки.Добавить("ПоследнийМесяцНачисления", Новый ОписаниеТипов("Булево"));
	
	МассивКоэф = Новый Массив;
	
	// цикл по Объектам из ТабАмортизации
	Для Каждого СтрокаТЗ Из ТабАмортизации Цикл
		
		Если СтрокаТЗ.Сумма=0 тогда
			//Распределять амортизацию не надо, так как распределять нечего.
			Продолжить;
		КонецЕсли;
		
		Если не ЗначениеЗаполнено(СтрокаТЗ.СпособОтраженияРасходовПоАмортизации) Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаТЗ.СпособОтраженияРасходовПоАмортизации.Способы.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		МассивКоэф.Очистить();
		Для Каждого СтрокаНапр Из СтрокаТЗ.СпособОтраженияРасходовПоАмортизации.Способы Цикл
			МассивКоэф.Добавить(СтрокаНапр.Коэффициент);
		КонецЦикла;
		
		МассивСумм = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаТЗ.Сумма, МассивКоэф);
		Если МассивСумм = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если МассивСумм.Количество() <> МассивКоэф.Количество() Тогда
			Продолжить;
		КонецЕсли;
		
		
		Для Каждого СтрокаНапр Из СтрокаТЗ.СпособОтраженияРасходовПоАмортизации.Способы Цикл
			НоваяСтрока = ТабЗатрат.Добавить();
			НоваяСтрока.СчетЗатрат		= СтрокаНапр.СчетЗатрат;
			
			// заполнение колонки счет затрат в док. Закрытие месяца
			Если НЕ ТабАмортизации.Колонки.Найти("СчетЗатрат") = НЕопределено Тогда 
				СтрокаТЗ.СчетЗатрат = СтрокаНапр.СчетЗатрат;
			КонецЕсли;
			
			Если НЕ ТабАмортизации.Колонки.Найти("СпособОтраженияРасходовПоАмортизации") = НЕопределено Тогда 
				
				НоваяСтрока.СпособОтраженияРасходовПоАмортизации = СтрокаТЗ.СпособОтраженияРасходовПоАмортизации;
			КонецЕсли;
						
			НоваяСтрока.ОсновноеСредство		= СтрокаТЗ.ОсновноеСредство;
			НоваяСтрока.ИнвентарныйНомер= СтрокаТЗ.ИнвентарныйНомер;
			НоваяСтрока.СчетАмортизации	= СтрокаТЗ.СчетАмортизации;
			НоваяСтрока.СчетУчета		= СтрокаТЗ.СчетУчета;
			НоваяСтрока.Субконто1		= СтрокаНапр.Субконто1;
			НоваяСтрока.Субконто2		= СтрокаНапр.Субконто2;
			НоваяСтрока.Субконто3		= СтрокаНапр.Субконто3;  			
						
			НоваяСтрока.Сумма			= МассивСумм[СтрокаНапр.НомерСтроки - 1];
		КонецЦикла;
				
		Если НЕ ТабАмортизации.Колонки.НАйти("ЭтоКомплект") = Неопределено Тогда 
			НоваяСтрока.ЭтоКомплект		= СтрокаТЗ.ЭтоКомплект;
		КонецЕсли;
				
		Если НЕ ТабАмортизации.Колонки.НАйти("ПоследнийМесяцНачисления") = Неопределено Тогда 
			НоваяСтрока.ПоследнийМесяцНачисления = СтрокаТЗ.ПоследнийМесяцНачисления;
		КонецЕсли;
	КонецЦикла;    
	
	Возврат ТабЗатрат;
	
КонецФункции // ПолучитьРаспределениеАмортизацииПоНаправлениямРегл()

// Функция - Получить параметры учета ОС
//
// Параметры:
//  Период			 - Дата	 								- дата, на которую нужно получить сведения
//  Организация		 - СправочникСсылка.Организации	 		- организация для отбора
//  ОсновноеСредство - СправочникСсылка.ОсновноеСредство	- основное средство для отбора
// 
// Возвращаемое значение:
//  ПараметрыУчетаОС - Структура с параметрами 
//
Функция ПолучитьПараметрыУчетаОС(Период, Организация, ОсновноеСредство) Экспорт
	
	ПараметрыОтбора = Новый Структура("Организация, ОсновноеСредство",  Организация, ОсновноеСредство);
	ПараметрыУчетаОС = РегистрыСведений.ПараметрыУчетаОС.ПолучитьПоследнее(Период, ПараметрыОтбора);
	ПараметрыУчетаОС.Вставить("СчетРасходовПоИзносу", ПараметрыУчетаОС.СпособОтраженияРасходовПоАмортизации.СчетЗатрат);
	
	ПараметрыУчетаОС.Вставить("ОстаточнаяСтоимость", 0);
	ПараметрыУчетаОС.Вставить("НакопленнаяАмортизация", 0);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1 КАК ОсновноеСредство,
		|	ХозрасчетныйОстатки.СуммаОстатокДт КАК ОстаточнаяСтоимость,
		|	0 КАК НакопленнаяАмортизация,
		|	ХозрасчетныйОстатки.Счет
		|ПОМЕСТИТЬ ВременнаяТаблицаОстатки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			,
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация = &Организация
		|				И Субконто1 = &ОсновноеСредство) КАК ХозрасчетныйОстатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1,
		|	0,
		|	ХозрасчетныйОстатки.СуммаОстатокКт,
		|	ХозрасчетныйОстатки.Счет
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			,
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация = &Организация
		|				И Субконто1 = &ОсновноеСредство) КАК ХозрасчетныйОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОстатки.ОсновноеСредство,
		|	СУММА(ВременнаяТаблицаОстатки.ОстаточнаяСтоимость) КАК ОстаточнаяСтоимость,
		|	СУММА(ВременнаяТаблицаОстатки.НакопленнаяАмортизация) КАК НакопленнаяАмортизация
		|ИЗ
		|	ВременнаяТаблицаОстатки КАК ВременнаяТаблицаОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаОстатки.ОсновноеСредство";
	Запрос.УстановитьПараметр("Период",							Период);
	Запрос.УстановитьПараметр("Организация",       				Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство",  				ОсновноеСредство);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	// Обход выборки
	Если Выборка.Следующий() Тогда 
		ЗаполнитьЗначенияСвойств(ПараметрыУчетаОС, Выборка);
	КонецЕсли; 
	
	Возврат ПараметрыУчетаОС;
КонецФункции // ОпределитьСтоимостьПоСпискуОС()

