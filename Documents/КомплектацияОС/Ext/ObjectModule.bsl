#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеОбъектовБП.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения);
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ВидОперации) Тогда
		ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийКомплектацияОС.Комплектация;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.КомплектацияОС.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	БухгалтерскийУчетСервер.ОтразитьСоставОС(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей.
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
КонецПроцедуры // ОбработкаУдаленияПроведения()

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Предварительный контроль
	ВыполнитьПредварительныйКонтроль(Отказ);	
КонецПроцедуры

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

// Процедура выполняет контроль противоречий.
//
Процедура ВыполнитьПредварительныйКонтроль(Отказ)
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	КонтрольДублейИПараметровУчета(Отказ);
	
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	СостоянияОССрезПоследних.ОсновноеСредство,
	//	|	СостоянияОССрезПоследних.Состояние,
	//	|	СостоянияОССрезПоследних.Регистратор
	//	|ИЗ
	//	|	РегистрСведений.СостоянияОС.СрезПоследних(
	//	|			&Период,
	//	|			Организация = &Организация
	//	|				И ОсновноеСредство = &ОсновноеСредство
	//	|				И НЕ Регистратор = &Ссылка) КАК СостоянияОССрезПоследних";
	//Запрос.Параметры.Вставить("Период", Дата);	
	//Запрос.Параметры.Вставить("Ссылка", Ссылка);	
	//Запрос.Параметры.Вставить("Организация", Организация);
	//Запрос.Параметры.Вставить("ОсновноеСредство", ОсновноеСредство);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//Если ВыборкаДетальныеЗаписи.Следующий() Тогда
	//	// Снято с учета или передано
	//	Если ВыборкаДетальныеЗаписи.Состояние = Перечисления.ВидыСостоянийОС.СнятоСУчета
	//		Или ВыборкаДетальныеЗаписи.Состояние = Перечисления.ВидыСостоянийОС.Передано Тогда
	//		ТекстСообщения = СтрШаблон(НСтр("ru = 'Основное средство ""%1"" снято с учета документом ""%2"".'"), 
	//			ВыборкаДетальныеЗаписи.ОсновноеСредство, ВыборкаДетальныеЗаписи.Регистратор);		
	//		БухгалтерскийУчетСервер.СообщитьОбОшибке(
	//			ЭтотОбъект,   
	//			ТекстСообщения,
	//			,
	//			,
	//			"ОсновноеСредство",
	//			Отказ);
	//	КонецЕсли;		
	//Иначе
	//	// Не принято к учету 
	//	ТекстСообщения = СтрШаблон(НСтр("ru = 'Основное средство ""%1"" не принято к учету.'"), ВыборкаДетальныеЗаписи.ОсновноеСредство);		
	//	БухгалтерскийУчетСервер.СообщитьОбОшибке(
	//		ЭтотОбъект,   
	//		ТекстСообщения,
	//		,
	//		,
	//		"ОсновноеСредство",
	//		Отказ);
	//КонецЕсли;
КонецПроцедуры

Процедура КонтрольДублейИПараметровУчета(Отказ)

	Запрос = Новый Запрос;
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВременнаяТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоставОССрезПоследних.ОсновноеСредствоВСоставеКомплекта КАК ОсновноеСредствоВСоставеКомплекта,
	|	СоставОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ВременнаяТаблицаОСВКомплектах
	|ИЗ
	|	РегистрСведений.СоставОС.СрезПоследних(&Дата, НЕ ОсновноеСредство = &ОсновноеСредство) КАК СоставОССрезПоследних
	|ГДЕ
	|	СоставОССрезПоследних.СостояниеВСоставеОС В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияОС.Комплектация), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияОС.Добавление))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВременнаяТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВременнаяТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	СостоянияОССрезПоследних.Состояние КАК Состояние,
	|	МестонахождениеОССрезПоследних.МОЛ КАК МОЛ,
	|	МестонахождениеОССрезПоследних.Подразделение КАК Подразделение,
	|	ПараметрыУчетаОССрезПоследних.СчетУчета КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаОСВКомплектах.ОсновноеСредствоВСоставеКомплекта ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВходитВДругойКомплект,
	|	СостоянияОССрезПоследних.Регистратор КАК РегистраторСнятоСУчета,
	|	ВременнаяТаблицаОСВКомплектах.ОсновноеСредство КАК ДругойКомплект
	|ИЗ
	|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
	|				ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
	|				НЕ Регистратор = &ДокументСсылка
	|					И Организация = &Организация) КАК ПараметрыУчетаОССрезПоследних
	|		ПО ВременнаяТаблицаОС.ОсновноеСредство = ПараметрыУчетаОССрезПоследних.ОсновноеСредство
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОС.СрезПоследних(
	|				ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
	|				НЕ Регистратор = &ДокументСсылка
	|					И Организация = &Организация) КАК СостоянияОССрезПоследних
	|		ПО ВременнаяТаблицаОС.ОсновноеСредство = СостоянияОССрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних КАК МестонахождениеОССрезПоследних
	|		ПО ВременнаяТаблицаОС.ОсновноеСредство = МестонахождениеОССрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОСВКомплектах КАК ВременнаяТаблицаОСВКомплектах
	|		ПО ВременнаяТаблицаОС.ОсновноеСредство = ВременнаяТаблицаОСВКомплектах.ОсновноеСредствоВСоставеКомплекта
	|ГДЕ
	|	НЕ ВременнаяТаблицаОСВКомплектах.ОсновноеСредствоВСоставеКомплекта ЕСТЬ NULL";
	
	Запрос.Параметры.Вставить("Дата", 				Дата);
	Запрос.Параметры.Вставить("ДокументСсылка", 	Ссылка);
	Запрос.Параметры.Вставить("Организация", 		Организация);	
	Запрос.Параметры.Вставить("ТаблицаОС", 			ОС.Выгрузить());
	Запрос.Параметры.Вставить("ОсновноеСредство", 	ОсновноеСредство);	

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		// Снято с учета или передано
		Если ВыборкаДетальныеЗаписи.Состояние = Перечисления.ВидыСостоянийОС.СнятоСУчета
			Или ВыборкаДетальныеЗаписи.Состояние = Перечисления.ВидыСостоянийОС.Передано Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Основное средство ""%1"" снято с учета документом ""%2"".'"), 
				ВыборкаДетальныеЗаписи.ОсновноеСредство, ВыборкаДетальныеЗаписи.РегистраторСнятоСУчета);		
			БухгалтерскийУчетСервер.СообщитьОбОшибке(
				ЭтотОбъект,   
				ТекстСообщения,
				"ОС",
				ВыборкаДетальныеЗаписи.НомерСтроки,
				"ОсновноеСредство",
				Отказ);
		КонецЕсли;		
		
		// Входит в другой комплект
		Если ВыборкаДетальныеЗаписи.ВходитВДругойКомплект Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Основное средство ""%1"" входит в другой комплект ""%2"".'"), 
				ВыборкаДетальныеЗаписи.ОсновноеСредство, ВыборкаДетальныеЗаписи.ДругойКомплект);		
			БухгалтерскийУчетСервер.СообщитьОбОшибке(
				ЭтотОбъект,   
				ТекстСообщения,
				"ОС",
				ВыборкаДетальныеЗаписи.НомерСтроки,
				"ОсновноеСредство",
				Отказ);
		КонецЕсли;	
			
		// Не соответствие счета учета ОС в табличной части счету учета комплекта
		Если НЕ ВыборкаДетальныеЗаписи.СчетУчета = СчетУчета Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'У основного средства ""%1"" счет учета ""%2"".'"), 
				ВыборкаДетальныеЗаписи.ОсновноеСредство, ВыборкаДетальныеЗаписи.СчетУчета);		
			БухгалтерскийУчетСервер.СообщитьОбОшибке(
				ЭтотОбъект,   
				ТекстСообщения,
				"ОС",
				ВыборкаДетальныеЗаписи.НомерСтроки,
				"ОсновноеСредство",
				Отказ);
		КонецЕсли;
						
		// Не соответствие МОЛа ОС в табличной части МОЛу комплекта
		Если НЕ ВыборкаДетальныеЗаписи.МОЛ = МОЛ Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Основного средство ""%1"" находится на учете у МОЛа ""%2"".'"), 
				ВыборкаДетальныеЗаписи.ОсновноеСредство, ВыборкаДетальныеЗаписи.МОЛ);		
			БухгалтерскийУчетСервер.СообщитьОбОшибке(
				ЭтотОбъект,   
				ТекстСообщения,
				"ОС",
				ВыборкаДетальныеЗаписи.НомерСтроки,
				"ОсновноеСредство",
				Отказ);
		КонецЕсли;				
						
		// Не соответствие подразделения ОС в табличной части подразделению комплекта
		Если НЕ ВыборкаДетальныеЗаписи.Подразделение = Подразделение Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Основного средство ""%1"" находится на учете в подразделении ""%2"".'"), 
				ВыборкаДетальныеЗаписи.ОсновноеСредство, ВыборкаДетальныеЗаписи.Подразделение);		
			БухгалтерскийУчетСервер.СообщитьОбОшибке(
				ЭтотОбъект,   
				ТекстСообщения,
				"ОС",
				ВыборкаДетальныеЗаписи.НомерСтроки,
				"ОсновноеСредство",
				Отказ);
		КонецЕсли;			

	КонецЕсли;
	
КонецПроцедуры




#КонецОбласти

#КонецЕсли