#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыЗаполненияДокумента

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоСчетуНаОплатуПокупателю(ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДанныеЗаполнения;
	
	// Шапка
	Организация			= ДанныеЗаполнения.Организация;
	ВалютаДокумента     = ДанныеЗаполнения.ВалютаДокумента;
	БанковскийСчет      = ДанныеЗаполнения.БанковскийСчет;
	Контрагент          = ДанныеЗаполнения.Контрагент;
	ДоговорКонтрагента  = ДанныеЗаполнения.ДоговорКонтрагента;
	ВидПоставкиНДС      = ДанныеЗаполнения.ВидПоставкиНДС;
	СуммаДокумента      = ДанныеЗаполнения.СуммаДокумента;
	СуммаНДС            = ДанныеЗаполнения.СуммаНДС;
	СуммаНСП            = ДанныеЗаполнения.СуммаНСП;
	
	// Заполнение по ТЧ "Товары"
	Для каждого СтрокаТабличнойЧасти Из ДанныеЗаполнения.Товары Цикл
		НоваяСтрока = ТоварыИУслуги.Добавить();	
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
		СчетаУчетаНоменклатуры = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСчетаУчетаНоменклатуры(Организация, СтрокаТабличнойЧасти.Номенклатура);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СчетаУчетаНоменклатуры);
	КонецЦикла;
	
	// Заполнение по ТЧ "Услуги"
	Для каждого СтрокаТабличнойЧасти Из ДанныеЗаполнения.Услуги Цикл
		НоваяСтрока = ТоварыИУслуги.Добавить();	
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
	    СчетаУчетаНоменклатуры = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСчетаУчетаНоменклатуры(Организация, СтрокаТабличнойЧасти.Номенклатура);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СчетаУчетаНоменклатуры);
	КонецЦикла;

КонецПроцедуры

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоВозвратуОтПокупателя(ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДанныеЗаполнения;
	
	// Шапка
	Организация			= ДанныеЗаполнения.Организация;
	ВалютаДокумента     = ДанныеЗаполнения.ВалютаДокумента;
	//БанковскийСчет      = ДанныеЗаполнения.БанковскийСчет;
	Контрагент          = ДанныеЗаполнения.Контрагент;
	ДоговорКонтрагента  = ДанныеЗаполнения.ДоговорКонтрагента;
	ВидПоставкиНДС      = ДанныеЗаполнения.ДоговорКонтрагента.ВидПоставкиНДС;
	СуммаДокумента      = ДанныеЗаполнения.СуммаДокумента;
	СуммаНДС            = ДанныеЗаполнения.Товары.Итог("СуммаНДС");
	СуммаНСП            = ДанныеЗаполнения.Товары.Итог("СуммаНСП");
	
	// Товары и услуги
	Для каждого СтрокаТабличнойЧасти Из ДанныеЗаполнения.Товары Цикл
		НоваяСтрока = ТоварыИУслуги.Добавить();	
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
		НоваяСтрока.Сумма = СтрокаТабличнойЧасти.Всего;
		НоваяСтрока.ДокументРеализации = ДанныеЗаполнения; 
	КонецЦикла;
	
КонецПроцедуры

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоРеализацииТоваровУслуг(ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДанныеЗаполнения;
	
	// Шапка
	Организация			= ДанныеЗаполнения.Организация;
	ВалютаДокумента     = ДанныеЗаполнения.ВалютаДокумента;
	БанковскийСчет      = ДанныеЗаполнения.Контрагент.ОсновнойБанковскийСчет;
	Контрагент          = ДанныеЗаполнения.Контрагент;
	ДоговорКонтрагента  = ДанныеЗаполнения.ДоговорКонтрагента;
	ВидПоставкиНДС      = ДанныеЗаполнения.ДоговорКонтрагента.ВидПоставкиНДС;
	СуммаДокумента      = ДанныеЗаполнения.СуммаДокумента;
	СуммаНДС            = ДанныеЗаполнения.Товары.Итог("СуммаНДС");
	СуммаНСП            = ДанныеЗаполнения.Товары.Итог("СуммаНСП");
	
	// Заполнение по ТЧ "Товары"
	Для каждого СтрокаТабличнойЧасти Из ДанныеЗаполнения.Товары Цикл
		НоваяСтрока = ТоварыИУслуги.Добавить();	
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
		НоваяСтрока.Сумма = СтрокаТабличнойЧасти.Всего;
		НоваяСтрока.ДокументРеализации = ДанныеЗаполнения; 
	КонецЦикла;
	
	// Заполнение по ТЧ "Услуги"
	Для каждого СтрокаТабличнойЧасти Из ДанныеЗаполнения.Услуги Цикл
		НоваяСтрока = ТоварыИУслуги.Добавить();	
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
		НоваяСтрока.Сумма = СтрокаТабличнойЧасти.Всего;
		НоваяСтрока.ДокументРеализации = ДанныеЗаполнения;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка) Экспорт 
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("ДокументСсылка.СчетНаОплатуПокупателю")] = "ЗаполнитьПоСчетуНаОплатуПокупателю";
	СтратегияЗаполнения[Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")] = "ЗаполнитьПоВозвратуОтПокупателя";
	СтратегияЗаполнения[Тип("ДокументСсылка.РеализацияТоваровУслуг")] = "ЗаполнитьПоРеализацииТоваровУслуг";
	
	ЗаполнениеОбъектов.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения);
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.СчетФактураВыписанный.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	БухгалтерскийУчетСервер.ОтразитьБланкиСФ(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьСчетаФактурыВыписанные(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей.
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли