#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ЗаполненияДокумента

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоВозвратуОтПокупателя(ДанныеЗаполнения) Экспорт
	
	Организация			= ДанныеЗаполнения.Организация;
	Контрагент			= ДанныеЗаполнения.Контрагент;
	ДоговорКонтрагента  = ДанныеЗаполнения.ДоговорКонтрагента;
	ВалютаДокумента     = ДанныеЗаполнения.ВалютаДокумента;
	СтавкаНДС			= ДанныеЗаполнения.СтавкаНДС;
	СтавкаНСП			= ДанныеЗаполнения.СтавкаНСП;
	СуммаВключаетНалоги	= ДанныеЗаполнения.СуммаВключаетНалоги;	
	БезналичныйРасчет	= ДанныеЗаполнения.БезналичныйРасчет;
	СуммаДокумента      = ДанныеЗаполнения.СуммаДокумента;
	СуммаВключаетНалоги	= ДанныеЗаполнения.СуммаВключаетНалоги;
	ВозвратТоваров		= Истина;
	ЭкспортнаяПоставка	= ДанныеЗаполнения.ЭкспортнаяПоставка;
	
	МассивТабличныхЧастей = Новый Массив();
	МассивТабличныхЧастей.Добавить(ДанныеЗаполнения.Товары);
	МассивТабличныхЧастей.Добавить(ДанныеЗаполнения.Услуги);
	
	Для Каждого ТабличнаяЧасть Из МассивТабличныхЧастей Цикл
		Для Каждого СтрокаТабличнойЧастиТовары Из ТабличнаяЧасть Цикл
			СтрокаТабличнойЧасти = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаТабличнойЧастиТовары);
			
			СтрокаТабличнойЧасти.Сумма 		 = -СтрокаТабличнойЧасти.Сумма;
			СтрокаТабличнойЧасти.СуммаНДС 	 = -СтрокаТабличнойЧасти.СуммаНДС;
			СтрокаТабличнойЧасти.СуммаНСП 	 = -СтрокаТабличнойЧасти.СуммаНСП;
			СтрокаТабличнойЧасти.СуммаДохода = -СтрокаТабличнойЧасти.СуммаДохода;
			СтрокаТабличнойЧасти.Всего		 = -СтрокаТабличнойЧасти.Всего;
			
			СтрокаТабличнойЧасти.ДокументОснования 	= ДанныеЗаполнения;
		КонецЦикла;
	КонецЦикла;
	
	СтрокаТабличнойЧастиДокументы = ДокументыОснования.Добавить();
	СтрокаТабличнойЧастиДокументы.ДокументОснование = ДанныеЗаполнения;
	СтрокаТабличнойЧастиДокументы.Сумма 			= -(ДанныеЗаполнения.Товары.Итог("Сумма") + ДанныеЗаполнения.Услуги.Итог("Сумма"));
	СтрокаТабличнойЧастиДокументы.СуммаНДС 			= -(ДанныеЗаполнения.Товары.Итог("СуммаНДС") + ДанныеЗаполнения.Услуги.Итог("СуммаНДС"));
	СтрокаТабличнойЧастиДокументы.СуммаНСП 			= -(ДанныеЗаполнения.Товары.Итог("СуммаНСП") + ДанныеЗаполнения.Услуги.Итог("СуммаНСП"));
	СтрокаТабличнойЧастиДокументы.Всего 			= -(ДанныеЗаполнения.Товары.Итог("Всего") + ДанныеЗаполнения.Услуги.Итог("Всего"));
	СтрокаТабличнойЧастиДокументы.СуммаДохода 		= -(ДанныеЗаполнения.Товары.Итог("СуммаДохода") + ДанныеЗаполнения.Услуги.Итог("СуммаДохода"));
КонецПроцедуры

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоРеализацииТоваровУслуг(ДанныеЗаполнения) Экспорт
	
	Организация			= ДанныеЗаполнения.Организация;
	Контрагент			= ДанныеЗаполнения.Контрагент;
	ДоговорКонтрагента  = ДанныеЗаполнения.ДоговорКонтрагента;
	ВалютаДокумента     = ДанныеЗаполнения.ВалютаДокумента;
	СтавкаНДС			= ДанныеЗаполнения.СтавкаНДС;
	СтавкаНСП			= ДанныеЗаполнения.СтавкаНСП;
	СуммаВключаетНалоги	= ДанныеЗаполнения.СуммаВключаетНалоги;	
	БезналичныйРасчет	= ДанныеЗаполнения.БезналичныйРасчет;
	СуммаДокумента      = ДанныеЗаполнения.СуммаДокумента;
	СуммаВключаетНалоги	= ДанныеЗаполнения.СуммаВключаетНалоги;
	ЭкспортнаяПоставка	= ДанныеЗаполнения.ЭкспортнаяПоставка;
	
	Для Каждого СтрокаТабличнойЧастиТовары Из ДанныеЗаполнения.Товары Цикл
		СтрокаТабличнойЧасти = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаТабличнойЧастиТовары);
		СтрокаТабличнойЧасти.ДокументОснования 	= ДанныеЗаполнения;
	КонецЦикла;	
	
	Для Каждого СтрокаТабличнойЧастиУслуги Из ДанныеЗаполнения.Услуги Цикл
		СтрокаТабличнойЧасти = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаТабличнойЧастиУслуги);
		СтрокаТабличнойЧасти.ДокументОснования 	= ДанныеЗаполнения;
	КонецЦикла;
	
	СтрокаТабличнойЧастиДокументы = ДокументыОснования.Добавить();
	СтрокаТабличнойЧастиДокументы.ДокументОснование = ДанныеЗаполнения;
	СтрокаТабличнойЧастиДокументы.Сумма = ДанныеЗаполнения.Товары.Итог("Сумма") + ДанныеЗаполнения.Услуги.Итог("Сумма");
	СтрокаТабличнойЧастиДокументы.СуммаНДС = ДанныеЗаполнения.Товары.Итог("СуммаНДС") + ДанныеЗаполнения.Услуги.Итог("СуммаНДС");
	СтрокаТабличнойЧастиДокументы.СуммаНСП = ДанныеЗаполнения.Товары.Итог("СуммаНСП") + ДанныеЗаполнения.Услуги.Итог("СуммаНСП");
	СтрокаТабличнойЧастиДокументы.Всего = ДанныеЗаполнения.Товары.Итог("Всего") + ДанныеЗаполнения.Услуги.Итог("Всего");
	СтрокаТабличнойЧастиДокументы.СуммаДохода = ДанныеЗаполнения.Товары.Итог("СуммаДохода") + ДанныеЗаполнения.Услуги.Итог("СуммаДохода");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка) Экспорт 
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")] = "ЗаполнитьПоВозвратуОтПокупателя";
	СтратегияЗаполнения[Тип("ДокументСсылка.РеализацияТоваровУслуг")] = "ЗаполнитьПоРеализацииТоваровУслуг";
	
	ЗаполнениеОбъектовБП.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения);
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;	
	
	ОбщегоНазначенияБПСервер.ДобавитьНепроверяемыеРеквизитыПоПараметрамФункциональныхОпций(МассивНепроверяемыхРеквизитов, Организация, Дата);
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ВыполнитьПредварительныйКонтроль(Отказ);
КонецПроцедуры

// Процедура - обработчик события ПередЗаписью объекта.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СуммаДокумента = ДокументыОснования.Итог("Сумма");	
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.СчетФактураВыписанный.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	БухгалтерскийУчетСервер.ОтразитьБланкиСчетовФактур(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьСчетаФактурыВыписанные(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей.
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура выполняет контроль противоречий.
//
Процедура ВыполнитьПредварительныйКонтроль(Отказ)
	
	// Проверка наличия серии и номера СФ в базе.
	Если ЗначениеЗаполнено(СерияБланкаСФ) И СерияБланкаСФ <> "ДПБУ" Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	БланкиСчетовФактурОбороты.СерияБланкаСФ КАК СерияБланкаСФ,
			|	БланкиСчетовФактурОбороты.Регистратор КАК Регистратор,
			|	ЕСТЬNULL(БланкиСчетовФактурОбороты.КоличествоРасход, 0) КАК КоличествоРасход,
			|	ЕСТЬNULL(БланкиСчетовФактурОбороты.КоличествоПриход, 0) КАК КоличествоПриход
			|ИЗ
			|	РегистрНакопления.БланкиСчетовФактур.Обороты(
			|			,
			|			,
			|			Авто,
			|			Организация = &Организация
			|				И СерияБланкаСФ = &СерияБланкаСФ
			|				И НомерБланкаСФ = &НомерБланкаСФ) КАК БланкиСчетовФактурОбороты
			|ГДЕ
			|	НЕ БланкиСчетовФактурОбороты.Регистратор = &Ссылка";
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("СерияБланкаСФ", СерияБланкаСФ);
		Запрос.УстановитьПараметр("НомерБланкаСФ", НомерБланкаСФ);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		              
		Если РезультатЗапроса.Пустой() Тогда
			ТекстСообщения = НСтр("ru = 'Указанных серии или номера СФ нет в базе. Необходимо оформить документ ""Поступление бланков счетов-фактур"".'");
			БухгалтерскийУчетСервер.СообщитьОбОшибке(ЭтотОбъект, ТекстСообщения,,,, Отказ);	
		Иначе
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
				Если ВыборкаДетальныеЗаписи.КоличествоРасход > 0 Тогда 
					ТекстСообщения = СтрШаблон(НСтр("ru = 'Указанные серия и номер СФ уже использованы. %1.'"), ВыборкаДетальныеЗаписи.Регистратор);
					БухгалтерскийУчетСервер.СообщитьОбОшибке(ЭтотОбъект, ТекстСообщения,,,, Отказ);	
					Прервать;
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;			
	КонецЕсли;	
КонецПроцедуры // ВыполнитьПредварительныйКонтроль()

// Процедура заполнения табличной части "ДокументыОснования".
//
Процедура ЗаполнитьДокументыОснования() Экспорт

	// Заполнение массива контрагентов,
	// при включенной настройке добавляются филиалы.
	МассивКонтрагентов = Новый Массив;
	МассивКонтрагентов.Добавить(Контрагент);
	
	ПечататьСчетаФактурыСГоловнымКонтрагентом = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьЗначениеКонстанты("ПечататьСчетаФактурыСГоловнымКонтрагентом");
	Если ПечататьСчетаФактурыСГоловнымКонтрагентом Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Контрагенты.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	Контрагенты.ГоловнойКонтрагент = &Контрагент";
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			МассивКонтрагентов.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
	КонецЕсли;	
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Отбор документов по периоду, контрагенту и организации,
	// а также отсечение документов уже использованных в счет фактурах выписанных.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СчетаФактурыВыписанные.Документ КАК Документ,
		|	МАКСИМУМ(СчетаФактурыВыписанные.ЗаполненоПоТоварам) КАК ЗаполненоПоТоварам,
		|	МАКСИМУМ(СчетаФактурыВыписанные.ЗаполненоПоУслугам) КАК ЗаполненоПоУслугам
		|ПОМЕСТИТЬ ВременнаяТаблицаЗаполнениеПоСчетФактурам
		|ИЗ
		|	РегистрСведений.СчетаФактурыВыписанные КАК СчетаФактурыВыписанные
		|ГДЕ
		|	СчетаФактурыВыписанные.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И СчетаФактурыВыписанные.Организация = &Организация
		|	И СчетаФактурыВыписанные.Регистратор ССЫЛКА Документ.СчетФактураВыписанный
		|	И СчетаФактурыВыписанные.Регистратор <> &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	СчетаФактурыВыписанные.Документ
	    |;
		|
		|/////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПродажиОбороты.ДокументРеализации КАК ДокументОснование,
		|	ПродажиОбороты.БезналичныйРасчет КАК БезналичныйРасчет,
		|	ПродажиОбороты.СтавкаНДС КАК СтавкаНДС,
		|	ПродажиОбороты.СтавкаНСП КАК СтавкаНСП
		|ПОМЕСТИТЬ ВременнаяТаблицаДокументы
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			Организация = &Организация
		|				И Контрагент В (&МассивКонтрагентов)
		|				И НЕ ДокументРеализации В
		|						(ВЫБРАТЬ
		|							ВременнаяТаблицаЗаполнениеПоСчетФактурам.Документ
		|						ИЗ
		|							ВременнаяТаблицаЗаполнениеПоСчетФактурам КАК ВременнаяТаблицаЗаполнениеПоСчетФактурам
		|						ГДЕ
		|							ВременнаяТаблицаЗаполнениеПоСчетФактурам.ЗаполненоПоТоварам
		|							И ВременнаяТаблицаЗаполнениеПоСчетФактурам.ЗаполненоПоУслугам
		|							ИЛИ (ВременнаяТаблицаЗаполнениеПоСчетФактурам.ЗаполненоПоТоварам = &ЗаполнятьТоварами
		|								И ВременнаяТаблицаЗаполнениеПоСчетФактурам.ЗаполненоПоУслугам = &ЗаполнятьУслугами))) КАК ПродажиОбороты";
	Запрос.УстановитьПараметр("Ссылка", 			Ссылка);
	Запрос.УстановитьПараметр("НачалоПериода", 		НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", 		КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("МассивКонтрагентов", МассивКонтрагентов);
	Запрос.УстановитьПараметр("ЗаполнятьТоварами", 	ЗаполнятьТоварами);
	Запрос.УстановитьПараметр("ЗаполнятьУслугами", 	ЗаполнятьУслугами);
	Запрос.Выполнить();
	
	// Подбор документов "Возврат товаров от покупателя"
	Если ВозвратТоваров Тогда
		// Получение документов с отбором по ставкам и значению безналичного расчета.
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 		
			"ВЫБРАТЬ
			|	ВременнаяТаблицаДокументы.ДокументОснование,
			|	ЕСТЬNULL(ВременнаяТаблицаЗаполнениеПоСчетФактурам.ЗаполненоПоТоварам, ЛОЖЬ) КАК ЗаполненоПоТоварам,
			|	ЕСТЬNULL(ВременнаяТаблицаЗаполнениеПоСчетФактурам.ЗаполненоПоУслугам, ЛОЖЬ) КАК ЗаполненоПоУслугам
			|ИЗ
			|	ВременнаяТаблицаДокументы КАК ВременнаяТаблицаДокументы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаЗаполнениеПоСчетФактурам КАК ВременнаяТаблицаЗаполнениеПоСчетФактурам
			|		ПО ВременнаяТаблицаДокументы.ДокументОснование = ВременнаяТаблицаЗаполнениеПоСчетФактурам.Документ
			|ГДЕ
			|	ВременнаяТаблицаДокументы.БезналичныйРасчет = &БезналичныйРасчет
			|	И ВременнаяТаблицаДокументы.СтавкаНДС = &СтавкаНДС
			|	И ВременнаяТаблицаДокументы.СтавкаНСП = &СтавкаНСП
			|	И ВременнаяТаблицаДокументы.ДокументОснование ССЫЛКА Документ.ВозвратТоваровОтПокупателя";
		Запрос.УстановитьПараметр("БезналичныйРасчет", 	БезналичныйРасчет);
		Запрос.УстановитьПараметр("СтавкаНДС", 			СтавкаНДС);
		Запрос.УстановитьПараметр("СтавкаНСП", 			СтавкаНСП);
		Выборка = Запрос.Выполнить().Выбрать();
		                        
		Если Выборка.Количество() > 0 Тогда
			
			Если ЗаполнятьТоварами И ЗаполнятьУслугами Тогда
				Пока Выборка.Следующий() Цикл
	            	СтрокаТабличнойЧасти = ДокументыОснования.Добавить();
					СтрокаТабличнойЧасти.ДокументОснование 	= Выборка.ДокументОснование;
					СтрокаТабличнойЧасти.Сумма 				= -(?(Выборка.ЗаполненоПоТоварам, 0, Выборка.ДокументОснование.Товары.Итог("Сумма"))
																+ ?(Выборка.ЗаполненоПоУслугам, 0, Выборка.ДокументОснование.Услуги.Итог("Сумма")));
					СтрокаТабличнойЧасти.СуммаНДС 			= -(?(Выборка.ЗаполненоПоТоварам, 0, Выборка.ДокументОснование.Товары.Итог("СуммаНДС"))
																+ ?(Выборка.ЗаполненоПоУслугам, 0, Выборка.ДокументОснование.Услуги.Итог("СуммаНДС")));
					СтрокаТабличнойЧасти.СуммаНСП 			= -(?(Выборка.ЗаполненоПоТоварам, 0, Выборка.ДокументОснование.Товары.Итог("СуммаНСП"))
																+ ?(Выборка.ЗаполненоПоУслугам, 0, Выборка.ДокументОснование.Услуги.Итог("СуммаНСП")));
					СтрокаТабличнойЧасти.СуммаДохода 		= -(?(Выборка.ЗаполненоПоТоварам, 0, Выборка.ДокументОснование.Товары.Итог("СуммаДохода"))
																+ ?(Выборка.ЗаполненоПоУслугам, 0, Выборка.ДокументОснование.Услуги.Итог("СуммаДохода")));
					СтрокаТабличнойЧасти.Всего 				= -(?(Выборка.ЗаполненоПоТоварам, 0, Выборка.ДокументОснование.Товары.Итог("Всего"))
																+ ?(Выборка.ЗаполненоПоУслугам, 0, Выборка.ДокументОснование.Услуги.Итог("Всего")));
				КонецЦикла;
				
				СуммаДокумента = ДокументыОснования.Итог("Сумма");
				
			ИначеЕсли ЗаполнятьТоварами Тогда
				Пока Выборка.Следующий() Цикл
					
					Если Выборка.ДокументОснование.Товары.Количество() <> 0 Тогда
		            	СтрокаТабличнойЧасти = ДокументыОснования.Добавить();
						СтрокаТабличнойЧасти.ДокументОснование 	= Выборка.ДокументОснование;
						СтрокаТабличнойЧасти.Сумма 				= -Выборка.ДокументОснование.Товары.Итог("Сумма");
						СтрокаТабличнойЧасти.СуммаНДС 			= -Выборка.ДокументОснование.Товары.Итог("СуммаНДС");
						СтрокаТабличнойЧасти.СуммаНСП 			= -Выборка.ДокументОснование.Товары.Итог("СуммаНСП");
						СтрокаТабличнойЧасти.СуммаДохода 		= -Выборка.ДокументОснование.Товары.Итог("СуммаДохода");
						СтрокаТабличнойЧасти.Всего 				= -Выборка.ДокументОснование.Товары.Итог("Всего");
					КонецЕсли;
				КонецЦикла;
				
				СуммаДокумента = ДокументыОснования.Итог("Сумма");
				
			Иначе
				Пока Выборка.Следующий() Цикл
					
					Если Выборка.ДокументОснование.Услуги.Количество() <> 0 Тогда
		            	СтрокаТабличнойЧасти = ДокументыОснования.Добавить();
						СтрокаТабличнойЧасти.ДокументОснование 	= Выборка.ДокументОснование;
						СтрокаТабличнойЧасти.Сумма 				= -Выборка.ДокументОснование.Услуги.Итог("Сумма");
						СтрокаТабличнойЧасти.СуммаНДС 			= -Выборка.ДокументОснование.Услуги.Итог("СуммаНДС");
						СтрокаТабличнойЧасти.СуммаНСП 			= -Выборка.ДокументОснование.Услуги.Итог("СуммаНСП");
						СтрокаТабличнойЧасти.СуммаДохода 		= -Выборка.ДокументОснование.Услуги.Итог("СуммаДохода");
						СтрокаТабличнойЧасти.Всего 				= -Выборка.ДокументОснование.Услуги.Итог("Всего");
					КонецЕсли;	
				КонецЦикла;
				
				СуммаДокумента = ДокументыОснования.Итог("Сумма");
			КонецЕсли;	
			
		Иначе
			// Получение первого попавшегося документа, без отбора по ставкам и значению безналичного расчета.
			// Также из полученного документа происходит выбор значений ставок и безналичного расчета.
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			Запрос.Текст = 		
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	ВременнаяТаблицаДокументы.БезналичныйРасчет,
				|	ВременнаяТаблицаДокументы.СтавкаНДС,
				|	ВременнаяТаблицаДокументы.СтавкаНСП
				|ИЗ
				|	ВременнаяТаблицаДокументы КАК ВременнаяТаблицаДокументы
				|ГДЕ
				|	ВременнаяТаблицаДокументы.ДокументОснование ССЫЛКА Документ.ВозвратТоваровОтПокупателя";
			ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
			
			Если ТаблицаДокументов.Количество() > 0 Тогда
				ДанныеДокумента 	= ТаблицаДокументов[0];
				
				// Установка новых значений ставок и безналичного расчета.
				БезналичныйРасчет 	= ДанныеДокумента.БезналичныйРасчет;
				СтавкаНДС 			= ДанныеДокумента.СтавкаНДС;
				СтавкаНСП 			= ДанныеДокумента.СтавкаНСП;
				
				// 1. Получение документов с отбором по новым ставкам и значению безналичного расчета.
				// 2. Получение всех оставшихся документов, кроме полученных в первом пакете для
				// проверки наличия таковых и показа пользователю соответствующего сообщения.
				Запрос = Новый Запрос;
				Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
				Запрос.Текст = 		
					"ВЫБРАТЬ
					|	ВременнаяТаблицаДокументы.ДокументОснование КАК ДокументОснование,
					|	ЕСТЬNULL(ВременнаяТаблицаЗаполнениеПоСчетФактурам.ЗаполненоПоТоварам, ЛОЖЬ) КАК ЗаполненоПоТоварам,
					|	ЕСТЬNULL(ВременнаяТаблицаЗаполнениеПоСчетФактурам.ЗаполненоПоУслугам, ЛОЖЬ) КАК ЗаполненоПоУслугам
					|ИЗ
					|	ВременнаяТаблицаДокументы КАК ВременнаяТаблицаДокументы
					|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаЗаполнениеПоСчетФактурам КАК ВременнаяТаблицаЗаполнениеПоСчетФактурам
					|		ПО ВременнаяТаблицаДокументы.ДокументОснование = ВременнаяТаблицаЗаполнениеПоСчетФактурам.Документ
					|ГДЕ
					|	ВременнаяТаблицаДокументы.БезналичныйРасчет = &БезналичныйРасчет
					|	И ВременнаяТаблицаДокументы.СтавкаНДС = &СтавкаНДС
					|	И ВременнаяТаблицаДокументы.СтавкаНСП = &СтавкаНСП
					|	И ВременнаяТаблицаДокументы.ДокументОснование ССЫЛКА Документ.ВозвратТоваровОтПокупателя
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	ВременнаяТаблицаДокументы.ДокументОснование
					|ИЗ
					|	ВременнаяТаблицаДокументы КАК ВременнаяТаблицаДокументы
					|ГДЕ
					|	НЕ(ВременнаяТаблицаДокументы.БезналичныйРасчет = &БезналичныйРасчет
					|				И ВременнаяТаблицаДокументы.СтавкаНДС = &СтавкаНДС
					|				И ВременнаяТаблицаДокументы.СтавкаНСП = &СтавкаНСП)
					|	И ВременнаяТаблицаДокументы.ДокументОснование ССЫЛКА Документ.ВозвратТоваровОтПокупателя";
				Запрос.УстановитьПараметр("БезналичныйРасчет", 	БезналичныйРасчет);
				Запрос.УстановитьПараметр("СтавкаНДС", 			СтавкаНДС);
				Запрос.УстановитьПараметр("СтавкаНСП", 			СтавкаНСП);
				РезультатЗапроса = Запрос.ВыполнитьПакет();
				
				Выборка = РезультатЗапроса[0].Выбрать();
				
				Если ЗаполнятьТоварами И ЗаполнятьУслугами Тогда
					Пока Выборка.Следующий() Цикл
		            	СтрокаТабличнойЧасти = ДокументыОснования.Добавить();
						СтрокаТабличнойЧасти.ДокументОснование 	= Выборка.ДокументОснование;
						СтрокаТабличнойЧасти.Сумма 				= -(?(Выборка.ЗаполненоПоТоварам, 0, Выборка.ДокументОснование.Товары.Итог("Сумма"))
																	+ ?(Выборка.ЗаполненоПоУслугам, 0, Выборка.ДокументОснование.Услуги.Итог("Сумма")));
						СтрокаТабличнойЧасти.СуммаНДС 			= -(?(Выборка.ЗаполненоПоТоварам, 0, Выборка.ДокументОснование.Товары.Итог("СуммаНДС"))
																	+ ?(Выборка.ЗаполненоПоУслугам, 0, Выборка.ДокументОснование.Услуги.Итог("СуммаНДС")));
						СтрокаТабличнойЧасти.СуммаНСП 			= -(?(Выборка.ЗаполненоПоТоварам, 0, Выборка.ДокументОснование.Товары.Итог("СуммаНСП"))
																	+ ?(Выборка.ЗаполненоПоУслугам, 0, Выборка.ДокументОснование.Услуги.Итог("СуммаНСП")));
						СтрокаТабличнойЧасти.СуммаДохода 		= -(?(Выборка.ЗаполненоПоТоварам, 0, Выборка.ДокументОснование.Товары.Итог("СуммаДохода"))
																	+ ?(Выборка.ЗаполненоПоУслугам, 0, Выборка.ДокументОснование.Услуги.Итог("СуммаДохода")));
						СтрокаТабличнойЧасти.Всего 				= -(?(Выборка.ЗаполненоПоТоварам, 0, Выборка.ДокументОснование.Товары.Итог("Всего"))
																	+ ?(Выборка.ЗаполненоПоУслугам, 0, Выборка.ДокументОснование.Услуги.Итог("Всего")));
					КонецЦикла;
					
					СуммаДокумента = ДокументыОснования.Итог("Сумма");
					
				ИначеЕсли ЗаполнятьТоварами Тогда
					Пока Выборка.Следующий() Цикл
						
						Если Выборка.ДокументОснование.Товары.Количество() <> 0 Тогда
			            	СтрокаТабличнойЧасти = ДокументыОснования.Добавить();
							СтрокаТабличнойЧасти.ДокументОснование 	= Выборка.ДокументОснование;
							СтрокаТабличнойЧасти.Сумма 				= -Выборка.ДокументОснование.Товары.Итог("Сумма");
							СтрокаТабличнойЧасти.СуммаНДС 			= -Выборка.ДокументОснование.Товары.Итог("СуммаНДС");
							СтрокаТабличнойЧасти.СуммаНСП 			= -Выборка.ДокументОснование.Товары.Итог("СуммаНСП");
							СтрокаТабличнойЧасти.СуммаДохода 		= -Выборка.ДокументОснование.Товары.Итог("СуммаДохода");
							СтрокаТабличнойЧасти.Всего 				= -Выборка.ДокументОснование.Товары.Итог("Всего");
						КонецЕсли;
					КонецЦикла;
					
					СуммаДокумента = ДокументыОснования.Итог("Сумма");
					
				Иначе
					Пока Выборка.Следующий() Цикл
						
						Если Выборка.ДокументОснование.Услуги.Количество() <> 0 Тогда
			            	СтрокаТабличнойЧасти = ДокументыОснования.Добавить();
							СтрокаТабличнойЧасти.ДокументОснование 	= Выборка.ДокументОснование;
							СтрокаТабличнойЧасти.Сумма 				= -Выборка.ДокументОснование.Услуги.Итог("Сумма");
							СтрокаТабличнойЧасти.СуммаНДС 			= -Выборка.ДокументОснование.Услуги.Итог("СуммаНДС");
							СтрокаТабличнойЧасти.СуммаНСП 			= -Выборка.ДокументОснование.Услуги.Итог("СуммаНСП");
							СтрокаТабличнойЧасти.СуммаДохода 		= -Выборка.ДокументОснование.Услуги.Итог("СуммаДохода");
							СтрокаТабличнойЧасти.Всего 				= -Выборка.ДокументОснование.Услуги.Итог("Всего");
						КонецЕсли;	
					КонецЦикла;
					
					СуммаДокумента = ДокументыОснования.Итог("Сумма");
				КонецЕсли;
				
				Если НЕ РезультатЗапроса[1].Пустой() Тогда
					ТекстСообщения = СтрШаблон(НСтр("ru = 'Для контрагента %1 обнаружены документы возврата с другими ставками.'"), Контрагент);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);		
				КонецЕсли;		
			КонецЕсли				
		КонецЕсли;
		
		
	// Подбор документов "Реализация товаров услуг"
	Иначе
		// Получение документов с отбором по ставкам, значению безналичного расчета,
		// и наличия пустых значений серии и номера бланка счет фактуры.
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 		
			"ВЫБРАТЬ
			|	ВременнаяТаблицаДокументы.ДокументОснование КАК ДокументОснование,
			|	ЕСТЬNULL(ВременнаяТаблицаЗаполнениеПоСчетФактурам.ЗаполненоПоТоварам, ЛОЖЬ) КАК ЗаполненоПоТоварам,
			|	ЕСТЬNULL(ВременнаяТаблицаЗаполнениеПоСчетФактурам.ЗаполненоПоУслугам, ЛОЖЬ) КАК ЗаполненоПоУслугам
			|ИЗ
			|	ВременнаяТаблицаДокументы КАК ВременнаяТаблицаДокументы
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СчетаФактурыВыписанные КАК СчетаФактурыВыписанные
			|		ПО ВременнаяТаблицаДокументы.ДокументОснование = СчетаФактурыВыписанные.Документ
			|			И НЕ СчетаФактурыВыписанные.Регистратор ССЫЛКА Документ.СчетФактураВыписанный
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаЗаполнениеПоСчетФактурам КАК ВременнаяТаблицаЗаполнениеПоСчетФактурам
			|		ПО ВременнаяТаблицаДокументы.ДокументОснование = ВременнаяТаблицаЗаполнениеПоСчетФактурам.Документ
			|ГДЕ
			|	ВременнаяТаблицаДокументы.БезналичныйРасчет = &БезналичныйРасчет
			|	И ВременнаяТаблицаДокументы.СтавкаНДС = &СтавкаНДС
			|	И ВременнаяТаблицаДокументы.СтавкаНСП = &СтавкаНСП
			|	И ВременнаяТаблицаДокументы.ДокументОснование ССЫЛКА Документ.РеализацияТоваровУслуг
			|	И СчетаФактурыВыписанные.СерияБланкаСФ = """"
			|	И СчетаФактурыВыписанные.НомерБланкаСФ = """"";
		Запрос.УстановитьПараметр("БезналичныйРасчет", 	БезналичныйРасчет);
		Запрос.УстановитьПараметр("СтавкаНДС", 			СтавкаНДС);
		Запрос.УстановитьПараметр("СтавкаНСП", 			СтавкаНСП);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Количество() > 0 Тогда
			
			Если ЗаполнятьТоварами И ЗаполнятьУслугами Тогда
				Пока Выборка.Следующий() Цикл
	            	СтрокаТабличнойЧасти = ДокументыОснования.Добавить();
					СтрокаТабличнойЧасти.ДокументОснование 	= Выборка.ДокументОснование;
					СтрокаТабличнойЧасти.Сумма 				= ?(Выборка.ЗаполненоПоТоварам, 0, Выборка.ДокументОснование.Товары.Итог("Сумма"))
																+ ?(Выборка.ЗаполненоПоУслугам, 0, Выборка.ДокументОснование.Услуги.Итог("Сумма"));
					СтрокаТабличнойЧасти.СуммаНДС 			= ?(Выборка.ЗаполненоПоТоварам, 0, Выборка.ДокументОснование.Товары.Итог("СуммаНДС"))
																+ ?(Выборка.ЗаполненоПоУслугам, 0, Выборка.ДокументОснование.Услуги.Итог("СуммаНДС"));
					СтрокаТабличнойЧасти.СуммаНСП 			= ?(Выборка.ЗаполненоПоТоварам, 0, Выборка.ДокументОснование.Товары.Итог("СуммаНСП"))
																+ ?(Выборка.ЗаполненоПоУслугам, 0, Выборка.ДокументОснование.Услуги.Итог("СуммаНСП"));
					СтрокаТабличнойЧасти.СуммаДохода 		= ?(Выборка.ЗаполненоПоТоварам, 0, Выборка.ДокументОснование.Товары.Итог("СуммаДохода"))
																+ ?(Выборка.ЗаполненоПоУслугам, 0, Выборка.ДокументОснование.Услуги.Итог("СуммаДохода"));
					СтрокаТабличнойЧасти.Всего 				= ?(Выборка.ЗаполненоПоТоварам, 0, Выборка.ДокументОснование.Товары.Итог("Всего"))
																+ ?(Выборка.ЗаполненоПоУслугам, 0, Выборка.ДокументОснование.Услуги.Итог("Всего"));
				КонецЦикла;
				
				СуммаДокумента = ДокументыОснования.Итог("Сумма");
				
			ИначеЕсли ЗаполнятьТоварами Тогда
				Пока Выборка.Следующий() Цикл
					
					Если Выборка.ДокументОснование.Товары.Количество() <> 0 Тогда
		            	СтрокаТабличнойЧасти = ДокументыОснования.Добавить();
						СтрокаТабличнойЧасти.ДокументОснование 	= Выборка.ДокументОснование;
						СтрокаТабличнойЧасти.Сумма 				= Выборка.ДокументОснование.Товары.Итог("Сумма");
						СтрокаТабличнойЧасти.СуммаНДС 			= Выборка.ДокументОснование.Товары.Итог("СуммаНДС");
						СтрокаТабличнойЧасти.СуммаНСП 			= Выборка.ДокументОснование.Товары.Итог("СуммаНСП");
						СтрокаТабличнойЧасти.СуммаДохода 		= Выборка.ДокументОснование.Товары.Итог("СуммаДохода");
						СтрокаТабличнойЧасти.Всего 				= Выборка.ДокументОснование.Товары.Итог("Всего");
					КонецЕсли;	
				КонецЦикла;
				
				СуммаДокумента = ДокументыОснования.Итог("Сумма");
				
			Иначе
				Пока Выборка.Следующий() Цикл
					
					Если Выборка.ДокументОснование.Услуги.Количество() <> 0 Тогда
		            	СтрокаТабличнойЧасти = ДокументыОснования.Добавить();
						СтрокаТабличнойЧасти.ДокументОснование 	= Выборка.ДокументОснование;
						СтрокаТабличнойЧасти.Сумма 				= Выборка.ДокументОснование.Услуги.Итог("Сумма");
						СтрокаТабличнойЧасти.СуммаНДС 			= Выборка.ДокументОснование.Услуги.Итог("СуммаНДС");
						СтрокаТабличнойЧасти.СуммаНСП 			= Выборка.ДокументОснование.Услуги.Итог("СуммаНСП");
						СтрокаТабличнойЧасти.СуммаДохода 		= Выборка.ДокументОснование.Услуги.Итог("СуммаДохода");
						СтрокаТабличнойЧасти.Всего 				= Выборка.ДокументОснование.Услуги.Итог("Всего");
					КонецЕсли;
				КонецЦикла;
				
				СуммаДокумента = ДокументыОснования.Итог("Сумма");
			КонецЕсли;
			
		Иначе
			// Получение первого попавшегося документа с отбором только по пустым значениям серии и номера бланка счет фактуры.
			// Также из полученного документа происходит выбор значений ставок и безналичного расчета.
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			Запрос.Текст = 		
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	ВременнаяТаблицаДокументы.БезналичныйРасчет,
				|	ВременнаяТаблицаДокументы.СтавкаНДС,
				|	ВременнаяТаблицаДокументы.СтавкаНСП
				|ИЗ
				|	ВременнаяТаблицаДокументы КАК ВременнаяТаблицаДокументы
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СчетаФактурыВыписанные КАК СчетаФактурыВыписанные
				|		ПО ВременнаяТаблицаДокументы.ДокументОснование = СчетаФактурыВыписанные.Документ
				|			И НЕ СчетаФактурыВыписанные.Регистратор ССЫЛКА Документ.СчетФактураВыписанный
				|ГДЕ
				|	ВременнаяТаблицаДокументы.ДокументОснование ССЫЛКА Документ.РеализацияТоваровУслуг
				|	И СчетаФактурыВыписанные.СерияБланкаСФ = """"
				|	И СчетаФактурыВыписанные.НомерБланкаСФ = """"";
			ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
			
			Если ТаблицаДокументов.Количество() > 0 Тогда
				ДанныеДокумента 	= ТаблицаДокументов[0];
				
				// Установка новых значений ставок и безналичного расчета.
				БезналичныйРасчет 	= ДанныеДокумента.БезналичныйРасчет;
				СтавкаНДС 			= ДанныеДокумента.СтавкаНДС;
				СтавкаНСП 			= ДанныеДокумента.СтавкаНСП;
				
				// 1. Получение документов с отбором по новым ставкам, значению безналичного расчета
				// и наличия пустых значений серии и номера бланка счет фактуры.
				// 2. Получение всех оставшихся документов, кроме полученных в первом пакете для
				// проверки наличия таковых и показа пользователю соответствующего сообщения.
				Запрос = Новый Запрос;
				Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
				Запрос.Текст = 		
					"ВЫБРАТЬ
					|	ВременнаяТаблицаДокументы.ДокументОснование КАК ДокументОснование,
					|	ЕСТЬNULL(ВременнаяТаблицаЗаполнениеПоСчетФактурам.ЗаполненоПоТоварам, ЛОЖЬ) КАК ЗаполненоПоТоварам,
					|	ЕСТЬNULL(ВременнаяТаблицаЗаполнениеПоСчетФактурам.ЗаполненоПоУслугам, ЛОЖЬ) КАК ЗаполненоПоУслугам
					|ИЗ
					|	ВременнаяТаблицаДокументы КАК ВременнаяТаблицаДокументы
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СчетаФактурыВыписанные КАК СчетаФактурыВыписанные
					|		ПО ВременнаяТаблицаДокументы.ДокументОснование = СчетаФактурыВыписанные.Документ
					|			И НЕ СчетаФактурыВыписанные.Регистратор ССЫЛКА Документ.СчетФактураВыписанный
					|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаЗаполнениеПоСчетФактурам КАК ВременнаяТаблицаЗаполнениеПоСчетФактурам
					|		ПО ВременнаяТаблицаДокументы.ДокументОснование = ВременнаяТаблицаЗаполнениеПоСчетФактурам.Документ
					|ГДЕ
					|	ВременнаяТаблицаДокументы.БезналичныйРасчет = &БезналичныйРасчет
					|	И ВременнаяТаблицаДокументы.СтавкаНДС = &СтавкаНДС
					|	И ВременнаяТаблицаДокументы.СтавкаНСП = &СтавкаНСП
					|	И ВременнаяТаблицаДокументы.ДокументОснование ССЫЛКА Документ.РеализацияТоваровУслуг
					|	И СчетаФактурыВыписанные.СерияБланкаСФ = """"
					|	И СчетаФактурыВыписанные.НомерБланкаСФ = """"
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	ВременнаяТаблицаДокументы.ДокументОснование КАК ДокументОснование
					|ИЗ
					|	ВременнаяТаблицаДокументы КАК ВременнаяТаблицаДокументы
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СчетаФактурыВыписанные КАК СчетаФактурыВыписанные
					|		ПО ВременнаяТаблицаДокументы.ДокументОснование = СчетаФактурыВыписанные.Документ
					|			И НЕ СчетаФактурыВыписанные.Регистратор ССЫЛКА Документ.СчетФактураВыписанный
					|ГДЕ
					|	НЕ(ВременнаяТаблицаДокументы.БезналичныйРасчет = &БезналичныйРасчет
					|				И ВременнаяТаблицаДокументы.СтавкаНДС = &СтавкаНДС
					|				И ВременнаяТаблицаДокументы.СтавкаНСП = &СтавкаНСП)
					|	И ВременнаяТаблицаДокументы.ДокументОснование ССЫЛКА Документ.РеализацияТоваровУслуг
					|	И СчетаФактурыВыписанные.СерияБланкаСФ = """"
					|	И СчетаФактурыВыписанные.НомерБланкаСФ = """"";
				Запрос.УстановитьПараметр("БезналичныйРасчет", 	БезналичныйРасчет);
				Запрос.УстановитьПараметр("СтавкаНДС", 			СтавкаНДС);
				Запрос.УстановитьПараметр("СтавкаНСП", 			СтавкаНСП);
				РезультатЗапроса = Запрос.ВыполнитьПакет();
				
				Выборка = РезультатЗапроса[0].Выбрать();
				
				Если ЗаполнятьТоварами И ЗаполнятьУслугами Тогда
					Пока Выборка.Следующий() Цикл
		            	СтрокаТабличнойЧасти = ДокументыОснования.Добавить();
						СтрокаТабличнойЧасти.ДокументОснование 	= Выборка.ДокументОснование;
						СтрокаТабличнойЧасти.Сумма 				= ?(Выборка.ЗаполненоПоТоварам, 0, Выборка.ДокументОснование.Товары.Итог("Сумма"))
																	+ ?(Выборка.ЗаполненоПоУслугам, 0, Выборка.ДокументОснование.Услуги.Итог("Сумма"));
						СтрокаТабличнойЧасти.СуммаНДС 			= ?(Выборка.ЗаполненоПоТоварам, 0, Выборка.ДокументОснование.Товары.Итог("СуммаНДС"))
																	+ ?(Выборка.ЗаполненоПоУслугам, 0, Выборка.ДокументОснование.Услуги.Итог("СуммаНДС"));
						СтрокаТабличнойЧасти.СуммаНСП 			= ?(Выборка.ЗаполненоПоТоварам, 0, Выборка.ДокументОснование.Товары.Итог("СуммаНСП"))
																	+ ?(Выборка.ЗаполненоПоУслугам, 0, Выборка.ДокументОснование.Услуги.Итог("СуммаНСП"));
						СтрокаТабличнойЧасти.СуммаДохода 		= ?(Выборка.ЗаполненоПоТоварам, 0, Выборка.ДокументОснование.Товары.Итог("СуммаДохода"))
																	+ ?(Выборка.ЗаполненоПоУслугам, 0, Выборка.ДокументОснование.Услуги.Итог("СуммаДохода"));
						СтрокаТабличнойЧасти.Всего 				= ?(Выборка.ЗаполненоПоТоварам, 0, Выборка.ДокументОснование.Товары.Итог("Всего"))
																	+ ?(Выборка.ЗаполненоПоУслугам, 0, Выборка.ДокументОснование.Услуги.Итог("Всего"));
					КонецЦикла;
					
					СуммаДокумента = ДокументыОснования.Итог("Сумма");
					
				ИначеЕсли ЗаполнятьТоварами Тогда
					Пока Выборка.Следующий() Цикл
						
						Если Выборка.ДокументОснование.Товары.Количество() <> 0 Тогда
			            	СтрокаТабличнойЧасти = ДокументыОснования.Добавить();
							СтрокаТабличнойЧасти.ДокументОснование 	= Выборка.ДокументОснование;
							СтрокаТабличнойЧасти.Сумма 				= Выборка.ДокументОснование.Товары.Итог("Сумма");
							СтрокаТабличнойЧасти.СуммаНДС 			= Выборка.ДокументОснование.Товары.Итог("СуммаНДС");
							СтрокаТабличнойЧасти.СуммаНСП 			= Выборка.ДокументОснование.Товары.Итог("СуммаНСП");
							СтрокаТабличнойЧасти.СуммаДохода 		= Выборка.ДокументОснование.Товары.Итог("СуммаДохода");
							СтрокаТабличнойЧасти.Всего 				= Выборка.ДокументОснование.Товары.Итог("Всего");
						КонецЕсли;	
					КонецЦикла;
					
					СуммаДокумента = ДокументыОснования.Итог("Сумма");
					
				Иначе
					Пока Выборка.Следующий() Цикл
						
						Если Выборка.ДокументОснование.Услуги.Количество() <> 0 Тогда
			            	СтрокаТабличнойЧасти = ДокументыОснования.Добавить();
							СтрокаТабличнойЧасти.ДокументОснование 	= Выборка.ДокументОснование;
							СтрокаТабличнойЧасти.Сумма 				= Выборка.ДокументОснование.Услуги.Итог("Сумма");
							СтрокаТабличнойЧасти.СуммаНДС 			= Выборка.ДокументОснование.Услуги.Итог("СуммаНДС");
							СтрокаТабличнойЧасти.СуммаНСП 			= Выборка.ДокументОснование.Услуги.Итог("СуммаНСП");
							СтрокаТабличнойЧасти.СуммаДохода 		= Выборка.ДокументОснование.Услуги.Итог("СуммаДохода");
							СтрокаТабличнойЧасти.Всего 				= Выборка.ДокументОснование.Услуги.Итог("Всего");
						КонецЕсли;
					КонецЦикла;
					
					СуммаДокумента = ДокументыОснования.Итог("Сумма");
				КонецЕсли;
				
				Если НЕ РезультатЗапроса[1].Пустой() Тогда
					ТекстСообщения = СтрШаблон(НСтр("ru = 'Для контрагента %1 обнаружены документы реализации с другими ставками.'"), Контрагент);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);		
				КонецЕсли;	
			КонецЕсли				
		КонецЕсли;			
	КонецЕсли;
КонецПроцедуры

// Процедура заполняет табличную часть "Товары" по документам,
// подобранным в табличной части "ДокументыПоступления".
//
// Параметры:
//	ВозвратОтПокупателя - Булево - реквизит "Возврат" данного документа 
//
Процедура ЗаполнитьПоПодобраннымДокументам() Экспорт

	МассивДокументов = ДокументыОснования.Выгрузить().ВыгрузитьКолонку("ДокументОснование");
	
	Запрос = Новый Запрос;         
	
	Если ВозвратТоваров Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СчетаФактурыВыписанные.Документ КАК Документ,
			|	МАКСИМУМ(СчетаФактурыВыписанные.ЗаполненоПоТоварам) КАК ЗаполненоПоТоварам,
			|	МАКСИМУМ(СчетаФактурыВыписанные.ЗаполненоПоУслугам) КАК ЗаполненоПоУслугам
			|ПОМЕСТИТЬ ВременнаяТаблицаЗаполнениеПоСчетФактурам
			|ИЗ
			|	РегистрСведений.СчетаФактурыВыписанные КАК СчетаФактурыВыписанные
			|ГДЕ
			|	СчетаФактурыВыписанные.Дата МЕЖДУ &НачалоПериода И &КонецПериода
			|	И СчетаФактурыВыписанные.Организация = &Организация
			|	И СчетаФактурыВыписанные.Регистратор ССЫЛКА Документ.СчетФактураВыписанный
			|	И СчетаФактурыВыписанные.Регистратор <> &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	СчетаФактурыВыписанные.Документ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВозвратТоваровОтПокупателяТовары.Ссылка КАК ДокументОснования,
			|	ВозвратТоваровОтПокупателяТовары.Номенклатура КАК Номенклатура,
			|	ВозвратТоваровОтПокупателяТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	-ВозвратТоваровОтПокупателяТовары.Количество КАК Количество,
			|	-ВозвратТоваровОтПокупателяТовары.Цена КАК Цена,
			|	-ВозвратТоваровОтПокупателяТовары.Сумма КАК Сумма,
			|	-ВозвратТоваровОтПокупателяТовары.СуммаНДС КАК СуммаНДС,
			|	-ВозвратТоваровОтПокупателяТовары.СуммаНСП КАК СуммаНСП,
			|	-ВозвратТоваровОтПокупателяТовары.Всего КАК Всего,
			|	-ВозвратТоваровОтПокупателяТовары.СуммаДохода КАК СуммаДохода
			|ИЗ
			|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
			|ГДЕ
			|	ВозвратТоваровОтПокупателяТовары.Ссылка В(&МассивДокументов)
			|	И НЕ ВозвратТоваровОтПокупателяТовары.Ссылка В
			|			(ВЫБРАТЬ
			|				ВременнаяТаблицаЗаполнениеПоСчетФактурам.Документ
			|			ИЗ
			|				ВременнаяТаблицаЗаполнениеПоСчетФактурам КАК ВременнаяТаблицаЗаполнениеПоСчетФактурам
			|			ГДЕ
			|				ВременнаяТаблицаЗаполнениеПоСчетФактурам.ЗаполненоПоТоварам)
			|	И &ЗаполнятьТоварами
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВозвратТоваровОтПокупателяУслуги.Ссылка,
			|	ВозвратТоваровОтПокупателяУслуги.Номенклатура,
			|	ВозвратТоваровОтПокупателяУслуги.Номенклатура.ЕдиницаИзмерения,
			|	-ВозвратТоваровОтПокупателяУслуги.Количество,
			|	-ВозвратТоваровОтПокупателяУслуги.Цена,
			|	-ВозвратТоваровОтПокупателяУслуги.Сумма,
			|	-ВозвратТоваровОтПокупателяУслуги.СуммаНДС,
			|	-ВозвратТоваровОтПокупателяУслуги.СуммаНСП,
			|	-ВозвратТоваровОтПокупателяУслуги.Всего,
			|	-ВозвратТоваровОтПокупателяУслуги.СуммаДохода
			|ИЗ
			|	Документ.ВозвратТоваровОтПокупателя.Услуги КАК ВозвратТоваровОтПокупателяУслуги
			|ГДЕ
			|	ВозвратТоваровОтПокупателяУслуги.Ссылка В(&МассивДокументов)
			|	И НЕ ВозвратТоваровОтПокупателяУслуги.Ссылка В
			|			(ВЫБРАТЬ
			|				ВременнаяТаблицаЗаполнениеПоСчетФактурам.Документ
			|			ИЗ
			|				ВременнаяТаблицаЗаполнениеПоСчетФактурам КАК ВременнаяТаблицаЗаполнениеПоСчетФактурам
			|			ГДЕ
			|				ВременнаяТаблицаЗаполнениеПоСчетФактурам.ЗаполненоПоУслугам)
			|	И &ЗаполнятьУслугами";
	Иначе
		Запрос.Текст =		
			"ВЫБРАТЬ
			|	СчетаФактурыВыписанные.Документ КАК Документ,
			|	МАКСИМУМ(СчетаФактурыВыписанные.ЗаполненоПоТоварам) КАК ЗаполненоПоТоварам,
			|	МАКСИМУМ(СчетаФактурыВыписанные.ЗаполненоПоУслугам) КАК ЗаполненоПоУслугам
			|ПОМЕСТИТЬ ВременнаяТаблицаЗаполнениеПоСчетФактурам
			|ИЗ
			|	РегистрСведений.СчетаФактурыВыписанные КАК СчетаФактурыВыписанные
			|ГДЕ
			|	СчетаФактурыВыписанные.Дата МЕЖДУ &НачалоПериода И &КонецПериода
			|	И СчетаФактурыВыписанные.Организация = &Организация
			|	И СчетаФактурыВыписанные.Регистратор ССЫЛКА Документ.СчетФактураВыписанный
			|	И СчетаФактурыВыписанные.Регистратор <> &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	СчетаФактурыВыписанные.Документ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РеализацияТоваровУслугТовары.Ссылка КАК ДокументОснования,
			|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
			|	РеализацияТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	РеализацияТоваровУслугТовары.Количество КАК Количество,
			|	РеализацияТоваровУслугТовары.Цена КАК Цена,
			|	РеализацияТоваровУслугТовары.Сумма КАК Сумма,
			|	РеализацияТоваровУслугТовары.СуммаНДС КАК СуммаНДС,
			|	РеализацияТоваровУслугТовары.СуммаНСП КАК СуммаНСП,
			|	РеализацияТоваровУслугТовары.Всего КАК Всего,
			|	РеализацияТоваровУслугТовары.СуммаДохода КАК СуммаДохода
			|ИЗ
			|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
			|ГДЕ
			|	РеализацияТоваровУслугТовары.Ссылка В(&МассивДокументов)
			|	И НЕ РеализацияТоваровУслугТовары.Ссылка В
			|			(ВЫБРАТЬ
			|				ВременнаяТаблицаЗаполнениеПоСчетФактурам.Документ
			|			ИЗ
			|				ВременнаяТаблицаЗаполнениеПоСчетФактурам КАК ВременнаяТаблицаЗаполнениеПоСчетФактурам
			|			ГДЕ
			|				ВременнаяТаблицаЗаполнениеПоСчетФактурам.ЗаполненоПоТоварам)
			|	И &ЗаполнятьТоварами
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	РеализацияТоваровУслугУслуги.Ссылка,
			|	РеализацияТоваровУслугУслуги.Номенклатура,
			|	РеализацияТоваровУслугУслуги.Номенклатура.ЕдиницаИзмерения,
			|	РеализацияТоваровУслугУслуги.Количество,
			|	РеализацияТоваровУслугУслуги.Цена,
			|	РеализацияТоваровУслугУслуги.Сумма,
			|	РеализацияТоваровУслугУслуги.СуммаНДС,
			|	РеализацияТоваровУслугУслуги.СуммаНСП,
			|	РеализацияТоваровУслугУслуги.Всего,
			|	РеализацияТоваровУслугУслуги.СуммаДохода
			|ИЗ
			|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
			|ГДЕ
			|	РеализацияТоваровУслугУслуги.Ссылка В(&МассивДокументов)
			|	И НЕ РеализацияТоваровУслугУслуги.Ссылка В
			|			(ВЫБРАТЬ
			|				ВременнаяТаблицаЗаполнениеПоСчетФактурам.Документ
			|			ИЗ
			|				ВременнаяТаблицаЗаполнениеПоСчетФактурам КАК ВременнаяТаблицаЗаполнениеПоСчетФактурам
			|			ГДЕ
			|				ВременнаяТаблицаЗаполнениеПоСчетФактурам.ЗаполненоПоУслугам)
			|	И &ЗаполнятьУслугами";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", 			Ссылка);
	Запрос.УстановитьПараметр("НачалоПериода", 		НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", 		КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("МассивДокументов", 	МассивДокументов);
	Запрос.УстановитьПараметр("ЗаполнятьТоварами", 	ЗаполнятьТоварами);
	Запрос.УстановитьПараметр("ЗаполнятьУслугами", 	ЗаполнятьУслугами);
	
	Товары.Загрузить(Запрос.Выполнить().Выгрузить()); 

КонецПроцедуры

#КонецОбласти

#КонецЕсли