#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ЗаполненияДокумента

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоВозвратуОтПокупателя(ДанныеЗаполнения) Экспорт
	
	Организация			= ДанныеЗаполнения.Организация;
	Контрагент			= ДанныеЗаполнения.Контрагент;
	ДоговорКонтрагента  = ДанныеЗаполнения.ДоговорКонтрагента;
	ВалютаДокумента     = ДанныеЗаполнения.ВалютаДокумента;
	СтавкаНДС			= ДанныеЗаполнения.СтавкаНДС;
	СтавкаНСП			= ДанныеЗаполнения.СтавкаНСП;
	СуммаВключаетНалоги	= ДанныеЗаполнения.СуммаВключаетНалоги;	
	БезналичныйРасчет	= ДанныеЗаполнения.БезналичныйРасчет;
	СуммаДокумента      = ДанныеЗаполнения.СуммаДокумента;
	СуммаВключаетНалоги	= ДанныеЗаполнения.СуммаВключаетНалоги;
	ВозвратТоваров		= Истина;
	ЭкспортнаяПоставка	= ДанныеЗаполнения.ЭкспортнаяПоставка;
	
	Для Каждого СтрокаТабличнойЧастиТовары Из ДанныеЗаполнения.Товары Цикл
		СтрокаТабличнойЧасти = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаТабличнойЧастиТовары);
		СтрокаТабличнойЧасти.ЕдиницаИзмерения 	= СтрокаТабличнойЧастиТовары.Номенклатура.ЕдиницаИзмерения;
		СтрокаТабличнойЧасти.ДокументОснования 	= ДанныеЗаполнения;
	КонецЦикла;	
	
	СтрокаТабличнойЧастиДокументы = ДокументыОснования.Добавить();
	СтрокаТабличнойЧастиДокументы.ДокументОснование = ДанныеЗаполнения;
	СтрокаТабличнойЧастиДокументы.Сумма 			= ДанныеЗаполнения.Товары.Итог("Сумма");
	СтрокаТабличнойЧастиДокументы.СуммаНДС 			= ДанныеЗаполнения.Товары.Итог("СуммаНДС");
	СтрокаТабличнойЧастиДокументы.СуммаНСП 			= ДанныеЗаполнения.Товары.Итог("СуммаНСП");
	СтрокаТабличнойЧастиДокументы.Всего 			= ДанныеЗаполнения.Товары.Итог("Всего");
	СтрокаТабличнойЧастиДокументы.Доход 			= ДанныеЗаполнения.Товары.Итог("Доход");
КонецПроцедуры

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоРеализацииТоваровУслуг(ДанныеЗаполнения) Экспорт
	
	Организация			= ДанныеЗаполнения.Организация;
	Контрагент			= ДанныеЗаполнения.Контрагент;
	ДоговорКонтрагента  = ДанныеЗаполнения.ДоговорКонтрагента;
	ВалютаДокумента     = ДанныеЗаполнения.ВалютаДокумента;
	СтавкаНДС			= ДанныеЗаполнения.СтавкаНДС;
	СтавкаНСП			= ДанныеЗаполнения.СтавкаНСП;
	СуммаВключаетНалоги	= ДанныеЗаполнения.СуммаВключаетНалоги;	
	БезналичныйРасчет	= ДанныеЗаполнения.БезналичныйРасчет;
	СуммаДокумента      = ДанныеЗаполнения.СуммаДокумента;
	СуммаВключаетНалоги	= ДанныеЗаполнения.СуммаВключаетНалоги;
	ЭкспортнаяПоставка	= ДанныеЗаполнения.ЭкспортнаяПоставка;
	ВидПлатежа			= ДанныеЗаполнения.ВидПлатежа;
	
	Для Каждого СтрокаТабличнойЧастиТовары Из ДанныеЗаполнения.Товары Цикл
		СтрокаТабличнойЧасти = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаТабличнойЧастиТовары);
		СтрокаТабличнойЧасти.ЕдиницаИзмерения 	= СтрокаТабличнойЧастиТовары.Номенклатура.ЕдиницаИзмерения;
		СтрокаТабличнойЧасти.ДокументОснования 	= ДанныеЗаполнения;
	КонецЦикла;	
	
	Для Каждого СтрокаТабличнойЧастиУслуги Из ДанныеЗаполнения.Услуги Цикл
		СтрокаТабличнойЧасти = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаТабличнойЧастиУслуги);
		СтрокаТабличнойЧасти.ДокументОснования 	= ДанныеЗаполнения;
	КонецЦикла;
	
	СтрокаТабличнойЧастиДокументы = ДокументыОснования.Добавить();
	СтрокаТабличнойЧастиДокументы.ДокументОснование = ДанныеЗаполнения;
	СтрокаТабличнойЧастиДокументы.Сумма 			= ДанныеЗаполнения.Товары.Итог("Сумма") + ДанныеЗаполнения.Услуги.Итог("Сумма");
	СтрокаТабличнойЧастиДокументы.СуммаНДС 			= ДанныеЗаполнения.Товары.Итог("СуммаНДС") + ДанныеЗаполнения.Услуги.Итог("СуммаНДС");
	СтрокаТабличнойЧастиДокументы.СуммаНСП 			= ДанныеЗаполнения.Товары.Итог("СуммаНСП") + ДанныеЗаполнения.Услуги.Итог("СуммаНСП");
	СтрокаТабличнойЧастиДокументы.Всего 			= ДанныеЗаполнения.Товары.Итог("Всего") + ДанныеЗаполнения.Услуги.Итог("Всего");
	СтрокаТабличнойЧастиДокументы.Доход 			= ДанныеЗаполнения.Товары.Итог("Доход") + ДанныеЗаполнения.Услуги.Итог("Доход");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка) Экспорт 
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")] = "ЗаполнитьПоВозвратуОтПокупателя";
	СтратегияЗаполнения[Тип("ДокументСсылка.РеализацияТоваровУслуг")] = "ЗаполнитьПоРеализацииТоваровУслуг";
	
	ЗаполнениеОбъектовБП.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения);
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;	
	
	ОбщегоНазначенияБПСервер.ДобавитьНепроверяемыеРеквизитыПоПараметрамФункциональныхОпций(МассивНепроверяемыхРеквизитов, Организация, Дата);
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

// Процедура - обработчик события ПередЗаписью объекта.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СуммаДокумента = ДокументыОснования.Итог("Сумма");	
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.СчетФактураВыписанный.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	БухгалтерскийУчетСервер.ОтразитьБланкиСчетовФактур(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьСчетаФактурыВыписанные(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей.
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура заполнения табличной части "ДокументыОснования".
//
Процедура ЗаполнитьДокументыОснования() Экспорт

	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Отбор документов по периоду, контрагенту и организации,
	// а также отсечение документов уже использованных в счет фактурах выписанных.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПродажиОбороты.ДокументРеализации КАК ДокументОснование,
		|	ПродажиОбороты.БезналичныйРасчет КАК БезналичныйРасчет,
		|	ПродажиОбороты.СтавкаНДС КАК СтавкаНДС,
		|	ПродажиОбороты.СтавкаНСП КАК СтавкаНСП,
		|	ВЫБОР 
		|		КОГДА ПродажиОбороты.Договор.СуммаВключаетНалоги
		|			ТОГДА ПродажиОбороты.СуммаОборот + ПродажиОбороты.СуммаНДСОборот + ПродажиОбороты.СуммаНСПОборот
		|		ИНАЧЕ ПродажиОбороты.СуммаОборот
		|	КОНЕЦ КАК Сумма,
		|	ПродажиОбороты.СуммаНДСОборот КАК СуммаНДС,
		|	ПродажиОбороты.СуммаНСПОборот КАК СуммаНСП,
		|	ПродажиОбороты.СуммаОборот + ПродажиОбороты.СуммаНДСОборот + ПродажиОбороты.СуммаНСПОборот КАК Всего
		|ПОМЕСТИТЬ ВременнаяТаблицаДокументы
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			,
		|			Организация = &Организация
		|				И Контрагент = &Контрагент
		|				И НЕ ДокументРеализации В
		|						(ВЫБРАТЬ
		|							СчетаФактурыВыписанные.Документ
		|						ИЗ
		|							РегистрСведений.СчетаФактурыВыписанные КАК СчетаФактурыВыписанные
		|						ГДЕ
		|							СчетаФактурыВыписанные.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
		|							И СчетаФактурыВыписанные.Регистратор ССЫЛКА Документ.СчетФактураВыписанный)) КАК ПродажиОбороты";
	Запрос.УстановитьПараметр("ДатаНачала", 	НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", 	КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Организация", 	Организация);
	Запрос.УстановитьПараметр("Контрагент", 	Контрагент);
	Запрос.Выполнить();

	// Подбор документов "Возврат товаров от покупателя"
	Если ВозвратТоваров Тогда
		// Получение документов с отбором по ставкам и значению безналичного расчета.
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 		
			"ВЫБРАТЬ
			|	ВременнаяТаблицаДокументы.ДокументОснование,
			|	ВременнаяТаблицаДокументы.Сумма,
			|	ВременнаяТаблицаДокументы.СуммаНДС,
			|	ВременнаяТаблицаДокументы.СуммаНСП,
			|	ВременнаяТаблицаДокументы.Всего
			|ИЗ
			|	ВременнаяТаблицаДокументы КАК ВременнаяТаблицаДокументы
			|ГДЕ
			|	ВременнаяТаблицаДокументы.БезналичныйРасчет = &БезналичныйРасчет
			|	И ВременнаяТаблицаДокументы.СтавкаНДС = &СтавкаНДС
			|	И ВременнаяТаблицаДокументы.СтавкаНСП = &СтавкаНСП
			|	И ВременнаяТаблицаДокументы.ДокументОснование ССЫЛКА Документ.ВозвратТоваровОтПокупателя";
		Запрос.УстановитьПараметр("БезналичныйРасчет", 	БезналичныйРасчет);
		Запрос.УстановитьПараметр("СтавкаНДС", 			СтавкаНДС);
		Запрос.УстановитьПараметр("СтавкаНСП", 			СтавкаНСП);
		ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
		                        
		Если ТаблицаДокументов.Количество() > 0 Тогда
			ДокументыОснования.Загрузить(ТаблицаДокументов);
			СуммаДокумента = ТаблицаДокументов.Итог("Сумма");
		Иначе
			// Получение первого попавшегося документа, без отбора по ставкам и значению безналичного расчета.
			// Также из полученного документа происходит выбор значений ставок и безналичного расчета.
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			Запрос.Текст = 		
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	ВременнаяТаблицаДокументы.БезналичныйРасчет,
				|	ВременнаяТаблицаДокументы.СтавкаНДС,
				|	ВременнаяТаблицаДокументы.СтавкаНСП
				|ИЗ
				|	ВременнаяТаблицаДокументы КАК ВременнаяТаблицаДокументы
				|ГДЕ
				|	ВременнаяТаблицаДокументы.ДокументОснование ССЫЛКА Документ.ВозвратТоваровОтПокупателя";
			ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
			
			Если ТаблицаДокументов.Количество() > 0 Тогда
				ДанныеДокумента 	= ТаблицаДокументов[0];
				
				// Установка новых значений ставок и безналичного расчета.
				БезналичныйРасчет 	= ДанныеДокумента.БезналичныйРасчет;
				СтавкаНДС 			= ДанныеДокумента.СтавкаНДС;
				СтавкаНСП 			= ДанныеДокумента.СтавкаНСП;
				
				// 1. Получение документов с отбором по новым ставкам и значению безналичного расчета.
				// 2. Получение всех оставшихся документов, кроме полученных в первом пакете для
				// проверки наличия таковых и показа пользователю соответствующего сообщения.
				Запрос = Новый Запрос;
				Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
				Запрос.Текст = 		
					"ВЫБРАТЬ
					|	ВременнаяТаблицаДокументы.ДокументОснование КАК ДокументОснование,
					|	ВременнаяТаблицаДокументы.Сумма КАК Сумма,
					|	ВременнаяТаблицаДокументы.СуммаНДС КАК СуммаНДС,
					|	ВременнаяТаблицаДокументы.СуммаНСП КАК СуммаНСП,
					|	ВременнаяТаблицаДокументы.Всего КАК Всего
					|ИЗ
					|	ВременнаяТаблицаДокументы КАК ВременнаяТаблицаДокументы
					|ГДЕ
					|	ВременнаяТаблицаДокументы.БезналичныйРасчет = &БезналичныйРасчет
					|	И ВременнаяТаблицаДокументы.СтавкаНДС = &СтавкаНДС
					|	И ВременнаяТаблицаДокументы.СтавкаНСП = &СтавкаНСП
					|	И ВременнаяТаблицаДокументы.ДокументОснование ССЫЛКА Документ.ВозвратТоваровОтПокупателя
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	ВременнаяТаблицаДокументы.ДокументОснование
					|ИЗ
					|	ВременнаяТаблицаДокументы КАК ВременнаяТаблицаДокументы
					|ГДЕ
					|	НЕ(ВременнаяТаблицаДокументы.БезналичныйРасчет = &БезналичныйРасчет
					|				И ВременнаяТаблицаДокументы.СтавкаНДС = &СтавкаНДС
					|				И ВременнаяТаблицаДокументы.СтавкаНСП = &СтавкаНСП)
					|	И ВременнаяТаблицаДокументы.ДокументОснование ССЫЛКА Документ.ВозвратТоваровОтПокупателя";
				Запрос.УстановитьПараметр("БезналичныйРасчет", 	БезналичныйРасчет);
				Запрос.УстановитьПараметр("СтавкаНДС", 			СтавкаНДС);
				Запрос.УстановитьПараметр("СтавкаНСП", 			СтавкаНСП);
				РезультатЗапроса = Запрос.ВыполнитьПакет();
				
				ТаблицаДокументов = РезультатЗапроса[0].Выгрузить();
				
				ДокументыОснования.Загрузить(ТаблицаДокументов);
				СуммаДокумента = ТаблицаДокументов.Итог("Сумма");
				
				Если НЕ РезультатЗапроса[1].Пустой() Тогда
					ТекстСообщения = СтрШаблон(НСтр("ru = 'Для контрагента %1 обнаружены документы возврата с другими ставками.'"), Контрагент);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);		
				КонецЕсли;		
			КонецЕсли				
		КонецЕсли;
		
		
	// Подбор документов "Реализация товаров услуг"
	Иначе
		// Получение документов с отбором по ставкам, значению безналичного расчета,
		// и наличия пустых значений серии и номера бланка счет фактуры.
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 		
			"ВЫБРАТЬ
			|	ВременнаяТаблицаДокументы.ДокументОснование КАК ДокументОснование,
			|	ВременнаяТаблицаДокументы.Сумма КАК Сумма,
			|	ВременнаяТаблицаДокументы.СуммаНДС КАК СуммаНДС,
			|	ВременнаяТаблицаДокументы.СуммаНСП КАК СуммаНСП,
			|	ВременнаяТаблицаДокументы.Всего КАК Всего
			|ИЗ
			|	ВременнаяТаблицаДокументы КАК ВременнаяТаблицаДокументы
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СчетаФактурыВыписанные КАК СчетаФактурыВыписанные
			|		ПО ВременнаяТаблицаДокументы.ДокументОснование = СчетаФактурыВыписанные.Документ
			|ГДЕ
			|	ВременнаяТаблицаДокументы.БезналичныйРасчет = &БезналичныйРасчет
			|	И ВременнаяТаблицаДокументы.СтавкаНДС = &СтавкаНДС
			|	И ВременнаяТаблицаДокументы.СтавкаНСП = &СтавкаНСП
			|	И ВременнаяТаблицаДокументы.ДокументОснование ССЫЛКА Документ.РеализацияТоваровУслуг
			|	И СчетаФактурыВыписанные.СерияБланкаСФ = """"
			|	И СчетаФактурыВыписанные.НомерБланкаСФ = """"";
		Запрос.УстановитьПараметр("БезналичныйРасчет", 	БезналичныйРасчет);
		Запрос.УстановитьПараметр("СтавкаНДС", 			СтавкаНДС);
		Запрос.УстановитьПараметр("СтавкаНСП", 			СтавкаНСП);
		ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
		
		Если ТаблицаДокументов.Количество() > 0 Тогда
			ДокументыОснования.Загрузить(ТаблицаДокументов);
			СуммаДокумента = ТаблицаДокументов.Итог("Сумма");
		Иначе
			// Получение первого попавшегося документа с отбором только по пустым значениям серии и номера бланка счет фактуры.
			// Также из полученного документа происходит выбор значений ставок и безналичного расчета.
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			Запрос.Текст = 		
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	ВременнаяТаблицаДокументы.БезналичныйРасчет,
				|	ВременнаяТаблицаДокументы.СтавкаНДС,
				|	ВременнаяТаблицаДокументы.СтавкаНСП
				|ИЗ
				|	ВременнаяТаблицаДокументы КАК ВременнаяТаблицаДокументы
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СчетаФактурыВыписанные КАК СчетаФактурыВыписанные
				|		ПО ВременнаяТаблицаДокументы.ДокументОснование = СчетаФактурыВыписанные.Документ
				|ГДЕ
				|	ВременнаяТаблицаДокументы.ДокументОснование ССЫЛКА Документ.РеализацияТоваровУслуг
				|	И СчетаФактурыВыписанные.СерияБланкаСФ = """"
				|	И СчетаФактурыВыписанные.НомерБланкаСФ = """"";
			ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
			
			Если ТаблицаДокументов.Количество() > 0 Тогда
				ДанныеДокумента 	= ТаблицаДокументов[0];
				
				// Установка новых значений ставок и безналичного расчета.
				БезналичныйРасчет 	= ДанныеДокумента.БезналичныйРасчет;
				СтавкаНДС 			= ДанныеДокумента.СтавкаНДС;
				СтавкаНСП 			= ДанныеДокумента.СтавкаНСП;
				
				// 1. Получение документов с отбором по новым ставкам, значению безналичного расчета
				// и наличия пустых значений серии и номера бланка счет фактуры.
				// 2. Получение всех оставшихся документов, кроме полученных в первом пакете для
				// проверки наличия таковых и показа пользователю соответствующего сообщения.
				Запрос = Новый Запрос;
				Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
				Запрос.Текст = 		
					"ВЫБРАТЬ
					|	ВременнаяТаблицаДокументы.ДокументОснование КАК ДокументОснование,
					|	ВременнаяТаблицаДокументы.Сумма КАК Сумма,
					|	ВременнаяТаблицаДокументы.СуммаНДС КАК СуммаНДС,
					|	ВременнаяТаблицаДокументы.СуммаНСП КАК СуммаНСП,
					|	ВременнаяТаблицаДокументы.Всего КАК Всего
					|ИЗ
					|	ВременнаяТаблицаДокументы КАК ВременнаяТаблицаДокументы
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СчетаФактурыВыписанные КАК СчетаФактурыВыписанные
					|		ПО ВременнаяТаблицаДокументы.ДокументОснование = СчетаФактурыВыписанные.Документ
					|ГДЕ
					|	ВременнаяТаблицаДокументы.БезналичныйРасчет = &БезналичныйРасчет
					|	И ВременнаяТаблицаДокументы.СтавкаНДС = &СтавкаНДС
					|	И ВременнаяТаблицаДокументы.СтавкаНСП = &СтавкаНСП
					|	И ВременнаяТаблицаДокументы.ДокументОснование ССЫЛКА Документ.РеализацияТоваровУслуг
					|	И СчетаФактурыВыписанные.СерияБланкаСФ = """"
					|	И СчетаФактурыВыписанные.НомерБланкаСФ = """"
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	ВременнаяТаблицаДокументы.ДокументОснование КАК ДокументОснование
					|ИЗ
					|	ВременнаяТаблицаДокументы КАК ВременнаяТаблицаДокументы
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СчетаФактурыВыписанные КАК СчетаФактурыВыписанные
					|		ПО ВременнаяТаблицаДокументы.ДокументОснование = СчетаФактурыВыписанные.Документ
					|ГДЕ
					|	НЕ(ВременнаяТаблицаДокументы.БезналичныйРасчет = &БезналичныйРасчет
					|				И ВременнаяТаблицаДокументы.СтавкаНДС = &СтавкаНДС
					|				И ВременнаяТаблицаДокументы.СтавкаНСП = &СтавкаНСП)
					|	И ВременнаяТаблицаДокументы.ДокументОснование ССЫЛКА Документ.РеализацияТоваровУслуг
					|	И СчетаФактурыВыписанные.СерияБланкаСФ = """"
					|	И СчетаФактурыВыписанные.НомерБланкаСФ = """"";
				Запрос.УстановитьПараметр("БезналичныйРасчет", 	БезналичныйРасчет);
				Запрос.УстановитьПараметр("СтавкаНДС", 			СтавкаНДС);
				Запрос.УстановитьПараметр("СтавкаНСП", 			СтавкаНСП);
				РезультатЗапроса = Запрос.ВыполнитьПакет();
				
				ТаблицаДокументов = РезультатЗапроса[0].Выгрузить();
				
				ДокументыОснования.Загрузить(ТаблицаДокументов);
				СуммаДокумента = ТаблицаДокументов.Итог("Сумма");
				
				Если НЕ РезультатЗапроса[1].Пустой() Тогда
					ТекстСообщения = СтрШаблон(НСтр("ru = 'Для контрагента %1 обнаружены документы реализации с другими ставками.'"), Контрагент);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);		
				КонецЕсли;	
			КонецЕсли				
		КонецЕсли;			
	КонецЕсли;
КонецПроцедуры

// Процедура заполняет табличную часть "Товары" по документам,
// подобранным в табличной части "ДокументыПоступления".
//
// Параметры:
//	ВозвратОтПокупателя - Булево - реквизит "Возврат" данного документа 
//
Процедура ЗаполнитьПоПодобраннымДокументам() Экспорт

	МассивДокументов = ДокументыОснования.Выгрузить().ВыгрузитьКолонку("ДокументОснование");
	
	Запрос = Новый Запрос;         
	
	Если ВозвратТоваров Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВозвратТоваровОтПокупателяТовары.Ссылка КАК ДокументОснования,
			|	ВозвратТоваровОтПокупателяТовары.Номенклатура КАК Номенклатура,
			|	ВозвратТоваровОтПокупателяТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ВозвратТоваровОтПокупателяТовары.Количество КАК Количество,
			|	ВозвратТоваровОтПокупателяТовары.Цена КАК Цена,
			|	ВозвратТоваровОтПокупателяТовары.Сумма КАК Сумма,
			|	ВозвратТоваровОтПокупателяТовары.СуммаНДС КАК СуммаНДС,
			|	ВозвратТоваровОтПокупателяТовары.СуммаНСП КАК СуммаНСП,
			|	ВозвратТоваровОтПокупателяТовары.Всего КАК Всего
			|ИЗ
			|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
			|ГДЕ
			|	ВозвратТоваровОтПокупателяТовары.Ссылка В (&МассивДокументов)";
	Иначе
		Запрос.Текст =		
			"ВЫБРАТЬ
			|	РеализацияТоваровУслугТовары.Ссылка КАК ДокументОснования,
			|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
			|	РеализацияТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	РеализацияТоваровУслугТовары.Количество КАК Количество,
			|	РеализацияТоваровУслугТовары.Цена КАК Цена,
			|	РеализацияТоваровУслугТовары.Сумма КАК Сумма,
			|	РеализацияТоваровУслугТовары.СуммаНДС КАК СуммаНДС,
			|	РеализацияТоваровУслугТовары.СуммаНСП КАК СуммаНСП,
			|	РеализацияТоваровУслугТовары.Всего КАК Всего,
			|	РеализацияТоваровУслугТовары.Доход КАК Доход
			|ИЗ
			|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
			|ГДЕ
			|	РеализацияТоваровУслугТовары.Ссылка В (&МассивДокументов)
			|	И &ЗаполнятьТоварами
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	РеализацияТоваровУслугУслуги.Ссылка,
			|	РеализацияТоваровУслугУслуги.Номенклатура,
			|	РеализацияТоваровУслугУслуги.Номенклатура.ЕдиницаИзмерения,
			|	РеализацияТоваровУслугУслуги.Количество,
			|	РеализацияТоваровУслугУслуги.Цена,
			|	РеализацияТоваровУслугУслуги.Сумма,
			|	РеализацияТоваровУслугУслуги.СуммаНДС,
			|	РеализацияТоваровУслугУслуги.СуммаНСП,
			|	РеализацияТоваровУслугУслуги.Всего,
			|	РеализацияТоваровУслугУслуги.Доход
			|ИЗ
			|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
			|ГДЕ
			|	РеализацияТоваровУслугУслуги.Ссылка В (&МассивДокументов)
			|	И &ЗаполнятьУслугами";
		Запрос.УстановитьПараметр("ЗаполнятьТоварами", ЗаполнятьТоварами);
		Запрос.УстановитьПараметр("ЗаполнятьУслугами", ЗаполнятьУслугами);
	КонецЕсли;
			
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Товары.Загрузить(Запрос.Выполнить().Выгрузить()); 

КонецПроцедуры

#КонецОбласти

#КонецЕсли