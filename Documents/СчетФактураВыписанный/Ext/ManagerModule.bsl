#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыПроведенияДокумента

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаБланкиСФ(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СерияБланкаСФ КАК Серия,
		|	ВременнаяТаблицаШапка.НомерБланкаСФ КАК Номер,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ИспользованиеБланковСФ) КАК Операция,		
		|	1 КАК Количество,		
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|ГДЕ
		|	НЕ ВременнаяТаблицаШапка.СерияБланкаСФ = """"
		|			И НЕ ВременнаяТаблицаШапка.НомерБланкаСФ = """"";		
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаБланкиСФ", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСчетаФактурыВыписанные(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.ДокументРеализации КАК ДокументРеализации,
		|	ВременнаяТаблицаТовары.ДокументРеализации.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаТовары.ДокументРеализации.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаТовары.ДокументРеализации.Контрагент КАК Справочник.Контрагенты).СтранаРезидентства КАК СтранаРезидентства,
		//|	ВЫРАЗИТЬ(ВременнаяТаблицаТовары.ДокументРеализации.Контрагент КАК Справочник.Контрагенты).СтранаРезидентства.ЕАЭС КАК ЕАЭС,
		|	ВЫБОР
		|   	КОГДА ВЫРАЗИТЬ(ВременнаяТаблицаТовары.ДокументРеализации.Контрагент КАК Справочник.Контрагенты).ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|       	ТОГДА ИСТИНА
		|       ИНАЧЕ
		|			ЛОЖЬ
		|   КОНЕЦ КАК ЕАЭС,
		|	ВременнаяТаблицаТовары.Сумма КАК Сумма,
		|	ВременнаяТаблицаТовары.СуммаНДС КАК СуммаНДС,
		|	ВременнаяТаблицаТовары.СуммаНСП КАК СуммаНСП
		|ПОМЕСТИТЬ ВременнаяТаблицаТоварыКонтрагенты
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаТоварыКонтрагенты.ДокументРеализации КАК Документ,
		|	ВременнаяТаблицаШапка.СерияБланкаСФ КАК СерияБланкаСФ,
		|	ВременнаяТаблицаШапка.НомерБланкаСФ КАК НомерБланкаСФ,
		|	ВременнаяТаблицаШапка.ВозвратТоваров,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаТоварыКонтрагенты.СтранаРезидентства = ЗНАЧЕНИЕ(Справочник.СтраныМира.Киргизия)
		|				ИЛИ ВременнаяТаблицаТоварыКонтрагенты.СтранаРезидентства = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
		|		КОГДА ВременнаяТаблицаТоварыКонтрагенты.ЕАЭС
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|		КОГДА ВременнаяТаблицаШапка.ЭкспортнаяПоставка
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ПустаяСсылка)
		|	КОНЕЦ КАК ПризнакСтраны,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.Общая
		|			ТОГДА ВременнаяТаблицаШапка.Контрагент
		|		ИНАЧЕ ВременнаяТаблицаТоварыКонтрагенты.Контрагент
		|	КОНЕЦ КАК Контрагент,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.Общая
		|			ТОГДА ВременнаяТаблицаШапка.ДоговорКонтрагента
		|		ИНАЧЕ ВременнаяТаблицаТоварыКонтрагенты.ДоговорКонтрагента
		|	КОНЕЦ КАК ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.СтавкаНДС КАК СтавкаНДС,
		|	ВременнаяТаблицаШапка.ДатаСФ КАК ДатаСФ,
		|	ВременнаяТаблицаШапка.ВидПоставкиНДС КАК ВидПоставкиНДС,
		|	ВременнаяТаблицаТоварыКонтрагенты.Сумма КАК СуммаБезНДС,
		|	ВременнаяТаблицаТоварыКонтрагенты.СуммаНДС КАК СуммаНДС,
		|	ВременнаяТаблицаТоварыКонтрагенты.СуммаНСП КАК СуммаНеоблагаемая
		|ПОМЕСТИТЬ ВременнаяТаблицаОбщая
		|ИЗ
		|	ВременнаяТаблицаТоварыКонтрагенты КАК ВременнаяТаблицаТоварыКонтрагенты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОбщая.Период,
		|	ВременнаяТаблицаОбщая.Организация,
		|	ВременнаяТаблицаОбщая.Документ,
		|	ВременнаяТаблицаОбщая.СерияБланкаСФ,
		|	ВременнаяТаблицаОбщая.НомерБланкаСФ,
		|	ВременнаяТаблицаОбщая.ВозвратТоваров,
		|	ВременнаяТаблицаОбщая.ПризнакСтраны,
		|	ВременнаяТаблицаОбщая.Контрагент,
		|	ВременнаяТаблицаОбщая.ДоговорКонтрагента,
		|	ВременнаяТаблицаОбщая.СтавкаНДС,
		|	ВременнаяТаблицаОбщая.ДатаСФ,
		|	СУММА(ВременнаяТаблицаОбщая.СуммаБезНДС) КАК СуммаБезНДС,
		|	СУММА(ВременнаяТаблицаОбщая.СуммаНДС) КАК СуммаНДС,
		|	СУММА(ВременнаяТаблицаОбщая.СуммаНеоблагаемая) КАК СуммаНеоблагаемая,
		|	ВременнаяТаблицаОбщая.ВидПоставкиНДС
		|ИЗ
		|	ВременнаяТаблицаОбщая КАК ВременнаяТаблицаОбщая
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаОбщая.СтавкаНДС,
		|	ВременнаяТаблицаОбщая.ДоговорКонтрагента,
		|	ВременнаяТаблицаОбщая.Контрагент,
		|	ВременнаяТаблицаОбщая.ДатаСФ,
		|	ВременнаяТаблицаОбщая.ВозвратТоваров,
		|	ВременнаяТаблицаОбщая.НомерБланкаСФ,
		|	ВременнаяТаблицаОбщая.Период,
		|	ВременнаяТаблицаОбщая.Документ,
		|	ВременнаяТаблицаОбщая.СерияБланкаСФ,
		|	ВременнаяТаблицаОбщая.ПризнакСтраны,
		|	ВременнаяТаблицаОбщая.Организация,
		|	ВременнаяТаблицаОбщая.ВидПоставкиНДС";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСчетаФактурыВыписанные", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка,
		|	ТаблицаДокумента.Дата КАК Период,
		|	ТаблицаДокумента.Организация,
		|	ТаблицаДокумента.СерияБланкаСФ,
		|	ТаблицаДокумента.НомерБланкаСФ,
		|	ТаблицаДокумента.ДатаСФ,
		|	ТаблицаДокумента.Контрагент,
		|	ТаблицаДокумента.СтавкаНДС,
		|	ТаблицаДокумента.СтавкаНСП,
		|	ТаблицаДокумента.ДоговорКонтрагента,
		|	ТаблицаДокумента.ВидПоставкиНДС КАК ВидПоставкиНДС,
		|	ТаблицаДокумента.ЭкспортнаяПоставка,
		|	ТаблицаДокумента.ВозвратТоваров,
		|	ТаблицаДокумента.Общая
		|ПОМЕСТИТЬ ВременнаяТаблицаШапка
		|ИЗ
		|	Документ.СчетФактураВыписанный КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ВременнаяТаблицаДокументыОснования
		|ИЗ
		|	Документ.СчетФактураВыписанный.ДокументыОснования КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеализацияТоваровУслугТовары.Ссылка КАК ДокументРеализации,
		|	РеализацияТоваровУслугТовары.Сумма,
		|	РеализацияТоваровУслугТовары.СуммаНДС,
		|	РеализацияТоваровУслугТовары.СуммаНСП,
		|	РеализацияТоваровУслугТовары.Всего
		|ПОМЕСТИТЬ ВременнаяТаблицаТовары
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыОснования КАК ВременнаяТаблицаДокументыОснования
		|		ПО РеализацияТоваровУслугТовары.Ссылка = ВременнаяТаблицаДокументыОснования.ДокументОснование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВозвратТоваровОтПокупателяТовары.Ссылка,
		|	ВозвратТоваровОтПокупателяТовары.Сумма,
		|	ВозвратТоваровОтПокупателяТовары.СуммаНДС,
		|	ВозвратТоваровОтПокупателяТовары.СуммаНСП,
		|	ВозвратТоваровОтПокупателяТовары.Всего
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыОснования КАК ВременнаяТаблицаДокументыОснования
		|		ПО ВозвратТоваровОтПокупателяТовары.Ссылка = ВременнаяТаблицаДокументыОснования.ДокументОснование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СчетНаОплатуПокупателюТовары.Ссылка,
		|	СчетНаОплатуПокупателюТовары.Сумма,
		|	СчетНаОплатуПокупателюТовары.СуммаНДС,
		|	СчетНаОплатуПокупателюТовары.СуммаНСП,
		|	СчетНаОплатуПокупателюТовары.Всего
		|ИЗ
		|	Документ.СчетНаОплатуПокупателю.Товары КАК СчетНаОплатуПокупателюТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыОснования КАК ВременнаяТаблицаДокументыОснования
		|		ПО СчетНаОплатуПокупателюТовары.Ссылка = ВременнаяТаблицаДокументыОснования.ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеализацияТоваровУслугУслуги.Ссылка КАК ДокументРеализации,
		|	РеализацияТоваровУслугУслуги.Сумма,
		|	РеализацияТоваровУслугУслуги.СуммаНДС,
		|	РеализацияТоваровУслугУслуги.СуммаНСП,
		|	РеализацияТоваровУслугУслуги.Всего
		|ПОМЕСТИТЬ ВременнаяТаблицаУслуги
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыОснования КАК ВременнаяТаблицаДокументыОснования
		|		ПО РеализацияТоваровУслугУслуги.Ссылка = ВременнаяТаблицаДокументыОснования.ДокументОснование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СчетНаОплатуПокупателюУслуги.Ссылка,
		|	СчетНаОплатуПокупателюУслуги.Сумма,
		|	СчетНаОплатуПокупателюУслуги.СуммаНДС,
		|	СчетНаОплатуПокупателюУслуги.СуммаНСП,
		|	СчетНаОплатуПокупателюУслуги.Всего
		|ИЗ
		|	Документ.СчетНаОплатуПокупателю.Услуги КАК СчетНаОплатуПокупателюУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыОснования КАК ВременнаяТаблицаДокументыОснования
		|		ПО СчетНаОплатуПокупателюУслуги.Ссылка = ВременнаяТаблицаДокументыОснования.ДокументОснование";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Выполнить();
	
	СформироватьТаблицаБланкиСФ(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСчетаФактурыВыписанные(ДокументСсылка, СтруктураДополнительныеСвойства);
		
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой Счет-фактура
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьСчетФактура(МассивОбъектов, ОбъектыПечати, КоличествоСтрокСчетаФактуры)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "СчетФактураВыписанный_СчетФактура";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщиеМакеты.СчетФактура");
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ВременнаяТаблицаДокументыОснования
		|ИЗ
		|	Документ.СчетФактураВыписанный.ДокументыОснования КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка В(&СписокДокументов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеализацияТоваровУслугТовары.Ссылка,
		|	РеализацияТоваровУслугТовары.Номенклатура,
		|	РеализацияТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
		|	РеализацияТоваровУслугТовары.Количество,
		|	РеализацияТоваровУслугТовары.Цена,
		|	РеализацияТоваровУслугТовары.Всего,
		|	РеализацияТоваровУслугТовары.Всего КАК Стоимость,
		|	РеализацияТоваровУслугТовары.СуммаНДС,
		|	РеализацияТоваровУслугТовары.СуммаНСП,
		|	РеализацияТоваровУслугТовары.СуммаСкидки,
		|	РеализацияТоваровУслугТовары.Номенклатура.КодТНВЭД КАК КодТНВЭД
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыОснования КАК ВременнаяТаблицаДокументыОснования
		|		ПО РеализацияТоваровУслугТовары.Ссылка = ВременнаяТаблицаДокументыОснования.ДокументОснование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВозвратТоваровОтПокупателяТовары.Ссылка,
		|	ВозвратТоваровОтПокупателяТовары.Номенклатура,
		|	ВозвратТоваровОтПокупателяТовары.Номенклатура.ЕдиницаИзмерения.Наименование,
		|	ВозвратТоваровОтПокупателяТовары.Количество,
		|	ВозвратТоваровОтПокупателяТовары.Цена,
		|	ВозвратТоваровОтПокупателяТовары.Всего,
		|	ВозвратТоваровОтПокупателяТовары.Всего,
		|	ВозвратТоваровОтПокупателяТовары.СуммаНДС,
		|	ВозвратТоваровОтПокупателяТовары.СуммаНСП,
		|	ВозвратТоваровОтПокупателяТовары.СуммаСкидки,
		|	ВозвратТоваровОтПокупателяТовары.Номенклатура.КодТНВЭД
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыОснования КАК ВременнаяТаблицаДокументыОснования
		|		ПО ВозвратТоваровОтПокупателяТовары.Ссылка = ВременнаяТаблицаДокументыОснования.ДокументОснование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СчетНаОплатуПокупателюТовары.Ссылка,
		|	СчетНаОплатуПокупателюТовары.Номенклатура,
		|	СчетНаОплатуПокупателюТовары.Номенклатура.ЕдиницаИзмерения.Наименование,
		|	СчетНаОплатуПокупателюТовары.Количество,
		|	СчетНаОплатуПокупателюТовары.Цена,
		|	СчетНаОплатуПокупателюТовары.Всего,
		|	СчетНаОплатуПокупателюТовары.Всего,
		|	СчетНаОплатуПокупателюТовары.СуммаНДС,
		|	СчетНаОплатуПокупателюТовары.СуммаНСП,
		|	СчетНаОплатуПокупателюТовары.СуммаСкидки,
		|	СчетНаОплатуПокупателюТовары.Номенклатура.КодТНВЭД
		|ИЗ
		|	Документ.СчетНаОплатуПокупателю.Товары КАК СчетНаОплатуПокупателюТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыОснования КАК ВременнаяТаблицаДокументыОснования
		|		ПО СчетНаОплатуПокупателюТовары.Ссылка = ВременнаяТаблицаДокументыОснования.ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеализацияТоваровУслугУслуги.Ссылка,
		|	РеализацияТоваровУслугУслуги.Номенклатура,
		|	РеализацияТоваровУслугУслуги.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
		|	РеализацияТоваровУслугУслуги.Количество,
		|	РеализацияТоваровУслугУслуги.Цена,
		|	РеализацияТоваровУслугУслуги.Всего,
		|	РеализацияТоваровУслугУслуги.Всего КАК Стоимость,
		|	РеализацияТоваровУслугУслуги.СуммаНДС,
		|	РеализацияТоваровУслугУслуги.СуммаНСП,
		|	РеализацияТоваровУслугУслуги.СуммаСкидки,
		|	РеализацияТоваровУслугУслуги.Номенклатура.КодТНВЭД КАК КодТНВЭД
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыОснования КАК ВременнаяТаблицаДокументыОснования
		|		ПО РеализацияТоваровУслугУслуги.Ссылка = ВременнаяТаблицаДокументыОснования.ДокументОснование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СчетНаОплатуПокупателюУслуги.Ссылка,
		|	СчетНаОплатуПокупателюУслуги.Номенклатура,
		|	СчетНаОплатуПокупателюУслуги.Номенклатура.ЕдиницаИзмерения.Наименование,
		|	СчетНаОплатуПокупателюУслуги.Количество,
		|	СчетНаОплатуПокупателюУслуги.Цена,
		|	СчетНаОплатуПокупателюУслуги.Всего,
		|	СчетНаОплатуПокупателюУслуги.Всего,
		|	СчетНаОплатуПокупателюУслуги.СуммаНДС,
		|	СчетНаОплатуПокупателюУслуги.СуммаНСП,
		|	СчетНаОплатуПокупателюУслуги.СуммаСкидки,
		|	СчетНаОплатуПокупателюУслуги.Номенклатура.КодТНВЭД
		|ИЗ
		|	Документ.СчетНаОплатуПокупателю.Услуги КАК СчетНаОплатуПокупателюУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыОснования КАК ВременнаяТаблицаДокументыОснования
		|		ПО СчетНаОплатуПокупателюУслуги.Ссылка = ВременнаяТаблицаДокументыОснования.ДокументОснование";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	МассивРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	// Таблицы
	ИсходнаяТаблицаТовары = МассивРезультатовЗапроса[1].Выгрузить();                                      
	ИсходнаяТаблицаУслуги = МассивРезультатовЗапроса[2].Выгрузить();   
	ИсходнаяТаблицаТовары.Индексы.Добавить("Ссылка");
	ИсходнаяТаблицаУслуги.Индексы.Добавить("Ссылка");
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка,
		|	ТаблицаДокумента.Номер,
		|	ТаблицаДокумента.Дата,
		|	ТаблицаДокумента.Организация,
		// Сведения об организации
		|	ТаблицаДокумента.Организация.НаименованиеПолное КАК ОрганизацияПредставление,
		|	ТаблицаДокумента.Организация.ИНН КАК ИННОрганизации,
		|	ТаблицаДокумента.Организация.ГНС КАК ГНСОрганизации,
		|	ТаблицаДокумента.Организация.ГНС.Код КАК КодГНСОрганизации,
		// Сведения о банковском счете организации
		|	ТаблицаДокумента.ЭкспортнаяПоставка КАК ЭкспортнаяПоставка,
		|	ТаблицаДокумента.БанковскийСчет.НомерСчета КАК НомерБанковскогоСчетаОрганизации,
		|	ТаблицаДокумента.БанковскийСчет.Банк.Код КАК БикБанкаОрганизации,
		|	ТаблицаДокумента.БанковскийСчет.Банк.Наименование КАК НаименованиеБанкаОрганизации,
		// Сведения о контрегенте
		|	ТаблицаДокумента.Контрагент,
		|	ТаблицаДокумента.Контрагент.ИНН КАК ИННКонтрагента,
		|	ТаблицаДокумента.Контрагент.ГНС КАК ГНСКонтрагента,
		|	ТаблицаДокумента.Контрагент.ГНС.Код КАК КодГНСКонтрагента,
		|	ТаблицаДокумента.Контрагент.ОсновнойБанковскийСчет КАК БанковскогоСчетаКонтрагента,
		|	ТаблицаДокумента.Контрагент.ОсновнойБанковскийСчет.НомерСчета КАК НомерБанковскогоСчетаКонтрагента,
		|	ТаблицаДокумента.Контрагент.ОсновнойБанковскийСчет.Банк.Код КАК БикБанкаКонтрагента,
		|	ТаблицаДокумента.Контрагент.ОсновнойБанковскийСчет.Банк.Наименование КАК НаименованиеБанкаКонтрагента,
		// Сведения о счете-фактуре
		|	ТаблицаДокумента.ТипПоставкиСФ КАК ТипПоставки,
		|	ТаблицаДокумента.ТипПоставкиСФ.Наименование КАК НаименованиеПоставки,
		|	ТаблицаДокумента.ВидПлатежа,
		|	ТаблицаДокумента.НомерБланкаСФ,
		|	ТаблицаДокумента.СерияБланкаСФ,
		|	ТаблицаДокумента.ДатаСФ,
		// Ставки
		|	ТаблицаДокумента.БезналичныйРасчет,
		|	ТаблицаДокумента.СтавкаНДС,
		|	ТаблицаДокумента.СтавкаНСП
		|ИЗ
		|	Документ.СчетФактураВыписанный КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка В(&СписокДокументов)";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;
		ДанныеПечати.Вставить("НомерОтчета", ?(КоличествоСтрокСчетаФактуры = 20,"001","002"));
		ДанныеПечати.Вставить("НомерПриложения", ?(КоличествоСтрокСчетаФактуры = 20,"2","3"));
		ДанныеПечати.Вставить("НомерБланкаСФ", Шапка.НомерБланкаСФ);
		ДанныеПечати.Вставить("СерияБланкаСФ", Шапка.СерияБланкаСФ);
		ДанныеПечати.Вставить("ТипПоставки", ?(Шапка.ЭкспортнаяПоставка, "Экспорт", "Внутренняя"));
		
		ДанныеПечати.Вставить("ТекстЗаголовка", НСтр("ru = 'СЧЕТ-ФАКТУРА НДС'"));

		ДанныеПечати.Вставить("ДатаПоставки", Формат(Шапка.Дата,"ДЛФ=DD"));
		ДанныеПечати.Вставить("БанкПоставщика", Шапка.НаименованиеБанкаОрганизации);		
		
		ПредставлениеПоставщика = "";
		Организация = Шапка.Организация;
		ИНН = Шапка.ИННОрганизации;
	    ГНС = Шапка.ГНСОрганизации;
	    КодГНС = Шапка.КодГНСОрганизации;
		
		ПредставлениеПоставщика = Шапка.ОрганизацияПредставление;
		
		ДатаСФ = Формат(Шапка.ДатаСФ, "ДЛФ=D");
		ДанныеПечати.Вставить("Дата1", Сред(ДатаСФ,1,1));
		ДанныеПечати.Вставить("Дата2", Сред(ДатаСФ,2,1));
		ДанныеПечати.Вставить("Дата3", Сред(ДатаСФ,4,1));
		ДанныеПечати.Вставить("Дата4", Сред(ДатаСФ,5,1));
		ДанныеПечати.Вставить("Дата5", Сред(ДатаСФ,7,1));
		ДанныеПечати.Вставить("Дата6", Сред(ДатаСФ,8,1));
		ДанныеПечати.Вставить("Дата7", Сред(ДатаСФ,9,1));
		ДанныеПечати.Вставить("Дата8", Сред(ДатаСФ,10,1));
		
		ДанныеПечати.Вставить("ИННПост1", Сред(ИНН,1,1));
		ДанныеПечати.Вставить("ИННПост2", Сред(ИНН,2,1));
		ДанныеПечати.Вставить("ИННПост3", Сред(ИНН,3,1));
		ДанныеПечати.Вставить("ИННПост4", Сред(ИНН,4,1));
		ДанныеПечати.Вставить("ИННПост5", Сред(ИНН,5,1));
		ДанныеПечати.Вставить("ИННПост6", Сред(ИНН,6,1));
		ДанныеПечати.Вставить("ИННПост7", Сред(ИНН,7,1));
		ДанныеПечати.Вставить("ИННПост8", Сред(ИНН,8,1));
		ДанныеПечати.Вставить("ИННПост9", Сред(ИНН,9,1));
		ДанныеПечати.Вставить("ИННПост10", Сред(ИНН,10,1));
		ДанныеПечати.Вставить("ИННПост11", Сред(ИНН,11,1));
		ДанныеПечати.Вставить("ИННПост12", Сред(ИНН,12,1));
		ДанныеПечати.Вставить("ИННПост13", Сред(ИНН,13,1));
		ДанныеПечати.Вставить("ИННПост14", Сред(ИНН,14,1));

        БИК = Шапка.БикБанкаОрганизации;
		ДанныеПечати.Вставить("КодБанкаПоставщика1", Сред(БИК,1,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика2", Сред(БИК,2,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика3", Сред(БИК,3,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика4", Сред(БИК,4,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика5", Сред(БИК,5,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика6", Сред(БИК,6,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика7", Сред(БИК,7,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика8", Сред(БИК,8,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика9", Сред(БИК,9,1));		
		
		НомерСчета = Шапка.НомерБанковскогоСчетаОрганизации;
		ДанныеПечати.Вставить("СчетПоставщика1", Сред(НомерСчета,1,1));		
		ДанныеПечати.Вставить("СчетПоставщика2", Сред(НомерСчета,2,1));		
		ДанныеПечати.Вставить("СчетПоставщика3", Сред(НомерСчета,3,1));		
		ДанныеПечати.Вставить("СчетПоставщика4", Сред(НомерСчета,4,1));		
		ДанныеПечати.Вставить("СчетПоставщика5", Сред(НомерСчета,5,1));		
		ДанныеПечати.Вставить("СчетПоставщика6", Сред(НомерСчета,6,1));		
		ДанныеПечати.Вставить("СчетПоставщика7", Сред(НомерСчета,7,1));		
		ДанныеПечати.Вставить("СчетПоставщика8", Сред(НомерСчета,8,1));		
		ДанныеПечати.Вставить("СчетПоставщика9", Сред(НомерСчета,9,1));		
		ДанныеПечати.Вставить("СчетПоставщика10", Сред(НомерСчета,10,1));		
		ДанныеПечати.Вставить("СчетПоставщика11", Сред(НомерСчета,11,1));		
		ДанныеПечати.Вставить("СчетПоставщика12", Сред(НомерСчета,12,1));		
		ДанныеПечати.Вставить("СчетПоставщика13", Сред(НомерСчета,13,1));		
		ДанныеПечати.Вставить("СчетПоставщика14", Сред(НомерСчета,14,1));		
		ДанныеПечати.Вставить("СчетПоставщика15", Сред(НомерСчета,15,1));		
		ДанныеПечати.Вставить("СчетПоставщика16", Сред(НомерСчета,16,1));		
		
		ДанныеПечати.Вставить("ГНСПоставщика1", Сред(КодГНС,1,1));		
		ДанныеПечати.Вставить("ГНСПоставщика2", Сред(КодГНС,2,1));		
		ДанныеПечати.Вставить("ГНСПоставщика3", Сред(КодГНС,3,1));		

		ДанныеПечати.Вставить("НаименованиеГНСПоставщика", ГНС);		
		ДанныеПечати.Вставить("ПредставлениеПоставщика", ПредставлениеПоставщика);		
		
		АдресПоставщика = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента, Шапка.Дата); 
		ДанныеПечати.Вставить("АдресПоставщика", АдресПоставщика);		

		// Данные по контрагенту
		АдресПокупателя = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Шапка.Контрагент, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента, Шапка.Дата); 
		ДанныеПечати.Вставить("АдресПокупателя", АдресПокупателя);		
		
		ИННКонтрагента = Шапка.ИННКонтрагента;
		ДанныеПечати.Вставить("ИННПок1", Сред(ИННКонтрагента,1,1));		
		ДанныеПечати.Вставить("ИННПок2", Сред(ИННКонтрагента,2,1));		
		ДанныеПечати.Вставить("ИННПок3", Сред(ИННКонтрагента,3,1));		
		ДанныеПечати.Вставить("ИННПок4", Сред(ИННКонтрагента,4,1));		
		ДанныеПечати.Вставить("ИННПок5", Сред(ИННКонтрагента,5,1));		
		ДанныеПечати.Вставить("ИННПок6", Сред(ИННКонтрагента,6,1));		
		ДанныеПечати.Вставить("ИННПок7", Сред(ИННКонтрагента,7,1));		
		ДанныеПечати.Вставить("ИННПок8", Сред(ИННКонтрагента,8,1));		
		ДанныеПечати.Вставить("ИННПок9", Сред(ИННКонтрагента,9,1));		
		ДанныеПечати.Вставить("ИННПок10", Сред(ИННКонтрагента,10,1));		
		ДанныеПечати.Вставить("ИННПок11", Сред(ИННКонтрагента,11,1));		
		ДанныеПечати.Вставить("ИННПок12", Сред(ИННКонтрагента,12,1));		
		ДанныеПечати.Вставить("ИННПок13", Сред(ИННКонтрагента,13,1));		
		ДанныеПечати.Вставить("ИННПок14", Сред(ИННКонтрагента,14,1));		
		
		КодГНСКонтрагента = Шапка.КодГНСКонтрагента;
		ДанныеПечати.Вставить("ГНСПокупателя1", Сред(КодГНСКонтрагента,1,1));		
		ДанныеПечати.Вставить("ГНСПокупателя2", Сред(КодГНСКонтрагента,2,1));		
		ДанныеПечати.Вставить("ГНСПокупателя3", Сред(КодГНСКонтрагента,3,1));		
		
		Если ЗначениеЗаполнено(Шапка.БанковскогоСчетаКонтрагента) Тогда 
			НомерСчетаКонтрагента = Шапка.НомерБанковскогоСчетаКонтрагента;
			ДанныеПечати.Вставить("СчетПокупателя1", Сред(НомерСчетаКонтрагента,1,1));		
			ДанныеПечати.Вставить("СчетПокупателя2", Сред(НомерСчетаКонтрагента,2,1));		
			ДанныеПечати.Вставить("СчетПокупателя3", Сред(НомерСчетаКонтрагента,3,1));		
			ДанныеПечати.Вставить("СчетПокупателя4", Сред(НомерСчетаКонтрагента,4,1));		
			ДанныеПечати.Вставить("СчетПокупателя5", Сред(НомерСчетаКонтрагента,5,1));		
			ДанныеПечати.Вставить("СчетПокупателя6", Сред(НомерСчетаКонтрагента,6,1));		
			ДанныеПечати.Вставить("СчетПокупателя7", Сред(НомерСчетаКонтрагента,7,1));		
			ДанныеПечати.Вставить("СчетПокупателя8", Сред(НомерСчетаКонтрагента,8,1));		
			ДанныеПечати.Вставить("СчетПокупателя9", Сред(НомерСчетаКонтрагента,9,1));		
			ДанныеПечати.Вставить("СчетПокупателя10", Сред(НомерСчетаКонтрагента,10,1));		
			ДанныеПечати.Вставить("СчетПокупателя11", Сред(НомерСчетаКонтрагента,11,1));		
			ДанныеПечати.Вставить("СчетПокупателя12", Сред(НомерСчетаКонтрагента,12,1));		
			ДанныеПечати.Вставить("СчетПокупателя13", Сред(НомерСчетаКонтрагента,13,1));		
			ДанныеПечати.Вставить("СчетПокупателя14", Сред(НомерСчетаКонтрагента,14,1));		
			
			БикБанкаКонтрагента = Шапка.БикБанкаКонтрагента;
			ДанныеПечати.Вставить("КодБанкаПокупателя1", Сред(БикБанкаКонтрагента,1,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя2", Сред(БикБанкаКонтрагента,2,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя3", Сред(БикБанкаКонтрагента,3,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя4", Сред(БикБанкаКонтрагента,4,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя5", Сред(БикБанкаКонтрагента,5,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя6", Сред(БикБанкаКонтрагента,6,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя7", Сред(БикБанкаКонтрагента,7,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя8", Сред(БикБанкаКонтрагента,8,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя9", Сред(БикБанкаКонтрагента,9,1));		
			
			ДанныеПечати.Вставить("БанкПокупателя", Шапка.НаименованиеБанкаКонтрагента);
		Иначе 	
			// Отсутствует
			ДанныеПечати.Вставить("СчетПокупателя1","о");
			ДанныеПечати.Вставить("СчетПокупателя2","т");
			ДанныеПечати.Вставить("СчетПокупателя3","с");
			ДанныеПечати.Вставить("СчетПокупателя4","у");
			ДанныеПечати.Вставить("СчетПокупателя5","т");
			ДанныеПечати.Вставить("СчетПокупателя6","с");
			ДанныеПечати.Вставить("СчетПокупателя7","т");
			ДанныеПечати.Вставить("СчетПокупателя8","в");
			ДанныеПечати.Вставить("СчетПокупателя9","у");
			ДанныеПечати.Вставить("СчетПокупателя10","е");
			ДанныеПечати.Вставить("СчетПокупателя11","т");	

			ДанныеПечати.Вставить("БанкПокупателя", "отсутствует");
		КонецЕсли;	
		
		// Таблицы
		ПараметрыОтбора = Новый Структура("Ссылка", Шапка.Ссылка);
		ТаблицаТовары = ИсходнаяТаблицаТовары.Скопировать(ПараметрыОтбора);
		ТаблицаУслуги = ИсходнаяТаблицаУслуги.Скопировать(ПараметрыОтбора);   
		
		// Ставки
		Если Шапка.БезналичныйРасчет Тогда 
			ЗначениеСтавкиНСП = "0";
		Иначе 
			ЗначениеСтавкиНСП = УчетНДСВызовСервера.ПолучитьСтавкуНСП(Шапка.Дата, Шапка.СтавкаНДС, Шапка.СтавкаНСП);
		КонецЕсли;
		
		ЗначениеСтавкиНДС = УчетНДСВызовСервера.ПолучитьСтавкуНДС(Шапка.Дата, Шапка.СтавкаНДС);
		ДанныеПечати.Вставить("СтавкаНДС", ?(ЗначениеЗаполнено(ЗначениеСтавкиНДС), Строка(ЗначениеСтавкиНДС) + "%",""));
		ДанныеПечати.Вставить("СтавкаНСП", ?(ЗначениеЗаполнено(ЗначениеСтавкиНСП), Строка(ЗначениеСтавкиНСП) + "%",""));
		
		// Итоги
		Всего = ТаблицаТовары.Итог("Всего") + ТаблицаУслуги.Итог("Всего");
		ВсегоНДС = ТаблицаТовары.Итог("СуммаНДС") + ТаблицаУслуги.Итог("СуммаНДС");
		ВсегоНСП = ТаблицаТовары.Итог("СуммаНСП") + ТаблицаУслуги.Итог("СуммаНСП");
		ВсегоСуммаСкидки = ТаблицаТовары.Итог("СуммаСкидки") + ТаблицаУслуги.Итог("СуммаСкидки");
		КоличествоСтрок = ТаблицаТовары.Количество() + ТаблицаУслуги.Количество();
		
		ДанныеПечати.Вставить("Всего", Всего);
		ДанныеПечати.Вставить("ВсегоНДС", ВсегоНДС);
		ДанныеПечати.Вставить("ВсегоНСП", ВсегоНСП);
		ДанныеПечати.Вставить("ВсегоСНДС", Всего + ВсегоНДС + ВсегоНСП);
		ДанныеПечати.Вставить("ИтогоКоличество", ТаблицаТовары.Итог("Количество"));
		
		// Скидка
		ЕстьСкидка = Ложь;
		Если ВсегоСуммаСкидки > 0 Тогда								
			ЕстьСкидка = Истина;
			Всего = Всего - ВсегоСуммаСкидки;
			ДанныеПечати.Вставить("СтоимостьСкидка", -Всего);
			ДанныеПечати.Вставить("СуммаНДССкидка", -ВсегоНДС);
			ДанныеПечати.Вставить("ВсегоСкидка", -Всего -ВсегоНДС);
		КонецЕсли;
		
		// Информация подвала
		ТекстОКоличестве = СтрШаблон("%1 (%2)", КоличествоСтрокСчетаФактуры, ?(КоличествоСтрокСчетаФактуры = 20,"(двадцати)","(семи)"));
		ДанныеПечати.Вставить("КоличествоСтрокСчетаФактуры", ТекстОКоличестве);
		ДанныеПечати.Вставить("НомерОтчета", ?(КоличествоСтрокСчетаФактуры = 20,"001","002"));
		
		// Области
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Шапка");
		МассивОбластейМакета.Добавить("Строка");
		Если ЕстьСкидка Тогда 
			МассивОбластейМакета.Добавить("СтрокаСоСкидкой");
		КонецЕсли;	
		МассивОбластейМакета.Добавить("Итоги");
		МассивОбластейМакета.Добавить("Подвал");
		
		ДанныеПечатиСтроки = Новый Структура("КодТовара1, КодТовара2, КодТовара3, КодТовара4","0","0","0","0");
		
		ДанныеПечатиПустаяСтрока = Новый Структура();
		ДанныеПечатиПустаяСтрока.Вставить("КодТовара1", 		"");
		ДанныеПечатиПустаяСтрока.Вставить("КодТовара2", 		"");
		ДанныеПечатиПустаяСтрока.Вставить("КодТовара3", 		"");
		ДанныеПечатиПустаяСтрока.Вставить("КодТовара4", 		"");
		ДанныеПечатиПустаяСтрока.Вставить("Количество", 		"Х");
		ДанныеПечатиПустаяСтрока.Вставить("СтавкаНДС", 			"Х");
		ДанныеПечатиПустаяСтрока.Вставить("СтавкаНСП", 			"Х");
		ДанныеПечатиПустаяСтрока.Вставить("Стоимость", 			"Х");
		ДанныеПечатиПустаяСтрока.Вставить("СуммаНДС", 			"Х");
		ДанныеПечатиПустаяСтрока.Вставить("СуммаНСП", 			"Х");
		ДанныеПечатиПустаяСтрока.Вставить("Номенклатура", 		"Х");
		ДанныеПечатиПустаяСтрока.Вставить("ЕдиницаИзмерения", 	"Х");
		ДанныеПечатиПустаяСтрока.Вставить("Цена", 				"Х");
		ДанныеПечатиПустаяСтрока.Вставить("Всего", 				"Х");
				
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ИмяОбласти <> "Строка" Тогда
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			ИначеЕсли ИмяОбласти = "Строка" Тогда 
				Для Каждого СтрокаТаблицы Из ТаблицаТовары Цикл
					КодТНВЭД = ?(ЗначениеЗаполнено(СтрокаТаблицы.КодТНВЭД), СтрокаТаблицы.КодТНВЭД, "0000");
					ДанныеПечатиСтроки.КодТовара1 = Сред(КодТНВЭД,1,1);
					ДанныеПечатиСтроки.КодТовара2 = Сред(КодТНВЭД,2,1);
					ДанныеПечатиСтроки.КодТовара3 = Сред(КодТНВЭД,3,1);
					ДанныеПечатиСтроки.КодТовара4 = Сред(КодТНВЭД,4,1);
					
					ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ОбластьМакета.Параметры.Заполнить(ДанныеПечатиСтроки);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
				
				Для Каждого СтрокаТаблицы Из ТаблицаУслуги Цикл 
					КодТНВЭД = ?(ЗначениеЗаполнено(СтрокаТаблицы.КодТНВЭД), СтрокаТаблицы.КодТНВЭД, "0000");
					ДанныеПечатиСтроки.КодТовара1 = Сред(КодТНВЭД,1,1);
					ДанныеПечатиСтроки.КодТовара2 = Сред(КодТНВЭД,2,1);
					ДанныеПечатиСтроки.КодТовара3 = Сред(КодТНВЭД,3,1);
					ДанныеПечатиСтроки.КодТовара4 = Сред(КодТНВЭД,4,1);
					
					ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ОбластьМакета.Параметры.Заполнить(ДанныеПечатиСтроки);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;	
						
				// Добавление пустых строк
				Если КоличествоСтрокСчетаФактуры > КоличествоСтрок Тогда 
					Для Счетчик = 1 По КоличествоСтрокСчетаФактуры - КоличествоСтрок Цикл
						ОбластьМакета.Параметры.Заполнить(ДанныеПечатиПустаяСтрока);
						ТабличныйДокумент.Вывести(ОбластьМакета);		
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции
	
// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактура001") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"СчетФактура001", НСтр("ru = 'Счет-фактура (001)'"), ПечатьСчетФактура(МассивОбъектов, ОбъектыПечати, 20));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактура002") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"СчетФактура002", НСтр("ru = 'Счет-фактура (002)'"), ПечатьСчетФактура(МассивОбъектов, ОбъектыПечати, 7));
	КонецЕсли;	
		
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
		
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактура001";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура (001)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактура002";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура (002)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 2;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли