#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыПроведенияДокумента

// Формирует таблицу значений, содержащую данные для проведения по регистру бухгалтерии Хозрасчетный.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Дата КАК Период,
		|	ТаблицаДокумента.Организация,
		|	ТаблицаДокумента.СчетПрихода КАК СчетДт,
		|	ТаблицаДокумента.СчетРасхода КАК СчетКт,
		|	ТаблицаДокумента.ПриходРасчетныйСчет КАК СубконтоДт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	ТаблицаДокумента.РасходРасчетныйСчет КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ВалютаПрихода = &ВалютаРегламентированногоУчета
		|				И ТаблицаДокумента.ВалютаРасхода <> &ВалютаРегламентированногоУчета
		|			ТОГДА ТаблицаДокумента.СуммаПрихода
		|		КОГДА ТаблицаДокумента.ВалютаПрихода <> &ВалютаРегламентированногоУчета
		|				И ТаблицаДокумента.ВалютаРасхода = &ВалютаРегламентированногоУчета
		|			ТОГДА ТаблицаДокумента.СуммаРасхода
		|		КОГДА ТаблицаДокумента.ВалютаПрихода <> &ВалютаРегламентированногоУчета
		|				И ТаблицаДокумента.ВалютаРасхода <> &ВалютаРегламентированногоУчета
		|			ТОГДА ТаблицаДокумента.СуммаПрихода * ТаблицаДокумента.КурсПрихода
		|		ИНАЧЕ ТаблицаДокумента.СуммаРасхода
		|	КОНЕЦ КАК Сумма,
		|	ТаблицаДокумента.ВалютаПрихода КАК ВалютаДт,
		|	ТаблицаДокумента.ВалютаРасхода КАК ВалютаКт,
		|	ТаблицаДокумента.СуммаПрихода КАК ВалютнаяСуммаДт,
		|	ТаблицаДокумента.СуммаРасхода КАК ВалютнаяСуммаКт,
		|	ВЫБОР
		|		КОГДА (ВЫРАЗИТЬ(ТаблицаДокумента.Комментарий КАК СТРОКА(1000))) = """"
		|			ТОГДА ""Конвертация""
		|		ИНАЧЕ ""Конвертация - "" + (ВЫРАЗИТЬ(ТаблицаДокумента.Комментарий КАК СТРОКА(1000)))
		|	КОНЕЦ КАК Содержание
		|ИЗ
		|	ТаблицаДокумента КАК ТаблицаДокумента
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Дата,
		|	ТаблицаДокумента.Организация,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.СуммаКР > 0
		|			ТОГДА ТаблицаДокумента.СчетПрихода
		|		ИНАЧЕ ТаблицаДокумента.УКР
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.СуммаКР > 0
		|			ТОГДА ТаблицаДокумента.ДКР
		|		ИНАЧЕ ТаблицаДокумента.СчетПрихода
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.СуммаКР > 0
		|			ТОГДА ТаблицаДокумента.ПриходРасчетныйСчет
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.КурсовыеРазницы)
		|	КОНЕЦ,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.СуммаКР > 0
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаДокумента.ВалютаПрихода = &ВалютаРегламентированногоУчета
		|						ИЛИ ТаблицаДокумента.ВалютаРасхода = &ВалютаРегламентированногоУчета
		|					ТОГДА ТаблицаДокумента.ПриходРасчетныйСчет
		|				ИНАЧЕ ТаблицаДокумента.РасходРасчетныйСчет
		|			КОНЕЦ
		|	КОНЕЦ,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.СуммаКР < 0
		|			ТОГДА -ТаблицаДокумента.СуммаКР
		|		ИНАЧЕ ТаблицаДокумента.СуммаКР
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.СуммаКР > 0
		|			ТОГДА ТаблицаДокумента.ВалютаПрихода
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.СуммаКР < 0
		|			ТОГДА ТаблицаДокумента.ВалютаРасхода
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ВалютаПрихода = &ВалютаРегламентированногоУчета
		|				ИЛИ ТаблицаДокумента.ВалютаРасхода = &ВалютаРегламентированногоУчета
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаДокумента.СуммаКР > 0
		|						ТОГДА ""ОКР - доход""
		|					ИНАЧЕ ""ОКР - убыток""
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаДокумента.СуммаКР > 0
		|					ТОГДА ""ОКР - доход по приходу (две валюты)""
		|				ИНАЧЕ ""ОКР - убыток по расходу (две валюты)""
		|			КОНЕЦ
		|	КОНЕЦ
		|ИЗ
		|	ТаблицаДокумента КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.КурсОбмена <> ТаблицаДокумента.КросскурсНБКР";			
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	РезультатЗапроса = Запрос.Выполнить();	
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаХозрасчетный", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДенежныеСредства()

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Конвертация.Ссылка,
		|	Конвертация.ВерсияДанных,
		|	Конвертация.ПометкаУдаления,
		|	Конвертация.Номер,
		|	Конвертация.Дата,
		|	Конвертация.Проведен,
		|	Конвертация.Организация,
		|	Конвертация.Комментарий,
		|	Конвертация.Автор,
		|	Конвертация.СуммаКР,
		|	Конвертация.СуммаРасхода,
		|	Конвертация.СуммаПрихода,
		|	Конвертация.ВалютаРасхода,
		|	Конвертация.ВалютаПрихода,
		|	Конвертация.КурсРасхода,
		|	Конвертация.КурсПрихода,
		|	Конвертация.СчетРасхода,
		|	Конвертация.СчетПрихода,
		|	Конвертация.КурсОбмена,
		|	Конвертация.ПриходРасчетныйСчет,
		|	Конвертация.РасходРасчетныйСчет,
		|	Конвертация.ДКР,
		|	Конвертация.УКР,
		|	Конвертация.КросскурсНБКР,
		|	Конвертация.ПрямойКурс
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	Документ.Конвертация КАК Конвертация
		|ГДЕ
		|	Конвертация.Ссылка = &Ссылка";				
		
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Выполнить();
	
	СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства);

КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

Функция ПечатьЗаявленияНаКонвертацию(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Конвертация.Ссылка,
	|	Конвертация.Номер,
	|	Конвертация.Дата,
	|	Конвертация.Организация,
	|	Конвертация.Организация.НаименованиеПолное,
	|	ВЫРАЗИТЬ(Конвертация.СуммаРасхода КАК ЧИСЛО(15, 2)) КАК СуммаРасхода,
	|	ВЫРАЗИТЬ(Конвертация.СуммаПрихода КАК ЧИСЛО(15, 2)) КАК СуммаПрихода,
	|	Конвертация.ВалютаРасхода.Наименование,
	|	Конвертация.ВалютаПрихода.Наименование,
	|	Конвертация.ПриходРасчетныйСчет.НомерСчета КАК НомерСчетаПрихода,
	|	Конвертация.ПриходРасчетныйСчет.Банк.Наименование КАК БанкПриходаНаименование,
	|	Конвертация.РасходРасчетныйСчет.НомерСчета КАК НомерСчетаРасхода,
	|	Конвертация.РасходРасчетныйСчет.Банк.Наименование КАК БанкРасходаНаименование,
	|	Конвертация.КурсОбмена,
	|	Конвертация.Организация.КодПоОКПО,
	|	Конвертация.РасходРасчетныйСчет.Банк.ПечатнаяФормаБанка КАК ПечатнаяФормаБанкаРасхода,
	|	Конвертация.ВалютаРасхода,
	|	Конвертация.ВалютаПрихода
	|ИЗ
	|	Документ.Конвертация КАК Конвертация
	|ГДЕ
	|	Конвертация.Ссылка В(&МассивОбъектов)";	
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ВыборкаДок=Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "Конвертация_ЗаявлениеНаКонвертацию";
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаДок.Следующий() Цикл
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Конвертация.ПФ_MXL_ЗаявлениеНаКонвертацию");
		
		Если ВыборкаДок.ПечатнаяФормаБанкаРасхода = Перечисления.ПечатныеФормыБанков.БанкКыргызстан  Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаБанкКыргызстан");
		ИначеЕсли ВыборкаДок.ПечатнаяФормаБанкаРасхода = Перечисления.ПечатныеФормыБанков.БакайБанк Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаБанкБакай");
		ИначеЕсли ВыборкаДок.ПечатнаяФормаБанкаРасхода = Перечисления.ПечатныеФормыБанков.АйылБанк Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаБанкАйыл");
		ИначеЕсли ВыборкаДок.ПечатнаяФормаБанкаРасхода = Перечисления.ПечатныеФормыБанков.ДосКредобанк Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаБанкДоскредобанк");
		Иначе
			Продолжить;
		КонецЕсли;
				
		ОбластьМакета.Параметры.Заполнить(ВыборкаДок);
		ОбластьМакета.Параметры.Дата		 			= Формат(ВыборкаДок.Дата, ?(ВыборкаДок.ПечатнаяФормаБанкаРасхода = Перечисления.ПечатныеФормыБанков.БанкКыргызстан ИЛИ
																					ВыборкаДок.ПечатнаяФормаБанкаРасхода = Перечисления.ПечатныеФормыБанков.БакайБанк,
																					"ДЛФ=D",
																					"ДЛФ=DD"));
		ОбластьМакета.Параметры.СуммаРасхода 			= Формат(ВыборкаДок.СуммаРасхода, 	"ЧДЦ=2");
		ОбластьМакета.Параметры.СуммаПрихода 			= Формат(ВыборкаДок.СуммаПрихода, 	"ЧДЦ=2");
		
		Если СтрНайти(ВыборкаДок.БанкРасходаНаименование, "Дос-Кредо") > 0 Тогда		
			ОбластьМакета.Параметры.ЮридическийАдресОрганизации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ВыборкаДок.Организация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			ОбластьМакета.Параметры.ТелефонОрганизации 			= УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ВыборкаДок.Организация, Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);		
			Руководители = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизаций(ВыборкаДок.Организация, ВыборкаДок.Дата);
			ОбластьМакета.Параметры.ФИО 		= Руководители.Руководитель;
			ОбластьМакета.Параметры.Должность 	= Руководители.РуководительДолжность;
		Иначе
			ОбластьМакета.Параметры.СуммаРасходаПрописью 	= БухгалтерскийУчетСервер.СформироватьСуммуПрописью(ВыборкаДок.СуммаРасхода, ВыборкаДок.ВалютаРасхода);
			ОбластьМакета.Параметры.СуммаПриходаПрописью 	= БухгалтерскийУчетСервер.СформироватьСуммуПрописью(ВыборкаДок.СуммаПрихода, ВыборкаДок.ВалютаПрихода);			
		КонецЕсли;
		
		Если ВыборкаДок.ПечатнаяФормаБанкаРасхода = Перечисления.ПечатныеФормыБанков.БанкКыргызстан ИЛИ ВыборкаДок.ПечатнаяФормаБанкаРасхода = Перечисления.ПечатныеФормыБанков.БакайБанк Тогда
			ОбластьМакета.Параметры.Номер 					= ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаДок.Номер);
		КонецЕсли;
				
		ТабличныйДокумент.Вывести(ОбластьМакета);
						
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДок.Ссылка);
		
	КонецЦикла;//ВыборкаДок.Следующий()
	
	Возврат ТабличныйДокумент;
		
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьЗаявленияНаКонвертацию") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПечатьЗаявленияНаКонвертацию",
		НСтр("ru = 'Печать заявления на конвертацию'"),
		ПечатьЗаявленияНаКонвертацию(МассивОбъектов, ОбъектыПечати),,
		"Документ.Конвертация.ПФ_MXL_ЗаявлениеНаКонвертацию");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
// КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
		
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечатьЗаявленияНаКонвертацию";
	КомандаПечати.Представление = НСтр("ru = 'Печать заявления на конвертацию'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 1;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
