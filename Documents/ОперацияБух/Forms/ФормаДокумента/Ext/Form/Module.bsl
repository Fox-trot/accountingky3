#Область ОбработчикиСобытийФормы

// Процедура - обработчик события ПриСозданииНаСервере.
// В процедуре осуществляется
// - инициализация реквизитов формы,
// - установка параметров функциональных опций формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Установка реквизитов формы.
	ДатаДокумента = Объект.Дата;
	Если НЕ ЗначениеЗаполнено(ДатаДокумента) Тогда
		ДатаДокумента = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ПоляОбъектаДт = Новый Структура("Субконто1, Субконто2, Субконто3",
								 "СубконтоДт1", "СубконтоДт2", "СубконтоДт3");
								 
	ПоляОбъектаКт = Новый Структура("Субконто1, Субконто2, Субконто3",
								 "СубконтоКт1", "СубконтоКт2", "СубконтоКт3");
	
	Для Каждого СтрокаТабличнойЧасти Из Объект.Движения.Хозрасчетный Цикл							 
		БухгалтерскийУчетКлиентСервер.НастроитьСвязьСчетаИСубконтоВТЧ(ЭтаФорма, "Дт", "СчетДт", "ДвиженияХозрасчетный", СтрокаТабличнойЧасти, ПоляОбъектаДт);
		БухгалтерскийУчетКлиентСервер.НастроитьСвязьСчетаИСубконтоВТЧ(ЭтаФорма, "Кт", "СчетКт", "ДвиженияХозрасчетный", СтрокаТабличнойЧасти, ПоляОбъектаКт);
	КонецЦикла;
	
	БухгалтерскийУчетКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаДополнительно, Объект.Комментарий);
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

// Процедура - обработчик события ПриЧтенииНаСервере.
//
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменений
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменений
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры // ПриЧтенииНаСервере()

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Для Каждого Проводка Из ТекущийОбъект.Движения.Хозрасчетный Цикл
		Проводка.Период      = ТекущийОбъект.Дата;
		Проводка.Организация = ТекущийОбъект.Организация;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ПоляОбъектаДт = Новый Структура("Субконто1, Субконто2, Субконто3",
								 "СубконтоДт1", "СубконтоДт2", "СубконтоДт3");
								 
	ПоляОбъектаКт = Новый Структура("Субконто1, Субконто2, Субконто3",
								 "СубконтоКт1", "СубконтоКт2", "СубконтоКт3");
	
	Для Каждого СтрокаТабличнойЧасти Из Объект.Движения.Хозрасчетный Цикл							 
		БухгалтерскийУчетКлиентСервер.НастроитьСвязьСчетаИСубконтоВТЧ(ЭтаФорма, "Дт", "СчетДт", "ДвиженияХозрасчетный", СтрокаТабличнойЧасти, ПоляОбъектаДт);
		БухгалтерскийУчетКлиентСервер.НастроитьСвязьСчетаИСубконтоВТЧ(ЭтаФорма, "Кт", "СчетКт", "ДвиженияХозрасчетный", СтрокаТабличнойЧасти, ПоляОбъектаКт);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Процедура - обработчик события ПриИзменении поля ввода Дата.
// В процедуре определяется ситуация, когда при изменении своей даты документ 
// оказывается в другом периоде нумерации документов, и в этом случае
// присваивает документу новый уникальный номер.
// Переопределяет соответствующий параметр формы.
//
&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	// Обработка события изменения даты.
	ДатаПередИзменением = ДатаДокумента;
	ДатаДокумента = Объект.Дата;
	Если Объект.Дата <> ДатаПередИзменением Тогда
		СтруктураДанные = ПолучитьДанныеДатаПриИзменении(ДатаПередИзменением);
		Если СтруктураДанные.РазностьДат <> 0 Тогда
			Объект.Номер = "";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	// Обработка события изменения организации.
	Объект.Номер = "";
	БухгалтерскийУчетВызовСервера.УчетнаяПолитикаСуществует(Объект.Организация, ДатаДокумента, Истина, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	БухгалтерскийУчетКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаДополнительно, Объект.Комментарий);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДвиженияХозрасчетный

&НаКлиенте
Процедура ДвиженияХозрасчетныйПриАктивизацииСтроки(Элемент)
	СтрокаТабличнойЧасти = Элементы.ДвиженияХозрасчетный.ТекущиеДанные;
	Если СтрокаТабличнойЧасти = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	БухгалтерскийУчетКлиентСервер.НастроитьСвязьСчетаИСубконтоВТЧ(ЭтаФорма, "Дт", "СчетДт", "ДвиженияХозрасчетный", СтрокаТабличнойЧасти);
	БухгалтерскийУчетКлиентСервер.НастроитьСвязьСчетаИСубконтоВТЧ(ЭтаФорма, "Кт", "СчетКт", "ДвиженияХозрасчетный", СтрокаТабличнойЧасти);
КонецПроцедуры

&НаКлиенте
Процедура ДвиженияХозрасчетныйСчетДтПриИзменении(Элемент)
	// получаем текущую строку
	СтрокаТабличнойЧасти = Элементы.ДвиженияХозрасчетный.ТекущиеДанные;
	
	// не удалось получить- возвращаемся
	Если СтрокаТабличнойЧасти = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ПоляОбъекта = Новый Структура("Субконто1, Субконто2, Субконто3",
								 "СубконтоДт1", "СубконтоДт2", "СубконтоДт3");
	
	БухгалтерскийУчетКлиентСервер.НастроитьСвязьСчетаИСубконтоВТЧ(ЭтаФорма, "Дт", "СчетДт", "ДвиженияХозрасчетный", СтрокаТабличнойЧасти, ПоляОбъекта);
КонецПроцедуры

&НаКлиенте
Процедура ДвиженияХозрасчетныйСубконтоДт1ПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.ДвиженияХозрасчетный.ТекущиеДанные;
	БухгалтерскийУчетКлиентСервер.НастроитьСвязьСчетаИСубконтоВТЧ(ЭтаФорма, "Дт", "СчетДт", "ДвиженияХозрасчетный", СтрокаТабличнойЧасти);
КонецПроцедуры

&НаКлиенте
Процедура ДвиженияХозрасчетныйСубконтоДт2ПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.ДвиженияХозрасчетный.ТекущиеДанные;
	БухгалтерскийУчетКлиентСервер.НастроитьСвязьСчетаИСубконтоВТЧ(ЭтаФорма, "Дт", "СчетДт", "ДвиженияХозрасчетный", СтрокаТабличнойЧасти);
КонецПроцедуры

&НаКлиенте
Процедура ДвиженияХозрасчетныйСубконтоДт3ПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.ДвиженияХозрасчетный.ТекущиеДанные;
	БухгалтерскийУчетКлиентСервер.НастроитьСвязьСчетаИСубконтоВТЧ(ЭтаФорма, "Дт", "СчетДт", "ДвиженияХозрасчетный", СтрокаТабличнойЧасти);
КонецПроцедуры

&НаКлиенте
Процедура ДвиженияХозрасчетныйСчетКтПриИзменении(Элемент)
	// получаем текущую строку
	СтрокаТабличнойЧасти = Элементы.ДвиженияХозрасчетный.ТекущиеДанные;
	
	// не удалось получить- возвращаемся
	Если СтрокаТабличнойЧасти = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ПоляОбъекта = Новый Структура("Субконто1, Субконто2, Субконто3",
								 "СубконтоКт1", "СубконтоКт2", "СубконтоКт3");
	
	БухгалтерскийУчетКлиентСервер.НастроитьСвязьСчетаИСубконтоВТЧ(ЭтаФорма, "Кт", "СчетКт", "ДвиженияХозрасчетный", СтрокаТабличнойЧасти, ПоляОбъекта);
КонецПроцедуры

&НаКлиенте
Процедура ДвиженияХозрасчетныйСубконтоКт1ПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.ДвиженияХозрасчетный.ТекущиеДанные;
	БухгалтерскийУчетКлиентСервер.НастроитьСвязьСчетаИСубконтоВТЧ(ЭтаФорма, "Дт", "СчетДт", "ДвиженияХозрасчетный", СтрокаТабличнойЧасти);
КонецПроцедуры

&НаКлиенте
Процедура ДвиженияХозрасчетныйСубконтоКт2ПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.ДвиженияХозрасчетный.ТекущиеДанные;
	БухгалтерскийУчетКлиентСервер.НастроитьСвязьСчетаИСубконтоВТЧ(ЭтаФорма, "Дт", "СчетДт", "ДвиженияХозрасчетный", СтрокаТабличнойЧасти);
КонецПроцедуры

&НаКлиенте
Процедура ДвиженияХозрасчетныйСубконтоКт3ПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.ДвиженияХозрасчетный.ТекущиеДанные;
	БухгалтерскийУчетКлиентСервер.НастроитьСвязьСчетаИСубконтоВТЧ(ЭтаФорма, "Дт", "СчетДт", "ДвиженияХозрасчетный", СтрокаТабличнойЧасти);
КонецПроцедуры

&НаКлиенте
Процедура ДвиженияХозрасчетныйСуммаПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПереключитьАктивность(Команда)
	Для Каждого СтрокаТабличнойЧасти Из Объект.Движения.Хозрасчетный Цикл 
		СтрокаТабличнойЧасти.Активность = НЕ СтрокаТабличнойЧасти.Активность;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Получает набор данных с сервера для процедуры ДатаПриИзменении.
//
&НаСервере
Функция ПолучитьДанныеДатаПриИзменении(ДатаПередИзменением)
	РазностьДат = БухгалтерскийУчетСервер.ПроверитьНомерДокумента(Объект.Ссылка, Объект.Дата, ДатаПередИзменением);
	
	СтруктураДанные = Новый Структура;
	СтруктураДанные.Вставить("РазностьДат",	РазностьДат);
	
	Возврат СтруктураДанные;
КонецФункции // ПолучитьДанныеДатаПриИзменении()

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	Объект.СуммаДокумента = Объект.Движения.Хозрасчетный.Итог("Сумма");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти