#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ИнтерфейсПечати

Функция ПечатьБухгалтерскаяСправка(МассивОбъектов, ОбъектыПечати) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб				= Истина;
	ТабДокумент.ПолеСверху				= 10;
	ТабДокумент.ПолеСлева				= 0;
	ТабДокумент.ПолеСнизу				= 0;
	ТабДокумент.ПолеСправа				= 0;
	ТабДокумент.РазмерКолонтитулаСверху	= 10;
	ТабДокумент.ОриентацияСтраницы		= ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ИмяПараметровПечати		= "ПАРАМЕТРЫ_ПЕЧАТИ_ОперацияБух_БухгалтерскаяСправка";
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТиповойДвиженияССубконто.НомерСтроки КАК НомерСтроки,
	               |	ТиповойДвиженияССубконто.СчетДт,
	               |	ТиповойДвиженияССубконто.СубконтоДт1,
	               |	ТиповойДвиженияССубконто.СубконтоДт2,
	               |	ТиповойДвиженияССубконто.СубконтоДт3,
	               |	ТиповойДвиженияССубконто.СчетКт,
	               |	ТиповойДвиженияССубконто.СубконтоКт1,
	               |	ТиповойДвиженияССубконто.СубконтоКт2,
	               |	ТиповойДвиженияССубконто.СубконтоКт3,
	               |	ТиповойДвиженияССубконто.Организация,
	               |	ТиповойДвиженияССубконто.ВалютаДт,
	               |	ТиповойДвиженияССубконто.ВалютаКт,
	               |	ТиповойДвиженияССубконто.Сумма,
	               |	ТиповойДвиженияССубконто.ВалютнаяСуммаДт,
	               |	ТиповойДвиженияССубконто.ВалютнаяСуммаКт,
	               |	ТиповойДвиженияССубконто.КоличествоДт,
	               |	ТиповойДвиженияССубконто.КоличествоКт,
	               |	ТиповойДвиженияССубконто.Содержание,
	               |	ТиповойДвиженияССубконто.Регистратор
	               |ПОМЕСТИТЬ ВТТиповой
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(, , Регистратор В (&МассивОбъектов), , ) КАК ТиповойДвиженияССубконто
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОперацияБух.Ссылка КАК Ссылка,
	               |	ОперацияБух.Номер,
	               |	ОперацияБух.Дата,
	               |	ОперацияБух.Содержание КАК СодержаниеОперации,
	               |	ВТТиповой.НомерСтроки КАК НомерСтроки,
	               |	ВТТиповой.СчетДт,
	               |	ВТТиповой.СубконтоДт1,
	               |	ВТТиповой.СубконтоДт2,
	               |	ВТТиповой.СубконтоДт3,
	               |	ВТТиповой.СчетКт,
	               |	ВТТиповой.СубконтоКт1,
	               |	ВТТиповой.СубконтоКт2,
	               |	ВТТиповой.СубконтоКт3,
	               |	ВТТиповой.Организация КАК Организация,
	               |	ВТТиповой.ВалютаДт,
	               |	ВТТиповой.ВалютаКт,
	               |	ВТТиповой.Сумма,
	               |	ВТТиповой.ВалютнаяСуммаДт,
	               |	ВТТиповой.ВалютнаяСуммаКт,
	               |	ВТТиповой.КоличествоДт,
	               |	ВТТиповой.КоличествоКт,
	               |	ВТТиповой.Содержание КАК Содержание
	               |ИЗ
	               |	Документ.ОперацияБух КАК ОперацияБух
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТТиповой КАК ВТТиповой
	               |		ПО ОперацияБух.Ссылка = ВТТиповой.Регистратор
	               |ГДЕ
	               |	ОперацияБух.Ссылка В(&МассивОбъектов)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ОперацияБух.Дата,
	               |	ОперацияБух.Ссылка,
	               |	НомерСтроки";
				
	ВыборкаДвижений = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;

	Пока ВыборкаДвижений.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		ЕстьОшибки = Ложь;	
		
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Зададим параметры макета по умолчанию
		ТабДокумент.РазмерКолонтитулаСверху = 0;
		ТабДокумент.РазмерКолонтитулаСнизу  = 0;
		ТабДокумент.АвтоМасштаб             = Истина;
		ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОперацияБух.ПФ_MXL_БухгалтерскаяСправка");
		// Получаем области макета для вывода в табличный документ.
		ШапкаДокумента   = Макет.ПолучитьОбласть("Шапка");
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		СтрокаТаблицы    = Макет.ПолучитьОбласть("СтрокаТаблицы");
		ПодвалТаблицы    = Макет.ПолучитьОбласть("ПодвалТаблицы");
		ПодвалДокумента  = Макет.ПолучитьОбласть("Подвал");
		
		// Выведем шапку документа.
		СведенияОбОрганизации 		  = ОбщегоНазначенияБПВызовСервера.СведенияОЮрФизЛице(ВыборкаДвижений.Организация, ВыборкаДвижений.Дата);
		
		ШапкаДокумента.Параметры.Организация    = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации);
		ШапкаДокумента.Параметры.НомерДокумента = ВыборкаДвижений.Номер;
		ШапкаДокумента.Параметры.ДатаДокумента  = Формат(ВыборкаДвижений.Дата, "ДЛФ=D");
		ШапкаДокумента.Параметры.Содержание     = ВыборкаДвижений.СодержаниеОперации;
		
		ТабДокумент.Вывести(ШапкаДокумента);
		
		// Выведем заголовок таблицы.
		ТабДокумент.Вывести(ЗаголовокТаблицы);
		
		СуммаПоДокументу  = 0;
		КоличествоСтрокВОперации = 0;

		// Выведем строки документа.
		Пока ВыборкаДвижений.Следующий() Цикл
			
			СтрокаТаблицы.Параметры.Заполнить(ВыборкаДвижений);
			
			АналитикаДт = Строка(ВыборкаДвижений.СубконтоДт1) + Символы.ПС
			+ Строка(ВыборкаДвижений.СубконтоДт2) + Символы.ПС
			+ Строка(ВыборкаДвижений.СубконтоДт3);
			
			АналитикаКт = Строка(ВыборкаДвижений.СубконтоКт1) + Символы.ПС
			+ Строка(ВыборкаДвижений.СубконтоКт2) + Символы.ПС
			+ Строка(ВыборкаДвижений.СубконтоКт3);
			
			СтрокаТаблицы.Параметры.АналитикаДт = АналитикаДт;
			СтрокаТаблицы.Параметры.АналитикаКт = АналитикаКт;
			
			СуммаПоДокументу = СуммаПоДокументу + ВыборкаДвижений.Сумма;
			КоличествоСтрокВОперации = КоличествоСтрокВОперации + 1;			
			
			//// Проверим, помещается ли строка с подвалом.
			СтрокаСПодвалом = Новый Массив;
			СтрокаСПодвалом.Добавить(СтрокаТаблицы);
			СтрокаСПодвалом.Добавить(ПодвалТаблицы);
			СтрокаСПодвалом.Добавить(ПодвалДокумента);
			
			Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
				ТабДокумент.Вывести(ПодвалТаблицы);
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДокумент.Вывести(ЗаголовокТаблицы);
			КонецЕсли;	
			
		ТабДокумент.Вывести(СтрокаТаблицы);
			
		КонецЦикла;
		
		ПодвалТаблицы.Параметры.ИтоговаяСтрока = "Всего корреспонденций:" + КоличествоСтрокВОперации
		+ ", на сумму " +  БухгалтерскийУчетСервер.СформироватьСуммуПрописью(СуммаПоДокументу);
		
		// Выведем подвал таблицы.
		ТабДокумент.Вывести(ПодвалТаблицы);
		
		ТабДокумент.Вывести(ПодвалДокумента);
		
	КонецЦикла;

	Возврат ТабДокумент;

КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Печать бух. справки
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "БухгалтерскаяСправка") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"БухгалтерскаяСправка",
			НСтр("ru = 'Бухгалтерская справка'"),
			ПечатьБухгалтерскаяСправка(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.ОперацияБух.ПФ_MXL_БухгалтерскаяСправка");
	КонецЕсли;

	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Бухгалтерская справка
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "БухгалтерскаяСправка";
	КомандаПечати.Представление = НСтр("ru = 'Бухгалтерская справка'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 50;
	
	// Настраиваемый комплект документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "БухгалтерскаяСправка";
	КомандаПечати.Представление = НСтр("ru = 'Настраиваемый комплект документов'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Настраиваемый комплект'");
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	КомандаПечати.Порядок = 75;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли