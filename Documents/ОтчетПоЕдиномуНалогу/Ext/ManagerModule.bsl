#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой НДС
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьЕдиногоНалога(МассивОбъектов, ОбъектыПечати)	
	
	Запрос = Новый Запрос;		
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ОтчетПоЕдиномуНалогу.Ссылка КАК Ссылка,
		|	ОтчетПоЕдиномуНалогу.Дата КАК Дата,
		|	ОтчетПоЕдиномуНалогу.Организация КАК Организация,
		|	ОтчетПоЕдиномуНалогу.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	ОтчетПоЕдиномуНалогу.Организация.ИНН КАК ИНН,
		|	ОтчетПоЕдиномуНалогу.Организация.КодПоОКПО КАК КодПоОКПО,
		|	ОтчетПоЕдиномуНалогу.Организация.ГНС КАК ГНС,
		|	ОтчетПоЕдиномуНалогу.Организация.ГНС.Код КАК КодГНС,
		|	ОтчетПоЕдиномуНалогу.ЕдиныйНалог.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		ВидДеятельности КАК ВидДеятельности,
		|		СуммаНаличная КАК СуммаНаличная,
		|		СуммаБезналичная КАК СуммаБезналичная,
		|		СуммаНаличнаяЕдиныйНалог КАК СуммаНаличнаяЕдиныйНалог,
		|		СуммаБезналичнаяЕдиныйНалог КАК СуммаБезналичнаяЕдиныйНалог
		|	) КАК ЕдиныйНалог
		|ИЗ
		|	Документ.ОтчетПоЕдиномуНалогу КАК ОтчетПоЕдиномуНалогу
		|ГДЕ
		|	ОтчетПоЕдиномуНалогу.Ссылка В (&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоЕдиномуНалогу_ОтчетПоЕдиномуНалогу";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоЕдиномуНалогу.ПФ_MXL_ОтчетПоЕдиномуНалогу");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");

	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ДанныеУчетнойПолитики = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьДанныеУчетнойПолитикиОрганизаций(Шапка.Дата, Шапка.Организация);
		
		ДанныеПечати = Новый Структура;
		ДанныеПечати.Вставить("Организация", 	?(Шапка.ОрганизацияНаименованиеПолное = "", Шапка.Организация, Шапка.ОрганизацияНаименованиеПолное));
		
		КонтактныеДанные = ПолучитьКонтактнуюИнформацию(Шапка.Организация);

		ДанныеПечати.Вставить("Адрес", КонтактныеДанные.АдрОбластьГород);
		ДанныеПечати.Вставить("Улица", КонтактныеДанные.АдресОрганизации);
		ДанныеПечати.Вставить("Телефон", КонтактныеДанные.Телефон);
		ДанныеПечати.Вставить("ЭлПочта", КонтактныеДанные.Email);
		
		Если ЗначениеЗаполнено(Шапка.ИНН) Тогда
			ИНН = Шапка.ИНН;
			ДанныеПечати.Вставить("ИНН1", Сред(ИНН, 1, 1));
			ДанныеПечати.Вставить("ИНН2", Сред(ИНН, 2, 1));
			ДанныеПечати.Вставить("ИНН3", Сред(ИНН, 3, 1));                           
			ДанныеПечати.Вставить("ИНН4", Сред(ИНН, 4, 1));
			ДанныеПечати.Вставить("ИНН5", Сред(ИНН, 5, 1));
			ДанныеПечати.Вставить("ИНН6", Сред(ИНН, 6, 1));
			ДанныеПечати.Вставить("ИНН7", Сред(ИНН, 7, 1));
			ДанныеПечати.Вставить("ИНН8", Сред(ИНН, 8, 1));
			ДанныеПечати.Вставить("ИНН9", Сред(ИНН, 9, 1));
			ДанныеПечати.Вставить("ИНН10", Сред(ИНН, 10, 1));
			ДанныеПечати.Вставить("ИНН11", Сред(ИНН, 11, 1));
			ДанныеПечати.Вставить("ИНН12", Сред(ИНН, 12, 1));
			ДанныеПечати.Вставить("ИНН13", Сред(ИНН, 13, 1));
			ДанныеПечати.Вставить("ИНН14", Сред(ИНН, 14, 1));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Шапка.КодПоОКПО) Тогда
			ОКПО = Шапка.КодПоОКПО;
			ДанныеПечати.Вставить("ОКПО1", Сред(ОКПО, 1, 1));
			ДанныеПечати.Вставить("ОКПО2", Сред(ОКПО, 2, 1));
			ДанныеПечати.Вставить("ОКПО3", Сред(ОКПО, 3, 1));                           
			ДанныеПечати.Вставить("ОКПО4", Сред(ОКПО, 4, 1));
			ДанныеПечати.Вставить("ОКПО5", Сред(ОКПО, 5, 1));
			ДанныеПечати.Вставить("ОКПО6", Сред(ОКПО, 6, 1));
			ДанныеПечати.Вставить("ОКПО7", Сред(ОКПО, 7, 1));
			ДанныеПечати.Вставить("ОКПО8", Сред(ОКПО, 8, 1));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Шапка.ГНС) Тогда
			ДанныеПечати.Вставить("НаименованиеГНС", Шапка.ГНС);
			КодГНС = Шапка.КодГНС;
			ДанныеПечати.Вставить("ГНС1", Сред(КодГНС, 1, 1));
			ДанныеПечати.Вставить("ГНС2", Сред(КодГНС, 2, 1));
			ДанныеПечати.Вставить("ГНС3", Сред(КодГНС, 3, 1));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КонтактныеДанные.Индекс) Тогда
			Индекс = КонтактныеДанные.Индекс;
			ДанныеПечати.Вставить("Индекс1", Сред(Индекс, 1, 1));
			ДанныеПечати.Вставить("Индекс2", Сред(Индекс, 2, 1));
			ДанныеПечати.Вставить("Индекс3", Сред(Индекс, 3, 1));
			ДанныеПечати.Вставить("Индекс4", Сред(Индекс, 4, 1));
			ДанныеПечати.Вставить("Индекс5", Сред(Индекс, 5, 1));
			ДанныеПечати.Вставить("Индекс6", Сред(Индекс, 6, 1));
		КонецЕсли;
		
		НачалоПериода = НачалоКвартала(Шапка.Дата);
		ДанныеПечати.Вставить("ДатаН1", Сред(НачалоПериода, 1, 1));	
		ДанныеПечати.Вставить("ДатаН2", Сред(НачалоПериода, 2, 1));	
		ДанныеПечати.Вставить("ДатаН3", Сред(НачалоПериода, 4, 1));	
		ДанныеПечати.Вставить("ДатаН4", Сред(НачалоПериода, 5, 1));	
		ДанныеПечати.Вставить("ДатаН5", Сред(НачалоПериода, 7, 1));	
		ДанныеПечати.Вставить("ДатаН6", Сред(НачалоПериода, 8, 1));	
		ДанныеПечати.Вставить("ДатаН7", Сред(НачалоПериода, 9, 1));	
		ДанныеПечати.Вставить("ДатаН8", Сред(НачалоПериода, 10, 1));
		
		КонецПериода = КонецКвартала(Шапка.Дата);
		ДанныеПечати.Вставить("ДатаК1", Сред(КонецПериода, 1, 1));	
		ДанныеПечати.Вставить("ДатаК2", Сред(КонецПериода, 2, 1));	
		ДанныеПечати.Вставить("ДатаК3", Сред(КонецПериода, 4, 1));	
		ДанныеПечати.Вставить("ДатаК4", Сред(КонецПериода, 5, 1));	
		ДанныеПечати.Вставить("ДатаК5", Сред(КонецПериода, 7, 1));	
		ДанныеПечати.Вставить("ДатаК6", Сред(КонецПериода, 8, 1));	
		ДанныеПечати.Вставить("ДатаК7", Сред(КонецПериода, 9, 1));	
		ДанныеПечати.Вставить("ДатаК8", Сред(КонецПериода, 10, 1));
		
		ДанныеПечати.Вставить("СуммаТоргНал", 			0);
		ДанныеПечати.Вставить("СтавкаТоргНал", 			0);
		ДанныеПечати.Вставить("СуммаНалогаТоргНал", 	0);
		ДанныеПечати.Вставить("СуммаТоргБезНал", 		0);
		ДанныеПечати.Вставить("СтавкаТоргБезНал", 		0);
		ДанныеПечати.Вставить("СуммаНалогаТоргБезНал", 	0);
		ДанныеПечати.Вставить("СуммаНалогаИтогТорг", 	0);
		
		ДанныеПечати.Вставить("СуммаПрочееНал", 		0);
		ДанныеПечати.Вставить("СтавкаПрочееНал", 		0);
		ДанныеПечати.Вставить("СуммаНалогаПрочееНал", 	0);
		ДанныеПечати.Вставить("СуммаПрочееБезНал", 		0);
		ДанныеПечати.Вставить("СтавкаПрочееБезНал", 	0);
		ДанныеПечати.Вставить("СуммаНалогаПрочееБезНал",0);
		ДанныеПечати.Вставить("СуммаНалогаИтогПрочее", 	0);
		
		Выборка = Шапка.ЕдиныйНалог.Выбрать();
		Пока Выборка.Следующий() Цикл
					
			Если Выборка.ВидДеятельности = Перечисления.ВидыДеятельностиЕН.ПереработкаПроизводствоТорговля Тогда
				
				ДанныеПечати.СуммаТоргНал 				= Выборка.СуммаНаличная;
				ДанныеПечати.СтавкаТоргНал 				= ДанныеУчетнойПолитики.СтавкаЕННаличнаяФорма1;
				ДанныеПечати.СуммаНалогаТоргНал 		= Выборка.СуммаНаличнаяЕдиныйНалог;
				
				ДанныеПечати.СуммаТоргБезНал 			= Выборка.СуммаБезналичная;
				ДанныеПечати.СтавкаТоргБезНал 			= ДанныеУчетнойПолитики.СтавкаЕНБезНаличнаяФорма1;
				ДанныеПечати.СуммаНалогаТоргБезНал 		= Выборка.СуммаБезналичнаяЕдиныйНалог;
				
				ДанныеПечати.СуммаНалогаИтогТорг 		= Выборка.СуммаНаличнаяЕдиныйНалог + Выборка.СуммаБезналичнаяЕдиныйНалог; 
				
			Иначе
				ДанныеПечати.СуммаПрочееНал 			= Выборка.СуммаНаличная;
				ДанныеПечати.СтавкаПрочееНал 			= ДанныеУчетнойПолитики.СтавкаЕННаличнаяФорма2;
				ДанныеПечати.СуммаНалогаПрочееНал 		= Выборка.СуммаНаличнаяЕдиныйНалог;
				
				ДанныеПечати.СуммаПрочееБезНал 			= Выборка.СуммаБезналичная;
				ДанныеПечати.СтавкаПрочееБезНал 		= ДанныеУчетнойПолитики.СтавкаЕНБезНаличнаяФорма2;
				ДанныеПечати.СуммаНалогаПрочееБезНал 	= Выборка.СуммаБезналичнаяЕдиныйНалог;
				
				ДанныеПечати.СуммаНалогаИтогПрочее 		= Выборка.СуммаНаличнаяЕдиныйНалог + Выборка.СуммаБезналичнаяЕдиныйНалог;
			КонецЕсли;	
		КонецЦикла;	
		
		ДанныеПечати.Вставить("СуммаНалогаИтогОбщий", ДанныеПечати.СуммаНалогаИтогТорг + ДанныеПечати.СуммаНалогаИтогПрочее); 
		
		ОбластьШапка.Параметры.Заполнить(ДанныеПечати);
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетПоЕдиномуНалогу") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ОтчетПоЕдиномуНалогу", 
		"Отчет по единому налогу", 
		ПечатьЕдиногоНалога(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоЕдиномуНалогу.ПФ_MXL_ОтчетПоЕдиномуНалогу");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОтчетПоЕдиномуНалогу";
	КомандаПечати.Представление = НСтр("ru = 'Отчет по единому налогу'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция -ПолучитьКонтактнуюИнформацию
//
// Параметры:
//  Организация  - Спр.Ссылка - Спр.Органинизации 
// Возвращаемое значение:
//  Структура   - структура данных контактной информации
//
Функция ПолучитьКонтактнуюИнформацию(Организация)
	
	СведенияОбОрганизации = БухгалтерскийУчетСервер.ПолучитьСведенияОбОрганизации(Организация);

	Индекс = СведенияОбОрганизации.Индекс; 
	
	ГородНасПункт   = ?(СведенияОбОрганизации.Город  = "",СведенияОбОрганизации.НаселенныйПункт,СведенияОбОрганизации.Город);
	АдрОбластьГород = ?(СведенияОбОрганизации.Регион = "","",СведенияОбОрганизации.Регион + ",")
		+ ?(СведенияОбОрганизации.Район  = "","", " " + СведенияОбОрганизации.Район + ",") 
		+ ?(ГородНасПункт = "",""," " + ГородНасПункт); 
	АдресОрганизации = ?(СведенияОбОрганизации.Улица    = "","",СведенияОбОрганизации.Улица + ",")
		+ ?(СведенияОбОрганизации.Дом      = "",""," " + СведенияОбОрганизации.Дом + ",")
		+ ?(СведенияОбОрганизации.Корпус   = "",""," " + СведенияОбОрганизации.Корпус + ",")
		+ ?(СведенияОбОрганизации.Квартира = "",""," " + СведенияОбОрганизации.Квартира);
		
	Телефон = СведенияОбОрганизации.Тел;	
	Email = СведенияОбОрганизации.Email;
	
	Структура = Новый Структура();
	Структура.Вставить("Индекс", 			Индекс);	
	Структура.Вставить("АдрОбластьГород", 	АдрОбластьГород);
	Структура.Вставить("АдресОрганизации", 	АдресОрганизации);
	Структура.Вставить("Телефон", 			Телефон);
	Структура.Вставить("Email", 			Email);
	
	Возврат Структура;
	
КонецФункции // ПолучитьАдресОрганизации()

#КонецОбласти

#КонецЕсли