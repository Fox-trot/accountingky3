#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыПроведенияДокумента

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьЗемельныйНалог(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Период КАК Период,
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ВременнаяТаблицаТабличнаяЧастьНалоги.ОсновноеСредство КАК ОсновноеСредство,
	|	ВременнаяТаблицаТабличнаяЧастьНалоги.СуммаНалога КАК СуммаНалога,
	|	ВременнаяТаблицаТабличнаяЧастьНалоги.СуммаЗемельногоНалогаПодОбъектомИмущества КАК СуммаЗемельногоНалогаПодОбъектомИмущества,
	|	ВременнаяТаблицаТабличнаяЧастьНалоги.СуммаНалогаКУплате КАК СуммаНалогаКУплате
	|ИЗ
	|	ВременнаяТаблицаТабличнаяЧастьНалоги КАК ВременнаяТаблицаТабличнаяЧастьНалоги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗемельныйНалог", РезультатЗапроса.Выгрузить());
КонецПроцедуры

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Дата КАК Период,
	|	ТаблицаДокумента.Организация
	|ПОМЕСТИТЬ ВременнаяТаблицаШапка
	|ИЗ
	|	Документ.ЗемельныйНалог КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗемельныйНалогНалоги.Ссылка,
	|	ЗемельныйНалогНалоги.ОсновноеСредство,
	|	ЗемельныйНалогНалоги.СуммаНалога,
	|	ЗемельныйНалогНалоги.СуммаЗемельногоНалогаПодОбъектомИмущества,
	|	ЗемельныйНалогНалоги.СуммаНалогаКУплате
	|ПОМЕСТИТЬ ВременнаяТаблицаТабличнаяЧастьНалоги
	|ИЗ
	|	Документ.ЗемельныйНалог.Налоги КАК ЗемельныйНалогНалоги
	|ГДЕ
	|	ЗемельныйНалогНалоги.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Выполнить();
	
	СформироватьЗемельныйНалог(ДокументСсылка, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

Процедура ДополнитьТЗДо9строк(ТЗ)
	Если ТЗ.Количество() < 9 Тогда 
		ТЗ.Добавить();
		ДополнитьТЗДо9строк(ТЗ);	
	КонецЕсли;
КонецПроцедуры

Процедура ПечатьЛистаОтчета_Группа3(ТабДок, Макет, ТЗ, ОтчетныйПериод, Организация, Дата)
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");	
	
	ОтчетныйГод = СтрЗаменить(Год(ОтчетныйПериод), Символы.НПП, "");
	ОбластьЗаголовок.Параметры.Год1 = Сред(ОтчетныйГод,1,1);
	ОбластьЗаголовок.Параметры.Год2 = Сред(ОтчетныйГод,2,1);
	ОбластьЗаголовок.Параметры.Год3 = Сред(ОтчетныйГод,3,1);
	ОбластьЗаголовок.Параметры.Год4 = Сред(ОтчетныйГод,4,1);
	
	СведенияОбОрганизации = БухгалтерскийУчетСервер.ПолучитьСведенияОбОрганизации(Организация, Дата);
	//ИНН Организации
	ИННОрг = СведенияОбОрганизации.ИНН;
	ОбластьЗаголовок.Параметры.ИНН1					= Сред(ИННОрг,1,1);
	ОбластьЗаголовок.Параметры.ИНН2					= Сред(ИННОрг,2,1);
	ОбластьЗаголовок.Параметры.ИНН3					= Сред(ИННОрг,3,1);
	ОбластьЗаголовок.Параметры.ИНН4					= Сред(ИННОрг,4,1);
	ОбластьЗаголовок.Параметры.ИНН5					= Сред(ИННОрг,5,1);
	ОбластьЗаголовок.Параметры.ИНН6					= Сред(ИННОрг,6,1);
	ОбластьЗаголовок.Параметры.ИНН7					= Сред(ИННОрг,7,1);
	ОбластьЗаголовок.Параметры.ИНН8					= Сред(ИННОрг,8,1);
	ОбластьЗаголовок.Параметры.ИНН9					= Сред(ИННОрг,9,1);
	ОбластьЗаголовок.Параметры.ИНН10				= Сред(ИННОрг,10,1);
	ОбластьЗаголовок.Параметры.ИНН11				= Сред(ИННОрг,11,1);
	ОбластьЗаголовок.Параметры.ИНН12				= Сред(ИННОрг,12,1);
	ОбластьЗаголовок.Параметры.ИНН13				= Сред(ИННОрг,13,1);
	ОбластьЗаголовок.Параметры.ИНН14				= Сред(ИННОрг,14,1);
	//Наименование организации
	ОбластьЗаголовок.Параметры.НаименованиеОрганизации			= СведенияОбОрганизации.ПолноеНаименование;
	////Адрес
	
	Адрес = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации); 
	ОбластьЗаголовок.Параметры.УлицаДом            = Адрес;   
	//№ Телефона
	ОбластьЗаголовок.Параметры.Тел                 = СведенияОбОрганизации.Телефоны;
	//Код НО
	Код = Организация.ГНС.Код;
	ОбластьЗаголовок.Параметры.Код1                = Сред(Код,1,1);
	ОбластьЗаголовок.Параметры.Код2                = Сред(Код,2,1);
	ОбластьЗаголовок.Параметры.Код3                = Сред(Код,3,1);
	
	//Код ОКПО

	КодОКПО = СведенияОбОрганизации.КодПоОКПО;
	ОбластьЗаголовок.Параметры.ОКПО1				= Сред(КодОКПО,1,1);
	ОбластьЗаголовок.Параметры.ОКПО2				= Сред(КодОКПО,2,1);
	ОбластьЗаголовок.Параметры.ОКПО3				= Сред(КодОКПО,3,1);
	ОбластьЗаголовок.Параметры.ОКПО4				= Сред(КодОКПО,4,1);
	ОбластьЗаголовок.Параметры.ОКПО5				= Сред(КодОКПО,5,1);
	ОбластьЗаголовок.Параметры.ОКПО6				= Сред(КодОКПО,6,1);
	ОбластьЗаголовок.Параметры.ОКПО7				= Сред(КодОКПО,7,1);
	ОбластьЗаголовок.Параметры.ОКПО8				= Сред(КодОКПО,8,1);	
	
	//Наименование налогового органа
	ОбластьЗаголовок.Параметры.НаименованиеРайонаРегистрации	= Организация.ГНС.Наименование;
	
	ШапкаТаблицы 	= Макет.ПолучитьОбласть("ШапкаТаблицы");
	Подвал			= Макет.ПолучитьОбласть("Подвал");
	ОбластьИтоги 	= Макет.ПолучитьОбласть("ОбластьИтоги");
	Обл				= Макет.ПолучитьОбласть("ОбластьДанных");
	
	
	ТабДок.Вывести(ОбластьЗаголовок);	
	ТабДок.Вывести(ШапкаТаблицы); 
	
	НомерСтроки = 0;
	Итог_СуммаНалога = 0;
	Итог_СуммаЗемельногоНалога = 0;
	Для Каждого СТЗ Из ТЗ Цикл
		Обл.Параметры.Заполнить(СТЗ);  		
		Для НомерКолонки = 0 ПО 12 Цикл 
			ОбщегоНазначения.ВыполнитьВБезопасномРежиме("Обл.Параметры.ЕАЭС" + НомерКолонки + " = " + Строка(300 + НомерКолонки + НомерСтроки));	
		КонецЦикла;	
		
		Итог_СуммаНалога 			= Итог_СуммаНалога + ?(СТЗ.СуммаНалога = Неопределено, 0, СТЗ.СуммаНалога);
		ТабДок.Вывести(Обл);			
		НомерСтроки = НомерСтроки + 13;		
	КонецЦикла;
	
	
	ОбластьИтоги.Параметры.ИтогоСуммаНалога 			= Итог_СуммаНалога;
	
	СуммаЛьгот 											= 0; //????
	ОбластьИтоги.Параметры.СуммаЛьгот					= ?(СуммаЛьгот = 0, строка(СуммаЛьгот), 0); //?????????? Откуда брать?	
	ОбластьИтоги.Параметры.СуммаНалогаКУплате 			= Итог_СуммаНалога - ?(СуммаЛьгот = 0, строка(СуммаЛьгот), 0);	

	
	ТабДок.Вывести(ОбластьИтоги);
	ТабДок.Вывести(Подвал);	
	
КонецПроцедуры

Функция ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	
	Перем Ошибки;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ЗемельныйНалог_ЗемельныйНалог";
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ПервыйДокумент = Истина;
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;  	
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЗемельныйНалог.МакетЗемельныйНалог");
		
		ОтчетныйПериод = ТекущийДокумент.Дата;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗемельныйНалогНалоги.ОсновноеСредство,
		|	СведенияОбИмуществеСрезПоследних.КодПользователяИмущества.Код КАК КодПользователя,
		|	ЗемельныйНалогНалоги.ОсновноеСредство.МестонахождениеИмущества КАК МестонахождениеЗемельногоУчастка,
		|	ЗемельныйНалогНалоги.ОсновноеСредство.КодИмущества КАК КодПредпринимательскойДеятельности,
		|	ЗемельныйНалогНалоги.ОсновноеСредство.ИдентификационныйНомерИмущества КАК КодЗемельногоУчастка,
		|	ЗемельныйНалогНалоги.ОбщаяПлощадь,
		|	ЗемельныйНалогНалоги.НалогооблагаемаяСтоимостьОбъекта КАК ОблагаемаяПлощадь,
		|	РАЗНОСТЬДАТ(СостоянияОССрез.Период, &ДатаСреза, МЕСЯЦ) КАК КоличествоМесяцевВладения,
		|	ЗемельныйНалогНалоги.СтавкаНалога КАК БазоваяСтавка,
		|	ЗемельныйНалогНалоги.Ки КАК КоэффициентИнфляции,
		|	ЗемельныйНалогНалоги.Кз КАК ЗональныйКоэффициент,
		|	ЗемельныйНалогНалоги.Ко КАК КоэффициентОтраслевойПринадлежности,
		|	ЗемельныйНалогНалоги.НалогооблагаемаяСтоимостьОбъекта * ЗемельныйНалогНалоги.СтавкаНалога * ЗемельныйНалогНалоги.Ки * ЗемельныйНалогНалоги.Кз * ЗемельныйНалогНалоги.Ко КАК СуммаНалога
		|ИЗ
		|	Документ.ЗемельныйНалог.Налоги КАК ЗемельныйНалогНалоги
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИмуществе.СрезПоследних(&ДатаСреза, ) КАК СведенияОбИмуществеСрезПоследних
		|		ПО ЗемельныйНалогНалоги.ОсновноеСредство = СведенияОбИмуществеСрезПоследних.ОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОС.СрезПоследних(&ДатаСреза, Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.ПринятоКУчету)) КАК СостоянияОССрез
		|		ПО ЗемельныйНалогНалоги.ОсновноеСредство = СостоянияОССрез.ОсновноеСредство
		|ГДЕ
		|	ЗемельныйНалогНалоги.Ссылка = &Ссылка";
		
		
		Запрос.УстановитьПараметр("ДатаСреза",ТекущийДокумент.Дата);
		Запрос.УстановитьПараметр("Ссылка",   ТекущийДокумент);
		                                              
		НомерТаблицы 		= 1;
		ПерваяСтрока 		= 1;
		ПоследняяСтрока 	= 9;
		
		ТабличныйДокумент.Очистить();
		
		Запрос.УстановитьПараметр("ПерваяСтрока",		ПерваяСтрока);
		Запрос.УстановитьПараметр("ПоследняяСтрока",	ПоследняяСтрока);
		ТЗ = Запрос.Выполнить().Выгрузить();
		ДополнитьТЗДо9строк(ТЗ);
		ПечатьЛистаОтчета_Группа3(ТабличныйДокумент, Макет, ТЗ, ОтчетныйПериод, ТекущийДокумент.Организация, ТекущийДокумент.Дата);			
		ПерваяСтрока = ПерваяСтрока + 9;
		ПоследняяСтрока = ПоследняяСтрока + 9;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
	КонецЦикла;
	Если НЕ Ошибки = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
	КонецЕсли;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	// Добавление дополнительных параметров
	БухгалтерскиеОтчетыКлиентСервер.ЗаполнитьДополнительныеПараметрыПечати(ТабличныйДокумент);
	Возврат ТабличныйДокумент;
КонецФункции // ПечатнаяФорма()

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗемельныйНалог") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ЗемельныйНалог",
		НСтр("ru = 'Земельный налог FORM STI-077'"),
		ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "ЗемельныйНалог"));
	КонецЕсли; 
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗемельныйНалог";
	КомандаПечати.Представление = НСтр("ru = 'Земельный налог FORM STI-077'");
	КомандаПечати.СписокФорм = "ФормаДокумента";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1; 
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

