#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеОбъектовБП.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения);
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСФ.ПриходБланковСФ");
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.БланкиСФ.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	БухгалтерскийУчетСервер.ОтразитьБланкиСФ(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьБланкиСчетовФактур(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей.
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
		
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверяемыеРеквизиты.Добавить("Спецификация");
	
	// Предварительный контроль
	ВыполнитьПредварительныйКонтроль(Отказ);	

КонецПроцедуры // ОбработкаПроверкиЗаполнения()

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

// Процедура выполняет контроль противоречий.
//
Процедура ВыполнитьПредварительныйКонтроль(Отказ)
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;	
	
	ТаблицаСпецификацияБланков = Документы.БланкиСФ.ПолучитьТаблицуЗначенийБланкиСИндивидуальнымиНомера(ЭтотОбъект);

	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаСпецификацияБланков.Серия КАК Серия,
		|	ТаблицаСпецификацияБланков.Номер КАК Номер,
		|	1 КАК Количество
		|ПОМЕСТИТЬ ТаблицаСпецификацияБланков
		|ИЗ
		|	&ТаблицаСпецификацияБланков КАК ТаблицаСпецификацияБланков
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Серия,
		|	Номер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСпецификация.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСпецификация.Серия КАК Серия
		|ПОМЕСТИТЬ ВременнаяТаблицаСпецификация
		|ИЗ
		|	&ТаблицаСпецификация КАК ТаблицаСпецификация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Номер,
		|	ТаблицаДокумента.Серия
		|ИЗ
		|	ТаблицаСпецификацияБланков КАК ТаблицаДокумента
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДокумента.Серия,
		|	ТаблицаДокумента.Номер
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТаблицаДокумента.Количество) > 1
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаДокумента.Серия,
		|	ТаблицаДокумента.Номер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	БланкиСчетовФактур.Серия КАК Серия,
		|	БланкиСчетовФактур.Регистратор КАК Регистратор,
		|	ВременнаяТаблицаСпецификация.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	РегистрСведений.БланкиСчетовФактур КАК БланкиСчетовФактур
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСпецификация КАК ВременнаяТаблицаСпецификация
		|		ПО БланкиСчетовФактур.Серия = ВременнаяТаблицаСпецификация.Серия
		|ГДЕ
		|	БланкиСчетовФактур.Организация = &Организация
		|	И БланкиСчетовФактур.Регистратор <> &Ссылка
		|	И (БланкиСчетовФактур.Серия, БланкиСчетовФактур.Номер) В
		|			(ВЫБРАТЬ
		|				ТаблицаСпецификацияБланков.Серия,
		|				ТаблицаСпецификацияБланков.Номер
		|			ИЗ
		|				ТаблицаСпецификацияБланков КАК ТаблицаСпецификацияБланков)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ТаблицаСпецификацияБланков", ТаблицаСпецификацияБланков);
	Запрос.УстановитьПараметр("ТаблицаСпецификация", Спецификация.Выгрузить());
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// Дубли номеров.
	Если НЕ МассивРезультатов[2].Пустой() Тогда
		ВыборкаИзРезультатаЗапроса = МассивРезультатов[2].Выбрать();
		Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
			НомерСтроки = 1;
			СтрокаТабличнойЧасти = Спецификация.Найти(ВыборкаИзРезультатаЗапроса.Серия, "Серия");
			Если НЕ СтрокаТабличнойЧасти = Неопределено Тогда
				НомерСтроки = СтрокаТабличнойЧасти.НомерСтроки;
			КонецЕсли;					
			
			ТекстСообщения = СтрШаблон(НСтр("ru = 'По указанной серии ""%1"" дублируется номер %2.'"), 
							ВыборкаИзРезультатаЗапроса.Серия,
							ВыборкаИзРезультатаЗапроса.Номер);
			БухгалтерскийУчетСервер.СообщитьОбОшибке(
				ЭтотОбъект,
				ТекстСообщения,
				"Спецификация",
				НомерСтроки,
				"Серия",
				Отказ);
		КонецЦикла;
	КонецЕсли;		
	
	// Регистр "Бланки счетов фактур".
	Если НЕ МассивРезультатов[3].Пустой() Тогда
		ВыборкаИзРезультатаЗапроса = МассивРезультатов[3].Выбрать();
		Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
			ТекстСообщения = СтрШаблон(НСтр("ru = 'По указанной серии ""%1"" ранее оформлен документ ""%2"". По регистру ""Бланки счетов фактур"".'"), 
							ВыборкаИзРезультатаЗапроса.Серия,
							ВыборкаИзРезультатаЗапроса.Регистратор);
			БухгалтерскийУчетСервер.СообщитьОбОшибке(
				ЭтотОбъект,
				ТекстСообщения,
				"Спецификация",
				ВыборкаИзРезультатаЗапроса.НомерСтроки,
				"Серия",
				Отказ);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли