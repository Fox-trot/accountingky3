#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

// Выполняет контроль противоречий.
//
Процедура ВыполнитьПредварительныйКонтроль(Отказ)
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;	
КонецПроцедуры

Процедура ЗаполнитьПоДаннымБухгалтерскогоУчета() Экспорт
	Отказ = Ложь;
	ФильтрСписокСчетов = Новый массив();
	Для каждого СтрокаСчета Из СписокСчетов Цикл
		Если Не ЗначениеЗаполнено(СтрокаСчета.СчетУчета) 
			или СтрокаСчета.УчаствуетВРасчетах = Ложь Тогда
			Продолжить;
		Иначе
			ФильтрСписокСчетов.Добавить(СтрокаСчета.СчетУчета);
		КонецЕсли; 
	КонецЦикла; 
	
	Запрос = Новый Запрос;
	
	Если СверкаПоСоцФонду Тогда 
		ЗапросТекст = 
			"ВЫБРАТЬ
			|	СУММА(ОстОб.СуммаНачальныйОстаток) КАК НачальныйОстаток,
			|	СУММА(ОстОб.СуммаКонечныйОстаток) КАК КонечныйОстаток
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНачала, &ДатаОкончания, , , Счет В (&СписокСчетов), , Организация = &Организация) КАК ОстОб
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ХозрасчетныйОстаткиИОбороты.ПериодСекунда КАК Дата,
			|	ХозрасчетныйОстаткиИОбороты.Регистратор КАК Документ,
			|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотДт) КАК Дебет,
			|	СУММА(0) КАК Кредит,
			|	1 КАК Группа
			|ПОМЕСТИТЬ ВТ_Данные
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНачала, &ДатаОкончания, Авто, , Счет В (&СписокСчетов), , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
			|ГДЕ
			|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт <> 0
			|
			|СГРУППИРОВАТЬ ПО
			|	ХозрасчетныйОстаткиИОбороты.ПериодСекунда,
			|	ХозрасчетныйОстаткиИОбороты.Регистратор
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ХозрасчетныйОстаткиИОбороты.ПериодСекунда,
			|	ХозрасчетныйОстаткиИОбороты.Регистратор,
			|	СУММА(0),
			|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотКт),
			|	2
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНачала, &ДатаОкончания, Авто, , Счет В (&СписокСчетов), , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
			|ГДЕ
			|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт <> 0
			|
			|СГРУППИРОВАТЬ ПО
			|	ХозрасчетныйОстаткиИОбороты.Регистратор,
			|	ХозрасчетныйОстаткиИОбороты.ПериодСекунда
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Данные.Дата КАК Дата,
			|	ВТ_Данные.Документ КАК Документ,
			|	СУММА(ВТ_Данные.Дебет) КАК Дебет,
			|	СУММА(ВТ_Данные.Кредит) КАК Кредит,
			|	ВТ_Данные.Группа КАК Группа
			|ИЗ
			|	ВТ_Данные КАК ВТ_Данные
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_Данные.Документ,
			|	ВТ_Данные.Дата,
			|	ВТ_Данные.Группа
			|
			|УПОРЯДОЧИТЬ ПО
			|	Дата,
			|	Документ,
			|	Группа";

	Иначе 

		АналитикаРасчетов = новый Массив();
		АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
		АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
		ЗапросТекст = 
		"ВЫБРАТЬ
		|	СУММА(ОстОб.ВалютнаяСуммаНачальныйОстаток) КАК НачальныйОстаток,
		|	СУММА(ОстОб.ВалютнаяСуммаКонечныйОстаток) КАК КонечныйОстаток
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			,
		|			,
		|			Счет В (&СписокСчетов),
		|			&ВидыСубконто,
		|			Организация = &Организация
		|				И Субконто1 = &Контрагент
		|				И Субконто2 = &Договор) КАК ОстОб
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.ПериодСекунда КАК Дата,
		|	ХозрасчетныйОстаткиИОбороты.Регистратор КАК Документ,
		|	СУММА(ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотДт) КАК Дебет,
		|	СУММА(0) КАК Кредит,
		|	1 КАК Группа
		|ПОМЕСТИТЬ Вт_Данные
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			,
		|			,
		|			&ВидыСубконто,
		|			Организация = &Организация
		|				И Субконто1 = &Контрагент
		|				И Субконто2 = &Договор) КАК ХозрасчетныйОстаткиИОбороты
		|ГДЕ
		|	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотДт <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстаткиИОбороты.Регистратор,
		|	ХозрасчетныйОстаткиИОбороты.ПериодСекунда
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.ПериодСекунда,
		|	ХозрасчетныйОстаткиИОбороты.Регистратор,
		|	СУММА(0),
		|	СУММА(ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотКт),
		|	2
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			,
		|			,
		|			&ВидыСубконто,
		|			Организация = &Организация
		|				И Субконто1 = &Контрагент
		|				И Субконто2 = &Договор) КАК ХозрасчетныйОстаткиИОбороты
		|ГДЕ
		|	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотКт <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстаткиИОбороты.Регистратор,
		|	ХозрасчетныйОстаткиИОбороты.ПериодСекунда
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вт_Данные.Дата КАК Дата,
		|	Вт_Данные.Документ КАК Документ,
		|	СУММА(Вт_Данные.Дебет) КАК Дебет,
		|	СУММА(Вт_Данные.Кредит) КАК Кредит,
		|	Вт_Данные.Группа КАК Группа
		|ИЗ
		|	Вт_Данные КАК Вт_Данные
		|
		|СГРУППИРОВАТЬ ПО
		|	Вт_Данные.Дата,
		|	Вт_Данные.Документ,
		|	Вт_Данные.Группа
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	Документ,
		|	Группа";
			
		Если ДоговорКонтрагента.Пустая() Тогда
			ЗапросТекст = СтрЗаменить(ЗапросТекст, "И Субконто2 = &Договор", "");
		КонецЕсли;
	
	КонецЕсли;
		Запрос.Текст = ЗапросТекст;
		Запрос.УстановитьПараметр("Организация", 	Организация);
		Запрос.УстановитьПараметр("Контрагент", 	Контрагент);
		Запрос.УстановитьПараметр("Договор", 		ДоговорКонтрагента);
		Запрос.УстановитьПараметр("ДатаНачала", 	НачалоДня(ДатаНачала));
		Запрос.УстановитьПараметр("ДатаОкончания", 	КонецДня(ДатаОкончания));
		Запрос.УстановитьПараметр("СписокСчетов",	ФильтрСписокСчетов);
		Запрос.УстановитьПараметр("ВидыСубконто",   АналитикаРасчетов);
		
		Результат = Запрос.ВыполнитьПакет();
		
		ВыборкаОст = Результат[0].Выбрать();
		Пока ВыборкаОст.Следующий() Цикл 
			ОстатокНаНачало = ВыборкаОст.НачальныйОстаток;
			ОстатокНаКонец	= ВыборкаОст.КонечныйОстаток;
		КонецЦикла;
		
		ВыборкаОб = Результат[2].Выбрать();	
		Пока ВыборкаОб.Следующий() Цикл 
			СТЧ = ПоДаннымОрганизации.Добавить();
			СТЧ.ДокументСверки = ВыборкаОб.Документ;
			
			Если ВыборкаОб.Дебет-ВыборкаОб.Кредит > 0 Тогда 
				СТЧ.СуммаДт = ВыборкаОб.Дебет-ВыборкаОб.Кредит;
			Иначе 
				СТЧ.СуммаКт = ВыборкаОб.Кредит-ВыборкаОб.Дебет;
			КонецЕсли;
			
		КонецЦикла;
		Если Результат[2].Пустой() Тогда 
			ТекстСообщения = НСтр("ru = 'Проверьте правильность заполнения контрагента и договора, для введенных данных за указанный период нет никаких операций.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		КонецЕсли;
		
		ПоДаннымОрганизации.Сортировать("ДокументСверки");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// В обработчике события ОбработкаПроверкиЗаполнения документа выполняется
// копирование и обнуление проверяемых реквизитов для исключения стандартной
// проверки заполнения платформой и последующей проверки средствами встроенного языка.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	// Предварительный контроль
	ВыполнитьПредварительныйКонтроль(Отказ);	
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ЗаполнениеОбъектов.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения);
КонецПроцедуры

#КонецОбласти

#КонецЕсли