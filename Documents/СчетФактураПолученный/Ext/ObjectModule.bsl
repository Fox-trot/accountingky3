#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ЗаполненияДокумента

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоДополнительнымРасходам(ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДанныеЗаполнения;
	
	// Шапка
	Организация = ДанныеЗаполнения.Организация;
	Контрагент 	= ДанныеЗаполнения.Контрагент;
	ДоговорКонтрагента = ДанныеЗаполнения.ДоговорКонтрагента;
	СуммаДокумента = ДанныеЗаполнения.Услуги.Итог("Сумма");
	
	// Расшифровка платежа
	Товары.Загрузить(ДанныеЗаполнения.Товары.Выгрузить());
	
КонецПроцедуры

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоПоступлениюТоваровУслуг(ДанныеЗаполнения) Экспорт
	
	Организация = ДанныеЗаполнения.Организация;
	Контрагент 	= ДанныеЗаполнения.Контрагент;
	ДокументОснование = ДанныеЗаполнения;
	ВалютаДокумента = ДанныеЗаполнения.ВалютаДокумента;
	ДоговорКонтрагента = ДанныеЗаполнения.ДоговорКонтрагента;
	Контрагент = ДанныеЗаполнения.Контрагент;
	Курс = ДанныеЗаполнения.Курс;

	Товары.Очистить();
	Для Каждого СтрокаТабличнойЧасти Из ДанныеЗаполнения.Товары Цикл
		НоваяСтрока = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
		НоваяСтрока.ДокументПоступления = ДанныеЗаполнения.Ссылка;
	КонецЦикла;
	
КонецПроцедуры

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоВозвратуТоваровПоставщику(ДанныеЗаполнения) Экспорт
	
	Организация = ДанныеЗаполнения.Организация;
	Контрагент 	= ДанныеЗаполнения.Контрагент;
	ДокументОснование = ДанныеЗаполнения;
	ВалютаДокумента = ДанныеЗаполнения.ВалютаДокумента;
	ДоговорКонтрагента = ДанныеЗаполнения.ДоговорКонтрагента;
	Контрагент = ДанныеЗаполнения.Контрагент;
	Курс = ДанныеЗаполнения.Курс;

	Товары.Очистить();
	Для Каждого СтрокаТабличнойЧасти Из ДанныеЗаполнения.Товары Цикл
		НоваяСтрока = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
		НоваяСтрока.ДокументПоступления = ДанныеЗаполнения.Ссылка;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("ДокументСсылка.ДополнительныеРасходы")] = "ЗаполнитьПоДополнительнымРасходам";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПоступлениеТоваровУслуг")] = "ЗаполнитьПоПоступлениюТоваровУслуг";
	СтратегияЗаполнения[Тип("ДокументСсылка.ВозвратТоваровПоставщику")] = "ЗаполнитьПоВозвратуТоваровПоставщику";

	ЗаполнениеОбъектовБП.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения);
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Курс = 0 Или Кратность = 0 Тогда 
		ТекстСообщения = НСтр("ru = 'Не заполнен курс валюты ""%1"". Откройте список валют (Банк и касса - Валюты) и проверьте,
			|что у валюты ""%1"" установлен курс на дату %2 или ранее.
			|Перевыберите договор и заново проведите документ.'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, ВалютаДокумента, Формат(Дата, "ДЛФ=D"));	
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
	КонецЕсли;

	ОбщегоНазначенияБПСервер.ДобавитьНепроверяемыеРеквизитыПоПараметрамФункциональныхОпций(МассивНепроверяемыхРеквизитов, Организация, Дата);
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.СчетФактураПолученный.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	БухгалтерскийУчетСервер.ОтразитьСчетаФактурыПолученные(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьХозрасчетный(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей.
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура заполняет табличную часть "Товары" по документам,
// подобранным в табличной части "ДокументыПоступления".
//
// Параметры:
//	ВозвратОтПокупателя - Булево - реквизит "Возврат" данного документа 
//
Процедура ЗаполнитьПоПодобраннымДокументам(ВозвратОтПокупателя) Экспорт

	МассивДокументов = ДокументыПоступления.Выгрузить().ВыгрузитьКолонку("ДокументПоступления");
	
	Запрос = Новый Запрос;         
	
	Если ВозвратОтПокупателя Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВозвратТоваровПоставщикуТовары.Ссылка КАК ДокументПоступления,
			|	ВозвратТоваровПоставщикуТовары.Номенклатура,
			|	ВозвратТоваровПоставщикуТовары.Номенклатура.ЕдиницаИзмерения,
			|	ВозвратТоваровПоставщикуТовары.Количество,
			|	ВозвратТоваровПоставщикуТовары.Цена,
			|	ВозвратТоваровПоставщикуТовары.Сумма,
			|	ВозвратТоваровПоставщикуТовары.Всего,
			|	ВозвратТоваровПоставщикуТовары.СтавкаНДС,
			|	ВозвратТоваровПоставщикуТовары.СтавкаНСП,
			|	ВозвратТоваровПоставщикуТовары.СуммаНДС,
			|	ВозвратТоваровПоставщикуТовары.СуммаНСП,
			|	ВозвратТоваровПоставщикуТовары.СчетУчета
			|ИЗ
			|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
			|ГДЕ
			|   ВозвратТоваровПоставщикуТовары.Ссылка В(&МассивДокументов)";
	Иначе
		Запрос.Текст =
		
			"ВЫБРАТЬ
			|	ПоступлениеТоваровУслугТовары.Ссылка КАК ДокументПоступления,
			|	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
			|	ПоступлениеТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ПоступлениеТоваровУслугТовары.Количество КАК Количество,
			|	ПоступлениеТоваровУслугТовары.Цена КАК Цена,
		 	|	ПоступлениеТоваровУслугТовары.Сумма КАК Сумма,
			|	ПоступлениеТоваровУслугТовары.Всего КАК Всего,
			|	ПоступлениеТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
			|	ПоступлениеТоваровУслугТовары.СтавкаНСП КАК СтавкаНСП,
			|	ПоступлениеТоваровУслугТовары.СуммаНДС КАК СуммаНДС,
			|	ПоступлениеТоваровУслугТовары.СуммаНСП КАК СуммаНСП,
			|	ПоступлениеТоваровУслугТовары.СчетУчета КАК СчетУчета,
			|	ПоступлениеТоваровУслугТовары.СуммаСФ КАК СуммаСФ,
			|	ПоступлениеТоваровУслугТовары.Емкость КАК Емкость,
			|	ПоступлениеТоваровУслугТовары.КоличествоМест КАК КоличествоМест,
			|	ПоступлениеТоваровУслугТовары.ЗачетНДС КАК ЗачетНДС
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
			|ГДЕ
			|   ПоступлениеТоваровУслугТовары.Ссылка В(&МассивДокументов)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПоступлениеТоваровУслугУслуги.Ссылка,
			|	ПоступлениеТоваровУслугУслуги.Номенклатура,
			|	НЕОПРЕДЕЛЕНО,
			|	ПоступлениеТоваровУслугУслуги.Количество,
			|	ПоступлениеТоваровУслугУслуги.Цена,
			|	ПоступлениеТоваровУслугУслуги.Сумма,
			|	ПоступлениеТоваровУслугУслуги.Всего,
			|	ПоступлениеТоваровУслугУслуги.СтавкаНДС,
			|	ПоступлениеТоваровУслугУслуги.СтавкаНСП,
			|	ПоступлениеТоваровУслугУслуги.СуммаНДС,
			|	ПоступлениеТоваровУслугУслуги.СуммаНСП,
			|	ПоступлениеТоваровУслугУслуги.СчетУчета,
			|	ПоступлениеТоваровУслугУслуги.СуммаСФ,
			|	НЕОПРЕДЕЛЕНО,
			|   НЕОПРЕДЕЛЕНО,
			|	ПоступлениеТоваровУслугУслуги.ЗачетНДС,
			|   НЕОПРЕДЕЛЕНО
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
			|ГДЕ
			|   ПоступлениеТоваровУслугУслуги.Ссылка В(&МассивДокументов)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПоступлениеТоваровУслугОС.Ссылка,
			|	ПоступлениеТоваровУслугОС.ОсновноеСредство,
			|	НЕОПРЕДЕЛЕНО,
			|	1,
			|	ПоступлениеТоваровУслугОС.Сумма,
			|	ПоступлениеТоваровУслугОС.Сумма,
			|	ПоступлениеТоваровУслугОС.Всего,
			|	ПоступлениеТоваровУслугОС.СтавкаНДС,
			|	ПоступлениеТоваровУслугОС.СтавкаНСП,
			|	ПоступлениеТоваровУслугОС.СуммаНДС,
			|	ПоступлениеТоваровУслугОС.СуммаНСП,
			|	ПоступлениеТоваровУслугОС.СчетУчета,
			|	ПоступлениеТоваровУслугОС.СуммаСФ,
			|	НЕОПРЕДЕЛЕНО,
			|   НЕОПРЕДЕЛЕНО,
			|	НЕОПРЕДЕЛЕНО,
			|   НЕОПРЕДЕЛЕНО
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг.ОС КАК ПоступлениеТоваровУслугОС
			|ГДЕ
			|   ПоступлениеТоваровУслугОС.Ссылка В(&МассивДокументов)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ДополнительныеРасходыУслуги.Ссылка,
			|	ДополнительныеРасходыУслуги.Номенклатура,
			|	НЕОПРЕДЕЛЕНО,
			|	ДополнительныеРасходыУслуги.Количество,
			|	ДополнительныеРасходыУслуги.Цена,
			|	ДополнительныеРасходыУслуги.Сумма,
			|	ДополнительныеРасходыУслуги.Всего,
			|	НЕОПРЕДЕЛЕНО,
			|   НЕОПРЕДЕЛЕНО,
			|	ДополнительныеРасходыУслуги.СуммаНДС,
			|	ДополнительныеРасходыУслуги.СуммаНСП,
			|	НЕОПРЕДЕЛЕНО,
			|   НЕОПРЕДЕЛЕНО,
			|	НЕОПРЕДЕЛЕНО,
			|	НЕОПРЕДЕЛЕНО,
			|   НЕОПРЕДЕЛЕНО,
			|	НЕОПРЕДЕЛЕНО
			|ИЗ
			|	Документ.ДополнительныеРасходы.Услуги КАК ДополнительныеРасходыУслуги
			|ГДЕ
			|   ДополнительныеРасходыУслуги.Ссылка В(&МассивДокументов)";
	КонецЕсли;
			
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Товары.Загрузить(Запрос.Выполнить().Выгрузить()); 

КонецПроцедуры

#КонецОбласти

#КонецЕсли