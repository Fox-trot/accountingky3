#Область ОбработчикиСлужебные

// Получает набор данных с сервера для процедуры ДатаПриИзменении.
//
&НаСервере
Функция ПолучитьДанныеДатаПриИзменении(ДатаПередИзменением)
	РазностьДат = БухгалтерскийУчетСервер.ПроверитьНомерДокумента(Объект.Ссылка, Объект.Дата, ДатаПередИзменением);
	
	СтруктураДанные = Новый Структура;
	СтруктураДанные.Вставить("РазностьДат",	РазностьДат);
	
	Возврат СтруктураДанные;
КонецФункции // ПолучитьДанныеДатаПриИзменении()

#КонецОбласти

#Область ПроцедурыИФункцииОбщегоНазначения

&НаСервере
Процедура ЗаполнитьПоПоступлениюНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступленияИтоги.ДокументПоступления
		|ПОМЕСТИТЬ ВременнаяТаблицаДокументыПоступления
		|ИЗ
		|	РегистрСведений.ПоступленияИтоги КАК ПоступленияИтоги
		|ГДЕ
		|	(ПоступленияИтоги.СерияБланкаСФ = """"
		|			ИЛИ ПоступленияИтоги.СерияБланкаСФ = ""ДПБУ"")
		|	И ПоступленияИтоги.НомерБланкаСФ = """"
		|	И ПоступленияИтоги.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
		|	И ПоступленияИтоги.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаНДС.НДСНеПодтвержден)
		|	И ПоступленияИтоги.Контрагент = &Контрагент
		|	И ПоступленияИтоги.Договор = &ДоговорКонтрагента
		|	И ВЫРАЗИТЬ(ПоступленияИтоги.ДокументПоступления КАК Документ.ПоступлениеТоваровУслуг) ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|	И ВЫБОР
		|			КОГДА &ВидУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаНДС.ПодтверждениеНДС)
		|				ТОГДА ВЫРАЗИТЬ(ПоступленияИтоги.ДокументПоступления КАК Документ.ПоступлениеТоваровУслуг).Дата МЕЖДУ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&Дата, МЕСЯЦ, -3), МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
		|			ИНАЧЕ ВЫРАЗИТЬ(ПоступленияИтоги.ДокументПоступления КАК Документ.ПоступлениеТоваровУслуг).Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
		|		КОНЕЦ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПоступленияИтоги.ДокументПоступления
		|ИЗ
		|	РегистрСведений.ПоступленияИтоги КАК ПоступленияИтоги
		|ГДЕ
		|	(ПоступленияИтоги.СерияБланкаСФ = """"
		|			ИЛИ ПоступленияИтоги.СерияБланкаСФ = ""ДПБУ"")
		|	И ПоступленияИтоги.НомерБланкаСФ = """"
		|	И ПоступленияИтоги.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
		|	И ПоступленияИтоги.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаНДС.НДСНеПодтвержден)
		|	И ПоступленияИтоги.Контрагент = &Контрагент
		|	И ПоступленияИтоги.Договор = &ДоговорКонтрагента
		|	И ВЫРАЗИТЬ(ПоступленияИтоги.ДокументПоступления КАК Документ.АвансовыйОтчет) ССЫЛКА Документ.АвансовыйОтчет
		|	И ВЫБОР
		|			КОГДА &ВидУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаНДС.ПодтверждениеНДС)
		|				ТОГДА ВЫРАЗИТЬ(ПоступленияИтоги.ДокументПоступления КАК Документ.АвансовыйОтчет).Дата МЕЖДУ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&Дата, МЕСЯЦ, -3), МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
		|			ИНАЧЕ ВЫРАЗИТЬ(ПоступленияИтоги.ДокументПоступления КАК Документ.АвансовыйОтчет).Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
		|		КОНЕЦ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПоступленияИтоги.ДокументПоступления
		|ИЗ
		|	РегистрСведений.ПоступленияИтоги КАК ПоступленияИтоги
		|ГДЕ
		|	(ПоступленияИтоги.СерияБланкаСФ = """"
		|			ИЛИ ПоступленияИтоги.СерияБланкаСФ = ""ДПБУ"")
		|	И ПоступленияИтоги.НомерБланкаСФ = """"
		|	И ПоступленияИтоги.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
		|	И ПоступленияИтоги.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаНДС.НДСНеПодтвержден)
		|	И ПоступленияИтоги.Контрагент = &Контрагент
		|	И ПоступленияИтоги.Договор = &ДоговорКонтрагента
		|	И ВЫРАЗИТЬ(ПоступленияИтоги.ДокументПоступления КАК Документ.ДополнительныеРасходы) ССЫЛКА Документ.ДополнительныеРасходы
		|	И ВЫБОР
		|			КОГДА &ВидУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаНДС.ПодтверждениеНДС)
		|				ТОГДА ВЫРАЗИТЬ(ПоступленияИтоги.ДокументПоступления КАК Документ.ДополнительныеРасходы).Дата МЕЖДУ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&Дата, МЕСЯЦ, -3), МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
		|			ИНАЧЕ ВЫРАЗИТЬ(ПоступленияИтоги.ДокументПоступления КАК Документ.ДополнительныеРасходы).Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
		|		КОНЕЦ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПоступленияИтоги.ДокументПоступления
		|ИЗ
		|	РегистрСведений.ПоступленияИтоги КАК ПоступленияИтоги
		|ГДЕ
		|	(ПоступленияИтоги.СерияБланкаСФ = """"
		|			ИЛИ ПоступленияИтоги.СерияБланкаСФ = ""ДПБУ"")
		|	И ПоступленияИтоги.НомерБланкаСФ = """"
		|	И ПоступленияИтоги.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
		|	И ПоступленияИтоги.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаНДС.НДСНеПодтвержден)
		|	И ПоступленияИтоги.Контрагент = &Контрагент
		|	И ПоступленияИтоги.Договор = &ДоговорКонтрагента
		|	И ВЫРАЗИТЬ(ПоступленияИтоги.ДокументПоступления КАК Документ.ВозвратТоваровПоставщику) ССЫЛКА Документ.ВозвратТоваровПоставщику
		|	И ВЫБОР
		|			КОГДА &ВидУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаНДС.ПодтверждениеНДС)
		|				ТОГДА ВЫРАЗИТЬ(ПоступленияИтоги.ДокументПоступления КАК Документ.ВозвратТоваровПоставщику).Дата МЕЖДУ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&Дата, МЕСЯЦ, -3), МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
		|			ИНАЧЕ ВЫРАЗИТЬ(ПоступленияИтоги.ДокументПоступления КАК Документ.ВозвратТоваровПоставщику).Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаДокументыПоступления.ДокументПоступления
		|ПОМЕСТИТЬ ВременнаяТаблицаДокументыПоступленияБезСФ
		|ИЗ
		|	ВременнаяТаблицаДокументыПоступления КАК ВременнаяТаблицаДокументыПоступления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаФактурыПолученные КАК СчетаФактурыПолученные
		|		ПО ВременнаяТаблицаДокументыПоступления.ДокументПоступления = СчетаФактурыПолученные.Документ
		|ГДЕ
		|	СчетаФактурыПолученные.Регистратор ЕСТЬ NULL 
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления,
		|	ПоступлениеТоваровУслугТовары.Номенклатура,
		|	ПоступлениеТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ПоступлениеТоваровУслугТовары.Количество,
		|	ПоступлениеТоваровУслугТовары.Цена,
		|	ПоступлениеТоваровУслугТовары.Сумма,
		|	ПоступлениеТоваровУслугТовары.СчетУчета,
		|	ПоступлениеТоваровУслугТовары.СтавкаНДС,
		|	ПоступлениеТоваровУслугТовары.СуммаНДС,
		|	ПоступлениеТоваровУслугТовары.СтавкаНСП,
		|	ПоступлениеТоваровУслугТовары.СуммаНСП,
		|	ПоступлениеТоваровУслугТовары.СуммаСФ,
		|	ПоступлениеТоваровУслугТовары.Всего,
		|	ПоступлениеТоваровУслугТовары.Емкость,
		|	ПоступлениеТоваровУслугТовары.КоличествоМест,
		|	ПоступлениеТоваровУслугТовары.ЗачетНДС
		|ПОМЕСТИТЬ ВременнаяТаблицаГотовыеДанные
		|ИЗ
		|	ВременнаяТаблицаДокументыПоступленияБезСФ КАК ВременнаяТаблицаДокументыПоступленияБезСФ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
		|		ПО ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления = ПоступлениеТоваровУслугТовары.Ссылка
		|ГДЕ
		|	ВЫРАЗИТЬ(ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления КАК Документ.ПоступлениеТоваровУслуг) ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|	И НЕ &ВидУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаНДС.Возврат)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления,
		|	ПоступлениеТоваровУслугУслуги.Номенклатура,
		|	ПоступлениеТоваровУслугУслуги.Номенклатура.ЕдиницаИзмерения,
		|	ПоступлениеТоваровУслугУслуги.Количество,
		|	ПоступлениеТоваровУслугУслуги.Цена,
		|	ПоступлениеТоваровУслугУслуги.Сумма,
		|	ПоступлениеТоваровУслугУслуги.СчетУчета,
		|	ПоступлениеТоваровУслугУслуги.СтавкаНДС,
		|	ПоступлениеТоваровУслугУслуги.СуммаНДС,
		|	ПоступлениеТоваровУслугУслуги.СтавкаНСП,
		|	ПоступлениеТоваровУслугУслуги.СуммаНСП,
		|	ПоступлениеТоваровУслугУслуги.СуммаСФ,
		|	ПоступлениеТоваровУслугУслуги.Всего,
		|	NULL,
		|	NULL,
		|	ПоступлениеТоваровУслугУслуги.ЗачетНДС
		|ИЗ
		|	ВременнаяТаблицаДокументыПоступленияБезСФ КАК ВременнаяТаблицаДокументыПоступленияБезСФ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
		|		ПО ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления = ПоступлениеТоваровУслугУслуги.Ссылка
		|ГДЕ
		|	ВЫРАЗИТЬ(ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления КАК Документ.ПоступлениеТоваровУслуг) ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|	И НЕ &ВидУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаНДС.Возврат)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления,
		|	ПоступлениеТоваровУслугОС.ОсновноеСредство,
		|	NULL,
		|	NULL,
		|	NULL,
		|	ПоступлениеТоваровУслугОС.Сумма,
		|	ПоступлениеТоваровУслугОС.СчетУчета,
		|	ПоступлениеТоваровУслугОС.СтавкаНДС,
		|	ПоступлениеТоваровУслугОС.СуммаНДС,
		|	ПоступлениеТоваровУслугОС.СтавкаНСП,
		|	ПоступлениеТоваровУслугОС.СуммаНСП,
		|	ПоступлениеТоваровУслугОС.СуммаСФ,
		|	ПоступлениеТоваровУслугОС.Всего,
		|	NULL,
		|	NULL,
		|	ПоступлениеТоваровУслугОС.ЗачетНДС
		|ИЗ
		|	ВременнаяТаблицаДокументыПоступленияБезСФ КАК ВременнаяТаблицаДокументыПоступленияБезСФ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.ОС КАК ПоступлениеТоваровУслугОС
		|		ПО ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления = ПоступлениеТоваровУслугОС.Ссылка
		|ГДЕ
		|	ВЫРАЗИТЬ(ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления КАК Документ.ПоступлениеТоваровУслуг) ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|	И НЕ &ВидУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаНДС.Возврат)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления,
		|	АвансовыйОтчетТовары.Номенклатура,
		|	NULL,
		|	АвансовыйОтчетТовары.Количество,
		|	АвансовыйОтчетТовары.Цена,
		|	АвансовыйОтчетТовары.Сумма,
		|	АвансовыйОтчетТовары.СчетУчета,
		|	АвансовыйОтчетТовары.СтавкаНДС,
		|	АвансовыйОтчетТовары.СуммаНДС,
		|	АвансовыйОтчетТовары.СтавкаНСП,
		|	АвансовыйОтчетТовары.СуммаНСП,
		|	NULL,
		|	АвансовыйОтчетТовары.Всего,
		|	NULL,
		|	NULL,
		|	АвансовыйОтчетТовары.ЗачетНДС
		|ИЗ
		|	ВременнаяТаблицаДокументыПоступленияБезСФ КАК ВременнаяТаблицаДокументыПоступленияБезСФ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.Товары КАК АвансовыйОтчетТовары
		|		ПО ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления = АвансовыйОтчетТовары.Ссылка
		|ГДЕ
		|	ВЫРАЗИТЬ(ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления КАК Документ.АвансовыйОтчет) ССЫЛКА Документ.АвансовыйОтчет
		|	И НЕ &ВидУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаНДС.Возврат)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления,
		|	АвансовыйОтчетУслуги.Номенклатура,
		|	NULL,
		|	NULL,
		|	NULL,
		|	АвансовыйОтчетУслуги.Сумма,
		|	АвансовыйОтчетУслуги.СчетУчета,
		|	АвансовыйОтчетУслуги.СтавкаНДС,
		|	АвансовыйОтчетУслуги.СуммаНДС,
		|	АвансовыйОтчетУслуги.СтавкаНСП,
		|	АвансовыйОтчетУслуги.СуммаНСП,
		|	NULL,
		|	АвансовыйОтчетУслуги.Всего,
		|	NULL,
		|	NULL,
		|	АвансовыйОтчетУслуги.ЗачетНДС
		|ИЗ
		|	ВременнаяТаблицаДокументыПоступленияБезСФ КАК ВременнаяТаблицаДокументыПоступленияБезСФ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.Услуги КАК АвансовыйОтчетУслуги
		|		ПО ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления = АвансовыйОтчетУслуги.Ссылка
		|ГДЕ
		|	ВЫРАЗИТЬ(ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления КАК Документ.АвансовыйОтчет) ССЫЛКА Документ.АвансовыйОтчет
		|	И НЕ &ВидУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаНДС.Возврат)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	ДополнительныеРасходы.СтавкаНДС,
		|	ДополнительныеРасходы.СуммаНДС,
		|	ДополнительныеРасходы.СтавкаНСП,
		|	ДополнительныеРасходы.СуммаНСП,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	ДополнительныеРасходы.ЗачетНДС
		|ИЗ
		|	ВременнаяТаблицаДокументыПоступленияБезСФ КАК ВременнаяТаблицаДокументыПоступленияБезСФ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДополнительныеРасходы КАК ДополнительныеРасходы
		|		ПО ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления = ДополнительныеРасходы.Ссылка
		|ГДЕ
		|	ВЫРАЗИТЬ(ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления КАК Документ.ДополнительныеРасходы) ССЫЛКА Документ.ДополнительныеРасходы
		|	И НЕ &ВидУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаНДС.Возврат)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления,
		|	ВозвратТоваровПоставщикуТовары.Номенклатура,
		|	NULL,
		|	ВозвратТоваровПоставщикуТовары.Количество,
		|	ВозвратТоваровПоставщикуТовары.Цена,
		|	ВозвратТоваровПоставщикуТовары.Сумма,
		|	ВозвратТоваровПоставщикуТовары.СчетУчета,
		|	ВозвратТоваровПоставщикуТовары.СтавкаНДС,
		|	ВозвратТоваровПоставщикуТовары.СуммаНДС,
		|	ВозвратТоваровПоставщикуТовары.СтавкаНСП,
		|	ВозвратТоваровПоставщикуТовары.СуммаНСП,
		|	NULL,
		|	ВозвратТоваровПоставщикуТовары.Всего,
		|	ВозвратТоваровПоставщикуТовары.Емкость,
		|	ВозвратТоваровПоставщикуТовары.КоличествоМест,
		|	NULL
		|ИЗ
		|	ВременнаяТаблицаДокументыПоступленияБезСФ КАК ВременнаяТаблицаДокументыПоступленияБезСФ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
		|		ПО ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления = ВозвратТоваровПоставщикуТовары.Ссылка
		|ГДЕ
		|	ВЫРАЗИТЬ(ВременнаяТаблицаДокументыПоступленияБезСФ.ДокументПоступления КАК Документ.ВозвратТоваровПоставщику) ССЫЛКА Документ.ВозвратТоваровПоставщику
		|	И &ВидУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаНДС.Возврат)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаГотовыеДанные.ДокументПоступления,
		|	ВременнаяТаблицаГотовыеДанные.Номенклатура,
		|	ВременнаяТаблицаГотовыеДанные.ЕдиницаИзмерения,
		|	ВременнаяТаблицаГотовыеДанные.Количество,
		|	ВременнаяТаблицаГотовыеДанные.Цена,
		|	ВременнаяТаблицаГотовыеДанные.Сумма,
		|	ВременнаяТаблицаГотовыеДанные.СчетУчета,
		|	ВременнаяТаблицаГотовыеДанные.СтавкаНДС,
		|	ВременнаяТаблицаГотовыеДанные.СуммаНДС,
		|	ВременнаяТаблицаГотовыеДанные.СтавкаНСП,
		|	ВременнаяТаблицаГотовыеДанные.СуммаНСП,
		|	ВременнаяТаблицаГотовыеДанные.СуммаСФ,
		|	ВременнаяТаблицаГотовыеДанные.Всего,
		|	ВременнаяТаблицаГотовыеДанные.Емкость,
		|	ВременнаяТаблицаГотовыеДанные.КоличествоМест,
		|	ВременнаяТаблицаГотовыеДанные.ЗачетНДС
		|ИЗ
		|	ВременнаяТаблицаГотовыеДанные КАК ВременнаяТаблицаГотовыеДанные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаГотовыеДанные.ДокументПоступления
		|ИЗ
		|	ВременнаяТаблицаГотовыеДанные КАК ВременнаяТаблицаГотовыеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаГотовыеДанные.ДокументПоступления";
	Запрос.УстановитьПараметр("ВидУчетаНДС", 		Объект.ВидУчетаНДС);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
	Запрос.УстановитьПараметр("Контрагент", 		Объект.Контрагент);
	Запрос.УстановитьПараметр("Дата", 				ДатаДокумента);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаТовары 				= РезультатЗапроса[3].Выбрать();
	ВыборкаДокументПоступления 	= РезультатЗапроса[4].Выбрать();
	
	Пока ВыборкаДокументПоступления.Следующий() Цикл
		НоваяСтрокаДокументыПоступления = Объект.ДокументыПоступления.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаДокументыПоступления, ВыборкаДокументПоступления);
	КонецЦикла;
	
	Пока ВыборкаТовары.Следующий() Цикл 
		НоваяСтрокаТовары = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, ВыборкаТовары);		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ОбщаяСчетФактура()

	ТаблицаЗначений = Объект.Товары.Выгрузить(, "ДокументПоступления");
	ТаблицаЗначений.Свернуть("ДокументПоступления");
	Возврат ТаблицаЗначений.Количество() > 1;	

КонецФункции // ()

// Процедура вызывает обработку заполнения документа по основанию.
//
&НаСервере
Процедура ЗаполнитьПоДокументу(ДокОснование)
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.ОбработкаЗаполнения(ДокОснование, );
	ЗначениеВРеквизитФормы(Документ, "Объект");
	Модифицированность = Истина;
КонецПроцедуры // ЗаполнитьПоДокументу()

#КонецОбласти

#Область УправлениеВнешнимВидом

&НаКлиенте
// Процедура устанавливает видимость и доступность элементов.
//
Процедура УстановитьВидимостьДоступностьЭлементов()
	Элементы.Общая.Доступность = Объект.ДокументыПоступления.Количество() <= 1;			
КонецПроцедуры // УстановитьВидимостьДоступностьЭлементов()    

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Установка реквизитов формы.
	ДатаДокумента = Объект.Дата;
	Если НЕ ЗначениеЗаполнено(ДатаДокумента) Тогда
		ДатаДокумента = ТекущаяДата();
	КонецЕсли;
	
	БухгалтерскийУчетКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаДополнительно, Объект.Комментарий);
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
КонецПроцедуры

// Процедура - обработчик события ПриЧтенииНаСервере.
//
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменений
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменений
	
КонецПроцедуры // ПриЧтенииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьДоступностьЭлементов()
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоПоступлению(Команда)
	Если Объект.Товары.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОтветНаВопросЗаполнитьТабличнуюЧасть", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Табличная часть документа будет очищена! Продолжить выполнение операции?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60);	
	Иначе
		ЗаполнитьПоПоступлениюНаСервере();
	КонецЕсли;
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "ЗаполнитьПоОснованию" 
//
&НаКлиенте
Процедура ЗаполнитьПоОснованию(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПоОснованиюЗавершение", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Документ будет полностью перезаполнен по ""Основанию""! Продолжить выполнение операции?'");
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиРезультатовИнтерактивныхДействий

&НаКлиенте
Процедура ОтветНаВопросЗаполнитьТабличнуюЧасть(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.Товары.Очистить();
		Объект.ДокументыПоступления.Очистить();
        ЗаполнитьПоПоступлениюНаСервере();
		Объект.Общая = Объект.ДокументыПоступления.Количество() > 1;
		УстановитьВидимостьДоступностьЭлементов();
    КонецЕсли;
КонецПроцедуры // 

&НаКлиенте
Процедура ЗаполнитьПоОснованиюЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
        ЗаполнитьПоДокументу(Объект.ДокументОснование);
        УстановитьВидимостьДоступностьЭлементов();
    КонецЕсли;
КонецПроцедуры // ЗаполнитьПоОснованию()

#КонецОбласти

#Область ОбработчикиРеквизитовШапки

// Процедура - обработчик события ПриИзменении поля ввода Дата.
// В процедуре определяется ситуация, когда при изменении своей даты документ 
// оказывается в другом периоде нумерации документов, и в этом случае
// присваивает документу новый уникальный номер.
// Переопределяет соответствующий параметр формы.
//
&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	// Обработка события изменения даты.
	ДатаПередИзменением = ДатаДокумента;
	ДатаДокумента = Объект.Дата;
	Если Объект.Дата <> ДатаПередИзменением Тогда
		СтруктураДанные = ПолучитьДанныеДатаПриИзменении(ДатаПередИзменением);
		Если СтруктураДанные.РазностьДат <> 0 Тогда
			Объект.Номер = "";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода Организация.
//
&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	// Обработка события изменения организации.
	Объект.Номер = "";
	БухгалтерскийУчетСервер.ПроверитьСуществованиеУчетнойПолитикиОрганизаций(ДатаДокумента, Объект.Организация);
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода Комментарий.
//
&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	БухгалтерскийУчетКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаДополнительно, Объект.Комментарий);
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	СтруктураДоговор 			= БухгалтерскийУчетСервер.ПолучитьДоговорКонтрагента(
								Объект.Организация, 
								Объект.Контрагент, 
								ВалютаРегламентированногоУчета, 
								ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком"));
	Объект.ДоговорКонтрагента 	= СтруктураДоговор.ДоговорКонтрагента;	
	
КонецПроцедуры

&НаКлиенте
Процедура СерияБланкаСФПриИзменении(Элемент)
	Если НЕ ЗначениеЗаполнено(Объект.ДатаСФ) Тогда
		Объект.ДатаСФ = ДатаДокумента;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НомерБланкаСФПриИзменении(Элемент)
	Если НЕ ЗначениеЗаполнено(Объект.ДатаСФ) Тогда
		Объект.ДатаСФ = ДатаДокумента;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиТабличныхЧастей

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	Объект.Общая = ОбщаяСчетФактура();
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если Не ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

#КонецОбласти