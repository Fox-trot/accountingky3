#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Функция -ПолучитьКонтактнуюИнформацию
//
// Параметры:
//  Организация  - Спр.Ссылка - Спр.Органинизации 
// Возвращаемое значение:
//  Структура   - структура данных контактной информации
//
Функция ПолучитьКонтактнуюИнформацию(Организация)
	
	СведенияОбОрганизации = БухгалтерскийУчетСервер.ПолучитьСведенияОбОрганизации(Организация);

	Индекс = СведенияОбОрганизации.Индекс; 
	
	ГородНасПункт = СведенияОбОрганизации.Город;
	АдрОбластьГород = ?(СведенияОбОрганизации.Регион = "","",СведенияОбОрганизации.Регион + ",")
	+ ?(СведенияОбОрганизации.Район  = "","", " " + СведенияОбОрганизации.Район + ",") 
		+ ?(ГородНасПункт = "",""," " + ГородНасПункт); 
	АдресОрганизации = ?(СведенияОбОрганизации.Улица    = "","",СведенияОбОрганизации.Улица + ",")
		+ ?(СведенияОбОрганизации.Дом      = "",""," " + СведенияОбОрганизации.Дом + ",")
		+ ?(СведенияОбОрганизации.Корпус   = "",""," " + СведенияОбОрганизации.Корпус + ",")
		+ ?(СведенияОбОрганизации.Квартира = "",""," " + СведенияОбОрганизации.Квартира);
		
	Телефон = СведенияОбОрганизации.Тел;
	
	Структура = Новый Структура("Индекс,АдрОбластьГород,АдресОрганизации,Телефон", Индекс,АдрОбластьГород,АдресОрганизации,Телефон);
	
	Возврат Структура;
	
КонецФункции // ПолучитьАдресОрганизации()

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти
	
#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой ПН
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПоПН(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтчетыПоНалогамЗП.Ссылка,
	|	ОтчетыПоНалогамЗП.Дата,
	|	ОтчетыПоНалогамЗП.Организация,
	|	ОтчетыПоНалогамЗП.ВидСубъекта,
	|	ОтчетыПоНалогамЗП.ПодоходныйНалог.(
	|		Количество КАК Количество,
	|		СуммаНачислено КАК Начислено,
	|		СуммаНеоблагаемая КАК Необлагаемая,
	|		Вычеты КАК Вычеты,
	|		СуммаНачислено - СуммаНеоблагаемая - Вычеты КАК Облагаемая,
	|		СуммаПНсСотрудника КАК ПодоходныйСотрудника,
	|		СуммаПНсМРД КАК СМРД,
	|		СуммаПН КАК ПодоходныйКОплате,
	|		СуммаПН КАК ВсегоПодоходный,
	|		ВЫБОР
	|			КОГДА ОтчетыПоНалогамЗП.НеЗаполнятьВыплатыПоЗП
	|				ТОГДА 0
	|			ИНАЧЕ СуммаВыплачен
	|		КОНЕЦ КАК Выплачено,
	|		СальдоК КАК СальдоК,
	|		НомерСтрокиОтчета КАК НомерСтрокиОтчета
	|	)
	|ИЗ
	|	Документ.ОтчетыПоНалогамЗП КАК ОтчетыПоНалогамЗП
	|ГДЕ
	|	ОтчетыПоНалогамЗП.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);		
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Пока Шапка.Следующий() Цикл             	
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Дата = Шапка.Дата;
		ВидСубъекта = Шапка.ВидСубъекта;
		Организация = Шапка.Организация;
		
		НачалоПериода = НачалоКвартала(Дата);
		КонецПериода  = КонецКвартала(Дата);

		Если ВидСубъекта = 0 Тогда 
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетыПоНалогамЗП.ПФ_MXL_ПодоходныйНалогМалогоПредпринимательства");
			ТабличныйДокумент.КлючПараметровПечати = "ОтчетыПоНалогамЗП_ПодоходныйНалогМалогоПредпринимательства";
		ИначеЕсли ВидСубъекта = 1 Тогда	
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетыПоНалогамЗП.ПФ_MXL_ПодоходныйНалогСреднегоПредпринимательства");
			ТабличныйДокумент.КлючПараметровПечати = "ОтчетыПоНалогамЗП_ПодоходныйНалогСреднегоПредпринимательства";	
		ИначеЕсли ВидСубъекта = 2 Тогда
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетыПоНалогамЗП.ПФ_MXL_ПодоходныйНалогКрупногоПредпринимательства");
			НачалоПериода = НачалоМесяца(Дата);
			КонецПериода  = КонецМесяца(Дата);
			ТабличныйДокумент.КлючПараметровПечати = "ОтчетыПоНалогамЗП_ПодоходныйНалогКрупногоПредпринимательства";
		КонецЕсли;	 
		
		ОбластьМакета 			   = Макет.ПолучитьОбласть("Заголовок");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ДанныеНалогоплательщика");
		
		ИНН = Организация.ИНН;
		ОбластьМакета.Параметры.ИНН1 	= Сред(ИНН,1,1);
		ОбластьМакета.Параметры.ИНН2 	= Сред(ИНН,2,1);
		ОбластьМакета.Параметры.ИНН3 	= Сред(ИНН,3,1);
		ОбластьМакета.Параметры.ИНН4 	= Сред(ИНН,4,1);
		ОбластьМакета.Параметры.ИНН5 	= Сред(ИНН,5,1);
		ОбластьМакета.Параметры.ИНН6 	= Сред(ИНН,6,1);
		ОбластьМакета.Параметры.ИНН7 	= Сред(ИНН,7,1);
		ОбластьМакета.Параметры.ИНН8 	= Сред(ИНН,8,1);
		ОбластьМакета.Параметры.ИНН9 	= Сред(ИНН,9,1);
		ОбластьМакета.Параметры.ИНН10	= Сред(ИНН,10,1);
		ОбластьМакета.Параметры.ИНН11 	= Сред(ИНН,11,1);
		ОбластьМакета.Параметры.ИНН12 	= Сред(ИНН,12,1);
		ОбластьМакета.Параметры.ИНН13 	= Сред(ИНН,13,1);
		ОбластьМакета.Параметры.ИНН14 	= Сред(ИНН,14,1);
		
		ОКПО = Организация.КодПоОКПО;
		ОбластьМакета.Параметры.ОКПО1 = Сред(ОКПО,1,1);
		ОбластьМакета.Параметры.ОКПО2 = Сред(ОКПО,2,1);
		ОбластьМакета.Параметры.ОКПО3 = Сред(ОКПО,3,1);
		ОбластьМакета.Параметры.ОКПО4 = Сред(ОКПО,4,1);
		ОбластьМакета.Параметры.ОКПО5 = Сред(ОКПО,5,1);
		ОбластьМакета.Параметры.ОКПО6 = Сред(ОКПО,6,1);
		ОбластьМакета.Параметры.ОКПО7 = Сред(ОКПО,7,1);
		ОбластьМакета.Параметры.ОКПО8 = Сред(ОКПО,8,1);

		ГНС = Организация.ГНС.Код;
		ОбластьМакета.Параметры.ГНИ1 = Сред(ГНС,1,1);
		ОбластьМакета.Параметры.ГНИ2 = Сред(ГНС,2,1);
		ОбластьМакета.Параметры.ГНИ3 = Сред(ГНС,3,1);
		ОбластьМакета.Параметры.Налоговая = Организация.ГНС;

		СтрокаДатаН = Формат(НачалоПериода,"ДЛФ=D");
		СтрокаДатаК = Формат(КонецПериода,"ДЛФ=D");
		
		ОбластьМакета.Параметры.ДатаН1 = Сред(СтрокаДатаН,1,1);
		ОбластьМакета.Параметры.ДатаН2 = Сред(СтрокаДатаН,2,1);
		ОбластьМакета.Параметры.ДатаН3 = Сред(СтрокаДатаН,4,1);
		ОбластьМакета.Параметры.ДатаН4 = Сред(СтрокаДатаН,5,1);
		ОбластьМакета.Параметры.ДатаН5 = Сред(СтрокаДатаН,7,1);
		ОбластьМакета.Параметры.ДатаН6 = Сред(СтрокаДатаН,8,1);
		ОбластьМакета.Параметры.ДатаН7 = Сред(СтрокаДатаН,9,1);
		ОбластьМакета.Параметры.ДатаН8 = Сред(СтрокаДатаН,10,1);
		
		ОбластьМакета.Параметры.ДатаК1 = Сред(СтрокаДатаК,1,1);
		ОбластьМакета.Параметры.ДатаК2 = Сред(СтрокаДатаК,2,1);
		ОбластьМакета.Параметры.ДатаК3 = Сред(СтрокаДатаК,4,1);
		ОбластьМакета.Параметры.ДатаК4 = Сред(СтрокаДатаК,5,1);
		ОбластьМакета.Параметры.ДатаК5 = Сред(СтрокаДатаК,7,1);
		ОбластьМакета.Параметры.ДатаК6 = Сред(СтрокаДатаК,8,1);
		ОбластьМакета.Параметры.ДатаК7 = Сред(СтрокаДатаК,9,1);
		ОбластьМакета.Параметры.ДатаК8 = Сред(СтрокаДатаК,10,1);

		КонтактныеДанные = ПолучитьКонтактнуюИнформацию(Организация);
		
		Индекс          	 = КонтактныеДанные.Индекс;
		АдрОбластьГород 	 = КонтактныеДанные.АдрОбластьГород;
		ЮрАдрес	        	 = КонтактныеДанные.АдресОрганизации; 
		Телефон		     	 = КонтактныеДанные.Телефон;
		
		НаименованиеПолное	 = Организация.НаименованиеПолное;
		
		ДанныеПечати = Новый Структура; 
		ДанныеПечати.Вставить("Организация", НаименованиеПолное);
		ДанныеПечати.Вставить("Тел", Телефон);
		
		Если ЗначениеЗаполнено(АдрОбластьГород) Тогда 
			ДанныеПечати.Вставить("Область", АдрОбластьГород);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЮрАдрес) Тогда 
			ДанныеПечати.Вставить("Адрес", ЮрАдрес);
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		Если ЗначениеЗаполнено(Индекс) Тогда
			ОбластьМакета.Параметры.Индекс1 = Сред(Индекс,1,1);
			ОбластьМакета.Параметры.Индекс2 = Сред(Индекс,2,1);
			ОбластьМакета.Параметры.Индекс3 = Сред(Индекс,3,1);
			ОбластьМакета.Параметры.Индекс4 = Сред(Индекс,4,1);
			ОбластьМакета.Параметры.Индекс5 = Сред(Индекс,5,1);
			ОбластьМакета.Параметры.Индекс6 = Сред(Индекс,6,1);
		КонецЕсли;

		ТабличныйДокумент.Вывести(ОбластьМакета);	
		
		ОбластьМакета	= Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ВыборкаПодоходныйНалог = Шапка.ПодоходныйНалог.Выбрать();
			
		ДанныеПечатиИтоги = Новый Структура; 
		ДанныеПечатиИтоги.Вставить("Количество",0);
		ДанныеПечатиИтоги.Вставить("Начислено",0);
		ДанныеПечатиИтоги.Вставить("Необлагаемая",0);
		ДанныеПечатиИтоги.Вставить("Вычеты",0);
		ДанныеПечатиИтоги.Вставить("Облагаемая",0);
		ДанныеПечатиИтоги.Вставить("ПодоходныйСотрудника",0);
		ДанныеПечатиИтоги.Вставить("СМРД",0);
		ДанныеПечатиИтоги.Вставить("ВсегоПодоходный",0);
		ДанныеПечатиИтоги.Вставить("Выплачено",0);
		ДанныеПечатиИтоги.Вставить("ПодоходныйКОплате",0);
		
		Для СтрокаМакета = 1 По 4 Цикл
			
			ЗаполнитьСтроку = Ложь;
			ВыборкаПодоходныйНалог.Сбросить();
			Пока ВыборкаПодоходныйНалог.НайтиСледующий(Новый Структура("НомерСтрокиОтчета", СтрокаМакета)) Цикл
				ЗаполнитьСтроку = Истина;	
			КонецЦикла;
				
			// заполняем строки отчета
			Если СтрокаМакета = 1  Тогда 
				ОбластьМакета = Макет.ПолучитьОбласть("Строка1");
			ИначеЕсли СтрокаМакета = 2 Тогда 
				ОбластьМакета = Макет.ПолучитьОбласть("Строка2");			
			ИначеЕсли СтрокаМакета = 3 Тогда 
				ОбластьМакета = Макет.ПолучитьОбласть("Строка3");
			ИначеЕсли СтрокаМакета = 4 Тогда 
				ОбластьМакета = Макет.ПолучитьОбласть("Строка4");
			КонецЕсли;
			
			Если ЗаполнитьСтроку Тогда
				ОбластьМакета.Параметры.Заполнить(ВыборкаПодоходныйНалог);
				
				//собираем итоговые суммы
				ДанныеПечатиИтоги.Количество 	 	 	= ДанныеПечатиИтоги.Количество   		 + ВыборкаПодоходныйНалог.Количество;
				ДанныеПечатиИтоги.Начислено 		 	= ДанныеПечатиИтоги.Начислено 	 	     + ВыборкаПодоходныйНалог.Начислено;
				ДанныеПечатиИтоги.Необлагаемая 	 	 	= ДанныеПечатиИтоги.Необлагаемая 		 + ВыборкаПодоходныйНалог.Необлагаемая;
				ДанныеПечатиИтоги.Вычеты			 	= ДанныеПечатиИтоги.Вычеты 		 	     + ВыборкаПодоходныйНалог.Вычеты;
				ДанныеПечатиИтоги.Облагаемая      		= ДанныеПечатиИтоги.Облагаемая   		 + ВыборкаПодоходныйНалог.Облагаемая;
				ДанныеПечатиИтоги.ПодоходныйСотрудника 	= ДанныеПечатиИтоги.ПодоходныйСотрудника + ВыборкаПодоходныйНалог.ПодоходныйСотрудника;
				ДанныеПечатиИтоги.СМРД				 	= ДанныеПечатиИтоги.СМРД  			     + ВыборкаПодоходныйНалог.СМРД;
				ДанныеПечатиИтоги.ВсегоПодоходный      	= ДанныеПечатиИтоги.ВсегоПодоходный 	 + ВыборкаПодоходныйНалог.ПодоходныйКОплате;
				ДанныеПечатиИтоги.Выплачено            	= ДанныеПечатиИтоги.Выплачено            + ВыборкаПодоходныйНалог.Выплачено;
				ДанныеПечатиИтоги.ПодоходныйКОплате    	= ДанныеПечатиИтоги.ПодоходныйКОплате	 + ВыборкаПодоходныйНалог.ПодоходныйКОплате;
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
		
		// итоги подвал	
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиИтоги);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалОтчета");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;	
		
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой ПриложениеКОтчетуПН
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриложенияКОтчетуПН(МассивОбъектов, ОбъектыПечати)	
	
	Запрос = Новый Запрос;
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	ОтчетыПоНалогамЗП.Ссылка,
	|	ОтчетыПоНалогамЗП.Дата,
	|	ОтчетыПоНалогамЗП.Организация,
	|	ОтчетыПоНалогамЗП.ПодоходныйНалогПервыйМесяцКвартала.(
	|		ЕСТЬNULL(Количество, 0) КАК Количество,
	|		ЕСТЬNULL(СуммаНачислено, 0) КАК Начислено,
	|		ЕСТЬNULL(СуммаНеоблагаемая, 0) КАК Необлагаемая,
	|		ЕСТЬNULL(Вычеты, 0) КАК Вычеты,
	|		ЕСТЬNULL(СуммаНачислено, 0) - ЕСТЬNULL(СуммаНеоблагаемая, 0) - ЕСТЬNULL(Вычеты, 0) КАК Облагаемая,
	|		ЕСТЬNULL(СуммаПНсСотрудника, 0) КАК ПодоходныйСотрудника,
	|		ЕСТЬNULL(СуммаПНсМРД, 0) КАК СМРД,
	|		ЕСТЬNULL(СуммаПН, 0) КАК ПодоходныйКОплате,
	|		ЕСТЬNULL(СуммаПН, 0) КАК ВсегоПодоходный,
	|		ЕСТЬNULL(СуммаВыплачен, 0) КАК Выплачено,
	|		ЕСТЬNULL(СальдоК, 0) КАК СальдоК,
	|		ЕСТЬNULL(НомерСтрокиОтчета, 0) КАК НомерСтрокиОтчета
	|	),
	|	ОтчетыПоНалогамЗП.ПодоходныйНалогВторойМесяцКвартала.(
	|		ЕСТЬNULL(Количество, 0) КАК Количество,
	|		ЕСТЬNULL(СуммаНачислено, 0) КАК Начислено,
	|		ЕСТЬNULL(СуммаНеоблагаемая, 0) КАК Необлагаемая,
	|		ЕСТЬNULL(Вычеты, 0) КАК Вычеты,
	|		ЕСТЬNULL(СуммаНачислено, 0) - ЕСТЬNULL(СуммаНеоблагаемая, 0) - ЕСТЬNULL(Вычеты, 0) КАК Облагаемая,
	|		ЕСТЬNULL(СуммаПНсСотрудника, 0) КАК ПодоходныйСотрудника,
	|		ЕСТЬNULL(СуммаПНсМРД, 0) КАК СМРД,
	|		ЕСТЬNULL(СуммаПН, 0) КАК ПодоходныйКОплате,
	|		ЕСТЬNULL(СуммаПН, 0) КАК ВсегоПодоходный,
	|		ЕСТЬNULL(СуммаВыплачен, 0) КАК Выплачено,
	|		ЕСТЬNULL(СальдоК, 0) КАК СальдоК,
	|		ЕСТЬNULL(НомерСтрокиОтчета, 0) КАК НомерСтрокиОтчета
	|	),
	|	ОтчетыПоНалогамЗП.ПодоходныйНалогТретийМесяцКвартала.(
	|		ЕСТЬNULL(Количество, 0) КАК Количество,
	|		ЕСТЬNULL(СуммаНачислено, 0) КАК Начислено,
	|		ЕСТЬNULL(СуммаНеоблагаемая, 0) КАК Необлагаемая,
	|		ЕСТЬNULL(Вычеты, 0) КАК Вычеты,
	|		ЕСТЬNULL(СуммаНачислено, 0) - ЕСТЬNULL(СуммаНеоблагаемая, 0) - ЕСТЬNULL(Вычеты, 0) КАК Облагаемая,
	|		ЕСТЬNULL(СуммаПНсСотрудника, 0) КАК ПодоходныйСотрудника,
	|		ЕСТЬNULL(СуммаПНсМРД, 0) КАК СМРД,
	|		ЕСТЬNULL(СуммаПН, 0) КАК ПодоходныйКОплате,
	|		ЕСТЬNULL(СуммаПН, 0) КАК ВсегоПодоходный,
	|		ЕСТЬNULL(СуммаВыплачен, 0) КАК Выплачено,
	|		ЕСТЬNULL(СальдоК, 0) КАК СальдоК,
	|		ЕСТЬNULL(НомерСтрокиОтчета, 0) КАК НомерСтрокиОтчета
	|	)
	|ИЗ
	|	Документ.ОтчетыПоНалогамЗП КАК ОтчетыПоНалогамЗП
	|ГДЕ
	|	ОтчетыПоНалогамЗП.Ссылка В (&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетыПоНалогамЗП_ПриложениеКОтчетуПН";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетыПоНалогамЗП.ПФ_MXL_ПриложениеКОтчетуПН");
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Организация = Шапка.Организация;
		Дата = Шапка.Дата;
				
		ОбластьМакета 			  	   = Макет.ПолучитьОбласть("Заголовок");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ДанныеНалогоплательщика");
		
		ИНН = Организация.ИНН;
		ОбластьМакета.Параметры.ИНН1 	= Сред(ИНН,1,1);
		ОбластьМакета.Параметры.ИНН2 	= Сред(ИНН,2,1);
		ОбластьМакета.Параметры.ИНН3 	= Сред(ИНН,3,1);
		ОбластьМакета.Параметры.ИНН4 	= Сред(ИНН,4,1);
		ОбластьМакета.Параметры.ИНН5 	= Сред(ИНН,5,1);
		ОбластьМакета.Параметры.ИНН6 	= Сред(ИНН,6,1);
		ОбластьМакета.Параметры.ИНН7 	= Сред(ИНН,7,1);
		ОбластьМакета.Параметры.ИНН8 	= Сред(ИНН,8,1);
		ОбластьМакета.Параметры.ИНН9 	= Сред(ИНН,9,1);
		ОбластьМакета.Параметры.ИНН10	= Сред(ИНН,10,1);
		ОбластьМакета.Параметры.ИНН11 	= Сред(ИНН,11,1);
		ОбластьМакета.Параметры.ИНН12 	= Сред(ИНН,12,1);
		ОбластьМакета.Параметры.ИНН13 	= Сред(ИНН,13,1);
		ОбластьМакета.Параметры.ИНН14 	= Сред(ИНН,14,1);
		
		ОбластьМакета.Параметры.Организация = Организация.НаименованиеПолное;
		
		ОКПО = Организация.КодПоОКПО;
		ОбластьМакета.Параметры.ОКПО1 = Сред(ОКПО,1,1);
		ОбластьМакета.Параметры.ОКПО2 = Сред(ОКПО,2,1);
		ОбластьМакета.Параметры.ОКПО3 = Сред(ОКПО,3,1);
		ОбластьМакета.Параметры.ОКПО4 = Сред(ОКПО,4,1);
		ОбластьМакета.Параметры.ОКПО5 = Сред(ОКПО,5,1);
		ОбластьМакета.Параметры.ОКПО6 = Сред(ОКПО,6,1);
		ОбластьМакета.Параметры.ОКПО7 = Сред(ОКПО,7,1);
		ОбластьМакета.Параметры.ОКПО8 = Сред(ОКПО,8,1);

		ГНС = Организация.ГНС.Код;
		ОбластьМакета.Параметры.ГНИ1 = Сред(ГНС,1,1);
		ОбластьМакета.Параметры.ГНИ2 = Сред(ГНС,2,1);
		ОбластьМакета.Параметры.ГНИ3 = Сред(ГНС,3,1);
		ОбластьМакета.Параметры.Налоговая = Организация.ГНС;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьТаблицаПН = Макет.ПолучитьОбласть("ТаблицаПН");			
		
		//Вывод по месяцам квартала
		Для Сч = 1 По 3 Цикл   
			
			ДанныеПечатиИтоги = Новый Структура; 
			ДанныеПечатиИтоги.Вставить("Количество",0);
			ДанныеПечатиИтоги.Вставить("Начислено",0);
			ДанныеПечатиИтоги.Вставить("Необлагаемая",0);
			ДанныеПечатиИтоги.Вставить("Вычеты",0);
			ДанныеПечатиИтоги.Вставить("Облагаемая",0);
			ДанныеПечатиИтоги.Вставить("ПодоходныйСотрудника",0);
			ДанныеПечатиИтоги.Вставить("СМРД",0);
			ДанныеПечатиИтоги.Вставить("ВсегоПодоходный",0);
			ДанныеПечатиИтоги.Вставить("Выплачено",0);
			ДанныеПечатиИтоги.Вставить("ПодоходныйКОплате",0);
			
			//Определим даты с 1го месяца квартала
			Если  Сч = 1 Тогда 
				НачалоПериода = НачалоКвартала(Дата);
				ВыборкаТабличнойЧасти = Шапка.ПодоходныйНалогПервыйМесяцКвартала.Выбрать();
			ИначеЕсли Сч = 2 Тогда 
				НачалоПериода = ДобавитьМесяц(НачалоКвартала(Дата),1);
				ВыборкаТабличнойЧасти = Шапка.ПодоходныйНалогВторойМесяцКвартала.Выбрать();
			ИначеЕсли Сч = 3 Тогда  
				НачалоПериода = ДобавитьМесяц(НачалоКвартала(Дата),2);
				ВыборкаТабличнойЧасти = Шапка.ПодоходныйНалогТретийМесяцКвартала.Выбрать();
			КонецЕсли;
			
			ОбластьТаблицаПН.Параметры.Месяц = "" + Формат(НачалоПериода,"ДФ=MMMM") +" "+ Год(НачалоПериода);
			ТабличныйДокумент.Вывести(ОбластьТаблицаПН);		
									
			Для СтрокаМакета = 1 По 4 Цикл
				
				ЗаполнитьСтроку = Ложь;
				ВыборкаТабличнойЧасти.Сбросить();
				Пока ВыборкаТабличнойЧасти.НайтиСледующий(Новый Структура("НомерСтрокиОтчета", СтрокаМакета)) Цикл
					ЗаполнитьСтроку = Истина;	
				КонецЦикла;
					
				// заполняем строки отчета
				Если СтрокаМакета = 1  Тогда 
					ОбластьМакета = Макет.ПолучитьОбласть("Строка1");
				ИначеЕсли СтрокаМакета = 2 Тогда 
					ОбластьМакета = Макет.ПолучитьОбласть("Строка2");
				ИначеЕсли СтрокаМакета = 3 Тогда 
					ОбластьМакета = Макет.ПолучитьОбласть("Строка3");
				ИначеЕсли СтрокаМакета = 4 Тогда 
					ОбластьМакета = Макет.ПолучитьОбласть("Строка4");
				КонецЕсли;
				
				Если ЗаполнитьСтроку Тогда
					ОбластьМакета.Параметры.Заполнить(ВыборкаТабличнойЧасти);
					
					//собираем итоговые суммы
					ДанныеПечатиИтоги.Количество 	 	 	 = ДанныеПечатиИтоги.Количество   			+ ВыборкаТабличнойЧасти.Количество;
					ДанныеПечатиИтоги.Начислено 		 	 = ДанныеПечатиИтоги.Начислено 	 	   	 	+ ВыборкаТабличнойЧасти.Начислено;
					ДанныеПечатиИтоги.Необлагаемая 	 		 = ДанныеПечатиИтоги.Необлагаемая 			+ ВыборкаТабличнойЧасти.Необлагаемая;
					ДанныеПечатиИтоги.Вычеты			 	 = ДанныеПечатиИтоги.Вычеты 		 	    + ВыборкаТабличнойЧасти.Вычеты;
					ДанныеПечатиИтоги.Облагаемая      		 = ДанныеПечатиИтоги.Облагаемая   			+ ВыборкаТабличнойЧасти.Облагаемая;
					ДанныеПечатиИтоги.ПодоходныйСотрудника	 = ДанныеПечатиИтоги.ПодоходныйСотрудника 	+ ВыборкаТабличнойЧасти.ПодоходныйСотрудника;
					ДанныеПечатиИтоги.СМРД					 = ДанныеПечатиИтоги.СМРД  			    	+ ВыборкаТабличнойЧасти.СМРД;
					ДанныеПечатиИтоги.ВсегоПодоходный     	 = ДанныеПечатиИтоги.ВсегоПодоходный 	    + ВыборкаТабличнойЧасти.ПодоходныйКОплате;
					ДанныеПечатиИтоги.Выплачено           	 = ДанныеПечатиИтоги.Выплачено           	+ ВыборкаТабличнойЧасти.Выплачено;
					ДанныеПечатиИтоги.ПодоходныйКОплате   	 = ДанныеПечатиИтоги.ПодоходныйКОплате		+ ВыборкаТабличнойЧасти.ПодоходныйКОплате;
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЦикла;

			// итоги подвал	
			ОбластьМакета = Макет.ПолучитьОбласть("Итого");
			ОбластьМакета.Параметры.Заполнить(ДанныеПечатиИтоги);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;

		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалОтчета");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой ЕжемесячныйПоСФ
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьЕжемесячногоПоСФ(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.Текст =	
		"ВЫБРАТЬ
		|	ОтчетыПоНалогамЗП.Ссылка КАК Ссылка,
		|	ОтчетыПоНалогамЗП.Дата КАК Дата,
		|	ОтчетыПоНалогамЗП.Организация КАК Организация,
		|	ОтчетыПоНалогамЗП.Организация.ОсновнойБанковскийСчет.НомерСчета КАК ОрганизацияОсновнойБанковскийСчетНомерСчета,
		|	ОтчетыПоНалогамЗП.Организация.ОсновнойБанковскийСчет.Банк.Наименование КАК ОрганизацияОсновнойБанковскийСчетБанк,
		|	ОтчетыПоНалогамЗП.Контрагент КАК Контрагент,
		|	ОтчетыПоНалогамЗП.ОбязательстваПоСтраховымВзносам КАК СуммаКтПФ_МС_ФОТФ,
		|	ОтчетыПоНалогамЗП.ОбязательстваПоПенсионномуФонду КАК СуммаКтГНПФ,
		|	ОтчетыПоНалогамЗП.ПереплатаПоСтраховымВзносам КАК СуммаДтПФ_МС_ФОТФ,
		|	ОтчетыПоНалогамЗП.ПереплатаПоПенсионномуФонду КАК СуммаДтГНПФ,
		|	ОтчетыПоНалогамЗП.ОбязательстваПоСтраховымВзносам + ОтчетыПоНалогамЗП.ОбязательстваПоПенсионномуФонду КАК ИтогоОбязательства,
		|	ОтчетыПоНалогамЗП.ПереплатаПоСтраховымВзносам + ОтчетыПоНалогамЗП.ПереплатаПоПенсионномуФонду КАК ИтогоПереплата,
		|	ОтчетыПоНалогамЗП.СведенияОЗанятостиИЗаработнойПлате.(
		|		НомерСтроки КАК НомерСтроки,
		|		Физлицо КАК Физлицо,
		|		Физлицо.ИНН КАК ИНН,
		|		ДатаНачалаРаботы КАК ДатаНачала,
		|		ДатаОкончанияРаботы КАК ДатаОкончания,
		|		Дней КАК ДнейНорма,
		|		ФактическиДней КАК ДнейФакт,
		|		ФондОплатыТруда КАК ФОТ,
		|		ДополнительныйФондОплатыТруда КАК ДопФОТ,
		|		НачисленыеСтраховыеВзносы КАК СтраховыеВзносы,
		|		НачсиленыеВзносыПоНПФ КАК ГНПФР,
		|		Категория КАК Категория
		|	) КАК СведенияОЗанятостиИЗаработнойПлате,
		|	ОтчетыПоНалогамЗП.ФондОплатыТрудаПоКатегориям.(
		|		Категория КАК Категория,
		|		Численость КАК Численность,
		|		ФОТБолее КАК ФОТБольше40Процентов,
		|		ФОТМенее КАК ФОТМеньше40Процентов,
		|		ДопФОТ КАК ДопФОТ,
		|		Итого КАК Всего
		|	) КАК ФондОплатыТрудаПоКатегориям
		|ИЗ
		|	Документ.ОтчетыПоНалогамЗП КАК ОтчетыПоНалогамЗП
		|ГДЕ
		|	ОтчетыПоНалогамЗП.Ссылка В(&МассивОбъектов)";
		
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Шапка = Запрос.Выполнить().Выбрать();
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетыПоНалогамЗП_ЕжемесячныйОтчетПоСФ";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетыПоНалогамЗП.ПФ_MXL_ЕжемесячныйОтчетПоСФ");
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Дата = Шапка.Дата;
		Организация = Шапка.Организация;
		
		КонтактныеДанные = ПолучитьКонтактнуюИнформацию(Организация);
		ДанныеПечати = Новый Структура; 
		ДанныеПечати.Вставить("Плательщик",  Организация.НаименованиеПолное);
		ДанныеПечати.Вставить("ИНН", 		 Организация.ИНН);
		ДанныеПечати.Вставить("РегНомер", 	 Организация.РегНомерСоцФонда);
		ДанныеПечати.Вставить("ОКПО", 		 Организация.КодПоОКПО);
		ДанныеПечати.Вставить("ОтделениеСФ", Шапка.Контрагент);
		ДанныеПечати.Вставить("Дата", 		 Формат(Дата,"ДФ='ММММ гггг'"));
		ДанныеПечати.Вставить("ДатаДок", 	 Формат(ДобавитьМесяц(Дата, 1),"ДФ='ММММ гггг'"));
		ДанныеПечати.Вставить("Адрес", 		 КонтактныеДанные.АдресОрганизации);
		ДанныеПечати.Вставить("Телефон", 	 КонтактныеДанные.Телефон);
		
		ДанныеПечати.Вставить("НаименованиеБанка", Шапка.ОрганизацияОсновнойБанковскийСчетБанк);
		ДанныеПечати.Вставить("БанковскийСчет", Шапка.ОрганизацияОсновнойБанковскийСчетНомерСчета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);	
		ТабличныйДокумент.Вывести(ОбластьМакета);	
		
		ВыборкаСведенийОЗанятостиИЗП = Шапка.СведенияОЗанятостиИЗаработнойПлате.Выбрать();
		
		ДанныеПечатиИтоги = Новый Структура; 
		ДанныеПечатиИтоги.Вставить("ФОТ",0);
		ДанныеПечатиИтоги.Вставить("ДопФОТ",0);
		ДанныеПечатиИтоги.Вставить("СтраховыеВзносы",0);
		ДанныеПечатиИтоги.Вставить("ГНПФР",0);
		ДанныеПечатиИтоги.Вставить("Численность",0);
		ДанныеПечатиИтоги.Вставить("ФОТБольше40Процентов",0);
		ДанныеПечатиИтоги.Вставить("ФОТМеньше40Процентов",0);
		ДанныеПечатиИтоги.Вставить("Всего",0);

		Пока ВыборкаСведенийОЗанятостиИЗП.Следующий() Цикл
			ОбластьМакета = Макет.ПолучитьОбласть("ДеталиСведенияОЗП");
			ОбластьМакета.Параметры.Заполнить(ВыборкаСведенийОЗанятостиИЗП);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ДанныеПечатиИтоги.ФОТ 				= ДанныеПечатиИтоги.ФОТ 			+ ВыборкаСведенийОЗанятостиИЗП.ФОТ;
			ДанныеПечатиИтоги.ДопФОТ 			= ДанныеПечатиИтоги.ДопФОТ 			+ ВыборкаСведенийОЗанятостиИЗП.ДопФОТ;
			ДанныеПечатиИтоги.СтраховыеВзносы 	= ДанныеПечатиИтоги.СтраховыеВзносы + ВыборкаСведенийОЗанятостиИЗП.СтраховыеВзносы;
			ДанныеПечатиИтоги.ГНПФР 			= ДанныеПечатиИтоги.ГНПФР 			+ ВыборкаСведенийОЗанятостиИЗП.ГНПФР;
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоСведенияОЗП");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиИтоги);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаФОТПоКатегориям");
		ТабличныйДокумент.Вывести(ОбластьМакета);
						
		ВыборкаФондОплатыТруда = Шапка.ФондОплатыТрудаПоКатегориям.Выбрать();
		
		// Обнуляется значение "ДопФОТ" для нового заполнения.
		ДанныеПечатиИтоги.ДопФОТ = 0;
		
		Пока ВыборкаФондОплатыТруда.Следующий() Цикл
			ОбластьМакета = Макет.ПолучитьОбласть("ДеталиФОТПоКатегориям");
			ОбластьМакета.Параметры.Заполнить(ВыборкаФондОплатыТруда);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ДанныеПечатиИтоги.Численность 		 	= ДанныеПечатиИтоги.Численность 		 + ВыборкаФондОплатыТруда.Численность;
			ДанныеПечатиИтоги.ФОТБольше40Процентов 	= ДанныеПечатиИтоги.ФОТБольше40Процентов + ВыборкаФондОплатыТруда.ФОТБольше40Процентов;
			ДанныеПечатиИтоги.ФОТМеньше40Процентов	= ДанныеПечатиИтоги.ФОТМеньше40Процентов + ВыборкаФондОплатыТруда.ФОТМеньше40Процентов;
			ДанныеПечатиИтоги.ДопФОТ 				= ДанныеПечатиИтоги.ДопФОТ 				 + ВыборкаФондОплатыТруда.ДопФОТ;
			ДанныеПечатиИтоги.Всего 				= ДанныеПечатиИтоги.Всего 				 + ВыборкаФондОплатыТруда.Всего;
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоФОТПоКатегориям");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиИтоги);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ОбязательстваПодвал");	
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
		
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьЕжемесячногоПоСФ()

// Функция формирует табличный документ с печатной формой ЕжеквартальныйПоСФ
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьЕжеквартальногоОтчетСФ(МассивОбъектов, ОбъектыПечати)
	
	ЗапросИзДокумента = Новый Запрос;
	ЗапросИзДокумента.Текст =
		"ВЫБРАТЬ
		|	ОтчетыПоНалогамЗП.Ссылка,
		|	ОтчетыПоНалогамЗП.Дата,
		|	ОтчетыПоНалогамЗП.Организация,
		|	ОтчетыПоНалогамЗП.Организация.ОсновнойБанковскийСчет.НомерСчета КАК ОрганизацияОсновнойБанковскийСчетНомерСчета,
		|	ОтчетыПоНалогамЗП.Организация.ОсновнойБанковскийСчет.Банк.Наименование КАК ОрганизацияОсновнойБанковскийСчетБанк,
		|	ОтчетыПоНалогамЗП.Контрагент,
		|	ОтчетыПоНалогамЗП.СоцфондПоказателиЕжеквартальные.(
		|		Показатель,
		|		ЗначениеМеньшеСЗПНГ,
		|		ЗначениеБольшеСЗПНГ,
		|		ВсегоСНГ,
		|		ЗначениеМеньшеСЗПКВ,
		|		ЗначениеБольшеСЗПКВ,
		|		ВсегоКварт
		|	),
		|	ОтчетыПоНалогамЗП.СоцфондОбязательстваИВыполненияЕжеквартальный.(
		|		НомерОбязательства,
		|		Обязательства,
		|		СуммаОбязательств,
		|		НомерВыполнения,
		|		Выполнение,
		|		СуммаВыполненных
		|	),
		|	ОтчетыПоНалогамЗП.ПоступлениеСредствЕжеквартальное.(
		|		НомерСтроки,
		|		Наименование,
		|		СуммаСНачалаГода,
		|		СуммаТекущая
		|	)
		|ИЗ
		|	Документ.ОтчетыПоНалогамЗП КАК ОтчетыПоНалогамЗП
		|ГДЕ
		|	ОтчетыПоНалогамЗП.Ссылка В (&Ссылка)";
		
	ЗапросИзДокумента.УстановитьПараметр("Ссылка", МассивОбъектов);
	ВыборкаПоДокументу = ЗапросИзДокумента.Выполнить().Выбрать();	
		
	ЗапросИзСправочника = Новый Запрос;
	ЗапросИзСправочника.Текст =	
		"ВЫБРАТЬ
		|	СтрокиОтчетаПоСФКвартальному.НомерСтроки КАК НомерСтроки,
		|	СтрокиОтчетаПоСФКвартальному.Ссылка КАК Показатель
		|ИЗ
		|	Справочник.СтрокиОтчетаПоСФКвартальному КАК СтрокиОтчетаПоСФКвартальному
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
	ВыборкаПоСправочнику = ЗапросИзСправочника.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетыПоНалогамЗП_ЕжеквартальныйОтчетСФ";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетыПоНалогамЗП.ПФ_MXL_ЕжеквартальныйОтчетСФ");
	
	Пока ВыборкаПоДокументу.Следующий() Цикл
	    Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Дата = ВыборкаПоДокументу.Дата;
		Организация = ВыборкаПоДокументу.Организация;
				
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		КонтактныеДанные = ПолучитьКонтактнуюИнформацию(Организация);
		
		ДанныеПечати = Новый Структура;
		ДанныеПечати.Вставить("Организация", 		Организация.НаименованиеПолное);
		ДанныеПечати.Вставить("ИНН", 				Организация.ИНН);
		ДанныеПечати.Вставить("РегНомерСоцФонда", 	Организация.РегНомерСоцФонда);
		ДанныеПечати.Вставить("ОКПО", 				Организация.КодПоОКПО);
		ДанныеПечати.Вставить("ОтделениеСФ",		ВыборкаПоДокументу.Контрагент);
		ДанныеПечати.Вставить("Период", 			Формат(Дата,"ДФ='ММММ гггг'"));
		ДанныеПечати.Вставить("Адрес", 				КонтактныеДанные.АдресОрганизации);
		ДанныеПечати.Вставить("Телефон", 			КонтактныеДанные.Телефон);
		ДанныеПечати.Вставить("Сумма",				0);
		ДанныеПечати.Вставить("СуммаПрописью",		0);
		
		ДанныеПечати.Вставить("НаименованиеБанка", ВыборкаПоДокументу.ОрганизацияОсновнойБанковскийСчетБанк);
		ДанныеПечати.Вставить("БанковскийСчет", ВыборкаПоДокументу.ОрганизацияОсновнойБанковскийСчетНомерСчета);

		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
				
		ТабличныйДокумент.Вывести(ОбластьМакета);                
		
		ВыборкаСФПоказатели = ВыборкаПоДокументу.СоцфондПоказателиЕжеквартальные.Выбрать();
		
		Пока ВыборкаПоСправочнику.Следующий() Цикл			
			ОбластьМакета = Макет.ПолучитьОбласть("ПоказателиДетали");
			
			ЗаполнитьСтроку = Ложь;
			ВыборкаСФПоказатели.Сбросить();
			Пока ВыборкаСФПоказатели.НайтиСледующий(Новый Структура("Показатель", ВыборкаПоСправочнику.Показатель)) Цикл
				ЗаполнитьСтроку = Истина;
			КонецЦикла;
			
			Если ЗаполнитьСтроку Тогда			
				ОбластьМакета.Параметры.Заполнить(ВыборкаСФПоказатели);
			Иначе
				ОбластьМакета.Параметры.Заполнить(ВыборкаПоСправочнику);
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка2");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ОблДетали");
		ВыборкаСФОбязИВыполн = ВыборкаПоДокументу.СоцфондОбязательстваИВыполненияЕжеквартальный.Выбрать();
		Пока ВыборкаСФОбязИВыполн.Следующий() Цикл
			ОбластьМакета.Параметры.Заполнить(ВыборкаСФОбязИВыполн);
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;

		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыБанк");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ДеталиБанк");
		
		ВыборкаПоступлениеСр = ВыборкаПоДокументу.ПоступлениеСредствЕжеквартальное.Выбрать();
				
		СуммаСНачалаГода = 0;
		СуммаТекущая = 0;
		Пока ВыборкаПоступлениеСр.Следующий() Цикл
			ОбластьМакета.Параметры.Заполнить(ВыборкаПоступлениеСр);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			СуммаСНачалаГода = СуммаСНачалаГода + ВыборкаПоступлениеСр.СуммаСНачалаГода;
			СуммаТекущая = СуммаТекущая + ВыборкаПоступлениеСр.СуммаТекущая;
		КонецЦикла;
				
		ОбластьМакета = Макет.ПолучитьОбласть("ПустыеСтроки");
		Для Строка = 1 по 8 Цикл
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		          
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		Если СуммаСНачалаГода > 0 ИЛИ СуммаТекущая > 0 Тогда
			// Необходимо получить сумму остатка задолженности (переплаты) плательщика на конец периода.
			// В модуле объекта, процедура "ЗаполнитьКвартальныйОтчетСФ", при заполнении ТЧ 
			// "СоцфондОбязательстваИВыполненияЕжеквартальный" эта сумма заполняется в строке, где 
			// реквизит "НомерВыполнения" = 14
			ВыборкаСФОбязИВыполн.Сбросить();
			Пока ВыборкаСФОбязИВыполн.НайтиСледующий(Новый Структура("НомерВыполнения", "14")) Цикл
				Сумма = ВыборкаСФОбязИВыполн.СуммаВыполненных;	
			КонецЦикла;		
			ДанныеПечати.Сумма = Сумма;
			СуммаДляПрописи = Макс(Сумма, -Сумма);
			ДанныеПечати.СуммаПрописью = БухгалтерскийУчетСервер.СформироватьСуммуПрописью(СуммаДляПрописи,,Истина);
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументу.Ссылка);
	КонецЦикла;
		
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьЕжеквартальногоОтчетСФ()

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПодоходныйНалог") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПодоходныйНалог", НСтр("ru = 'Печать отчета по подоходному налогу'"), ПечатьПоПН(МассивОбъектов, ОбъектыПечати),,
		"Документ.ОтчетыПоНалогамЗП.ПФ_MXL_ПодоходныйНалог");
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПриложениеКОтчетуПН") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПриложениеКОтчетуПН", НСтр("ru = 'Печать приложения к отчету по подоходному налогу'"), ПечатьПриложенияКОтчетуПН(МассивОбъектов, ОбъектыПечати),,
		"Документ.ОтчетыПоНалогамЗП.ПФ_MXL_ПриложениеКОтчетуПН");

	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЕжемесячныйОтчетСФ") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ЕжемесячныйОтчетСФ", НСтр("ru = 'Печать ежемесячного отчета по СФ'"), ПечатьЕжемесячногоПоСФ(МассивОбъектов, ОбъектыПечати),,
		"Документ.ОтчетыПоНалогамЗП.ПФ_MXL_ЕжемесячныйОтчетПоСФ");
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЕжеквартальныйОтчетСФ") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ЕжеквартальныйОтчетСФ", НСтр("ru = 'Печать ежеквартального отчета по СФ'"), ПечатьЕжеквартальногоОтчетСФ(МассивОбъектов, ОбъектыПечати),,
		"Документ.ОтчетыПоНалогамЗП.ПФ_MXL_ЕжеквартальныйОтчетСФ");		
	КонецЕсли;	
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПодоходныйНалог";
	КомандаПечати.Представление = НСтр("ru = 'Печать отчета по подоходному налогу'");
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПриложениеКОтчетуПН";
	КомандаПечати.Представление = НСтр("ru = 'Печать приложения к отчету по подоходному налогу'");
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 2;

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЕжемесячныйОтчетСФ";
	КомандаПечати.Представление = НСтр("ru = 'Печать ежемесячного отчета по СФ'");
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 3;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЕжеквартальныйОтчетСФ";
	КомандаПечати.Представление = НСтр("ru = 'Печать ежеквартального отчета по СФ'");
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 4;
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли