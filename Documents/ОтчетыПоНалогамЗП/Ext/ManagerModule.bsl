#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ИнтерфейсПечати

// Функция -ПолучитьКонтактнуюИнформацию
//
// Параметры:
//  Организация  - Спр.Ссылка - Спр.Органинизации 
// Возвращаемое значение:
//  Структура   - структура данных контактной информации
//
Функция ПолучитьКонтактнуюИнформацию(Организация)
	
	СтруктураКонтактнойИнформации = УправлениеКонтактнойИнформациейКлиентСервер.СтруктураКонтактнойИнформацииПоТипу(Перечисления.ТипыКонтактнойИнформации.Адрес);
	ТаблицаКонтактнойИнформации = УправлениеКонтактнойИнформацией.ТаблицаКонтактнойИнформацииОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	
	Если ТаблицаКонтактнойИнформации.Количество() > 0 Тогда 		
		СтруктураКонтактнойИнформации = ТаблицаКонтактнойИнформации[0].СтруктураПолей;
	КонецЕсли;
	Если СтруктураКонтактнойИнформации.Количество() > 3 Тогда 
		Индекс		    = СтруктураКонтактнойИнформации.Индекс; 
		ГородНасПункт   = ?(СтруктураКонтактнойИнформации.Город  = "",СтруктураКонтактнойИнформации.НаселенныйПункт,СтруктураКонтактнойИнформации.Город);
		АдрОбластьГород = ?(СтруктураКонтактнойИнформации.Регион = "","",СтруктураКонтактнойИнформации.Регион + ",")
		+ ?(СтруктураКонтактнойИнформации.Район  = "","", " " + СтруктураКонтактнойИнформации.Район + ",") 
		+ ?(ГородНасПункт = "",""," " + ГородНасПункт); 
		АдресОрганизации = ?(СтруктураКонтактнойИнформации.Улица    = "","",СтруктураКонтактнойИнформации.Улица + ",")
		+ ?(СтруктураКонтактнойИнформации.Дом      = "",""," " + СтруктураКонтактнойИнформации.Дом + ",")
		+ ?(СтруктураКонтактнойИнформации.Корпус   = "",""," " + СтруктураКонтактнойИнформации.Корпус + ",")
		+ ?(СтруктураКонтактнойИнформации.Квартира = "",""," " + СтруктураКонтактнойИнформации.Квартира);
		
	Иначе
		Индекс			 = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации); 
		АдрОбластьГород  = ""; 
		АдресОрганизации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);		
	КонецЕсли;	
	
	Телефон		= УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	
	Структура = Новый Структура("Индекс,АдрОбластьГород,АдресОрганизации,Телефон", Индекс,АдрОбластьГород,АдресОрганизации,Телефон);
	
	Возврат Структура;
	
КонецФункции // ПолучитьАдресОрганизации()

Функция ПечатьПоПН(МассивОбъектов)
	
	Если МассивОбъектов.Количество() > 0 Тогда 
		Объект = МассивОбъектов[0];		
	КонецЕсли;
	
	Если Объект.ВидСубъекта = 0 Тогда 
		Макет = ПолучитьМакет("ПодоходныйНалогМалогоПредпринимательства");
	ИначеЕсли Объект.ВидСубъекта = 1 Тогда	
		Макет = ПолучитьМакет("ПодоходныйНалогСреднегоПредпринимательства");
	ИначеЕсли Объект.ВидСубъекта = 2 Тогда
		Макет = ПолучитьМакет("ПодоходныйНалогКрупногоПредпринимательства");
	КонецЕсли;	 
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ОбластьЗаголовок 			   = Макет.ПолучитьОбласть("Заголовок");
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	ОбластьДанныеНалогоплательщика = Макет.ПолучитьОбласть("ДанныеНалогоплательщика");
	
	ИНН = Объект.Организация.ИНН;
	ОбластьДанныеНалогоплательщика.Параметры.ИНН1 	= Сред(ИНН,1,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН2 	= Сред(ИНН,2,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН3 	= Сред(ИНН,3,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН4 	= Сред(ИНН,4,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН5 	= Сред(ИНН,5,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН6 	= Сред(ИНН,6,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН7 	= Сред(ИНН,7,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН8 	= Сред(ИНН,8,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН9 	= Сред(ИНН,9,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН10	= Сред(ИНН,10,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН11 	= Сред(ИНН,11,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН12 	= Сред(ИНН,12,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН13 	= Сред(ИНН,13,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН14 	= Сред(ИНН,14,1);
	
	ОбластьДанныеНалогоплательщика.Параметры.Организация = Объект.Организация.НаименованиеПолное;
	
	ОКПО = Объект.Организация.КодПоОКПО;
	ОбластьДанныеНалогоплательщика.Параметры.ОКПО1 = Сред(ОКПО,1,1);
	ОбластьДанныеНалогоплательщика.Параметры.ОКПО2 = Сред(ОКПО,2,1);
	ОбластьДанныеНалогоплательщика.Параметры.ОКПО3 = Сред(ОКПО,3,1);
	ОбластьДанныеНалогоплательщика.Параметры.ОКПО4 = Сред(ОКПО,4,1);
	ОбластьДанныеНалогоплательщика.Параметры.ОКПО5 = Сред(ОКПО,5,1);
	ОбластьДанныеНалогоплательщика.Параметры.ОКПО6 = Сред(ОКПО,6,1);
	ОбластьДанныеНалогоплательщика.Параметры.ОКПО7 = Сред(ОКПО,7,1);
	ОбластьДанныеНалогоплательщика.Параметры.ОКПО8 = Сред(ОКПО,8,1);

	ГНС = Объект.Организация.ГНС.Код;
	ОбластьДанныеНалогоплательщика.Параметры.ГНИ1 = Сред(ГНС,1,1);
	ОбластьДанныеНалогоплательщика.Параметры.ГНИ2 = Сред(ГНС,2,1);
	ОбластьДанныеНалогоплательщика.Параметры.ГНИ3 = Сред(ГНС,3,1);
	ОбластьДанныеНалогоплательщика.Параметры.Налоговая = Объект.Организация.ГНС;

	СтрокаДатаН = Формат(НачалоМесяца(Объект.Дата),"ДФ=dd.MM.yyyy");
	СтрокаДатаК = Формат(КонецМесяца(Объект.Дата),"ДФ=dd.MM.yyyy");
	
	ОбластьДанныеНалогоплательщика.Параметры.ДатаН1 = Сред(СтрокаДатаН,1,1);
	ОбластьДанныеНалогоплательщика.Параметры.ДатаН2 = Сред(СтрокаДатаН,2,1);
	ОбластьДанныеНалогоплательщика.Параметры.ДатаН3 = Сред(СтрокаДатаН,4,1);
	ОбластьДанныеНалогоплательщика.Параметры.ДатаН4 = Сред(СтрокаДатаН,5,1);
	ОбластьДанныеНалогоплательщика.Параметры.ДатаН5 = Сред(СтрокаДатаН,7,1);
	ОбластьДанныеНалогоплательщика.Параметры.ДатаН6 = Сред(СтрокаДатаН,8,1);
	ОбластьДанныеНалогоплательщика.Параметры.ДатаН7 = Сред(СтрокаДатаН,9,1);
	ОбластьДанныеНалогоплательщика.Параметры.ДатаН8 = Сред(СтрокаДатаН,10,1);
	
	ОбластьДанныеНалогоплательщика.Параметры.ДатаК1 = Сред(СтрокаДатаК,1,1);
	ОбластьДанныеНалогоплательщика.Параметры.ДатаК2 = Сред(СтрокаДатаК,2,1);
	ОбластьДанныеНалогоплательщика.Параметры.ДатаК3 = Сред(СтрокаДатаК,4,1);
	ОбластьДанныеНалогоплательщика.Параметры.ДатаК4 = Сред(СтрокаДатаК,5,1);
	ОбластьДанныеНалогоплательщика.Параметры.ДатаК5 = Сред(СтрокаДатаК,7,1);
	ОбластьДанныеНалогоплательщика.Параметры.ДатаК6 = Сред(СтрокаДатаК,8,1);
	ОбластьДанныеНалогоплательщика.Параметры.ДатаК7 = Сред(СтрокаДатаК,9,1);
	ОбластьДанныеНалогоплательщика.Параметры.ДатаК8 = Сред(СтрокаДатаК,10,1);

	КонтактныеДанные = ПолучитьКонтактнуюИнформацию(Объект.Организация);
	Индекс           = КонтактныеДанные.Индекс;
	АдрОбластьГород  = КонтактныеДанные.АдрОбластьГород;
	ЮрАдрес	         = КонтактныеДанные.АдресОрганизации; 
	Телефон		     = КонтактныеДанные.Телефон;
	
	Если ЗначениеЗаполнено(АдрОбластьГород) Тогда 
		ОбластьДанныеНалогоплательщика.Параметры.Область = АдрОбластьГород;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЮрАдрес) Тогда 
		ОбластьДанныеНалогоплательщика.Параметры.Адрес = ЮрАдрес;
	КонецЕсли;
	
	ОбластьДанныеНалогоплательщика.Параметры.Тел = Телефон;
	
	Если ЗначениеЗаполнено(Индекс) Тогда
		ОбластьДанныеНалогоплательщика.Параметры.Индекс1 = Сред(Индекс,1,1);
		ОбластьДанныеНалогоплательщика.Параметры.Индекс2 = Сред(Индекс,2,1);
		ОбластьДанныеНалогоплательщика.Параметры.Индекс3 = Сред(Индекс,3,1);
		ОбластьДанныеНалогоплательщика.Параметры.Индекс4 = Сред(Индекс,4,1);
		ОбластьДанныеНалогоплательщика.Параметры.Индекс5 = Сред(Индекс,5,1);
		ОбластьДанныеНалогоплательщика.Параметры.Индекс6 = Сред(Индекс,6,1);
	КонецЕсли;

	ТабличныйДокумент.Вывести(ОбластьДанныеНалогоплательщика);	
	
	ОбластьШапкаТаблицы			   = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокСтрок.НомерСтроки,
	|	СписокСтрок.Строка
	|ПОМЕСТИТЬ СписокСтрок
	|ИЗ
	|	&СписокСтрок КАК СписокСтрок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетыПоНалогамЗППодоходныйНалог.Количество КАК Количество,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаНачислено КАК Начислено,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаНеоблагаемая КАК Необлагаемая,
	|	ОтчетыПоНалогамЗППодоходныйНалог.Вычеты КАК Вычеты,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаОблагаемая КАК Облагаемая,
	|	ОтчетыПоНалогамЗППодоходныйНалог.Ставка,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаПНсСотрудника КАК ПодоходныйСотрудника,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаПНсМРД КАК СМРД,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаПН КАК ПодоходныйКОплате,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаПН КАК ВсегоПодоходный,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаВыплачен КАК Выплачено,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СальдоК КАК СальдоК,
	|	ОтчетыПоНалогамЗППодоходныйНалог.НомерСтрокиОтчета КАК НомерСтрокиОтчета
	|ПОМЕСТИТЬ СтрокиДокумента
	|ИЗ
	|	Документ.ОтчетыПоНалогамЗП.ПодоходныйНалог КАК ОтчетыПоНалогамЗППодоходныйНалог
	|ГДЕ
	|	ОтчетыПоНалогамЗППодоходныйНалог.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокСтрок.НомерСтроки,
	|	ЕСТЬNULL(СтрокиДокумента.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(СтрокиДокумента.Начислено, 0) КАК Начислено,
	|	ЕСТЬNULL(СтрокиДокумента.Необлагаемая, 0) КАК Необлагаемая,
	|	ЕСТЬNULL(СтрокиДокумента.Вычеты, 0) КАК Вычеты,
	|	ЕСТЬNULL(СтрокиДокумента.Облагаемая, 0) КАК Облагаемая,
	|	ЕСТЬNULL(СтрокиДокумента.Ставка, 0) КАК Поле1,
	|	ЕСТЬNULL(СтрокиДокумента.ПодоходныйСотрудника, 0) КАК ПодоходныйСотрудника,
	|	ЕСТЬNULL(СтрокиДокумента.СМРД, 0) КАК СМРД,
	|	ЕСТЬNULL(СтрокиДокумента.ПодоходныйКОплате, 0) КАК ПодоходныйКОплате,
	|	ЕСТЬNULL(СтрокиДокумента.ВсегоПодоходный, 0) КАК ВсегоПодоходный,
	|	ВЫБОР
	|		КОГДА &НеЗаполнятьВыплатыПоЗП
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтрокиДокумента.Выплачено, 0)
	|	КОНЕЦ КАК Выплачено,
	|	ЕСТЬNULL(СтрокиДокумента.СальдоК, 0) КАК СальдоК
	|ИЗ
	|	СписокСтрок КАК СписокСтрок
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиДокумента КАК СтрокиДокумента
	|		ПО СписокСтрок.НомерСтроки = СтрокиДокумента.НомерСтрокиОтчета";
	
	Запрос.УстановитьПараметр("Ссылка", Объект);
	Запрос.УстановитьПараметр("НеЗаполнятьВыплатыПоЗП", Объект.НеЗаполнятьВыплатыПоЗП);
	
	
	ТЗСтрок = Новый ТаблицаЗначений;
	КЧ = Новый КвалификаторыЧисла(10,0);
	КС = Новый КвалификаторыСтроки(20);
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
	Массив.Очистить();
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	
	
	ТЗСтрок.Колонки.Добавить("НомерСтроки",ОписаниеТиповЧ);
	ТЗСтрок.Колонки.Добавить("Строка",ОписаниеТиповС);
	СТЗ = ТЗСтрок.Добавить();
	СТЗ.НомерСтроки = 1;
	СТЗ.Строка = "Строка1";
	СТЗ = ТЗСтрок.Добавить();
	СТЗ.НомерСтроки = 2;
	СТЗ.Строка = "Строка2";
	СТЗ = ТЗСтрок.Добавить();
	СТЗ.НомерСтроки = 3;
	СТЗ.Строка = "Строка3";
	СТЗ = ТЗСтрок.Добавить();
	СТЗ.НомерСтроки = 4;
	СТЗ.Строка = "Строка4";
	
	Запрос.УстановитьПараметр("СписокСтрок", ТЗСтрок);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	
	СтруктураИтогов = Новый Структура; 
	СтруктураИтогов.Вставить("Количество",0);
	СтруктураИтогов.Вставить("Начислено",0);
	СтруктураИтогов.Вставить("Необлагаемая",0);
	СтруктураИтогов.Вставить("Вычеты",0);
	СтруктураИтогов.Вставить("Облагаемая",0);
	СтруктураИтогов.Вставить("ПодоходныйСотрудника",0);
	СтруктураИтогов.Вставить("СМРД",0);
	СтруктураИтогов.Вставить("ВсегоПодоходный",0);
	СтруктураИтогов.Вставить("Выплачено",0);
	СтруктураИтогов.Вставить("ПодоходныйКОплате",0);
	
	КоличествоСтрок = ВыборкаДетальныеЗаписи.Количество();
	
	СчетЧикСтрок = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СчетЧикСтрок = СчетЧикСтрок + 1;
		
		
		
		// заполняем строки отчета
		Если ВыборкаДетальныеЗаписи.НомерСтроки = 1  Тогда 
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка1");
		КонецЕсли;
		
		Если ВыборкаДетальныеЗаписи.НомерСтроки = 2 Тогда 
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка2");
		КонецЕсли;
		
		Если ВыборкаДетальныеЗаписи.НомерСтроки = 3 Тогда 
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка3");
		КонецЕсли;
		
		Если ВыборкаДетальныеЗаписи.НомерСтроки = 4 Тогда 
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка4");
		КонецЕсли;
		
		ОбластьСтрока.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
		//собираем итоговые суммы
		СтруктураИтогов.Количество 	 	 	 = СтруктураИтогов.Количество   		+ ВыборкаДетальныеЗаписи.Количество;
		СтруктураИтогов.Начислено 		 	 = СтруктураИтогов.Начислено 	 	    + ВыборкаДетальныеЗаписи.Начислено;
		СтруктураИтогов.Необлагаемая 	 	 = СтруктураИтогов.Необлагаемая 		+ ВыборкаДетальныеЗаписи.Необлагаемая;
		СтруктураИтогов.Вычеты			 	 = СтруктураИтогов.Вычеты 		 	    + ВыборкаДетальныеЗаписи.Вычеты;
		СтруктураИтогов.Облагаемая      	 = СтруктураИтогов.Облагаемая   		+ ВыборкаДетальныеЗаписи.Облагаемая;
		СтруктураИтогов.ПодоходныйСотрудника = СтруктураИтогов.ПодоходныйСотрудника + ВыборкаДетальныеЗаписи.ПодоходныйСотрудника;
		СтруктураИтогов.СМРД				 = СтруктураИтогов.СМРД  			    + ВыборкаДетальныеЗаписи.СМРД;
		СтруктураИтогов.ВсегоПодоходный      = СтруктураИтогов.ВсегоПодоходный 	    + ВыборкаДетальныеЗаписи.ПодоходныйКОплате;
		СтруктураИтогов.Выплачено            = СтруктураИтогов.Выплачено            + ВыборкаДетальныеЗаписи.Выплачено;
		СтруктураИтогов.ПодоходныйКОплате    = СтруктураИтогов.ПодоходныйКОплате	+ ВыборкаДетальныеЗаписи.ПодоходныйКОплате;
	КонецЦикла;
	
	// итоги подвал	
	ОбластьИтого = Макет.ПолучитьОбласть("Итого");
	ОбластьИтого.Параметры.Заполнить(СтруктураИтогов);
	ТабличныйДокумент.Вывести(ОбластьИтого);
	
	ОбластьПодвалОтчета = Макет.ПолучитьОбласть("ПодвалОтчета");
	ТабличныйДокумент.Вывести(ОбластьПодвалОтчета);
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб = Истина;

	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьПриложенияКОтчетуПН(МассивОбъектов)
	
	Макет = ПолучитьМакет("ПриложениеКОтчетуПН");
	Если МассивОбъектов.Количество() > 0 Тогда 
		Объект = МассивОбъектов[0];		
	КонецЕсли;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ОбластьЗаголовок 			   = Макет.ПолучитьОбласть("Заголовок");
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	ОбластьДанныеНалогоплательщика = Макет.ПолучитьОбласть("ДанныеНалогоплательщика");
	
	ИНН = Объект.Организация.ИНН;
	ОбластьДанныеНалогоплательщика.Параметры.ИНН1 	= Сред(ИНН,1,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН2 	= Сред(ИНН,2,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН3 	= Сред(ИНН,3,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН4 	= Сред(ИНН,4,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН5 	= Сред(ИНН,5,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН6 	= Сред(ИНН,6,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН7 	= Сред(ИНН,7,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН8 	= Сред(ИНН,8,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН9 	= Сред(ИНН,9,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН10	= Сред(ИНН,10,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН11 	= Сред(ИНН,11,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН12 	= Сред(ИНН,12,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН13 	= Сред(ИНН,13,1);
	ОбластьДанныеНалогоплательщика.Параметры.ИНН14 	= Сред(ИНН,14,1);
	
	ОбластьДанныеНалогоплательщика.Параметры.Организация = Объект.Организация.НаименованиеПолное;
	
	ОКПО = Объект.Организация.КодПоОКПО;
	ОбластьДанныеНалогоплательщика.Параметры.ОКПО1 = Сред(ОКПО,1,1);
	ОбластьДанныеНалогоплательщика.Параметры.ОКПО2 = Сред(ОКПО,2,1);
	ОбластьДанныеНалогоплательщика.Параметры.ОКПО3 = Сред(ОКПО,3,1);
	ОбластьДанныеНалогоплательщика.Параметры.ОКПО4 = Сред(ОКПО,4,1);
	ОбластьДанныеНалогоплательщика.Параметры.ОКПО5 = Сред(ОКПО,5,1);
	ОбластьДанныеНалогоплательщика.Параметры.ОКПО6 = Сред(ОКПО,6,1);
	ОбластьДанныеНалогоплательщика.Параметры.ОКПО7 = Сред(ОКПО,7,1);
	ОбластьДанныеНалогоплательщика.Параметры.ОКПО8 = Сред(ОКПО,8,1);

	ГНС = Объект.Организация.ГНС.Код;
	ОбластьДанныеНалогоплательщика.Параметры.ГНИ1 = Сред(ГНС,1,1);
	ОбластьДанныеНалогоплательщика.Параметры.ГНИ2 = Сред(ГНС,2,1);
	ОбластьДанныеНалогоплательщика.Параметры.ГНИ3 = Сред(ГНС,3,1);
	ОбластьДанныеНалогоплательщика.Параметры.Налоговая = Объект.Организация.ГНС;
	
	ТабличныйДокумент.Вывести(ОбластьДанныеНалогоплательщика);

	ОбластьТаблицаПН = Макет.ПолучитьОбласть("ТаблицаПН");	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокСтрок.НомерСтроки,
	|	СписокСтрок.Строка
	|ПОМЕСТИТЬ СписокСтрок
	|ИЗ
	|	&СписокСтрок КАК СписокСтрок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетыПоНалогамЗППодоходныйНалог.Количество КАК Количество,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаНачислено КАК Начислено,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаНеоблагаемая КАК Необлагаемая,
	|	ОтчетыПоНалогамЗППодоходныйНалог.Вычеты КАК Вычеты,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаОблагаемая КАК Облагаемая,
	|	ОтчетыПоНалогамЗППодоходныйНалог.Ставка,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаПНсСотрудника КАК ПодоходныйСотрудника,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаПНсМРД КАК СМРД,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаПН КАК ПодоходныйКОплате,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаПН КАК ВсегоПодоходный,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаВыплачен КАК Выплачено,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СальдоК КАК СальдоК,
	|	ОтчетыПоНалогамЗППодоходныйНалог.НомерСтрокиОтчета КАК НомерСтрокиОтчета
	|ПОМЕСТИТЬ СтрокиДокументаКварт
	|ИЗ
	|	Документ.ОтчетыПоНалогамЗП.ПодоходныйНалогКварт КАК ОтчетыПоНалогамЗППодоходныйНалог
	|ГДЕ
	|	ОтчетыПоНалогамЗППодоходныйНалог.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокСтрок.НомерСтроки,
	|	ЕСТЬNULL(СтрокиДокумента.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(СтрокиДокумента.Начислено, 0) КАК Начислено,
	|	ЕСТЬNULL(СтрокиДокумента.Необлагаемая, 0) КАК Необлагаемая,
	|	ЕСТЬNULL(СтрокиДокумента.Вычеты, 0) КАК Вычеты,
	|	ЕСТЬNULL(СтрокиДокумента.Облагаемая, 0) КАК Облагаемая,
	|	ЕСТЬNULL(СтрокиДокумента.Ставка, 0) КАК Поле1,
	|	ЕСТЬNULL(СтрокиДокумента.ПодоходныйСотрудника, 0) КАК ПодоходныйСотрудника,
	|	ЕСТЬNULL(СтрокиДокумента.СМРД, 0) КАК СМРД,
	|	ЕСТЬNULL(СтрокиДокумента.ПодоходныйКОплате, 0) КАК ПодоходныйКОплате,
	|	ЕСТЬNULL(СтрокиДокумента.ВсегоПодоходный, 0) КАК ВсегоПодоходный,
	|	ЕСТЬNULL(СтрокиДокумента.Выплачено, 0) КАК Выплачено,
	|	ЕСТЬNULL(СтрокиДокумента.СальдоК, 0) КАК СальдоК
	|ИЗ
	|	СписокСтрок КАК СписокСтрок
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиДокументаКварт КАК СтрокиДокумента
	|		ПО СписокСтрок.НомерСтроки = СтрокиДокумента.НомерСтрокиОтчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетыПоНалогамЗППодоходныйНалог.Количество КАК Количество,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаНачислено КАК Начислено,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаНеоблагаемая КАК Необлагаемая,
	|	ОтчетыПоНалогамЗППодоходныйНалог.Вычеты КАК Вычеты,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаОблагаемая КАК Облагаемая,
	|	ОтчетыПоНалогамЗППодоходныйНалог.Ставка,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаПНсСотрудника КАК ПодоходныйСотрудника,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаПНсМРД КАК СМРД,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаПН КАК ПодоходныйКОплате,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаПН КАК ВсегоПодоходный,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаВыплачен КАК Выплачено,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СальдоК КАК СальдоК,
	|	ОтчетыПоНалогамЗППодоходныйНалог.НомерСтрокиОтчета КАК НомерСтрокиОтчета
	|ПОМЕСТИТЬ СтрокиДокументаКварт1
	|ИЗ
	|	Документ.ОтчетыПоНалогамЗП.ПодоходныйНалогКварт1 КАК ОтчетыПоНалогамЗППодоходныйНалог
	|ГДЕ
	|	ОтчетыПоНалогамЗППодоходныйНалог.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокСтрок.НомерСтроки,
	|	ЕСТЬNULL(СтрокиДокумента.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(СтрокиДокумента.Начислено, 0) КАК Начислено,
	|	ЕСТЬNULL(СтрокиДокумента.Необлагаемая, 0) КАК Необлагаемая,
	|	ЕСТЬNULL(СтрокиДокумента.Вычеты, 0) КАК Вычеты,
	|	ЕСТЬNULL(СтрокиДокумента.Облагаемая, 0) КАК Облагаемая,
	|	ЕСТЬNULL(СтрокиДокумента.Ставка, 0) КАК Поле1,
	|	ЕСТЬNULL(СтрокиДокумента.ПодоходныйСотрудника, 0) КАК ПодоходныйСотрудника,
	|	ЕСТЬNULL(СтрокиДокумента.СМРД, 0) КАК СМРД,
	|	ЕСТЬNULL(СтрокиДокумента.ПодоходныйКОплате, 0) КАК ПодоходныйКОплате,
	|	ЕСТЬNULL(СтрокиДокумента.ВсегоПодоходный, 0) КАК ВсегоПодоходный,
	|	ЕСТЬNULL(СтрокиДокумента.Выплачено, 0) КАК Выплачено,
	|	ЕСТЬNULL(СтрокиДокумента.СальдоК, 0) КАК СальдоК
	|ИЗ
	|	СписокСтрок КАК СписокСтрок
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиДокументаКварт1 КАК СтрокиДокумента
	|		ПО СписокСтрок.НомерСтроки = СтрокиДокумента.НомерСтрокиОтчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетыПоНалогамЗППодоходныйНалог.Количество КАК Количество,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаНачислено КАК Начислено,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаНеоблагаемая КАК Необлагаемая,
	|	ОтчетыПоНалогамЗППодоходныйНалог.Вычеты КАК Вычеты,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаОблагаемая КАК Облагаемая,
	|	ОтчетыПоНалогамЗППодоходныйНалог.Ставка,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаПНсСотрудника КАК ПодоходныйСотрудника,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаПНсМРД КАК СМРД,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаПН КАК ПодоходныйКОплате,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаПН КАК ВсегоПодоходный,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СуммаВыплачен КАК Выплачено,
	|	ОтчетыПоНалогамЗППодоходныйНалог.СальдоК КАК СальдоК,
	|	ОтчетыПоНалогамЗППодоходныйНалог.НомерСтрокиОтчета КАК НомерСтрокиОтчета
	|ПОМЕСТИТЬ СтрокиДокумента
	|ИЗ
	|	Документ.ОтчетыПоНалогамЗП.ПодоходныйНалог КАК ОтчетыПоНалогамЗППодоходныйНалог
	|ГДЕ
	|	ОтчетыПоНалогамЗППодоходныйНалог.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокСтрок.НомерСтроки,
	|	ЕСТЬNULL(СтрокиДокумента.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(СтрокиДокумента.Начислено, 0) КАК Начислено,
	|	ЕСТЬNULL(СтрокиДокумента.Необлагаемая, 0) КАК Необлагаемая,
	|	ЕСТЬNULL(СтрокиДокумента.Вычеты, 0) КАК Вычеты,
	|	ЕСТЬNULL(СтрокиДокумента.Облагаемая, 0) КАК Облагаемая,
	|	ЕСТЬNULL(СтрокиДокумента.Ставка, 0) КАК Поле1,
	|	ЕСТЬNULL(СтрокиДокумента.ПодоходныйСотрудника, 0) КАК ПодоходныйСотрудника,
	|	ЕСТЬNULL(СтрокиДокумента.СМРД, 0) КАК СМРД,
	|	ЕСТЬNULL(СтрокиДокумента.ПодоходныйКОплате, 0) КАК ПодоходныйКОплате,
	|	ЕСТЬNULL(СтрокиДокумента.ВсегоПодоходный, 0) КАК ВсегоПодоходный,
	|	ЕСТЬNULL(СтрокиДокумента.Выплачено, 0) КАК Выплачено,
	|	ЕСТЬNULL(СтрокиДокумента.СальдоК, 0) КАК СальдоК
	|ИЗ
	|	СписокСтрок КАК СписокСтрок
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиДокумента КАК СтрокиДокумента
	|		ПО СписокСтрок.НомерСтроки = СтрокиДокумента.НомерСтрокиОтчета";
		
	ТЗСтрок = Новый ТаблицаЗначений;
	КЧ = Новый КвалификаторыЧисла(10,0);
	КС = Новый КвалификаторыСтроки(20);
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
	Массив.Очистить();
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	
	ТЗСтрок.Колонки.Добавить("НомерСтроки",ОписаниеТиповЧ);
	ТЗСтрок.Колонки.Добавить("Строка",ОписаниеТиповС);
	СТЗ = ТЗСтрок.Добавить();
	СТЗ.НомерСтроки = 1;
	СТЗ.Строка = "Строка1";
	СТЗ = ТЗСтрок.Добавить();
	СТЗ.НомерСтроки = 2;
	СТЗ.Строка = "Строка2";
	СТЗ = ТЗСтрок.Добавить();
	СТЗ.НомерСтроки = 3;
	СТЗ.Строка = "Строка3";
	СТЗ = ТЗСтрок.Добавить();
	СТЗ.НомерСтроки = 4;
	СТЗ.Строка = "Строка4";
	
	Запрос.УстановитьПараметр("Ссылка", Объект);
	Запрос.УстановитьПараметр("СписокСтрок", ТЗСтрок);

	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	//Вывод по месяцам квартала
	Для Сч = 1 По 3 Цикл   
		
		СтруктураИтогов = Новый Структура; 
		СтруктураИтогов.Вставить("Количество",0);
		СтруктураИтогов.Вставить("Начислено",0);
		СтруктураИтогов.Вставить("Необлагаемая",0);
		СтруктураИтогов.Вставить("Вычеты",0);
		СтруктураИтогов.Вставить("Облагаемая",0);
		СтруктураИтогов.Вставить("ПодоходныйСотрудника",0);
		СтруктураИтогов.Вставить("СМРД",0);
		СтруктураИтогов.Вставить("ВсегоПодоходный",0);
		СтруктураИтогов.Вставить("Выплачено",0);
		СтруктураИтогов.Вставить("ПодоходныйКОплате",0);
		
		//Определим даты с 1го месяца квартала
		Если  Сч = 1 Тогда 
			НачалоПериода = НачалоКвартала(Объект.Дата);
			ПакетЗапроса = 2;
		ИначеЕсли Сч = 2 Тогда 
			НачалоПериода = ДобавитьМесяц(НачалоКвартала(Объект.Дата),1);
			ПакетЗапроса = 4;
		ИначеЕсли Сч = 3 Тогда  
			НачалоПериода = ДобавитьМесяц(НачалоКвартала(Объект.Дата),2);
			ПакетЗапроса = 6;
		КонецЕсли;
		
		ОбластьТаблицаПН.Параметры.Месяц = "" + Формат(НачалоПериода,"ДФ=MMMM") +" "+ Год(НачалоПериода);
		ТабличныйДокумент.Вывести(ОбластьТаблицаПН);		
		
		ВыборкаДетальныеЗаписи = МассивРезультатов[ПакетЗапроса].Выбрать();
		КоличествоСтрок = ВыборкаДетальныеЗаписи.Количество();
		
		СчетЧикСтрок = 0;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СчетЧикСтрок = СчетЧикСтрок + 1;
			
			// заполняем строки отчета
			Если ВыборкаДетальныеЗаписи.НомерСтроки = 1  Тогда 
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка1");
			КонецЕсли;
			
			Если ВыборкаДетальныеЗаписи.НомерСтроки = 2 Тогда 
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка2");
			КонецЕсли;
			
			Если ВыборкаДетальныеЗаписи.НомерСтроки = 3 Тогда 
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка3");
			КонецЕсли;
			
			Если ВыборкаДетальныеЗаписи.НомерСтроки = 4 Тогда 
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка4");
			КонецЕсли;
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			//собираем итоговые суммы
			СтруктураИтогов.Количество 	 	 	 = СтруктураИтогов.Количество   		+ ВыборкаДетальныеЗаписи.Количество;
			СтруктураИтогов.Начислено 		 	 = СтруктураИтогов.Начислено 	 	    + ВыборкаДетальныеЗаписи.Начислено;
			СтруктураИтогов.Необлагаемая 	 	 = СтруктураИтогов.Необлагаемая 		+ ВыборкаДетальныеЗаписи.Необлагаемая;
			СтруктураИтогов.Вычеты			 	 = СтруктураИтогов.Вычеты 		 	    + ВыборкаДетальныеЗаписи.Вычеты;
			СтруктураИтогов.Облагаемая      	 = СтруктураИтогов.Облагаемая   		+ ВыборкаДетальныеЗаписи.Облагаемая;
			СтруктураИтогов.ПодоходныйСотрудника = СтруктураИтогов.ПодоходныйСотрудника + ВыборкаДетальныеЗаписи.ПодоходныйСотрудника;
			СтруктураИтогов.СМРД				 = СтруктураИтогов.СМРД  			    + ВыборкаДетальныеЗаписи.СМРД;
			СтруктураИтогов.ВсегоПодоходный      = СтруктураИтогов.ВсегоПодоходный 	    + ВыборкаДетальныеЗаписи.ПодоходныйКОплате;
			СтруктураИтогов.Выплачено            = СтруктураИтогов.Выплачено            + ВыборкаДетальныеЗаписи.Выплачено;
			СтруктураИтогов.ПодоходныйКОплате    = СтруктураИтогов.ПодоходныйКОплате	+ ВыборкаДетальныеЗаписи.ПодоходныйКОплате;
		КонецЦикла;
		
		// итоги подвал	
		ОбластьИтого = Макет.ПолучитьОбласть("Итого");
		ОбластьИтого.Параметры.Заполнить(СтруктураИтогов);
		ТабличныйДокумент.Вывести(ОбластьИтого);
		
	КонецЦикла;

	ОбластьПодвалОтчета = Макет.ПолучитьОбласть("ПодвалОтчета");
	ТабличныйДокумент.Вывести(ОбластьПодвалОтчета);
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьЕжемесячногоПоСФ(МассивОбъектов)
	
	Макет = ПолучитьМакет("ЕжемесячныйОтчетПоСФ");
	
	Если МассивОбъектов.Количество() > 0 Тогда 
		Объект = МассивОбъектов[0];		
	КонецЕсли;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	//Структура = Новый Структура;
	//Структура.добавить(имяпараметра, значение)
	//область.параметры.заполнить(структура)
	
	ОбластьШапка 			   = Макет.ПолучитьОбласть("Шапка");
	
	ОбластьШапка.Параметры.Плательщик 	= Объект.Организация.НаименованиеПолное;
	ОбластьШапка.Параметры.ИНН        	= Объект.Организация.ИНН;
	ОбластьШапка.Параметры.РегНомер		= Объект.Организация.РегНомерСоцФонда;
	ОбластьШапка.Параметры.ОКПО 		= Объект.Организация.КодПоОКПО;

	ОбластьШапка.Параметры.ОтделениеСФ  = Объект.Контрагент;
	ОбластьШапка.Параметры.Дата         = Формат(Объект.Дата,"ДФ='ММММ гггг'");
	
	КонтактныеДанные = ПолучитьКонтактнуюИнформацию(Объект.Организация);
	ОбластьШапка.Параметры.Адрес	    = КонтактныеДанные.АдресОрганизации; 
	ОбластьШапка.Параметры.Телефон		= КонтактныеДанные.Телефон;
		
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтчетыПоНалогамЗПСведенияОЗанятостиИЗаработнойПлате.Ссылка,
	|	ОтчетыПоНалогамЗПСведенияОЗанятостиИЗаработнойПлате.НомерСтроки,
	|	ОтчетыПоНалогамЗПСведенияОЗанятостиИЗаработнойПлате.Физлицо,
	|	ОтчетыПоНалогамЗПСведенияОЗанятостиИЗаработнойПлате.ДатаНачалаРаботы как ДатаНачала,
	|	ОтчетыПоНалогамЗПСведенияОЗанятостиИЗаработнойПлате.ДатаОкончанияРаботы как ДатаОкончания,
	|	ОтчетыПоНалогамЗПСведенияОЗанятостиИЗаработнойПлате.Дней как ДнейНорма,
	|	ОтчетыПоНалогамЗПСведенияОЗанятостиИЗаработнойПлате.ФактическиДней как ДнейФакт,
	|	ОтчетыПоНалогамЗПСведенияОЗанятостиИЗаработнойПлате.ФондОплатыТруда КАК ФОТ,
	|	ОтчетыПоНалогамЗПСведенияОЗанятостиИЗаработнойПлате.ДополнительныйФондОплатыТруда КАК ДопФОТ,
	|	ОтчетыПоНалогамЗПСведенияОЗанятостиИЗаработнойПлате.НачисленыеСтраховыеВзносы КАК СтраховыеВзносы,
	|	ОтчетыПоНалогамЗПСведенияОЗанятостиИЗаработнойПлате.НачсиленыеВзносыПоНПФ КАК ГНПФР,
	|	ОтчетыПоНалогамЗПСведенияОЗанятостиИЗаработнойПлате.Категория,
	|	ОтчетыПоНалогамЗПСведенияОЗанятостиИЗаработнойПлате.Физлицо.ИНН КАК ИНН
	|ИЗ
	|	Документ.ОтчетыПоНалогамЗП.СведенияОЗанятостиИЗаработнойПлате КАК ОтчетыПоНалогамЗПСведенияОЗанятостиИЗаработнойПлате
	|ГДЕ
	|	ОтчетыПоНалогамЗПСведенияОЗанятостиИЗаработнойПлате.Ссылка = &Ссылка
	|ИТОГИ
	|	СУММА(ФондОплатыТруда),
	|	СУММА(ДополнительныйФондОплатыТруда),
	|	СУММА(НачисленыеСтраховыеВзносы),
	|	СУММА(НачсиленыеВзносыПоНПФ)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("Ссылка", Объект);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаОбщийИтог.Следующий();		// Общий итог
	
	ОбластьИтогиПоСведениям = Макет.ПолучитьОбласть("ИтогоСведенияОЗП");	
	ВыборкаДетальныеЗаписи = ВыборкаОбщийИтог.Выбрать();
	ОбластьИтогиПоСведениям.Параметры.Заполнить(ВыборкаОбщийИтог);
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДеталиСведений = Макет.ПолучитьОбласть("ДеталиСведенияОЗП");
		ОбластьДеталиСведений.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабличныйДокумент.Вывести(ОбластьДеталиСведений);
	КонецЦикла;
	ТабличныйДокумент.Вывести(ОбластьИтогиПоСведениям);
	
	
	ОбластьШапкаФОТ = Макет.ПолучитьОбласть("ШапкаФОТПоКатегориям");
	ТабличныйДокумент.Вывести(ОбластьШапкаФОТ);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтчетыПоНалогамЗПФондОплатыТрудаПоКатегориям.Категория,
	|	ОтчетыПоНалогамЗПФондОплатыТрудаПоКатегориям.Численость КАК Численность,
	|	ОтчетыПоНалогамЗПФондОплатыТрудаПоКатегориям.ФОТБолее КАК ФОТБольше40Процентов,
	|	ОтчетыПоНалогамЗПФондОплатыТрудаПоКатегориям.ФОТМенее КАК ФОТМеньше40Процентов,
	|	ОтчетыПоНалогамЗПФондОплатыТрудаПоКатегориям.ДопФОТ КАК ДопФОТ,
	|	ОтчетыПоНалогамЗПФондОплатыТрудаПоКатегориям.Итого КАК Всего
	|ИЗ
	|	Документ.ОтчетыПоНалогамЗП.ФондОплатыТрудаПоКатегориям КАК ОтчетыПоНалогамЗПФондОплатыТрудаПоКатегориям
	|ГДЕ
	|	ОтчетыПоНалогамЗПФондОплатыТрудаПоКатегориям.Ссылка = &Ссылка
	|ИТОГИ
	|	СУММА(Численность),
	|	СУММА(ФОТБольше40Процентов),
	|	СУММА(ФОТМеньше40Процентов),
	|	СУММА(ДопФОТ),
	|	СУММА(Всего)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ОтчетыПоНалогамЗПРасчетнаяВедомостьПоОбязательтвам.СуммаКтПФ_МС_ФОТФ) КАК СуммаКтПФ_МС_ФОТФ,
	|	СУММА(ОтчетыПоНалогамЗПРасчетнаяВедомостьПоОбязательтвам.СуммаКтГНПФ) КАК СуммаКтГНПФ,
	|	СУММА(ОтчетыПоНалогамЗПРасчетнаяВедомостьПоОбязательтвам.СуммаДтПФ_МС_ФОТФ) КАК СуммаДтПФ_МС_ФОТФ,
	|	СУММА(ОтчетыПоНалогамЗПРасчетнаяВедомостьПоОбязательтвам.СуммаДтГНПФ) КАК СуммаДтГНПФ,
	|	СУММА(ОтчетыПоНалогамЗПРасчетнаяВедомостьПоОбязательтвам.ИтогоОбязательства) КАК ИтогоОбязательства,
	|	СУММА(ОтчетыПоНалогамЗПРасчетнаяВедомостьПоОбязательтвам.ИтогоПереплата) КАК ИтогоПереплата
	|ИЗ
	|	Документ.ОтчетыПоНалогамЗП.РасчетнаяВедомостьПоОбязательтвам КАК ОтчетыПоНалогамЗПРасчетнаяВедомостьПоОбязательтвам
	|ГДЕ
	|	ОтчетыПоНалогамЗПРасчетнаяВедомостьПоОбязательтвам.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", Объект);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	//ФондОплатыТрудаПоКатегориям
	ВыборкаОбщийИтог =  МассивРезультатов[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
	ВыборкаОбщийИтог.Следующий();		// Общий итог
	
	ОбластьИтогиФОТ = Макет.ПолучитьОбласть("ИтогоФОТПоКатегориям");
	ОбластьИтогиФОТ.Параметры.Заполнить(ВыборкаОбщийИтог);
	
	ВыборкаДетальныеЗаписи = ВыборкаОбщийИтог.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДеталиФОТ = Макет.ПолучитьОбласть("ДеталиФОТПоКатегориям");
		ОбластьДеталиФОТ.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабличныйДокумент.Вывести(ОбластьДеталиФОТ);
	КонецЦикла;
	ТабличныйДокумент.Вывести(ОбластьИтогиФОТ);
	
	//Расчетная ведомость
	ОбластьОбязательстваПодвал = Макет.ПолучитьОбласть("ОбязательстваПодвал");	
	Выборка = МассивРезультатов[1].Выбрать();
	Если Выборка.Следующий() Тогда 
		ОбластьОбязательстваПодвал.Параметры.Заполнить(Выборка);
	КонецЕсли;	
	ТабличныйДокумент.Вывести(ОбластьОбязательстваПодвал);
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб = Истина;

	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьЕжемесячногоПоСФ()

Функция ПечатьЕжеквартальногоОтчетСФ(МассивОбъектов)
	Макет = ПолучитьМакет("ЕжеквартальныйОтчетСФ");
	
	Если МассивОбъектов.Количество() > 0 Тогда 
		Объект = МассивОбъектов[0];		
	КонецЕсли;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ОбластьШапка 			   = Макет.ПолучитьОбласть("Шапка");

	ОбластьШапка.Параметры.Организация 	= Объект.Организация.НаименованиеПолное;
	ОбластьШапка.Параметры.ИНН        	= Объект.Организация.ИНН;
	ОбластьШапка.Параметры.РегНомерСоцФонда		= Объект.Организация.РегНомерСоцФонда;
	ОбластьШапка.Параметры.ОКПО 		= Объект.Организация.КодПоОКПО;
	ОбластьШапка.Параметры.ОтделениеСФ  = Объект.Контрагент;
	ОбластьШапка.Параметры.Период       =  Формат(Объект.Дата,"ДФ='ММММ гггг'");;
	
	КонтактныеДанные = ПолучитьКонтактнуюИнформацию(Объект.Организация);
	ОбластьШапка.Параметры.Адрес	    = КонтактныеДанные.АдресОрганизации; 
	ОбластьШапка.Параметры.Телефон		= КонтактныеДанные.Телефон;

	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтчетыПоНалогамЗПСоцфондПоказателиЕжеквартальные.Показатель,
	|	ОтчетыПоНалогамЗПСоцфондПоказателиЕжеквартальные.ЗначениеМеньшеСЗПНГ,
	|	ОтчетыПоНалогамЗПСоцфондПоказателиЕжеквартальные.ЗначениеБольшеСЗПНГ,
	|	ОтчетыПоНалогамЗПСоцфондПоказателиЕжеквартальные.ВсегоСНГ,
	|	ОтчетыПоНалогамЗПСоцфондПоказателиЕжеквартальные.ЗначениеМеньшеСЗПКВ,
	|	ОтчетыПоНалогамЗПСоцфондПоказателиЕжеквартальные.ЗначениеБольшеСЗПКВ,
	|	ОтчетыПоНалогамЗПСоцфондПоказателиЕжеквартальные.ВсегоКварт
	|ПОМЕСТИТЬ ВТДок
	|ИЗ
	|	Документ.ОтчетыПоНалогамЗП.СоцфондПоказателиЕжеквартальные КАК ОтчетыПоНалогамЗПСоцфондПоказателиЕжеквартальные
	|ГДЕ
	|	ОтчетыПоНалогамЗПСоцфондПоказателиЕжеквартальные.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиОтчетаПоСФКвартальному.НомерСтроки,
	|	СтрокиОтчетаПоСФКвартальному.Ссылка
	|ПОМЕСТИТЬ ВтСтроки
	|ИЗ
	|	Справочник.СтрокиОтчетаПоСФКвартальному КАК СтрокиОтчетаПоСФКвартальному
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтСтроки.НомерСтроки КАК НомерО,
	|	ВтСтроки.Ссылка КАК Показатель,
	|	ВТДок.ЗначениеМеньшеСЗПНГ,
	|	ВТДок.ЗначениеБольшеСЗПНГ,
	|	ВТДок.ВсегоСНГ,
	|	ВТДок.ЗначениеМеньшеСЗПКВ,
	|	ВТДок.ЗначениеБольшеСЗПКВ,
	|	ВТДок.ВсегоКварт
	|ИЗ
	|	ВтСтроки КАК ВтСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДок КАК ВТДок
	|		ПО ВтСтроки.Ссылка = ВТДок.Показатель
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерО";
	
	Запрос.УстановитьПараметр("Ссылка", Объект);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДеталиСведений = Макет.ПолучитьОбласть("ПоказателиДетали");
		ОбластьДеталиСведений.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабличныйДокумент.Вывести(ОбластьДеталиСведений);
	КонецЦикла;
		
	ОбластьШапка2 = Макет.ПолучитьОбласть("Шапка2");
	ТабличныйДокумент.Вывести(ОбластьШапка2);
		
	ОбластьДеталиОбяз = Макет.ПолучитьОбласть("ОблДетали");
	ТабличныйДокумент.Вывести(ОбластьДеталиОбяз);

	ОбластьШапкаТаблицыБанк = Макет.ПолучитьОбласть("ШапкаТаблицыБанк");
	//пока нет движений по РБ заполнять нечем...
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыБанк);
	
	ОбластьШапкаДеталиБанк = Макет.ПолучитьОбласть("ДеталиБанк");
	ТабличныйДокумент.Вывести(ОбластьШапкаДеталиБанк);
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьЕжеквартальногоОтчетСФ()

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПодоходныйНалог") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПодоходныйНалог", НСтр("ru = 'Печать ежемесячного отчета по ПН'"), ПечатьПоПН(МассивОбъектов),,
		"Документ.ОтчетыПоНалогамЗП.ПодоходныйНалог");
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПриложениеКОтчетуПН") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПриложениеКОтчетуПН", НСтр("ru = 'Печать приложения к отчету по подоходному налогу'"), ПечатьПриложенияКОтчетуПН(МассивОбъектов),,
		"Документ.ОтчетыПоНалогамЗП.ПриложениеКОтчетуПН");

	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЕжемесячныйОтчетСФ") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ЕжемесячныйОтчетСФ", НСтр("ru = 'Печать ежемесячного отчета по СФ'"), ПечатьЕжемесячногоПоСФ(МассивОбъектов),,
		"Документ.ОтчетыПоНалогамЗП.ЕжемесячныйОтчетПоСФ");
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЕжеквартальныйОтчетСФ") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ЕжеквартальныйОтчетСФ", НСтр("ru = 'Печать ежеквартального отчета по СФ'"), ПечатьЕжеквартальногоОтчетСФ(МассивОбъектов),,
		"Документ.ОтчетыПоНалогамЗП.ЕжеквартальныйОтчетСФ");
		
	КонецЕсли;
	
	//УправлениеПечатью.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПодоходныйНалог";
	КомандаПечати.Представление = НСтр("ru = 'Печать ежемесячного отчета по ПН'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПриложениеКОтчетуПН";
	КомандаПечати.Представление = НСтр("ru = 'Печать приложения к отчету по подоходному налогу'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 2;

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЕжемесячныйОтчетСФ";
	КомандаПечати.Представление = НСтр("ru = 'Печать ежемесячного отчета по СФ'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 3;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЕжеквартальныйОтчетСФ";
	КомандаПечати.Представление = НСтр("ru = 'Печать ежеквартального отчета по СФ'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 4;
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли
