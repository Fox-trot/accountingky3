#Область ОбработчикиСлужебные

// Получает набор данных с сервера для процедуры ДатаПриИзменении.
//
&НаСервере
Функция ПолучитьДанныеДатаПриИзменении(ДатаПередИзменением)
	РазностьДат = БухгалтерскийУчетСервер.ПроверитьНомерДокумента(Объект.Ссылка, Объект.Дата, ДатаПередИзменением);
	
	СтруктураДанные = Новый Структура;
	СтруктураДанные.Вставить("РазностьДат",	РазностьДат);
	
	Возврат СтруктураДанные;
КонецФункции // ПолучитьДанныеДатаПриИзменении()

#КонецОбласти

#Область УправлениеВнешнимВидом

&НаКлиенте
// Процедура устанавливает видимость и доступность элементов.
//
Процедура УстановитьВидимостьДоступностьЭлементов()
	
	Элементы.СтраницаПодоходныйНалогПриложение.Видимость = КонецМесяца(Объект.Дата) = КонецКвартала(Объект.Дата);
	
КонецПроцедуры // УстановитьВидимостьДоступностьЭлементов()

#КонецОбласти

#Область ОбработчикиСобытийФормы

// Процедура - обработчик события ПриСозданииНаСервере.
// В процедуре осуществляется
// - инициализация реквизитов формы,
// - установка параметров функциональных опций формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Установка реквизитов формы.
	ДатаДокумента = Объект.Дата;
	Если НЕ ЗначениеЗаполнено(ДатаДокумента) Тогда
		ДатаДокумента = ТекущаяДата();
	КонецЕсли;
	
	БухгалтерскийУчетКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаДополнительно, Объект.Комментарий);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаВажныеКоманды);
	// Конец СтандартныеПодсистемы.Печат
КонецПроцедуры

// Процедура - обработчик события ПриЧтенииНаСервере.
//
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменений
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменений
	
КонецПроцедуры // ПриЧтенииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиРеквизитовШапки

// Процедура - обработчик события ПриИзменении поля ввода Дата.
// В процедуре определяется ситуация, когда при изменении своей даты документ 
// оказывается в другом периоде нумерации документов, и в этом случае
// присваивает документу новый уникальный номер.
// Переопределяет соответствующий параметр формы.
//
&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	// Обработка события изменения даты.
	ДатаПередИзменением = ДатаДокумента;
	ДатаДокумента = Объект.Дата;
	Если Объект.Дата <> ДатаПередИзменением Тогда
		СтруктураДанные = ПолучитьДанныеДатаПриИзменении(ДатаПередИзменением);
		Если СтруктураДанные.РазностьДат <> 0 Тогда
			Объект.Номер = "";
		КонецЕсли;
	КонецЕсли;
	УстановитьВидимостьДоступностьЭлементов();	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	// Обработка события изменения организации.
	Объект.Номер = "";
	БухгалтерскийУчетСервер.ПроверитьСуществованиеУчетнойПолитикиОрганизаций(ДатаДокумента, Объект.Организация);
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	БухгалтерскийУчетКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаДополнительно, Объект.Комментарий);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодоходныйНалогНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеОтчетаПоПНОбороты.СтрокаОтчета.НомерСтроки,
		|	ДанныеОтчетаПоПНОбороты.КоличествоОборот,
		|	ДанныеОтчетаПоПНОбороты.ВсегоНачисленоОборот,
		|	ДанныеОтчетаПоПНОбороты.НеоблагаемаяОборот,
		|	ДанныеОтчетаПоПНОбороты.ПиИВычетыОборот,
		|	ДанныеОтчетаПоПНОбороты.ОблагаемаяОборот,
		|	ДанныеОтчетаПоПНОбороты.ПНсотрудникаОборот,
		|	ДанныеОтчетаПоПНОбороты.ДоплатаПНОборот,
		|	ДанныеОтчетаПоПНОбороты.ВсегоПНОборот
		|ПОМЕСТИТЬ ВременнаяТаблицаВсеСтроки
		|ИЗ
		|	РегистрНакопления.ДанныеОтчетаПоПН.Обороты(НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ), КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ), Месяц, Организация = &Организация) КАК ДанныеОтчетаПоПНОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаВсеСтроки.СтрокаОтчетаНомерСтроки КАК НомерСтрокиОтчета,
		|	ВременнаяТаблицаВсеСтроки.КоличествоОборот КАК Количество,
		|	ВременнаяТаблицаВсеСтроки.ВсегоНачисленоОборот КАК СуммаНачислено,
		|	ВременнаяТаблицаВсеСтроки.НеоблагаемаяОборот КАК СуммаНеоблагаемая,
		|	ВременнаяТаблицаВсеСтроки.ПиИВычетыОборот КАК Вычеты,
		|	ВременнаяТаблицаВсеСтроки.ОблагаемаяОборот КАК СуммаОблагаемая,
		|	ВременнаяТаблицаВсеСтроки.ПНсотрудникаОборот КАК СуммаПНсСотрудника,
		|	ВременнаяТаблицаВсеСтроки.ДоплатаПНОборот КАК СуммаПНсМРД,
		|	ВременнаяТаблицаВсеСтроки.ВсегоПНОборот КАК СуммаПН,
		|	ВременнаяТаблицаВсеСтроки.ВсегоНачисленоОборот - ВременнаяТаблицаВсеСтроки.ПиИВычетыОборот - ВременнаяТаблицаВсеСтроки.ВсегоПНОборот КАК СуммаВыплачен 
		|ИЗ
		|	ВременнаяТаблицаВсеСтроки КАК ВременнаяТаблицаВсеСтроки";
		
		запрос.УстановитьПараметр("Дата",Объект.Дата);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		
		РезультатЗапроса = Запрос.Выполнить();
		Объект.ПодоходныйНалог.Загрузить(РезультатЗапроса.Выгрузить());
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодоходныйНалогПриложениеНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеОтчетаПоПНОбороты.СтрокаОтчета.НомерСтроки КАК НомерСтрокиОтчета,
		|	ДанныеОтчетаПоПНОбороты.КоличествоОборот КАК Количество,
		|	ДанныеОтчетаПоПНОбороты.ВсегоНачисленоОборот КАК СуммаНачислено,
		|	ДанныеОтчетаПоПНОбороты.НеоблагаемаяОборот КАК СуммаНеоблагаемая,
		|	ДанныеОтчетаПоПНОбороты.ПиИВычетыОборот КАК Вычеты,
		|	ДанныеОтчетаПоПНОбороты.ОблагаемаяОборот КАК СуммаОблагаемая,
		|	ДанныеОтчетаПоПНОбороты.ПНсотрудникаОборот КАК СуммаПНсСотрудника,
		|	ДанныеОтчетаПоПНОбороты.ДоплатаПНОборот КАК СуммаПНсМРД,
		|	ДанныеОтчетаПоПНОбороты.ВсегоПНОборот КАК СуммаПН,
		|	ДанныеОтчетаПоПНОбороты.ВсегоНачисленоОборот - ДанныеОтчетаПоПНОбороты.ПиИВычетыОборот - ДанныеОтчетаПоПНОбороты.ВсегоПНОборот КАК СуммаВыплачен 
	
		|ИЗ
		|	РегистрНакопления.ДанныеОтчетаПоПН.Обороты(НАЧАЛОПЕРИОДА(&ДатаКв, МЕСЯЦ), КОНЕЦПЕРИОДА(&ДатаКв, МЕСЯЦ), Месяц, Организация = &Организация) КАК ДанныеОтчетаПоПНОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеОтчетаПоПНОбороты.СтрокаОтчета.НомерСтроки КАК НомерСтрокиОтчета,
		|	ДанныеОтчетаПоПНОбороты.КоличествоОборот КАК Количество,
		|	ДанныеОтчетаПоПНОбороты.ВсегоНачисленоОборот КАК СуммаНачислено,
		|	ДанныеОтчетаПоПНОбороты.НеоблагаемаяОборот КАК СуммаНеоблагаемая,
		|	ДанныеОтчетаПоПНОбороты.ПиИВычетыОборот КАК Вычеты,
		|	ДанныеОтчетаПоПНОбороты.ОблагаемаяОборот КАК СуммаОблагаемая,
		|	ДанныеОтчетаПоПНОбороты.ПНсотрудникаОборот КАК СуммаПНсСотрудника,
		|	ДанныеОтчетаПоПНОбороты.ДоплатаПНОборот КАК СуммаПНсМРД,
		|	ДанныеОтчетаПоПНОбороты.ВсегоПНОборот КАК СуммаПН,
		|	ДанныеОтчетаПоПНОбороты.ВсегоНачисленоОборот - ДанныеОтчетаПоПНОбороты.ПиИВычетыОборот - ДанныеОтчетаПоПНОбороты.ВсегоПНОборот КАК СуммаВыплачен 
		|ИЗ
		|	РегистрНакопления.ДанныеОтчетаПоПН.Обороты(НАЧАЛОПЕРИОДА(&ДатаКв1, МЕСЯЦ), КОНЕЦПЕРИОДА(&ДатаКв1, МЕСЯЦ), Месяц, Организация = &Организация) КАК ДанныеОтчетаПоПНОбороты";
		
		Запрос.УстановитьПараметр("ДатаКв",НачалоКвартала(Объект.Дата));
		Запрос.УстановитьПараметр("ДатаКв1",ДобавитьМесяц(НачалоКвартала(Объект.Дата),1));
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		Объект.ПодоходныйНалогКварт.Загрузить(МассивРезультатов[0].Выгрузить());
		Объект.ПодоходныйНалогКварт1.Загрузить(МассивРезультатов[1].Выгрузить());
				
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПодоходныйНалог(Команда)
	ЗаполнитьПодоходныйНалогНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСоцфондНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДляОтчетаПоСФЕжемесячномуОбороты.Физлицо,
		|	ДанныеДляОтчетаПоСФЕжемесячномуОбороты.Категория,
		|	ДанныеДляОтчетаПоСФЕжемесячномуОбороты.ФОТОборот КАК ФондОплатыТруда,
		|	ДанныеДляОтчетаПоСФЕжемесячномуОбороты.ДопФОТОборот КАК ДополнительныйФондОплатыТруда,
		|	ДанныеДляОтчетаПоСФЕжемесячномуОбороты.НачисленыеВзносыОборот КАК НачисленыеСтраховыеВзносы,
		|	ДанныеДляОтчетаПоСФЕжемесячномуОбороты.ГНПФРОборот КАК НачсиленыеВзносыПоНПФ,
		|	ДанныеДляОтчетаПоСФЕжемесячномуОбороты.НормаДнейОборот КАК Дней,
		|	ДанныеДляОтчетаПоСФЕжемесячномуОбороты.ФактДнейОборот КАК ФактическиДней,
		|	ДанныеДляОтчетаПоСФЕжемесячномуОбороты.ПриведеннаяСЗПОборот
		|ПОМЕСТИТЬ ВременнаяТаблицаДанные
		|ИЗ
		|	РегистрНакопления.ДанныеДляОтчетаПоСФЕжемесячному.Обороты(&ДатаН, &ДатаК, Месяц, Организация = &Организация) КАК ДанныеДляОтчетаПоСФЕжемесячномуОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаДанные.Физлицо,
		|	ВременнаяТаблицаДанные.Категория,
		|	ВременнаяТаблицаДанные.ФондОплатыТруда,
		|	ВременнаяТаблицаДанные.ДополнительныйФондОплатыТруда,
		|	ВременнаяТаблицаДанные.НачисленыеСтраховыеВзносы,
		|	ВременнаяТаблицаДанные.НачсиленыеВзносыПоНПФ,
		|	&ДатаН КАК ДатаНачалаРаботы,
		|	&ДатаК КАК ДатаОкончанияРаботы,
		|	ВременнаяТаблицаДанные.Дней,
		|	ВременнаяТаблицаДанные.ФактическиДней
		|ИЗ
		|	ВременнаяТаблицаДанные КАК ВременнаяТаблицаДанные
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВременнаяТаблицаДанные.Физлицо.Наименование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаДанные.Категория,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаДанные.ПриведеннаяСЗПОборот > ВременнаяТаблицаДанные.ФондОплатыТруда
		|				ТОГДА ВременнаяТаблицаДанные.ФондОплатыТруда
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ФОТМенее,
		|	СУММА(ВременнаяТаблицаДанные.ДополнительныйФондОплатыТруда) КАК ДополнительныйФондОплатыТруда,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаДанные.ПриведеннаяСЗПОборот < ВременнаяТаблицаДанные.ФондОплатыТруда
		|				ТОГДА ВременнаяТаблицаДанные.ФондОплатыТруда
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ФОТБолее,
		|	СУММА(ВременнаяТаблицаДанные.ФондОплатыТруда + ВременнаяТаблицаДанные.ДополнительныйФондОплатыТруда) КАК Итого,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВременнаяТаблицаДанные.Физлицо) КАК Численость
		|ИЗ
		|	ВременнаяТаблицаДанные КАК ВременнаяТаблицаДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаДанные.Категория
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаДанные.НачисленыеСтраховыеВзносы КАК СуммаКтПФ_МС_ФОТФ,
		|	ВременнаяТаблицаДанные.НачсиленыеВзносыПоНПФ КАК СуммаКтГНПФ,
		|	ВременнаяТаблицаДанные.НачисленыеСтраховыеВзносы + ВременнаяТаблицаДанные.НачсиленыеВзносыПоНПФ КАК ИтогоОбязательства
		|ИЗ
		|	ВременнаяТаблицаДанные КАК ВременнаяТаблицаДанные";

	
	Запрос.УстановитьПараметр("ДатаН", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаК", КонецМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	
	Объект.СведенияОЗанятостиИЗаработнойПлате.Загрузить(РезультатЗапроса[1].Выгрузить());
	Объект.ФондОплатыТрудаПоКатегориям.Загрузить(РезультатЗапроса[2].Выгрузить());
	Объект.РасчетнаяВедомостьПоОбязательтвам.Загрузить(РезультатЗапроса[3].Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСоцфонд(Команда)
	ЗаполнитьСоцфондНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКвартальныйОтчетСФНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДляОтчетаПоСФКвартальномуОбороты.Показатель,
	|	ДанныеДляОтчетаПоСФКвартальномуОбороты.ЗначениеМеньшеСЗПОборот КАК ЗначениеМеньшеСЗПНГ,
	|	ДанныеДляОтчетаПоСФКвартальномуОбороты.ЗначениеБольшеСЗПОборот КАК ЗначениеБольшеСЗПНГ,
	|	0 КАК ЗначениеМеньшеСЗПКВ,
	|	0 КАК ЗначениеБольшеСЗПКВ,
	|	ДанныеДляОтчетаПоСФКвартальномуОбороты.ЗначениеМеньшеСЗПОборот + ДанныеДляОтчетаПоСФКвартальномуОбороты.ЗначениеБольшеСЗПОборот КАК ВсегоСНГ,
	|	0 КАК ВсегоКварт
	|ПОМЕСТИТЬ ВТСвертка
	|ИЗ
	|	РегистрНакопления.ДанныеДляОтчетаПоСФКвартальному.Обороты(НАЧАЛОПЕРИОДА(&Дата, ГОД), КОНЕЦПЕРИОДА(&Дата, КВАРТАЛ), Год, Организация = &Организация) КАК ДанныеДляОтчетаПоСФКвартальномуОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОтчетаПоСФКвартальномуОбороты.Показатель,
	|	0,
	|	0,
	|	ДанныеДляОтчетаПоСФКвартальномуОбороты.ЗначениеМеньшеСЗПОборот,
	|	ДанныеДляОтчетаПоСФКвартальномуОбороты.ЗначениеБольшеСЗПОборот,
	|	0,
	|	ДанныеДляОтчетаПоСФКвартальномуОбороты.ЗначениеМеньшеСЗПОборот + ДанныеДляОтчетаПоСФКвартальномуОбороты.ЗначениеБольшеСЗПОборот
	|ИЗ
	|	РегистрНакопления.ДанныеДляОтчетаПоСФКвартальному.Обороты(НАЧАЛОПЕРИОДА(&Дата, КВАРТАЛ), КОНЕЦПЕРИОДА(&Дата, КВАРТАЛ), Квартал, Организация = &Организация) КАК ДанныеДляОтчетаПоСФКвартальномуОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСвертка.Показатель,
	|	ВТСвертка.Показатель.НомерСтроки КАК НомО,
	|	СУММА(ВТСвертка.ЗначениеМеньшеСЗПНГ) КАК ЗначениеМеньшеСЗПНГ,
	|	СУММА(ВТСвертка.ЗначениеБольшеСЗПНГ) КАК ЗначениеБольшеСЗПНГ,
	|	СУММА(ВТСвертка.ЗначениеМеньшеСЗПКВ) КАК ЗначениеМеньшеСЗПКВ,
	|	СУММА(ВТСвертка.ЗначениеБольшеСЗПКВ) КАК ЗначениеБольшеСЗПКВ,
	|	СУММА(ВТСвертка.ВсегоСНГ) КАК ВсегоСНГ,
	|	СУММА(ВТСвертка.ВсегоКварт) КАК ВсегоКварт
	|ИЗ
	|	ВТСвертка КАК ВТСвертка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСвертка.Показатель
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомО";
Запрос.УстановитьПараметр("Организация", Объект.Организация);
Запрос.УстановитьПараметр("Дата",Объект.Дата);
Объект.СоцфондПоказателиЕжеквартальные.Загрузить(Запрос.Выполнить().Выгрузить());

	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКвартальныйОтчетСФ(Команда)
	ЗаполнитьКвартальныйОтчетСФНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьПодоходныйНалогНаСервере();
	Если  КонецМесяца(Объект.Дата) = КонецКвартала(Объект.Дата) Тогда 
		ЗаполнитьПодоходныйНалогПриложениеНаСервере();
	КонецЕсли;
	ЗаполнитьСоцфондНаСервере();
	ЗаполнитьКвартальныйОтчетСФНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиБиблиотек

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры

#КонецОбласти


