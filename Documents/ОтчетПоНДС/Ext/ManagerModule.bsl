#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Заполнение заголовка печатной формы основного отчета
//
Процедура ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьШапка, ИмяМакета)

	Организация 	= СтруктураПараметров.Организация;
	НачалоПериода 	= СтруктураПараметров.НачалоПериода;
	КонецПериода 	= СтруктураПараметров.КонецПериода;	

	ОКПО              				= Организация.КодПоОКПО;
	ИНН 							= Организация.ИНН;
	КодГНС 							= Организация.ГНС.Код;
	ОрганизацияНаменованиеПолное    = Организация.НаименованиеПолное;	
	
	КонтактныеДанные = ПолучитьКонтактнуюИнформацию(Организация);
	
	Индекс           = КонтактныеДанные.Индекс;
	АдрОбластьГород  = КонтактныеДанные.АдрОбластьГород;
	ЮрАдрес	         = КонтактныеДанные.АдресОрганизации; 
	Телефон		     = КонтактныеДанные.Телефон;	
			
	ОбластьШапка.Параметры.ОрганизацияНаименованиеПолное = ОрганизацияНаменованиеПолное;
	
	Если ИмяМакета = "ОтчетПоНДСОсновной" Тогда
		
		Если ЗначениеЗаполнено(АдрОбластьГород) Тогда 
			ОбластьШапка.Параметры.АдресГород = АдрОбластьГород;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЮрАдрес) Тогда 
			ОбластьШапка.Параметры.АдресУлица = ЮрАдрес;
		КонецЕсли;
		
		ОбластьШапка.Параметры.Телефон = Телефон;
		
		Если ЗначениеЗаполнено(Индекс) ТОгда
			
			ОбластьШапка.Параметры.ИНД1 = Сред(Индекс,1,1);
			ОбластьШапка.Параметры.ИНД2 = Сред(Индекс,2,1);
			ОбластьШапка.Параметры.ИНД3 = Сред(Индекс,3,1);
			ОбластьШапка.Параметры.ИНД4 = Сред(Индекс,4,1);
			ОбластьШапка.Параметры.ИНД5 = Сред(Индекс,5,1);
			ОбластьШапка.Параметры.ИНД6 = Сред(Индекс,6,1);
			
		КонецЕсли;

	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОКПО) Тогда 
		ОбластьШапка.Параметры.ОКПО1 = Сред(ОКПО,1,1);
		ОбластьШапка.Параметры.ОКПО2 = Сред(ОКПО,2,1);
		ОбластьШапка.Параметры.ОКПО3 = Сред(ОКПО,3,1);
		ОбластьШапка.Параметры.ОКПО4 = Сред(ОКПО,4,1);
		ОбластьШапка.Параметры.ОКПО5 = Сред(ОКПО,5,1);
		ОбластьШапка.Параметры.ОКПО6 = Сред(ОКПО,6,1);
		ОбластьШапка.Параметры.ОКПО7 = Сред(ОКПО,7,1);
		ОбластьШапка.Параметры.ОКПО8 = Сред(ОКПО,8,1);
	КонецЕсли;
	
	ОбластьШапка.Параметры.ИНН1 = Сред(ИНН, 1, 1);
	ОбластьШапка.Параметры.ИНН2 = Сред(ИНН, 2, 1);
	ОбластьШапка.Параметры.ИНН3 = Сред(ИНН, 3, 1);                           
	ОбластьШапка.Параметры.ИНН4 = Сред(ИНН, 4, 1);
	ОбластьШапка.Параметры.ИНН5 = Сред(ИНН, 5, 1);
	ОбластьШапка.Параметры.ИНН6 = Сред(ИНН, 6, 1);
	ОбластьШапка.Параметры.ИНН7 = Сред(ИНН, 7, 1);
	ОбластьШапка.Параметры.ИНН8 = Сред(ИНН, 8, 1);
	ОбластьШапка.Параметры.ИНН9 = Сред(ИНН, 9, 1);
	ОбластьШапка.Параметры.ИНН10 = Сред(ИНН, 10, 1);
	ОбластьШапка.Параметры.ИНН11 = Сред(ИНН, 11, 1);
	ОбластьШапка.Параметры.ИНН12 = Сред(ИНН, 12, 1);
	ОбластьШапка.Параметры.ИНН13 = Сред(ИНН, 13, 1);
	ОбластьШапка.Параметры.ИНН14 = Сред(ИНН, 14, 1);
	
	ОбластьШапка.Параметры.НаименованиеНалоговой = Организация.ГНС;
	
	ОбластьШапка.Параметры.ГНС1 = Сред(КодГНС, 1, 1);
	ОбластьШапка.Параметры.ГНС2 = Сред(КодГНС, 2, 1);
	ОбластьШапка.Параметры.ГНС3 = Сред(КодГНС, 3, 1);
	
	ОбластьШапка.Параметры.ДатаН1 = Сред(НачалоПериода, 1, 1);	
	ОбластьШапка.Параметры.ДатаН2 = Сред(НачалоПериода, 2, 1);	
	ОбластьШапка.Параметры.ДатаН3 = Сред(НачалоПериода, 4, 1);	
	ОбластьШапка.Параметры.ДатаН4 = Сред(НачалоПериода, 5, 1);	
	ОбластьШапка.Параметры.ДатаН5 = Сред(НачалоПериода, 7, 1);	
	ОбластьШапка.Параметры.ДатаН6 = Сред(НачалоПериода, 8, 1);	
	ОбластьШапка.Параметры.ДатаН7 = Сред(НачалоПериода, 9, 1);	
	ОбластьШапка.Параметры.ДатаН8 = Сред(НачалоПериода, 10, 1);	
	
	ОбластьШапка.Параметры.ДатаК1 = Сред(КонецПериода, 1, 1);	
	ОбластьШапка.Параметры.ДатаК2 = Сред(КонецПериода, 2, 1);	
	ОбластьШапка.Параметры.ДатаК3 = Сред(КонецПериода, 4, 1);	
	ОбластьШапка.Параметры.ДатаК4 = Сред(КонецПериода, 5, 1);	
	ОбластьШапка.Параметры.ДатаК5 = Сред(КонецПериода, 7, 1);	
	ОбластьШапка.Параметры.ДатаК6 = Сред(КонецПериода, 8, 1);	
	ОбластьШапка.Параметры.ДатаК7 = Сред(КонецПериода, 9, 1);	
	ОбластьШапка.Параметры.ДатаК8 = Сред(КонецПериода, 10, 1);
	
КонецПроцедуры

// Заполнение заголовка печатной формы у Приложений 1, 2, 3
//
Процедура ЗаполнитьШапкуРеестра(СтруктураПараметров, ОбластьШапка)

	Организация 	= СтруктураПараметров.Организация;
	НачалоПериода 	= СтруктураПараметров.НачалоПериода;
	КонецПериода 	= СтруктураПараметров.КонецПериода;	

	ОКПО              				= Организация.КодПоОКПО;
	ИНН 							= Организация.ИНН;
	КодГНС 							= Организация.ГНС.Код;
	ОрганизацияНаменованиеПолное    = Организация.НаименованиеПолное;
	
	ОбластьШапка.Параметры.ОрганизацияНаименованиеПолное = ОрганизацияНаменованиеПолное;
	
	Если ЗначениеЗаполнено(ОКПО) Тогда 
		ОбластьШапка.Параметры.ОКПО1 = Сред(ОКПО,1,1);
		ОбластьШапка.Параметры.ОКПО2 = Сред(ОКПО,2,1);
		ОбластьШапка.Параметры.ОКПО3 = Сред(ОКПО,3,1);
		ОбластьШапка.Параметры.ОКПО4 = Сред(ОКПО,4,1);
		ОбластьШапка.Параметры.ОКПО5 = Сред(ОКПО,5,1);
		ОбластьШапка.Параметры.ОКПО6 = Сред(ОКПО,6,1);
		ОбластьШапка.Параметры.ОКПО7 = Сред(ОКПО,7,1);
		ОбластьШапка.Параметры.ОКПО8 = Сред(ОКПО,8,1);
	КонецЕсли;
	
	ОбластьШапка.Параметры.ИНН1 = Сред(ИНН, 1, 1);
	ОбластьШапка.Параметры.ИНН2 = Сред(ИНН, 2, 1);
	ОбластьШапка.Параметры.ИНН3 = Сред(ИНН, 3, 1);                           
	ОбластьШапка.Параметры.ИНН4 = Сред(ИНН, 4, 1);
	ОбластьШапка.Параметры.ИНН5 = Сред(ИНН, 5, 1);
	ОбластьШапка.Параметры.ИНН6 = Сред(ИНН, 6, 1);
	ОбластьШапка.Параметры.ИНН7 = Сред(ИНН, 7, 1);
	ОбластьШапка.Параметры.ИНН8 = Сред(ИНН, 8, 1);
	ОбластьШапка.Параметры.ИНН9 = Сред(ИНН, 9, 1);
	ОбластьШапка.Параметры.ИНН10 = Сред(ИНН, 10, 1);
	ОбластьШапка.Параметры.ИНН11 = Сред(ИНН, 11, 1);
	ОбластьШапка.Параметры.ИНН12 = Сред(ИНН, 12, 1);
	ОбластьШапка.Параметры.ИНН13 = Сред(ИНН, 13, 1);
	ОбластьШапка.Параметры.ИНН14 = Сред(ИНН, 14, 1);
	
	ОбластьШапка.Параметры.НаименованиеНалоговой = Организация.ГНС;
	
	ОбластьШапка.Параметры.ГНС1 = Сред(КодГНС, 1, 1);
	ОбластьШапка.Параметры.ГНС2 = Сред(КодГНС, 2, 1);
	ОбластьШапка.Параметры.ГНС3 = Сред(КодГНС, 3, 1);
	
	ОбластьШапка.Параметры.ДатаН1 = Сред(НачалоПериода, 1, 1);	
	ОбластьШапка.Параметры.ДатаН2 = Сред(НачалоПериода, 2, 1);	
	ОбластьШапка.Параметры.ДатаН3 = Сред(НачалоПериода, 4, 1);	
	ОбластьШапка.Параметры.ДатаН4 = Сред(НачалоПериода, 5, 1);	
	ОбластьШапка.Параметры.ДатаН5 = Сред(НачалоПериода, 7, 1);	
	ОбластьШапка.Параметры.ДатаН6 = Сред(НачалоПериода, 8, 1);	
	ОбластьШапка.Параметры.ДатаН7 = Сред(НачалоПериода, 9, 1);	
	ОбластьШапка.Параметры.ДатаН8 = Сред(НачалоПериода, 10, 1);	
	
	ОбластьШапка.Параметры.ДатаК1 = Сред(КонецПериода, 1, 1);	
	ОбластьШапка.Параметры.ДатаК2 = Сред(КонецПериода, 2, 1);	
	ОбластьШапка.Параметры.ДатаК3 = Сред(КонецПериода, 4, 1);	
	ОбластьШапка.Параметры.ДатаК4 = Сред(КонецПериода, 5, 1);	
	ОбластьШапка.Параметры.ДатаК5 = Сред(КонецПериода, 7, 1);	
	ОбластьШапка.Параметры.ДатаК6 = Сред(КонецПериода, 8, 1);	
	ОбластьШапка.Параметры.ДатаК7 = Сред(КонецПериода, 9, 1);	
	ОбластьШапка.Параметры.ДатаК8 = Сред(КонецПериода, 10, 1);
	
КонецПроцедуры

// Процедура - Вывод строки реестра
//
// Параметры:
//  ТабличныйДокумент	- 	 - 
//  ВыборкаДанных	 	- 	 - 
//  Макет			 	- 	 - 
//  МассивПроверки	 	- 	 - 
//
Процедура ВыводСтрокиРеестра(ТабличныйДокумент, СтрокаТаблицы, ОбластьСтрокаРеестра, МассивПроверки, ИмяМакета)
		
	ОбластьСтрокаРеестра.Параметры.Заполнить(СтрокаТаблицы);
	
	Если ИмяМакета = "ОтчетРеестрПоставок" ИЛИ ИмяМакета = "ОтчетРеестрПриобретенных" 
		Или ИмяМакета = "ОтчетРеестрПоставокНаОсновеНалоговогоКонтракта" Или ИмяМакета = "ОтчетРеестрПриобретенныхНаОсновеНалоговогоКонтракта" Тогда
		
		ИНН  = ?(ЗначениеЗаполнено(СтрокаТаблицы.ИННКонтрагента), СтрокаТаблицы.ИННКонтрагента, "99999999999999");
		Дата = СтрокаТаблицы.ДатаПоставки;
		
		ОбластьСтрокаРеестра.Параметры.ИНН1 	   = Сред(ИНН, 1, 1);
		ОбластьСтрокаРеестра.Параметры.ИНН2 	   = Сред(ИНН, 2, 1);
		ОбластьСтрокаРеестра.Параметры.ИНН3 	   = Сред(ИНН, 3, 1);
		ОбластьСтрокаРеестра.Параметры.ИНН4 	   = Сред(ИНН, 4, 1);
		ОбластьСтрокаРеестра.Параметры.ИНН5 	   = Сред(ИНН, 5, 1);
		ОбластьСтрокаРеестра.Параметры.ИНН6 	   = Сред(ИНН, 6, 1);
		ОбластьСтрокаРеестра.Параметры.ИНН7 		= Сред(ИНН, 7, 1);
		ОбластьСтрокаРеестра.Параметры.ИНН8 		= Сред(ИНН, 8, 1);
		ОбластьСтрокаРеестра.Параметры.ИНН9 		= Сред(ИНН, 9, 1);
		ОбластьСтрокаРеестра.Параметры.ИНН10 		= Сред(ИНН, 10, 1);
		ОбластьСтрокаРеестра.Параметры.ИНН11 		= Сред(ИНН, 11, 1);
		ОбластьСтрокаРеестра.Параметры.ИНН12 		= Сред(ИНН, 12, 1);
		ОбластьСтрокаРеестра.Параметры.ИНН13 		= Сред(ИНН, 13, 1);
		ОбластьСтрокаРеестра.Параметры.ИНН14 		= Сред(ИНН, 14, 1);     
		
		Если ЗначениеЗаполнено(Дата) Тогда
			ОбластьСтрокаРеестра.Параметры.ДатаДок1		= Сред(Дата, 1, 1);
			ОбластьСтрокаРеестра.Параметры.ДатаДок2		= Сред(Дата, 2, 1);
			ОбластьСтрокаРеестра.Параметры.ДатаДок3		= Сред(Дата, 4, 1);
			ОбластьСтрокаРеестра.Параметры.ДатаДок4		= Сред(Дата, 5, 1);
			ОбластьСтрокаРеестра.Параметры.ДатаДок5		= Сред(Дата, 7, 1);
			ОбластьСтрокаРеестра.Параметры.ДатаДок6		= Сред(Дата, 8, 1);
			ОбластьСтрокаРеестра.Параметры.ДатаДок7		= Сред(Дата, 9, 1);
			ОбластьСтрокаРеестра.Параметры.ДатаДок8		= Сред(Дата, 10, 1);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.ДатаВыписки) Тогда
			ДатаВыписки = СтрокаТаблицы.ДатаВыписки;
			ОбластьСтрокаРеестра.Параметры.ДатаВыписки1		= Сред(ДатаВыписки, 1, 1);
			ОбластьСтрокаРеестра.Параметры.ДатаВыписки2		= Сред(ДатаВыписки, 2, 1);
			ОбластьСтрокаРеестра.Параметры.ДатаВыписки3		= Сред(ДатаВыписки, 4, 1);
			ОбластьСтрокаРеестра.Параметры.ДатаВыписки4		= Сред(ДатаВыписки, 5, 1);
			ОбластьСтрокаРеестра.Параметры.ДатаВыписки5		= Сред(ДатаВыписки, 7, 1);
			ОбластьСтрокаРеестра.Параметры.ДатаВыписки6		= Сред(ДатаВыписки, 8, 1);
			ОбластьСтрокаРеестра.Параметры.ДатаВыписки7		= Сред(ДатаВыписки, 9, 1);
			ОбластьСтрокаРеестра.Параметры.ДатаВыписки8		= Сред(ДатаВыписки, 10, 1);
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.КодГНС) Тогда
			КодГНС = СтрокаТаблицы.КодГНС;
			ОбластьСтрокаРеестра.Параметры.КодГНС1 = Сред(КодГНС, 1, 1);
			ОбластьСтрокаРеестра.Параметры.КодГНС2 = Сред(КодГНС, 2, 1);
			ОбластьСтрокаРеестра.Параметры.КодГНС3 = Сред(КодГНС, 3, 1);	
		КонецЕсли;

		Если ЗначениеЗаполнено(СтрокаТаблицы.КодПоставки) Тогда
			КодПоставки = СтрокаТаблицы.КодПоставки;
			ОбластьСтрокаРеестра.Параметры.КодПоставки1 = Сред(КодПоставки, 1, 1);
			ОбластьСтрокаРеестра.Параметры.КодПоставки2 = Сред(КодПоставки, 2, 1);
			ОбластьСтрокаРеестра.Параметры.КодПоставки3 = Сред(КодПоставки, 3, 1);	
		КонецЕсли;

		// НомерСФ может быть номером документа, а у документа может быть префикс (буква),
		// поэтому запись происходит через попытку и если обнаруживается буква, то
		// просто берутся 6 цифр с конца.
		НомерСФ = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(СтрокаТаблицы.НомерСФ);
		Попытка
			ОбластьСтрокаРеестра.Параметры.НомерСФ = Формат(Число(?(НомерСФ = "", 0, НомерСФ)),"ЧЦ=6; ЧВН=; ЧГ=");
		Исключение
			ОбластьСтрокаРеестра.Параметры.НомерСФ = Прав(СтрокаТаблицы.НомерСФ, 6)
		КонецПопытки;				
		ОбластьСтрокаРеестра.Параметры.СерияСФ = СтрокаТаблицы.СерияСФ;
		
		КорНомерСФ = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(СтрокаТаблицы.КорНомерСФ);
		Попытка
			ОбластьСтрокаРеестра.Параметры.КорНомерСФ = Формат(Число(?(КорНомерСФ = "", 0, КорНомерСФ)),"ЧЦ=6; ЧВН=; ЧГ=");
		Исключение
			ОбластьСтрокаРеестра.Параметры.КорНомерСФ = Прав(СтрокаТаблицы.КорНомерСФ, 6)
		КонецПопытки;
		ОбластьСтрокаРеестра.Параметры.КорСерияСФ = СтрокаТаблицы.КорСерияСФ;
		
	ИначеЕсли ИмяМакета = "ОтчетРеестрВвезенных" Тогда
		ГТДДата 	= СтрокаТаблицы.ГТДДата;
		ПДДата 		= СтрокаТаблицы.ПДДата;
		КодСтраны 	= СтрокаТаблицы.КодСтраны;
		
		Если НЕ ГТДДата = Дата('00010101') Тогда
			ОбластьСтрокаРеестра.Параметры.ГТДДата1 = Сред(ГТДДата, 1, 1);
			ОбластьСтрокаРеестра.Параметры.ГТДДата2 = Сред(ГТДДата, 2, 1);
			ОбластьСтрокаРеестра.Параметры.ГТДДата3 = Сред(ГТДДата, 4, 1);
			ОбластьСтрокаРеестра.Параметры.ГТДДата4 = Сред(ГТДДата, 5, 1);
			ОбластьСтрокаРеестра.Параметры.ГТДДата5 = Сред(ГТДДата, 7, 1);
			ОбластьСтрокаРеестра.Параметры.ГТДДата6 = Сред(ГТДДата, 8, 1);
			ОбластьСтрокаРеестра.Параметры.ГТДДата7 = Сред(ГТДДата, 9, 1);
			ОбластьСтрокаРеестра.Параметры.ГТДДата8 = Сред(ГТДДата, 10, 1);
		КонецЕсли;
		
		Если НЕ ПДДата = Дата('00010101') Тогда
			ОбластьСтрокаРеестра.Параметры.ПДДата1 = Сред(ПДДата, 1, 1);
			ОбластьСтрокаРеестра.Параметры.ПДДата2 = Сред(ПДДата, 2, 1);
			ОбластьСтрокаРеестра.Параметры.ПДДата3 = Сред(ПДДата, 4, 1);
			ОбластьСтрокаРеестра.Параметры.ПДДата4 = Сред(ПДДата, 5, 1);
			ОбластьСтрокаРеестра.Параметры.ПДДата5 = Сред(ПДДата, 7, 1);
			ОбластьСтрокаРеестра.Параметры.ПДДата6 = Сред(ПДДата, 8, 1);
			ОбластьСтрокаРеестра.Параметры.ПДДата7 = Сред(ПДДата, 9, 1);
			ОбластьСтрокаРеестра.Параметры.ПДДата8 = Сред(ПДДата, 10, 1);
		КонецЕсли;
		
		Если НЕ КодСтраны = "" Тогда
			ОбластьСтрокаРеестра.Параметры.КодСт1 = Сред(КодСтраны, 1, 1);
			ОбластьСтрокаРеестра.Параметры.КодСт2 = Сред(КодСтраны, 2, 1);
			ОбластьСтрокаРеестра.Параметры.КодСт3 = Сред(КодСтраны, 3, 1);	
		КонецЕсли;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьСтрокаРеестра);
	МассивПроверки.Добавить(ОбластьСтрокаРеестра);
	
КонецПроцедуры	
		
// Процедура - Сформировать пустой бланк
//
// Параметры:
//  ТабличныйДокумент	- 	 - 
//  НачалоПериода	 	- 	 - 
//  КонецПериода	 	- 	 - 
//  Организация		 	- 	 - 
//
Процедура СформироватьПустойБланк(СтруктураПараметров, ТабличныйДокумент, ИмяМакета)
	
	ТабличныйДокумент.Очистить();
	
	Если ИмяМакета = "ОтчетРеестрПоставок" Тогда
		Макет = ПолучитьМакет("ПФ_MXL_РеестрПоставок");
	ИначеЕсли ИмяМакета = "ОтчетРеестрВвезенных" Тогда
		Макет = ПолучитьМакет("ПФ_MXL_РеестрВвезенных");
	ИначеЕсли ИмяМакета = "ОтчетРеестрПоставокНаОсновеНалоговогоКонтракта" Тогда
		Макет = ПолучитьМакет("ПФ_MXL_РеестрПоставокНаОсновеНалоговогоКонтракта");
	КонецЕсли;
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ЗаполнитьШапкуРеестра(СтруктураПараметров, ОбластьШапка);
	
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	
	ОбластьИтогиПоЛисту   = Макет.ПолучитьОбласть("ИтогиПоЛисту");
	ОбластьИтогиПоРеестру = Макет.ПолучитьОбласть("ИтогиПоРеестру");
	ОбластьПодвал		  = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвалШтамп	  = Макет.ПолучитьОбласть("ПодвалШтамп");
	ОбластьСтрокаРеестра  = Макет.ПолучитьОбласть("СтрокаРеестра");
	
	МассивПроверки = Новый Массив;
	МассивПроверки.Добавить(ОбластьШапка);
	МассивПроверки.Добавить(ОбластьШапкаТаблицы);
	МассивПроверки.Добавить(ОбластьИтогиПоЛисту);
	МассивПроверки.Добавить(ОбластьПодвалШтамп);
	
	Сч = 0;
	Пока НЕ Сч = 7 Цикл
		МассивПроверки.Добавить(ОбластьСтрокаРеестра);
		Сч = Сч +1;
	КонецЦикла;
	
	МассивПроверки.Удалить(2);
	МассивПроверки.Удалить(2);
	МассивПроверки.Добавить(ОбластьИтогиПоЛисту);
	МассивПроверки.Добавить(ОбластьПодвалШтамп);
	
	Для Каждого Область Из МассивПроверки Цикл 
		ТабличныйДокумент.Вывести(Область);
	КонецЦикла;
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	МассивПроверки.Очистить();
	
	МассивПроверки = Новый Массив;
	МассивПроверки.Добавить(ОбластьШапкаТаблицы);
	МассивПроверки.Добавить(ОбластьИтогиПоРеестру);
	МассивПроверки.Добавить(ОбластьПодвал);
	
	Сч = 0;
	Пока НЕ Сч = 19 Цикл
		МассивПроверки.Добавить(ОбластьСтрокаРеестра);
		Сч = Сч +1;
	КонецЦикла;
	
	МассивПроверки.Удалить(1);
	МассивПроверки.Удалить(1);
	МассивПроверки.Добавить(ОбластьИтогиПоРеестру);
	МассивПроверки.Добавить(ОбластьПодвал);
	
	Для Каждого Область Из МассивПроверки Цикл 
		ТабличныйДокумент.Вывести(Область);
	КонецЦикла;
	
КонецПроцедуры

// Процедура - Подвал с итогами первой страницы
//
// Параметры:
//  ТабличныйДокумент			 - 	 - 
//  ИтогоПоЛистуБНДС			 - 	 - 
//  ИтогоПоЛистуНДС				 - 	 - 
//  ИтогоПоЛистуОбщаяСтоимость	 - 	 - 
//  ОбластьИтогиПоЛисту			 - 	 - 
//  ОбластьПодвал				 - 	 - 
//  ОбластьШапкаТаблицы			 - 	 - 
//  МассивПроверки				 - 	 - 
//
Процедура ПодвалСИтогамиПервойСтраницы(ИтогоПоЛисту, МассивПроверки, СтруктураОбластейМакета, ТабличныйДокумент, ИмяМакета)
	
	Если ИмяМакета = "ОтчетРеестрПриобретенных" Тогда	
		СтруктураОбластейМакета.ОбластьИтогиПоЛисту.Параметры.СтоимостьБезНДС 	= ИтогоПоЛисту.ИтогоПоЛистуБНДС;
		СтруктураОбластейМакета.ОбластьИтогиПоЛисту.Параметры.СуммаНДС 			= ИтогоПоЛисту.ИтогоПоЛистуНДС;
		СтруктураОбластейМакета.ОбластьИтогиПоЛисту.Параметры.СуммаПодлежащаяКЗачетуНДС 	= ИтогоПоЛисту.ИтогоПоЛистуНДСЗачет;
		
		ТабличныйДокумент.Вывести(СтруктураОбластейМакета.ОбластьИтогиПоЛисту);
		ТабличныйДокумент.Вывести(СтруктураОбластейМакета.ОбластьПодвал);
		
		ИтогоПоЛисту.ИтогоПоЛистуБНДС        = 0;
		ИтогоПоЛисту.ИтогоПоЛистуНДС         = 0;
		ИтогоПоЛисту.ИтогоПоЛистуНДСЗачет    = 0;
		
	ИначеЕсли ИмяМакета = "ОтчетРеестрВвезенных" Тогда
		СтруктураОбластейМакета.ОбластьИтогиПоЛисту.Параметры.Заполнить(ИтогоПоЛисту);
		ТабличныйДокумент.Вывести(СтруктураОбластейМакета.ОбластьИтогиПоЛисту);
		ТабличныйДокумент.Вывести(СтруктураОбластейМакета.ОбластьПодвалШтамп);	
	КонецЕсли;
	
	МассивПроверки = Новый Массив;
	МассивПроверки.Добавить(СтруктураОбластейМакета.ОбластьШапкаТаблицы);
	
КонецПроцедуры // СформироватьОтчет()

// Процедура - Подвал с итогами последней страницы
//
// Параметры:
//  ТабличныйДокумент			 - 	 - 
//  ИтогоПоРееструБНДС			 - 	 - 
//  ИтогоПоРееструНДС			 - 	 - 
//  ИтогоПоРееструОбщаяСтоимость - 	 - 
//  СтруктураНДС				 - 	 - 
//  ОбластьИтогиПоРеестру		 - 	 - 
//  ОбластьПодвал				 - 	 - 
//  КоличесвтоТекушегоЛиста		 - 	 - 
//  Макет						 - 	 - 
//  МассивПроверки				 - 	 - 
//
Процедура ПодвалСИтогамиПоследнейСтраницы(СтруктураПараметров, МассивПроверки, СтруктураОбластейМакета, ТабличныйДокумент, 
											КоличествоТекушегоЛиста, ИтогоПоРееструЕАЭС = Неопределено, ОдинЛист = Ложь)
	
	Если СтруктураПараметров.ИмяМакета = "ОтчетРеестрПриобретенных" Или СтруктураПараметров.ИмяМакета = "ОтчетРеестрПриобретенныхНаОсновеНалоговогоКонтракта" Тогда
		СтруктураОбластейМакета.ОбластьИтогиПоРеестру.Параметры.СтоимостьБезНДС				= СтруктураПараметров.ИтогоПоРеестру.ИтогоПоРееструБНДС;
		СтруктураОбластейМакета.ОбластьИтогиПоРеестру.Параметры.СуммаНДС 					= СтруктураПараметров.ИтогоПоРеестру.ИтогоПоРееструНДС;
		СтруктураОбластейМакета.ОбластьИтогиПоРеестру.Параметры.СуммаПодлежащаяКЗачетуНДС 	= СтруктураПараметров.ИтогоПоРеестру.ИтогоПоРееструНДСЗачет;
		
		МассивПроверки.Добавить(СтруктураОбластейМакета.ОбластьИтогиПоРеестру);
		МассивПроверки.Добавить(СтруктураОбластейМакета.ОбластьПодвал);
		
		Пока  Не КоличествоТекушегоЛиста >= 13 Цикл 
			ОбластьСтрокаРеестра 	= СтруктураПараметров.Макет.ПолучитьОбласть("СтрокаРеестра");
			ТабличныйДокумент.Вывести(ОбластьСтрокаРеестра);
			КоличествоТекушегоЛиста = КоличествоТекушегоЛиста +1;
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(СтруктураОбластейМакета.ОбластьИтогиПоРеестру);
	
	ИначеЕсли СтруктураПараметров.ИмяМакета = "ОтчетРеестрВвезенных" Тогда
		СтруктураОбластейМакета.ОбластьИтогиПоРеестру.Параметры.Заполнить(СтруктураПараметров.ИтогоПоРеестру);	
		СтруктураОбластейМакета.ОбластьИтогиПоРеестру.Параметры.Заполнить(ИтогоПоРееструЕАЭС);
		
		МассивПроверки.Добавить(СтруктураОбластейМакета.ОбластьИтогиПоРеестру);
		МассивПроверки.Добавить(СтруктураОбластейМакета.ОбластьПодвал);
		
		Пока  Не КоличествоТекушегоЛиста >= 8 Цикл 
			ОбластьСтрокаРеестра 	= СтруктураПараметров.Макет.ПолучитьОбласть("СтрокаРеестра");
			ТабличныйДокумент.Вывести(ОбластьСтрокаРеестра);
			КоличествоТекушегоЛиста = КоличествоТекушегоЛиста +1;
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(СтруктураОбластейМакета.ОбластьИтогиПоРеестру);
		
	КонецЕсли;
	
	Если ОдинЛист Тогда
		ТабличныйДокумент.Вывести(СтруктураОбластейМакета.ОбластьПодвалШтамп);
	Иначе
		ТабличныйДокумент.Вывести(СтруктураОбластейМакета.ОбластьПодвал);
	КонецЕсли;
		
КонецПроцедуры

// Процедура - Подвал промежуточной страницы с итогами
//
// Параметры:
//  ТабличныйДокумент			 - 	 - 
//  ИтогоПоЛистуБНДС			 - 	 - 
//  ИтогоПоЛистуНДС				 - 	 - 
//  ИтогоПоЛистуОбщаяСтоимость	 - 	 - 
//  ОбластьИтогиПоЛисту			 - 	 - 
//  ОбластьПодвал				 - 	 - 
//  ОбластьШапка				 - 	 - 
//  ОбластьШапкаТаблицы			 - 	 - 
//  Макет						 - 	 - 
//  МассивПроверки				 - 	 - 
//  КоличествоОпераций			 - 	 - 
//  КоличествоВывода			 - 	 - 
//  НомерЛиста					 - 	 - 
//
Процедура ПодвалПромежуточнойСтраницыСИтогами(ИтогоПоЛисту, СтруктураОбластейМакета, ТабличныйДокумент, МассивПроверки, СтруктураПараметров, 
													НомерЛиста, Макет = Неопределено)
				
	Если СтруктураПараметров.ИмяМакета = "ОтчетРеестрПриобретенных" Или СтруктураПараметров.ИмяМакета = "ОтчетРеестрПриобретенныхНаОсновеНалоговогоКонтракта" Тогда				
		СтруктураОбластейМакета.ОбластьИтогиПоЛисту.Параметры.СтоимостьБезНДС 			= ИтогоПоЛисту.ИтогоПоЛистуБНДС;
		СтруктураОбластейМакета.ОбластьИтогиПоЛисту.Параметры.СуммаНДС 					= ИтогоПоЛисту.ИтогоПоЛистуНДС;
		СтруктураОбластейМакета.ОбластьИтогиПоЛисту.Параметры.СуммаПодлежащаяКЗачетуНДС = ИтогоПоЛисту.ИтогоПоЛистуНДСЗачет;
		
		ТабличныйДокумент.Вывести(СтруктураОбластейМакета.ОбластьИтогиПоЛисту);
		ТабличныйДокумент.Вывести(СтруктураОбластейМакета.ОбластьПодвал);
		
		ИтогоПоЛисту.ИтогоПоЛистуБНДС        = 0;
		ИтогоПоЛисту.ИтогоПоЛистуНДС         = 0;
		ИтогоПоЛисту.ИтогоПоЛистуНДСЗачет    = 0;
		
		МассивПроверки = Новый Массив;
		МассивПроверки.Добавить(СтруктураОбластейМакета.ОбластьШапкаТаблицы);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Если СтруктураПараметров.КоличествоОпераций - СтруктураПараметров.КоличествоВывода <= 22 Тогда 
			ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЗаключительногоЛиста");
		Иначе 
			ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЛиста");
		КонецЕсли;
		
		НомерЛиста = НомерЛиста + 1;
		ОбластьНомерЛиста.Параметры.НомЛиста = НомерЛиста;
		МассивПроверки.Добавить(ОбластьНомерЛиста);
		ТабличныйДокумент.Вывести(ОбластьНомерЛиста);
		ТабличныйДокумент.Вывести(СтруктураОбластейМакета.ОбластьШапкаТаблицы);
		
	ИначеЕсли СтруктураПараметров.ИмяМакета = "ОтчетРеестрВвезенных" Тогда
		СтруктураОбластейМакета.ОбластьИтогиПоЛисту.Параметры.Заполнить(ИтогоПоЛисту);

		ТабличныйДокумент.Вывести(СтруктураОбластейМакета.ОбластьИтогиПоЛисту);
		ТабличныйДокумент.Вывести(СтруктураОбластейМакета.ОбластьПодвал);
		
		МассивПроверки = Новый Массив;
		МассивПроверки.Добавить(СтруктураОбластейМакета.ОбластьШапкаТаблицы);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		НомерЛистаДляВывода = Прав("00" + НомерЛиста, 3); 
		
		Если СтруктураПараметров.КоличествоОпераций - СтруктураПараметров.КоличествоВывода <= 18 Тогда
			СтруктураОбластейМакета.ОбластьНомерЗаключительногоЛиста.Параметры.НЗЛ1 = Сред(НомерЛистаДляВывода,1,1);
			СтруктураОбластейМакета.ОбластьНомерЗаключительногоЛиста.Параметры.НЗЛ2 = Сред(НомерЛистаДляВывода,2,1);
			СтруктураОбластейМакета.ОбластьНомерЗаключительногоЛиста.Параметры.НЗЛ3 = Сред(НомерЛистаДляВывода,3,1);
			ТабличныйДокумент.Вывести(СтруктураОбластейМакета.ОбластьНомерЗаключительногоЛиста);
		Иначе
			СтруктураОбластейМакета.ОбластьНомерЛиста.Параметры.НТЛ1 = Сред(НомерЛистаДляВывода,1,1);
			СтруктураОбластейМакета.ОбластьНомерЛиста.Параметры.НТЛ2 = Сред(НомерЛистаДляВывода,2,1);
			СтруктураОбластейМакета.ОбластьНомерЛиста.Параметры.НТЛ3 = Сред(НомерЛистаДляВывода,3,1);
			ТабличныйДокумент.Вывести(СтруктураОбластейМакета.ОбластьНомерЛиста);
		КонецЕсли;	
		
		НомерЛиста = НомерЛиста + 1;
		
		ТабличныйДокумент.Вывести(СтруктураОбластейМакета.ОбластьШапкаТаблицы);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Расчет итоговых значений
//
// Параметры:
//  ВыборкаДанных				 - 	 - 
//  ИтогоПоЛистуБНДС			 - 	 - 
//  ИтогоПоЛистуНДС				 - 	 - 
//  ИтогоПоЛистуОбщаяСтоимость	 - 	 - 
//  ИтогоПоРееструБНДС			 - 	 - 
//  ИтогоПоРееструНДС			 - 	 - 
//  ИтогоПоРееструОбщаяСтоимость - 	 - 
Процедура РасчетИтоговыхЗначений(ВыборкаДанных, ИтогоПоЛисту, ИтогоПоРеестру, ИмяМакета)
	
	Если ИмяМакета = "ОтчетРеестрПриобретенных" Тогда
		ИтогоПоЛисту.ИтогоПоЛистуБНДС     = ИтогоПоЛисту.ИтогоПоЛистуБНДС 	  + ВыборкаДанных.СтоимостьБезНДС;
		ИтогоПоЛисту.ИтогоПоЛистуНДС      = ИтогоПоЛисту.ИтогоПоЛистуНДС  	  + ВыборкаДанных.СуммаНДС;
		ИтогоПоЛисту.ИтогоПоЛистуНДСЗачет = ИтогоПоЛисту.ИтогоПоЛистуНДСЗачет + ВыборкаДанных.СуммаПодлежащаяКЗачетуНДС;
		
		ИтогоПоРеестру.ИтогоПоРееструБНДС     = ИтогоПоРеестру.ИтогоПоРееструБНДС 	  + ВыборкаДанных.СтоимостьБезНДС;
		ИтогоПоРеестру.ИтогоПоРееструНДС      = ИтогоПоРеестру.ИтогоПоРееструНДС  	  + ВыборкаДанных.СуммаНДС;
		ИтогоПоРеестру.ИтогоПоРееструНДСЗачет = ИтогоПоРеестру.ИтогоПоРееструНДСЗачет + ВыборкаДанных.СуммаПодлежащаяКЗачетуНДС;
		
	ИначеЕсли ИмяМакета = "ОтчетРеестрВвезенных" Тогда	
		ИтогоПоЛисту.ГТДСуммаНДС	= ИтогоПоЛисту.ГТДСуммаНДС 	  + ВыборкаДанных.ГТДСуммаНДС;		
		ИтогоПоЛисту.ПДСуммаНДС  	= ИтогоПоЛисту.ПДСуммаНДС 	  + ВыборкаДанных.ПДСуммаНДС;	
		ИтогоПоЛисту.ГТДСуммаБезНДС = ИтогоПоЛисту.ГТДСуммаБезНДС + ВыборкаДанных.ГТДСуммаБезНДС;	
		ИтогоПоЛисту.ПДЗачетНДС  	= ИтогоПоЛисту.ПДЗачетНДС     + ВыборкаДанных.ПДЗачетНДС;
		
		ИтогоПоРеестру.ГТДСуммаНДС	  = ИтогоПоРеестру.ГТДСуммаНДС	 + ВыборкаДанных.ГТДСуммаНДС;
		ИтогоПоРеестру.ПДСуммаНДС	  = ИтогоПоРеестру.ПДСуммаНДС	  + ВыборкаДанных.ПДСуммаНДС;
		ИтогоПоРеестру.ГТДСуммаБезНДС = ИтогоПоРеестру.ГТДСуммаБезНДС + ВыборкаДанных.ГТДСуммаБезНДС;
		ИтогоПоРеестру.ПДЗачетНДС  	  = ИтогоПоРеестру.ПДЗачетНДС 	  + ВыборкаДанных.ПДЗачетНДС;
	КонецЕсли;
	
КонецПроцедуры

// Функция -ПолучитьКонтактнуюИнформацию
//
// Параметры:
//  Организация  - Спр.Ссылка - Спр.Органинизации 
// Возвращаемое значение:
//  Структура   - структура данных контактной информации
//
Функция ПолучитьКонтактнуюИнформацию(Организация)
	
	СведенияОбОрганизации = БухгалтерскийУчетСервер.ПолучитьСведенияОбОрганизации(Организация);

	Индекс = СведенияОбОрганизации.Индекс; 
	
	ГородНасПункт   = ?(СведенияОбОрганизации.Город  = "",СведенияОбОрганизации.НаселенныйПункт,СведенияОбОрганизации.Город);
	АдрОбластьГород = ?(СведенияОбОрганизации.Регион = "","",СведенияОбОрганизации.Регион + ",")
		+ ?(СведенияОбОрганизации.Район  = "","", " " + СведенияОбОрганизации.Район + ",") 
		+ ?(ГородНасПункт = "",""," " + ГородНасПункт); 
	АдресОрганизации = ?(СведенияОбОрганизации.Улица    = "","",СведенияОбОрганизации.Улица + ",")
		+ ?(СведенияОбОрганизации.Дом      = "",""," " + СведенияОбОрганизации.Дом + ",")
		+ ?(СведенияОбОрганизации.Корпус   = "",""," " + СведенияОбОрганизации.Корпус + ",")
		+ ?(СведенияОбОрганизации.Квартира = "",""," " + СведенияОбОрганизации.Квартира);
		
	Телефон = СведенияОбОрганизации.Тел;
	
	Структура = Новый Структура("Индекс,АдрОбластьГород,АдресОрганизации,Телефон", Индекс,АдрОбластьГород,АдресОрганизации,Телефон);
	
	Возврат Структура;
	
КонецФункции // ПолучитьАдресОрганизации()

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой НДС
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьОтчетаПоНДС(МассивОбъектов, ОбъектыПечати)	
	Запрос = Новый Запрос;		
	Запрос.Текст =	
		"ВЫБРАТЬ
		|	ОтчетПоНДС.Ссылка,
		|	ОтчетПоНДС.Организация,
		|	ОтчетПоНДС.Дата,
		|	ОтчетПоНДС.ВидОтчета,
		|	ОтчетПоНДС.ОтчетОсновной.(
		|		Строка КАК Строка,
		|		Содержание,
		|		Сумма
		|	)
		|ИЗ
		|	Документ.ОтчетПоНДС КАК ОтчетПоНДС
		|ГДЕ
		|	ОтчетПоНДС.Ссылка В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Строка";	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоНДС_ОтчетПоНДС";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоНДС.ПФ_MXL_ОтчетПоНДС");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ИмяМакета = "ОтчетПоНДСОсновной";

	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Шапка.ВидОтчета = Перечисления.ВидыОтчетаПоНДС.Первоначальный Тогда
			ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокПервоначальный");
			
		ИначеЕсли Шапка.ВидОтчета = Перечисления.ВидыОтчетаПоНДС.Уточненный Тогда
			ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокУточненный");
			
		Иначе
			ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокЛиквидационный");
		КонецЕсли;
			
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));
		
		ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьШапка, ИмяМакета);	
		
		ОбластьШапка.Параметры.ОблПоставкиКР 			= 0;
		ОбластьШапка.Параметры.ОблПоставкиНул 			= 0;
		ОбластьШапка.Параметры.ОблПоставкиЕАЭС 			= 0;
		ОбластьШапка.Параметры.ОсвИНеобл 				= 0;
		ОбластьШапка.Параметры.ВсегоПоставки 			= 0;
		ОбластьШапка.Параметры.ПриобретениеКР 			= 0;
		ОбластьШапка.Параметры.ИмпортКР 				= 0;
		ОбластьШапка.Параметры.ИмпортЕАЭС 				= 0;
		ОбластьШапка.Параметры.ВсегоПриобретение 		= 0;
		ОбластьШапка.Параметры.ВсегоНДСПоставки 		= 0;
		ОбластьШапка.Параметры.НДСПриобретение 			= 0;
		ОбластьШапка.Параметры.НДСИмпорт 				= 0;
		ОбластьШапка.Параметры.НДСЕАЭС 					= 0;
		ОбластьШапка.Параметры.НДСНеЗачет 				= 0;
		ОбластьШапка.Параметры.НДСЗачет 				= 0;
		ОбластьШапка.Параметры.НДСЗачетНул 				= 0;
		ОбластьШапка.Параметры.НДСОбязательство 		= 0;
		ОбластьШапка.Параметры.НДСОбязательствоСельхоз 	= 0;
		ОбластьШапка.Параметры.НДСОбязательствоВсего 	= 0;
		ОбластьШапка.Параметры.ОблПоставки 				= 0;
		ОбластьШапка.Параметры.НДСЗаПроизвПоставки 		= 0;
		ОбластьШапка.Параметры.ПриобретМатРесурсы		= 0;
		ОбластьШапка.Параметры.НДСЗаПриобретМатРесурсы 	= 0;
		
		Выборка = Шапка.ОтчетОсновной.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.Строка = "050" Тогда
				ОбластьШапка.Параметры.ОблПоставкиКР 			= Выборка.Сумма;	
			ИначеЕсли Выборка.Строка = "051" Тогда
				ОбластьШапка.Параметры.ОблПоставкиНул 			= Выборка.Сумма;			
			ИначеЕсли Выборка.Строка = "052" Тогда
				ОбластьШапка.Параметры.ОблПоставкиЕАЭС 			= Выборка.Сумма;		
			ИначеЕсли Выборка.Строка = "053" Тогда
				ОбластьШапка.Параметры.ОсвИНеобл 				= Выборка.Сумма;		
			ИначеЕсли Выборка.Строка = "054" Тогда
				ОбластьШапка.Параметры.ВсегоПоставки 			= Выборка.Сумма;			
			ИначеЕсли Выборка.Строка = "055" Тогда
				ОбластьШапка.Параметры.ПриобретениеКР 			= Выборка.Сумма;
			ИначеЕсли Выборка.Строка = "056" Тогда
				ОбластьШапка.Параметры.ИмпортКР 				= Выборка.Сумма;			
			ИначеЕсли Выборка.Строка = "057" Тогда
				ОбластьШапка.Параметры.ИмпортЕАЭС 				= Выборка.Сумма;			
			ИначеЕсли Выборка.Строка = "058" Тогда
				ОбластьШапка.Параметры.ВсегоПриобретение 		= Выборка.Сумма;			
			ИначеЕсли Выборка.Строка = "059" Тогда
				ОбластьШапка.Параметры.ВсегоНДСПоставки 		= Выборка.Сумма;			
			ИначеЕсли Выборка.Строка = "060" Тогда
				ОбластьШапка.Параметры.НДСПриобретение 			= Выборка.Сумма;			
			ИначеЕсли Выборка.Строка = "061" Тогда
				ОбластьШапка.Параметры.НДСИмпорт 				= Выборка.Сумма;
			ИначеЕсли Выборка.Строка = "062" Тогда
				ОбластьШапка.Параметры.НДСЕАЭС 					= Выборка.Сумма;			
			ИначеЕсли Выборка.Строка = "063" Тогда
				ОбластьШапка.Параметры.НДСНеЗачет 				= Выборка.Сумма;
			ИначеЕсли Выборка.Строка = "064" Тогда
				ОбластьШапка.Параметры.НДСЗачет 				= Выборка.Сумма;				
			ИначеЕсли Выборка.Строка = "065" Тогда
				ОбластьШапка.Параметры.НДСЗачетНул 				= Выборка.Сумма;
			ИначеЕсли Выборка.Строка = "066" Тогда
				ОбластьШапка.Параметры.НДСОбязательство 		= Выборка.Сумма;		
			ИначеЕсли Выборка.Строка = "067" Тогда 
				ОбластьШапка.Параметры.НДСОбязательствоСельхоз	= Выборка.Сумма;	
			ИначеЕсли Выборка.Строка = "068" Тогда 
				ОбластьШапка.Параметры.НДСОбязательствоВсего	= Выборка.Сумма;
			ИначеЕсли Выборка.Строка = "069" Тогда
				ОбластьШапка.Параметры.ОблПоставки 				= Выборка.Сумма;    										
			ИначеЕсли Выборка.Строка = "070" Тогда
				ОбластьШапка.Параметры.НДСЗаПроизвПоставки 		= Выборка.Сумма;
			ИначеЕсли Выборка.Строка = "071" Тогда
				ОбластьШапка.Параметры.ПриобретМатРесурсы 		= Выборка.Сумма;
			ИначеЕсли Выборка.Строка = "072" Тогда
				ОбластьШапка.Параметры.НДСЗаПриобретМатРесурсы 	= Выборка.Сумма;				
			КонецЕсли;		
		
		КонецЦикла;					
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой РеестрПоставок
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьОтчетаРеестрПоставок(МассивОбъектов, ОбъектыПечати)	
	Запрос = Новый Запрос;		
	Запрос.Текст =	
	"ВЫБРАТЬ
	|	ОтчетПоНДС.Ссылка,
	|	ОтчетПоНДС.Организация,
	|	ОтчетПоНДС.Дата,
	|	ОтчетПоНДС.ОтчетРеестрПоставок.(
	|		Ссылка,
	|		ДатаВыписки,
	|		НомерСФ,
	|		СерияСФ,
	|		КодПоставки,
	|		КонтрагентНаименование КАК КонтрагентНаименование,
	|		ИННКонтрагента,
	|		КодГНС,
	|		ДатаПоставки,
	|		СтоимостьБезНДС,
	|		СуммаНДС,
	|		СуммаНСП,
	|		ОбщаяСтоимостьСНДС,
	|		КорСерияСФ,
	|		КорНомерСФ,
	|		СтавкаНДС,
	|		КонтрагентСтранаРезидентстваЕАЭС
	|	)
	|ИЗ
	|	Документ.ОтчетПоНДС КАК ОтчетПоНДС
	|ГДЕ
	|	ОтчетПоНДС.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ПолеСлева = 10;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоНДС_РеестрПоставок";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоНДС.ПФ_MXL_РеестрПоставок");
	ОбластьШапка	= Макет.ПолучитьОбласть("Шапка");
	ИмяМакета = "ОтчетРеестрПоставок";

	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));
		
		ЗаполнитьШапкуРеестра(СтруктураПараметров, ОбластьШапка);	
		
		Выборка = Шапка.ОтчетРеестрПоставок.Выбрать();
		
		КоличествоОпераций = Выборка.Количество();
	
		Если КоличествоОпераций = 0 Тогда 
			СформироватьПустойБланк(СтруктураПараметров, ТабличныйДокумент, ИмяМакета); 
			Возврат ТабличныйДокумент;
		КонецЕсли;
		
		КолСтрока = Формат(КоличествоОпераций,"ЧЦ=3; ЧВН=");
		ОбластьШапка.Параметры.Кол1 = Лев(КолСтрока,1); 
		ОбластьШапка.Параметры.Кол2 = Сред(КолСтрока,2,1); 
		ОбластьШапка.Параметры.Кол3 = Сред(КолСтрока,3,1);
		
		ТабличныйДокумент.Вывести(ОбластьШапка);	
		
		ИтогоПоЛистуБНДС        		= 0; 	
		ИтогоПоЛистуНДС         		= 0; 	
		ИтогоПоЛистуОбщаяСтоимость		= 0; 	
		ИтогоПоРееструБНДС      		= 0;
		ИтогоПоРееструНДС       		= 0;
		ИтогоПоРееструОбщаяСтоимость  	= 0;
		
		// ОБЛАГАЕМЫЕ ПОСТАВКИ 
		ИтогоСуммаБНДСОбл				= 0;
		ИтогоСуммаНДСОбл				= 0;
		ИтогоОбщаяСтоимостьОбл			= 0;
		
		// С кодом поставки 102 
		ИтогоСуммаБНДСОбл_102			= 0;
		ИтогоСуммаНДСОбл_102			= 0;
		ИтогоОбщаяСтоимостьОбл_102		= 0;
		
		ИтогоСуммаБНДСНул				= 0;
		ИтогоСуммаБНДСОблЕАЭС			= 0;
		ИтогоСуммаБНДСОСВ				= 0;

		// Вывод листов отчета
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		ОбластьИтогиПоЛисту   = Макет.ПолучитьОбласть("ИтогиПоЛисту");
		ОбластьИтогиПоРеестру = Макет.ПолучитьОбласть("ИтогиПоРеестру");
		ОбластьПодвал		  = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвалШтамп	  = Макет.ПолучитьОбласть("ПодвалШтамп");
		
		// Проверка вывода на одну страницу
		МассивПроверки = Новый Массив;
		МассивПроверки.Добавить(ОбластьШапка);
		МассивПроверки.Добавить(ОбластьШапкаТаблицы);
		
		КоличествоВывода = 0; // переменная для проверки сколько вывели строк. Для определения одна страница или больше, если одна то печатается итог по реестру и подвал, иначе итог по листу и подвал
		КоличесвтоТекушегоЛиста = 0;
		НомерЛиста = 1;
		ЭтоПерваяСтраница = Истина;
		
		ТаблицаСтавок = УчетНДСВызовСервера.ПолучитьСтавкиНДССНулевымиЗначениями(Шапка.Дата);
		СтруктураПоиска = Новый Структура();
		СтруктураПоиска.Вставить("СтавкаНДС", Справочники.СтавкиНДС.ПустаяСсылка());
		
		Пока Выборка.Следующий() Цикл
			КоличествоВывода 		= КоличествоВывода + 1;
			КоличесвтоТекушегоЛиста = КоличесвтоТекушегоЛиста + 1;
			
			ОбластьСтрокаРеестра 	= Макет.ПолучитьОбласть("СтрокаРеестра");
			
			ВыводСтрокиРеестра(ТабличныйДокумент, Выборка, ОбластьСтрокаРеестра, МассивПроверки, ИмяМакета);
			
			ИтогоПоЛистуБНДС        	= ИтогоПоЛистуБНДС 	   			+ Выборка.СтоимостьБезНДС;
			ИтогоПоЛистуНДС         	= ИтогоПоЛистуНДС  	   			+ Выборка.СуммаНДС;
			ИтогоПоЛистуОбщаяСтоимость	= ИтогоПоЛистуОбщаяСтоимость 	+ Выборка.ОбщаяСтоимостьСНДС;	
			
			СтруктураПоиска.СтавкаНДС = Выборка.СтавкаНДС;
			МассивСтавок = ТаблицаСтавок.НайтиСтроки(СтруктураПоиска);
			
			Если МассивСтавок.Количество() = 0 Тогда
					ИтогоСуммаБНДСОбл      	= ИтогоСуммаБНДСОбл + Выборка.СтоимостьБезНДС;
					ИтогоСуммаНДСОбл      	= ИтогоСуммаНДСОбл + Выборка.СуммаНДС;
					ИтогоОбщаяСтоимостьОбл	= ИтогоОбщаяСтоимостьОбл + Выборка.СтоимостьБезНДС + Выборка.СуммаНДС; 
					
					Если Выборка.КодПоставки = "102" Тогда
						ИтогоСуммаБНДСОбл_102      	= ИтогоСуммаБНДСОбл_102 + Выборка.СтоимостьБезНДС;
						ИтогоСуммаНДСОбл_102      	= ИтогоСуммаНДСОбл_102 + Выборка.СуммаНДС;
						ИтогоОбщаяСтоимостьОбл_102	= ИтогоОбщаяСтоимостьОбл_102 + Выборка.СтоимостьБезНДС + Выборка.СуммаНДС;	
					КонецЕсли;	
					
			ИначеЕсли МассивСтавок.Количество() > 0 И Выборка.СтавкаНДС <> Справочники.СтавкиНДС.Нулевая Тогда
				ИтогоСуммаБНДСОСВ = ИтогоСуммаБНДСОСВ + Выборка.СтоимостьБезНДС;	
			КонецЕсли;
			
			Если Выборка.СтавкаНДС = Справочники.СтавкиНДС.Нулевая Тогда
				ИтогоСуммаБНДСНул = ИтогоСуммаБНДСНул + Выборка.СтоимостьБезНДС;
				
				Если Выборка.КонтрагентСтранаРезидентстваЕАЭС Тогда
					ИтогоСуммаБНДСОблЕАЭС = ИтогоСуммаБНДСОблЕАЭС + Выборка.СтоимостьБезНДС;
				КонецЕсли;
			КонецЕсли;
		
			Если КоличествоОпераций > КоличествоВывода И КоличествоВывода = 9 Тогда // больше чем одна страница и вывели 7 строк = количеству на первой странице
				// Вывод итогов по листу
				// Подвал С Итогами Первой Страницы
				ОбластьИтогиПоЛисту.Параметры.СтоимостьБезНДС 	 = ИтогоПоЛистуБНДС;
				ОбластьИтогиПоЛисту.Параметры.СуммаНДС 			 = ИтогоПоЛистуНДС;
				ОбластьИтогиПоЛисту.Параметры.ОбщаяСтоимостьСНДС = ИтогоПоЛистуОбщаяСтоимость;
				
				ТабличныйДокумент.Вывести(ОбластьИтогиПоЛисту);
				ТабличныйДокумент.Вывести(?(ЭтоПерваяСтраница, ОбластьПодвалШтамп, ОбластьПодвал));
				Если ЭтоПерваяСтраница Тогда
					ЭтоПерваяСтраница = Ложь;
				КонецЕсли;
				
				ИтогоПоЛистуБНДС        = 0;
				ИтогоПоЛистуНДС         = 0;
				ИтогоПоЛистуОбщаяСтоимость    = 0;  
				
				МассивПроверки = Новый Массив;
				МассивПроверки.Добавить(ОбластьШапкаТаблицы);
		
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				Если КоличествоОпераций - КоличествоВывода <= 22 Тогда 
					ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЗаключительногоЛиста");
				Иначе 
					ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЛиста");
				КонецЕсли;
				
				НомерЛиста = НомерЛиста + 1;
				ОбластьНомерЛиста.Параметры.НомЛиста = НомерЛиста;
				ТабличныйДокумент.Вывести(ОбластьНомерЛиста);
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);             			
				Продолжить;
				
			ИначеЕсли КоличествоОпераций = КоличествоВывода Тогда 
				// Вывод итогов по реестру
				//Подвал С Итогами Последней Страницы
				ИтогоПоРееструБНДС      		= ИтогоСуммаБНДСОбл + ИтогоСуммаБНДСНул + ИтогоСуммаБНДСОСВ;
				ИтогоПоРееструНДС       		= ИтогоСуммаНДСОбл;
				ИтогоПоРееструОбщаяСтоимость	= ИтогоОбщаяСтоимостьОбл + ИтогоСуммаБНДСНул + ИтогоСуммаБНДСОСВ;
				
				ОбластьИтогиПоРеестру.Параметры.СтоимостьБезНДС			= ИтогоПоРееструБНДС;
				ОбластьИтогиПоРеестру.Параметры.СуммаНДС 				= ИтогоПоРееструНДС;
				ОбластьИтогиПоРеестру.Параметры.ОбщаяСтоимостьСНДС		= ИтогоПоРееструОбщаяСтоимость;
				
				ОбластьИтогиПоРеестру.Параметры.СуммаБНДСОбл 			= ИтогоСуммаБНДСОбл;
				ОбластьИтогиПоРеестру.Параметры.СуммаНДСОбл 			= ИтогоСуммаНДСОбл;
				ОбластьИтогиПоРеестру.Параметры.ОбщаяСтоимостьОбл 		= ИтогоОбщаяСтоимостьОбл;
				ОбластьИтогиПоРеестру.Параметры.СуммаБНДСОбл_102 		= ИтогоСуммаБНДСОбл_102;
				ОбластьИтогиПоРеестру.Параметры.СуммаНДСОбл_102 		= ИтогоСуммаНДСОбл_102;
				ОбластьИтогиПоРеестру.Параметры.ОбщаяСтоимостьОбл_102 	= ИтогоОбщаяСтоимостьОбл_102;
				ОбластьИтогиПоРеестру.Параметры.СуммаБНДСНул 			= ИтогоСуммаБНДСНул;
				ОбластьИтогиПоРеестру.Параметры.ОбщаяСтоимостьНул 		= ИтогоСуммаБНДСНул;
				ОбластьИтогиПоРеестру.Параметры.СуммаБНДСОблЕАЭС 		= ИтогоСуммаБНДСОблЕАЭС;
				ОбластьИтогиПоРеестру.Параметры.ОбщаяСтоимостьОблЕАЭС 	= ИтогоСуммаБНДСОблЕАЭС;
				ОбластьИтогиПоРеестру.Параметры.СуммаБНДСОСВ 			= ИтогоСуммаБНДСОСВ;			
				ОбластьИтогиПоРеестру.Параметры.ОбщаяСтоимостьБНДСОСВ	= ИтогоСуммаБНДСОСВ;
				
				МассивПроверки.Добавить(ОбластьИтогиПоРеестру);
				МассивПроверки.Добавить(?(ЭтоПерваяСтраница, ОбластьПодвалШтамп, ОбластьПодвал));
				
				Пока КоличесвтоТекушегоЛиста <= 8 Цикл 
					ОбластьСтрокаРеестра 	= Макет.ПолучитьОбласть("СтрокаРеестра");
					ТабличныйДокумент.Вывести(ОбластьСтрокаРеестра);
					КоличесвтоТекушегоЛиста = КоличесвтоТекушегоЛиста +1;
				КонецЦикла;
				
				ТабличныйДокумент.Вывести(ОбластьИтогиПоРеестру);			
				ТабличныйДокумент.Вывести(?(ЭтоПерваяСтраница, ОбластьПодвалШтамп, ОбластьПодвал));
				Если ЭтоПерваяСтраница Тогда
					ЭтоПерваяСтраница = Ложь;
				КонецЕсли;			
				
				Прервать;
			КонецЕсли;
			
			МассивПроверки.Добавить(ОбластьИтогиПоЛисту);
			МассивПроверки.Добавить(?(ЭтоПерваяСтраница, ОбластьПодвалШтамп, ОбластьПодвал));
			ТабдокПроверки = Новый ТабличныйДокумент;
			ТабдокПроверки.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			
			Если  ТабдокПроверки.ПРоверитьВывод(МассивПроверки) И МассивПроверки.Количество() < 22 Тогда 
				МассивПроверки.Удалить(МассивПроверки.Количество() -1);
				МассивПроверки.Удалить(МассивПроверки.Количество() -1);
				Продолжить;
			Иначе 
				// Вывод подвала
				//Подвал Промежуточной Страницы С Итогами
				ОбластьИтогиПоЛисту.Параметры.СтоимостьБезНДС 	= ИтогоПоЛистуБНДС;
				ОбластьИтогиПоЛисту.Параметры.СуммаНДС 			= ИтогоПоЛистуНДС;
				ОбластьИтогиПоЛисту.Параметры.ОбщаяСтоимостьСНДС = ИтогоПоЛистуОбщаяСтоимость;
				
				ТабличныйДокумент.Вывести(ОбластьИтогиПоЛисту);
				ТабличныйДокумент.Вывести(?(ЭтоПерваяСтраница, ОбластьПодвалШтамп, ОбластьПодвал));
				Если ЭтоПерваяСтраница Тогда
					ЭтоПерваяСтраница = Ложь;
				КонецЕсли;			
				
				ИтогоПоЛистуБНДС        = 0;
				ИтогоПоЛистуНДС         = 0;
				ИтогоПоЛистуОбщаяСтоимость    = 0;
				
				МассивПроверки = Новый Массив;
				МассивПроверки.Добавить(ОбластьШапкаТаблицы);
				
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				Если КоличествоОпераций - КоличествоВывода <= 22 Тогда 
					ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЗаключительногоЛиста");
				Иначе 
					ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЛиста");
				КонецЕсли;
				
				НомерЛиста = НомерЛиста + 1;
				ОбластьНомерЛиста.Параметры.НомЛиста = НомерЛиста;
				МассивПроверки.Добавить(ОбластьНомерЛиста);
				ТабличныйДокумент.Вывести(ОбластьНомерЛиста);
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
				
			КонецЕсли;
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		КонецЦикла;
		
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой РеестрПриобритенных
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьОтчетаРеестрПриобретенных(МассивОбъектов, ОбъектыПечати)	
	Запрос = Новый Запрос;		
	Запрос.Текст =	
	"ВЫБРАТЬ
	|	ОтчетПоНДС.Ссылка,
	|	ОтчетПоНДС.Организация,
	|	ОтчетПоНДС.Дата,
	|	ОтчетПоНДС.ОтчетРеестрПриобретенныхМатРессурсов.(
	|		Ссылка,
	|		НомерСФ,
	|		СерияСФ,
	|		КорНомерСФ,
	|		КорСерияСФ,
	|		КонтрагентНаименование КАК КонтрагентНаименование,
	|		ИННКонтрагента,
	|		КодГНС,
	|		ДатаПоставки,
	|		СтоимостьБезНДС,
	|		СуммаНДС,
	|		СуммаПодлежащаяКЗачетуНДС,
	|		НЕОПРЕДЕЛЕНО КАК ДатаВыписки,
	|		НЕОПРЕДЕЛЕНО КАК КодПоставки
	|	)
	|ИЗ
	|	Документ.ОтчетПоНДС КАК ОтчетПоНДС
	|ГДЕ
	|	ОтчетПоНДС.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ПолеСлева = 10;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоНДС_РеестрПриобретенных";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоНДС.ПФ_MXL_РеестрПриобретенных");
	ОбластьШапка	= Макет.ПолучитьОбласть("Шапка");
	ИмяМакета = "ОтчетРеестрПриобретенных";

	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка");
		ОбластьШапкаТаблицы 	= Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьИтогиПоЛисту   	= Макет.ПолучитьОбласть("ИтогиПоЛисту");
		ОбластьИтогиПоРеестру 	= Макет.ПолучитьОбласть("ИтогиПоРеестру");
		ОбластьПодвал		  	= Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвалШтамп	  	= Макет.ПолучитьОбласть("ПодвалШтамп");
		ОбластьСтрокаРеестра 	= Макет.ПолучитьОбласть("СтрокаРеестра");
		ОбластьНомерЛиста		= Макет.ПолучитьОбласть("НомерЛиста");

		СтруктураОбластейМакета = Новый Структура;
		СтруктураОбластейМакета.Вставить("ОбластьШапка", 			ОбластьШапка);
		СтруктураОбластейМакета.Вставить("ОбластьШапкаТаблицы", 	ОбластьШапкаТаблицы);
		СтруктураОбластейМакета.Вставить("ОбластьИтогиПоЛисту", 	ОбластьИтогиПоЛисту);
		СтруктураОбластейМакета.Вставить("ОбластьИтогиПоРеестру", 	ОбластьИтогиПоРеестру);
		СтруктураОбластейМакета.Вставить("ОбластьПодвал", 			ОбластьПодвал);
		СтруктураОбластейМакета.Вставить("ОбластьПодвалШтамп", 		ОбластьПодвалШтамп);
		СтруктураОбластейМакета.Вставить("ОбластьСтрокаРеестра", 	ОбластьСтрокаРеестра);
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));
		
		ЗаполнитьШапкуРеестра(СтруктураПараметров, ОбластьШапка);	
		
		Выборка = Шапка.ОтчетРеестрПриобретенныхМатРессурсов.Выбрать();
		
		КоличествоОпераций = Выборка.Количество();
		
		КолСтрока = Формат(КоличествоОпераций,"ЧЦ=3; ЧВН=");		
		ОбластьШапка.Параметры.Кол1 = Лев(КолСтрока,1); 
		ОбластьШапка.Параметры.Кол2 = Сред(КолСтрока,2,1); 
		ОбластьШапка.Параметры.Кол3 = Сред(КолСтрока,3,1); 
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ИтогоПоЛисту 		= Новый Структура("ИтогоПоЛистуБНДС, ИтогоПоЛистуНДС, ИтогоПоЛистуНДСЗачет", 0, 0, 0);
		ИтогоПоРеестру	 	= Новый Структура("ИтогоПоРееструБНДС, ИтогоПоРееструНДС, ИтогоПоРееструНДСЗачет", 0, 0, 0);
		
		// 3. Вывод листов отчета
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		// 3.1. проверка вывода на одну страницу
		МассивПроверки = Новый Массив;
		МассивПроверки.Добавить(ОбластьШапка);
		МассивПроверки.Добавить(ОбластьШапкаТаблицы);
		
		КоличествоВывода = 0; // переменная для проверки сколько вывели строк. Для определения одна страница или больше, если одна то печатается итог по реестру и подвал, иначе итог по листу и подвал
		КоличесвтоТекушегоЛиста = 0;
		НомерЛиста = 1;
		Пока Выборка.Следующий() Цикл
			КоличествоВывода 		= КоличествоВывода + 1;
			КоличесвтоТекушегоЛиста = КоличесвтоТекушегоЛиста + 1;
			
			ОбластьСтрокаРеестра 	= Макет.ПолучитьОбласть("СтрокаРеестра");
			
			ВыводСтрокиРеестра(ТабличныйДокумент, Выборка, ОбластьСтрокаРеестра, МассивПроверки, ИмяМакета);
			
			РасчетИтоговыхЗначений(Выборка, ИтогоПоЛисту, ИтогоПоРеестру, ИмяМакета);
			
			Если КоличествоОпераций > КоличествоВывода и КоличесвтоТекушегоЛиста = 13 Тогда // больше чем одна страница и вывели 7 строк = количеству на первой странице
				// 3.2. Вывод итогов по листу
				ПодвалСИтогамиПервойСтраницы(ИтогоПоЛисту, МассивПроверки, СтруктураОбластейМакета, ТабличныйДокумент, ИмяМакета);
				КоличесвтоТекушегоЛиста = 0;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				Если КоличествоОпераций - КоличествоВывода <= 22 Тогда 
					ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЗаключительногоЛиста");
				Иначе 
					ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЛиста");
				КонецЕсли;

				НомерЛиста = НомерЛиста + 1;
				ОбластьНомерЛиста.Параметры.НомЛиста = НомерЛиста;
				ТабличныйДокумент.Вывести(ОбластьНомерЛиста);

				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
				Продолжить;
			ИначеЕсли КоличествоОпераций = КоличествоВывода и КоличесвтоТекушегоЛиста <= 13 Тогда 
				// 4. вывод итогов по реестру
				СтруктураПараметров = Новый Структура();
				СтруктураПараметров.Вставить("ИтогоПоРеестру", ИтогоПоРеестру);
				СтруктураПараметров.Вставить("Макет", Макет);
				СтруктураПараметров.Вставить("ИмяМакета", ИмяМакета);
				
				ПодвалСИтогамиПоследнейСтраницы(СтруктураПараметров, МассивПроверки, СтруктураОбластейМакета, ТабличныйДокумент, КоличесвтоТекушегоЛиста,,Истина);
				Прервать;
			ИначеЕсли КоличествоОпераций = КоличествоВывода Тогда
				СтруктураПараметров = Новый Структура();
				СтруктураПараметров.Вставить("ИтогоПоРеестру", ИтогоПоРеестру);
				СтруктураПараметров.Вставить("Макет", Макет);
				СтруктураПараметров.Вставить("ИмяМакета", ИмяМакета);
				
				ПодвалСИтогамиПоследнейСтраницы(СтруктураПараметров, МассивПроверки, СтруктураОбластейМакета, ТабличныйДокумент, КоличесвтоТекушегоЛиста);
				Прервать;
			КонецЕсли;
			
			МассивПроверки.Добавить(ОбластьИтогиПоРеестру);
			МассивПроверки.Добавить(ОбластьПодвал);
			МассивПроверки.Добавить(ОбластьНомерЛиста);
			
			ТабдокПроверки = Новый ТабличныйДокумент;
			ТабдокПроверки.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			
			Если ТабдокПроверки.ПРоверитьВывод(МассивПроверки) Тогда 
				МассивПроверки.Удалить(МассивПроверки.Количество() -1);
				МассивПроверки.Удалить(МассивПроверки.Количество() -1);
				МассивПроверки.Удалить(МассивПроверки.Количество() -1);
				Продолжить;
			Иначе 
				// 5. вывод подвала
				СтруктураПараметров = Новый Структура();
				СтруктураПараметров.Вставить("ИмяМакета", ИмяМакета);
				СтруктураПараметров.Вставить("КоличествоОпераций", КоличествоОпераций);
				СтруктураПараметров.Вставить("КоличествоВывода", КоличествоВывода);
				
				ПодвалПромежуточнойСтраницыСИтогами(ИтогоПоЛисту, СтруктураОбластейМакета, ТабличныйДокумент, МассивПроверки, 
														СтруктураПараметров, НомерЛиста, Макет);
				КоличесвтоТекушегоЛиста = 0;
			КонецЕсли;
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		КонецЦикла;
		
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой РеестрВвезенных
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьОтчетаРеестрВвезенных(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетПоНДС.Ссылка КАК Ссылка,
		|	ОтчетПоНДС.Организация КАК Организация,
		|	ОтчетПоНДС.Дата КАК Дата,
		|	ОтчетПоНДС.ОтчетРеестрВвезенныхМатериальныхРесурсовВКР.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		КонтрагентНаименование КАК Поставщик,
		|		ГТДДата КАК ГТДДата,
		|		ГТДНомер КАК ГТДНомер,
		|		ГТДСуммаБезНДС КАК ГТДСуммаБезНДС,
		|		ГТДСуммаНДС КАК ГТДСуммаНДС,
		|		ПДДата КАК ПДДата,
		|		ПДНомер КАК ПДНомер,
		|		ПДСуммаНДС КАК ПДСуммаНДС,
		|		НДСЗачет КАК ПДЗачетНДС,
		|		Комментарий КАК Комментарий,
		|		ВЫБОР
		|			КОГДА ОтчетПоНДС.ОтчетРеестрВвезенныхМатериальныхРесурсовВКР.КонтрагентСтранаРезидентстваЕАЭС
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ КАК СтранаРезидентстваЕАЭС,
		|		КодСтраныКонтрагента КАК КодСтраны
		|	) КАК ОтчетРеестрВвезенных
		|ИЗ
		|	Документ.ОтчетПоНДС КАК ОтчетПоНДС
		|ГДЕ
		|	ОтчетПоНДС.Ссылка В(&МассивОбъектов)";
			
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ПолеСлева = 10;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоНДС_РеестрПриобретенных";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоНДС.ПФ_MXL_РеестрВвезенных");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ИмяМакета = "ОтчетРеестрВвезенных";
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьШапка 						= Макет.ПолучитьОбласть("Шапка");
		ОбластьШапкаТаблицы 				= Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьИтогиПоЛисту   				= Макет.ПолучитьОбласть("ИтогиПоЛисту");
		ОбластьИтогиПоРеестру 				= Макет.ПолучитьОбласть("ИтогиПоРеестру");
		ОбластьПодвал		  				= Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвалШтамп	  				= Макет.ПолучитьОбласть("ПодвалШтамп");
		ОбластьСтрокаРеестра 				= Макет.ПолучитьОбласть("СтрокаРеестра");
		ОбластьНомерЛиста					= Макет.ПолучитьОбласть("НомерЛиста");
		ОбластьНомерЗаключительногоЛиста	= Макет.ПолучитьОбласть("НомерЗаключительногоЛиста");
		
		СтруктураОбластейМакета = Новый Структура;
		СтруктураОбластейМакета.Вставить("ОбластьШапка", 						ОбластьШапка);
		СтруктураОбластейМакета.Вставить("ОбластьШапкаТаблицы", 				ОбластьШапкаТаблицы);
		СтруктураОбластейМакета.Вставить("ОбластьИтогиПоЛисту", 				ОбластьИтогиПоЛисту);
		СтруктураОбластейМакета.Вставить("ОбластьИтогиПоРеестру", 				ОбластьИтогиПоРеестру);
		СтруктураОбластейМакета.Вставить("ОбластьПодвал", 						ОбластьПодвал);
		СтруктураОбластейМакета.Вставить("ОбластьПодвалШтамп", 					ОбластьПодвалШтамп);
		СтруктураОбластейМакета.Вставить("ОбластьСтрокаРеестра", 				ОбластьСтрокаРеестра);
		СтруктураОбластейМакета.Вставить("ОбластьНомерЛиста", 					ОбластьНомерЛиста);
		СтруктураОбластейМакета.Вставить("ОбластьНомерЗаключительногоЛиста", 	ОбластьНомерЗаключительногоЛиста);
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));
		
		ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьШапка, ИмяМакета);
		
		ВыборкаДанных = Шапка.ОтчетРеестрВвезенных.Выбрать();
		
		КоличествоОпераций = ВыборкаДанных.Количество();
		
		Если КоличествоОпераций = 0 Тогда 
			СформироватьПустойБланк(СтруктураПараметров, ТабличныйДокумент, ИмяМакета); 
			Продолжить;
		КонецЕсли;
		
		КолСтрока = Формат(КоличествоОпераций,"ЧЦ=3; ЧВН=");
		ОбластьШапка.Параметры.Кол1 = Лев(КолСтрока,1); 
		ОбластьШапка.Параметры.Кол2 = Сред(КолСтрока,2,1); 
		ОбластьШапка.Параметры.Кол3 = Сред(КолСтрока,3,1);
		
		ТабличныйДокумент.Вывести(ОбластьШапка);	
		
		ИтогоПоЛисту 		= Новый Структура("ГТДСуммаБезНДС, ГТДСуммаНДС, ПДСуммаНДС, ПДЗачетНДС", 0, 0, 0, 0);
		ИтогоПоРеестру	 	= Новый Структура("ГТДСуммаБезНДС, ГТДСуммаНДС, ПДСуммаНДС, ПДЗачетНДС", 0, 0, 0, 0);
		ИтогоПоРееструЕАЭС 	= Новый Структура("ГТДСуммаБезНДС_ЕАЭС, ГТДСуммаНДС_ЕАЭС, ПДСуммаНДС_ЕАЭС, ПДЗачетНДС_ЕАЭС", 0, 0, 0, 0); 
		
		// Вывод листов отчета
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		// Проверка вывода на одну страницу
		МассивПроверки = Новый Массив;
		МассивПроверки.Добавить(ОбластьШапка);
		МассивПроверки.Добавить(ОбластьШапкаТаблицы);
		
		КоличествоВывода = 0; // переменная для проверки сколько вывели строк. Для определения одна страница или больше, если одна то печатается итог по реестру и подвал, иначе итог по листу и подвал
		КоличествоТекушегоЛиста = 0;
		НомерЛиста = 3;
		
		Пока ВыборкаДанных.Следующий() Цикл
			                           
			Если ВыборкаДанных.СтранаРезидентстваЕАЭС Тогда 
				ИтогоПоРееструЕАЭС.ГТДСуммаНДС_ЕАЭС 	= ИтогоПоРееструЕАЭС.ГТДСуммаНДС_ЕАЭС 	 + ВыборкаДанных.ГТДСуммаНДС;
				ИтогоПоРееструЕАЭС.ГТДСуммаБезНДС_ЕАЭС 	= ИтогоПоРееструЕАЭС.ГТДСуммаБезНДС_ЕАЭС + ВыборкаДанных.ГТДСуммаБезНДС;
				ИтогоПоРееструЕАЭС.ПДСуммаНДС_ЕАЭС 		= ИтогоПоРееструЕАЭС.ПДСуммаНДС_ЕАЭС 	 + ВыборкаДанных.ПДСуммаНДС;
				ИтогоПоРееструЕАЭС.ПДЗачетНДС_ЕАЭС 		= ИтогоПоРееструЕАЭС.ПДЗачетНДС_ЕАЭС 	 + ВыборкаДанных.ПДЗачетНДС;
			КонецЕсли;
			                                                            			
			КоличествоВывода 		= КоличествоВывода + 1;
			КоличествоТекушегоЛиста = КоличествоТекушегоЛиста + 1;
			
			ВыводСтрокиРеестра(ТабличныйДокумент, ВыборкаДанных, ОбластьСтрокаРеестра, МассивПроверки, ИмяМакета);
			                   
			РасчетИтоговыхЗначений(ВыборкаДанных, ИтогоПоЛисту, ИтогоПоРеестру, ИмяМакета);
			
			Если КоличествоОпераций > КоличествоВывода И КоличествоВывода = 8 Тогда 
				//3.2. Вывод итогов по листу
				ПодвалСИтогамиПервойСтраницы(ИтогоПоЛисту, МассивПроверки, СтруктураОбластейМакета, ТабличныйДокумент, ИмяМакета);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				Если КоличествоОпераций - КоличествоВывода <= 18 Тогда
					ОбластьНомерЗаключительногоЛиста.Параметры.НЗЛ1 = "0";
					ОбластьНомерЗаключительногоЛиста.Параметры.НЗЛ2 = "0";
					ОбластьНомерЗаключительногоЛиста.Параметры.НЗЛ3 = "2";
					ТабличныйДокумент.Вывести(ОбластьНомерЗаключительногоЛиста);
				Иначе
					ОбластьНомерЛиста.Параметры.НТЛ1 = "0";
					ОбластьНомерЛиста.Параметры.НТЛ2 = "0";
					ОбластьНомерЛиста.Параметры.НТЛ3 = "2";
					ТабличныйДокумент.Вывести(ОбластьНомерЛиста);
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
				Продолжить;
				
			ИначеЕсли КоличествоОпераций = КоличествоВывода И КоличествоВывода <= 8 Тогда 
				//4. вывод итогов по реестру
				СтруктураПараметров = Новый Структура();
				СтруктураПараметров.Вставить("ИтогоПоРеестру", ИтогоПоРеестру);
				СтруктураПараметров.Вставить("Макет", Макет);
				СтруктураПараметров.Вставить("ИмяМакета", ИмяМакета);
				
				ПодвалСИтогамиПоследнейСтраницы(СтруктураПараметров, МассивПроверки, СтруктураОбластейМакета, ТабличныйДокумент, 
				КоличествоТекушегоЛиста, ИтогоПоРееструЕАЭС, Истина);
				Прервать;
				
			ИначеЕсли КоличествоОпераций = КоличествоВывода Тогда 
				//4. вывод итогов по реестру
				СтруктураПараметров = Новый Структура();
				СтруктураПараметров.Вставить("ИтогоПоРеестру", ИтогоПоРеестру);
				СтруктураПараметров.Вставить("Макет", Макет);
				СтруктураПараметров.Вставить("ИмяМакета", ИмяМакета);
				
				ПодвалСИтогамиПоследнейСтраницы(СтруктураПараметров, МассивПроверки, СтруктураОбластейМакета, ТабличныйДокумент, 
				КоличествоТекушегоЛиста, ИтогоПоРееструЕАЭС);
				Прервать;
			КонецЕсли;
			
			МассивПроверки.Добавить(ОбластьИтогиПоРеестру);
			МассивПроверки.Добавить(ОбластьПодвал);
			ТабдокПроверки = Новый ТабличныйДокумент;
			ТабдокПроверки.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			
			Если  ТабдокПроверки.ПРоверитьВывод(МассивПроверки) Тогда 
				МассивПроверки.Удалить(МассивПроверки.Количество() -1);
				МассивПроверки.Удалить(МассивПроверки.Количество() -1);
				
				Продолжить;
			Иначе 
				//5. вывод подвала
				СтруктураПараметров = Новый Структура();
				СтруктураПараметров.Вставить("ИмяМакета", ИмяМакета);
				СтруктураПараметров.Вставить("КоличествоОпераций", КоличествоОпераций);
				СтруктураПараметров.Вставить("КоличествоВывода", КоличествоВывода);
				
				ПодвалПромежуточнойСтраницыСИтогами(ИтогоПоЛисту, СтруктураОбластейМакета, ТабличныйДокумент, МассивПроверки, 
														СтруктураПараметров, НомерЛиста);
			КонецЕсли;
			
		КонецЦикла;
		
		Если НЕ ОбъектыПечати = Неопределено Тогда		
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;	

КонецФункции

// Функция формирует табличный документ с печатной формой РеестрПоставок
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьОтчетаРеестрПоставокНаОсновеНалоговогоКонтракта(МассивОбъектов, ОбъектыПечати)	
	Запрос = Новый Запрос;		
	Запрос.Текст =	
	"ВЫБРАТЬ
	|	ОтчетПоНДС.Ссылка,
	|	ОтчетПоНДС.Организация,
	|	ОтчетПоНДС.Дата,
	|	ОтчетПоНДС.ОтчетРеестрПоставокНаОсновеНалоговогоКонтракта.(
	|		Ссылка,
	|		ДатаВыписки,
	|		НомерСФ,
	|		СерияСФ,
	|		КодПоставки,
	|		КонтрагентНаименование КАК КонтрагентНаименование,
	|		ИННКонтрагента,
	|		КодГНС,
	|		ДатаПоставки,
	|		СтоимостьБезНДС,
	|		СуммаНДС,
	|		СуммаНСП,
	|		ОбщаяСтоимостьСНДС,
	|		КорСерияСФ,
	|		КорНомерСФ,
	|		СтавкаНДС,
	|		КонтрагентСтранаРезидентстваЕАЭС
	|	)
	|ИЗ
	|	Документ.ОтчетПоНДС КАК ОтчетПоНДС
	|ГДЕ
	|	ОтчетПоНДС.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ПолеСлева = 10;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоНДС_РеестрПоставокНаОсновеНалоговогоКонтракта";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоНДС.ПФ_MXL_РеестрПоставокНаОсновеНалоговогоКонтракта");
	ОбластьШапка	= Макет.ПолучитьОбласть("Шапка");
	ИмяМакета = "ОтчетРеестрПоставокНаОсновеНалоговогоКонтракта";

	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));
		
		ЗаполнитьШапкуРеестра(СтруктураПараметров, ОбластьШапка);	
		
		Выборка = Шапка.ОтчетРеестрПоставокНаОсновеНалоговогоКонтракта.Выбрать();
		
		КоличествоОпераций = Выборка.Количество();
	
		Если КоличествоОпераций = 0 Тогда 
			СформироватьПустойБланк(СтруктураПараметров, ТабличныйДокумент, ИмяМакета); 
			Возврат ТабличныйДокумент;
		КонецЕсли;
		
		КолСтрока = Формат(КоличествоОпераций,"ЧЦ=3; ЧВН=");
		ОбластьШапка.Параметры.Кол1 = Лев(КолСтрока,1); 
		ОбластьШапка.Параметры.Кол2 = Сред(КолСтрока,2,1); 
		ОбластьШапка.Параметры.Кол3 = Сред(КолСтрока,3,1);
		
		ТабличныйДокумент.Вывести(ОбластьШапка);	
		
		ИтогоПоЛистуБНДС        		= 0; 	
		ИтогоПоЛистуНДС         		= 0; 	
		ИтогоПоЛистуОбщаяСтоимость		= 0; 	
		ИтогоПоРееструБНДС      		= 0;
		ИтогоПоРееструНДС       		= 0;
		ИтогоПоРееструОбщаяСтоимость  	= 0;
		
		ИтогоСуммаБНДСОбл		= 0;
		ИтогоСуммаНДСОбл		= 0;
		ИтогоОбщаяСтоимостьОбл	= 0;
		ИтогоСуммаБНДСНул		= 0;
		ИтогоСуммаБНДСОблЕАЭС	= 0;
		ИтогоСуммаБНДСОСВ		= 0;

		// Вывод листов отчета
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		ОбластьИтогиПоЛисту   = Макет.ПолучитьОбласть("ИтогиПоЛисту");
		ОбластьИтогиПоРеестру = Макет.ПолучитьОбласть("ИтогиПоРеестру");
		ОбластьПодвал		  = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвалШтамп	  = Макет.ПолучитьОбласть("ПодвалШтамп");
		
		// Проверка вывода на одну страницу
		МассивПроверки = Новый Массив;
		МассивПроверки.Добавить(ОбластьШапка);
		МассивПроверки.Добавить(ОбластьШапкаТаблицы);
		
		КоличествоВывода = 0; // переменная для проверки сколько вывели строк. Для определения одна страница или больше, если одна то печатается итог по реестру и подвал, иначе итог по листу и подвал
		КоличесвтоТекушегоЛиста = 0;
		НомерЛиста = 1;
		ЭтоПерваяСтраница = Истина;
		
		Пока Выборка.Следующий() Цикл
			КоличествоВывода 		= КоличествоВывода + 1;
			КоличесвтоТекушегоЛиста = КоличесвтоТекушегоЛиста + 1;
			
			ОбластьСтрокаРеестра 	= Макет.ПолучитьОбласть("СтрокаРеестра");
			
			ВыводСтрокиРеестра(ТабличныйДокумент, Выборка, ОбластьСтрокаРеестра, МассивПроверки, ИмяМакета);
			
			ИтогоПоЛистуБНДС        	= ИтогоПоЛистуБНДС 	   			+ Выборка.СтоимостьБезНДС;
			ИтогоПоЛистуНДС         	= ИтогоПоЛистуНДС  	   			+ Выборка.СуммаНДС;
			ИтогоПоЛистуОбщаяСтоимость	= ИтогоПоЛистуОбщаяСтоимость 	+ Выборка.ОбщаяСтоимостьСНДС;
			
			ИтогоПоРееструБНДС      	= ИтогоПоРееструБНДС 	   		+ Выборка.СтоимостьБезНДС;
			ИтогоПоРееструНДС       	= ИтогоПоРееструНДС  	   		+ Выборка.СуммаНДС;
			ИтогоПоРееструОбщаяСтоимость= ИтогоПоРееструОбщаяСтоимость	+ Выборка.ОбщаяСтоимостьСНДС;		
					
			Если НЕ Выборка.КодПоставки = "111" И НЕ Выборка.КодПоставки = "112" Тогда
				Если НЕ Выборка.СтавкаНДС = Справочники.СтавкиНДС.Освобожденная Тогда
					ИтогоСуммаБНДСОбл      	= ИтогоСуммаБНДСОбл + Выборка.СтоимостьБезНДС;
					ИтогоСуммаНДСОбл      	= ИтогоСуммаНДСОбл + Выборка.СуммаНДС;
					ИтогоОбщаяСтоимостьОбл	= ИтогоОбщаяСтоимостьОбл + Выборка.СтоимостьБезНДС + Выборка.СуммаНДС;
				КонецЕсли;
				Если Выборка.СтавкаНДС = Справочники.СтавкиНДС.Нулевая Тогда
					ИтогоСуммаБНДСНул 		= ИтогоСуммаБНДСНул + Выборка.СтоимостьБезНДС;			
				КонецЕсли;
				Если Выборка.КонтрагентСтранаРезидентстваЕАЭС Тогда
					ИтогоСуммаБНДСОблЕАЭС 	= ИтогоСуммаБНДСОблЕАЭС + Выборка.СтоимостьБезНДС;			
				КонецЕсли;			
				Если Выборка.СтавкаНДС = Справочники.СтавкиНДС.Освобожденная Тогда
					ИтогоСуммаБНДСОСВ      	= ИтогоСуммаБНДСОСВ + Выборка.СтоимостьБезНДС;
				КонецЕсли;			
			
			КонецЕсли;
		
			Если КоличествоОпераций > КоличествоВывода И КоличествоВывода = 9 Тогда // больше чем одна страница и вывели 7 строк = количеству на первой странице
				// Вывод итогов по листу
				// Подвал С Итогами Первой Страницы
				ОбластьИтогиПоЛисту.Параметры.СтоимостьБезНДС 	= ИтогоПоЛистуБНДС;
				ОбластьИтогиПоЛисту.Параметры.СуммаНДС 			= ИтогоПоЛистуНДС;
				ОбластьИтогиПоЛисту.Параметры.ОбщаяСтоимостьСНДС = ИтогоПоЛистуОбщаяСтоимость;
				
				ТабличныйДокумент.Вывести(ОбластьИтогиПоЛисту);
				ТабличныйДокумент.Вывести(?(ЭтоПерваяСтраница, ОбластьПодвалШтамп, ОбластьПодвал));
				Если ЭтоПерваяСтраница Тогда
					ЭтоПерваяСтраница = Ложь;
				КонецЕсли;
				
				ИтогоПоЛистуБНДС        = 0;
				ИтогоПоЛистуНДС         = 0;
				ИтогоПоЛистуОбщаяСтоимость    = 0;  
				
				МассивПроверки = Новый Массив;
				МассивПроверки.Добавить(ОбластьШапкаТаблицы);
		
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				Если КоличествоОпераций - КоличествоВывода <= 22 Тогда 
					ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЗаключительногоЛиста");
				Иначе 
					ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЛиста");
				КонецЕсли;
				
				НомерЛиста = НомерЛиста + 1;
				ОбластьНомерЛиста.Параметры.НомЛиста = НомерЛиста;
				ТабличныйДокумент.Вывести(ОбластьНомерЛиста);
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);             			
				Продолжить;
				
			ИначеЕсли КоличествоОпераций = КоличествоВывода Тогда 
				// Вывод итогов по реестру
				//Подвал С Итогами Последней Страницы
				ОбластьИтогиПоРеестру.Параметры.СтоимостьБезНДС			= ИтогоПоРееструБНДС;
				ОбластьИтогиПоРеестру.Параметры.СуммаНДС 				= ИтогоПоРееструНДС;
				ОбластьИтогиПоРеестру.Параметры.ОбщаяСтоимостьСНДС		= ИтогоПоРееструОбщаяСтоимость;	
				
				МассивПроверки.Добавить(ОбластьИтогиПоРеестру);
				МассивПроверки.Добавить(?(ЭтоПерваяСтраница, ОбластьПодвалШтамп, ОбластьПодвал));
				
				Пока КоличесвтоТекушегоЛиста <= 8 Цикл 
					ОбластьСтрокаРеестра 	= Макет.ПолучитьОбласть("СтрокаРеестра");
					ТабличныйДокумент.Вывести(ОбластьСтрокаРеестра);
					КоличесвтоТекушегоЛиста = КоличесвтоТекушегоЛиста +1;
				КонецЦикла;
				
				ТабличныйДокумент.Вывести(ОбластьИтогиПоРеестру);			
				ТабличныйДокумент.Вывести(?(ЭтоПерваяСтраница, ОбластьПодвалШтамп, ОбластьПодвал));
				Если ЭтоПерваяСтраница Тогда
					ЭтоПерваяСтраница = Ложь;
				КонецЕсли;
				
				Прервать;
			КонецЕсли;
			
			МассивПроверки.Добавить(ОбластьИтогиПоЛисту);
			МассивПроверки.Добавить(?(ЭтоПерваяСтраница, ОбластьПодвалШтамп, ОбластьПодвал));
			ТабдокПроверки = Новый ТабличныйДокумент;
			ТабдокПроверки.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			
			Если  ТабдокПроверки.ПРоверитьВывод(МассивПроверки) И МассивПроверки.Количество() < 22 Тогда 
				МассивПроверки.Удалить(МассивПроверки.Количество() -1);
				МассивПроверки.Удалить(МассивПроверки.Количество() -1);
				Продолжить;
			Иначе 
				// Вывод подвала
				//Подвал Промежуточной Страницы С Итогами
				ОбластьИтогиПоЛисту.Параметры.СтоимостьБезНДС 	= ИтогоПоЛистуБНДС;
				ОбластьИтогиПоЛисту.Параметры.СуммаНДС 			= ИтогоПоЛистуНДС;
				ОбластьИтогиПоЛисту.Параметры.ОбщаяСтоимостьСНДС = ИтогоПоЛистуОбщаяСтоимость;
				
				ТабличныйДокумент.Вывести(ОбластьИтогиПоЛисту);
				ТабличныйДокумент.Вывести(?(ЭтоПерваяСтраница, ОбластьПодвалШтамп, ОбластьПодвал));
				Если ЭтоПерваяСтраница Тогда
					ЭтоПерваяСтраница = Ложь;
				КонецЕсли;			
				
				
				ИтогоПоЛистуБНДС        = 0;
				ИтогоПоЛистуНДС         = 0;
				ИтогоПоЛистуОбщаяСтоимость    = 0;
				
				МассивПроверки = Новый Массив;
				МассивПроверки.Добавить(ОбластьШапкаТаблицы);
				
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				Если КоличествоОпераций - КоличествоВывода <= 22 Тогда 
					ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЗаключительногоЛиста");
				Иначе 
					ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЛиста");
				КонецЕсли;
				
				НомерЛиста = НомерЛиста + 1;
				ОбластьНомерЛиста.Параметры.НомЛиста = НомерЛиста;
				МассивПроверки.Добавить(ОбластьНомерЛиста);
				ТабличныйДокумент.Вывести(ОбластьНомерЛиста);
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
				
			КонецЕсли;
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		КонецЦикла;
		
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой РеестрПриобритенных
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьОтчетаРеестрПриобретенныхНаОсновеНалоговогоКонтракта(МассивОбъектов, ОбъектыПечати)	
	Запрос = Новый Запрос;		
	Запрос.Текст =	
	"ВЫБРАТЬ
	|	ОтчетПоНДС.Ссылка,
	|	ОтчетПоНДС.Организация,
	|	ОтчетПоНДС.Дата,
	|	ОтчетПоНДС.ОтчетРеестрПриобретенныхНаОсновеНалоговогоКонтракта.(
	|		Ссылка,
	|		НомерСФ,
	|		СерияСФ,
	|		КонтрагентНаименование КАК КонтрагентНаименование,
	|		ИННКонтрагента,
	|		КодГНС,
	|		ДатаПоставки,
	|		СтоимостьБезНДС,
	|		СуммаНДС,
	|		СуммаПодлежащаяКЗачетуНДС,
	|		НЕОПРЕДЕЛЕНО КАК ДатаВыписки,
	|		НЕОПРЕДЕЛЕНО КАК КодПоставки,
	|		КорСерияСФ,
	|		КорНомерСФ
	|	)
	|ИЗ
	|	Документ.ОтчетПоНДС КАК ОтчетПоНДС
	|ГДЕ
	|	ОтчетПоНДС.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ПолеСлева = 10;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоНДС_РеестрПриобретенныхНаОсновеНалоговогоКонтракта";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоНДС.ПФ_MXL_РеестрПриобретенныхНаОсновеНалоговогоКонтракта");
	ОбластьШапка	= Макет.ПолучитьОбласть("Шапка");
	ИмяМакета = "ОтчетРеестрПриобретенныхНаОсновеНалоговогоКонтракта";

	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка");
		ОбластьШапкаТаблицы 	= Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьИтогиПоЛисту   	= Макет.ПолучитьОбласть("ИтогиПоЛисту");
		ОбластьИтогиПоРеестру 	= Макет.ПолучитьОбласть("ИтогиПоРеестру");
		ОбластьПодвал		  	= Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвалШтамп	  	= Макет.ПолучитьОбласть("ПодвалШтамп");
		ОбластьСтрокаРеестра 	= Макет.ПолучитьОбласть("СтрокаРеестра");
		ОбластьНомерЛиста		= Макет.ПолучитьОбласть("НомерЛиста");
		
		СтруктураОбластейМакета = Новый Структура;
		СтруктураОбластейМакета.Вставить("ОбластьШапка", 			ОбластьШапка);
		СтруктураОбластейМакета.Вставить("ОбластьШапкаТаблицы", 	ОбластьШапкаТаблицы);
		СтруктураОбластейМакета.Вставить("ОбластьИтогиПоЛисту", 	ОбластьИтогиПоЛисту);
		СтруктураОбластейМакета.Вставить("ОбластьИтогиПоРеестру", 	ОбластьИтогиПоРеестру);
		СтруктураОбластейМакета.Вставить("ОбластьПодвал", 			ОбластьПодвал);
		СтруктураОбластейМакета.Вставить("ОбластьПодвалШтамп", 		ОбластьПодвалШтамп);
		СтруктураОбластейМакета.Вставить("ОбластьСтрокаРеестра", 	ОбластьСтрокаРеестра);
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));
		
		ЗаполнитьШапкуРеестра(СтруктураПараметров, ОбластьШапка);	
		
		Выборка = Шапка.ОтчетРеестрПриобретенныхНаОсновеНалоговогоКонтракта.Выбрать();
		
		КоличествоОпераций = Выборка.Количество();
		
		КолСтрока = Формат(КоличествоОпераций,"ЧЦ=3; ЧВН=");		
		ОбластьШапка.Параметры.Кол1 = Лев(КолСтрока,1); 
		ОбластьШапка.Параметры.Кол2 = Сред(КолСтрока,2,1); 
		ОбластьШапка.Параметры.Кол3 = Сред(КолСтрока,3,1); 
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ИтогоПоЛисту 		= Новый Структура("ИтогоПоЛистуБНДС, ИтогоПоЛистуНДС, ИтогоПоЛистуНДСЗачет", 0, 0, 0);
		ИтогоПоРеестру	 	= Новый Структура("ИтогоПоРееструБНДС, ИтогоПоРееструНДС, ИтогоПоРееструНДСЗачет", 0, 0, 0);
		
		// 3. Вывод листов отчета
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		// 3.1. проверка вывода на одну страницу
		МассивПроверки = Новый Массив;
		МассивПроверки.Добавить(ОбластьШапка);
		МассивПроверки.Добавить(ОбластьШапкаТаблицы);
		
		КоличествоВывода = 0; // переменная для проверки сколько вывели строк. Для определения одна страница или больше, если одна то печатается итог по реестру и подвал, иначе итог по листу и подвал
		КоличесвтоТекушегоЛиста = 0;
		НомерЛиста = 1;
		Пока Выборка.Следующий() Цикл
			КоличествоВывода 		= КоличествоВывода + 1;
			КоличесвтоТекушегоЛиста = КоличесвтоТекушегоЛиста + 1;
			
			ОбластьСтрокаРеестра 	= Макет.ПолучитьОбласть("СтрокаРеестра");
			
			ВыводСтрокиРеестра(ТабличныйДокумент, Выборка, ОбластьСтрокаРеестра, МассивПроверки, ИмяМакета);
			
			РасчетИтоговыхЗначений(Выборка, ИтогоПоЛисту, ИтогоПоРеестру, ИмяМакета);
			
			Если КоличествоОпераций > КоличествоВывода и КоличесвтоТекушегоЛиста = 13 Тогда // больше чем одна страница и вывели 7 строк = количеству на первой странице
				// 3.2. Вывод итогов по листу
				ПодвалСИтогамиПервойСтраницы(ИтогоПоЛисту, МассивПроверки, СтруктураОбластейМакета, ТабличныйДокумент, ИмяМакета);
				КоличесвтоТекушегоЛиста = 0;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				Если КоличествоОпераций - КоличествоВывода <= 22 Тогда 
					ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЗаключительногоЛиста");
				Иначе 
					ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЛиста");
				КонецЕсли;

				НомерЛиста = НомерЛиста + 1;
				ОбластьНомерЛиста.Параметры.НомЛиста = НомерЛиста;
				ТабличныйДокумент.Вывести(ОбластьНомерЛиста);

				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
				Продолжить;
			ИначеЕсли КоличествоОпераций = КоличествоВывода и КоличесвтоТекушегоЛиста <=13 Тогда 
				// 4. вывод итогов по реестру
				СтруктураПараметров = Новый Структура();
				СтруктураПараметров.Вставить("ИтогоПоРеестру", ИтогоПоРеестру);
				СтруктураПараметров.Вставить("Макет", Макет);
				СтруктураПараметров.Вставить("ИмяМакета", ИмяМакета);
				
				ПодвалСИтогамиПоследнейСтраницы(СтруктураПараметров, МассивПроверки, СтруктураОбластейМакета, ТабличныйДокумент, КоличесвтоТекушегоЛиста,, Истина);
				Прервать;
			ИначеЕсли КоличествоОпераций = КоличествоВывода Тогда 
				СтруктураПараметров = Новый Структура();
				СтруктураПараметров.Вставить("ИтогоПоРеестру", ИтогоПоРеестру);
				СтруктураПараметров.Вставить("Макет", Макет);
				СтруктураПараметров.Вставить("ИмяМакета", ИмяМакета);
				
				ПодвалСИтогамиПоследнейСтраницы(СтруктураПараметров, МассивПроверки, СтруктураОбластейМакета, ТабличныйДокумент, КоличесвтоТекушегоЛиста);
				Прервать;
			КонецЕсли;
			
			МассивПроверки.Добавить(ОбластьИтогиПоРеестру);
			МассивПроверки.Добавить(ОбластьПодвал);
			МассивПроверки.Добавить(ОбластьНомерЛиста);
			
			ТабдокПроверки = Новый ТабличныйДокумент;
			ТабдокПроверки.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			
			Если ТабдокПроверки.ПРоверитьВывод(МассивПроверки) Тогда 
				МассивПроверки.Удалить(МассивПроверки.Количество() -1);
				МассивПроверки.Удалить(МассивПроверки.Количество() -1);
				МассивПроверки.Удалить(МассивПроверки.Количество() -1);
				Продолжить;
			Иначе 
				// 5. вывод подвала
				СтруктураПараметров = Новый Структура();
				СтруктураПараметров.Вставить("ИмяМакета", ИмяМакета);
				СтруктураПараметров.Вставить("КоличествоОпераций", КоличествоОпераций);
				СтруктураПараметров.Вставить("КоличествоВывода", КоличествоВывода);
				
				ПодвалПромежуточнойСтраницыСИтогами(ИтогоПоЛисту, СтруктураОбластейМакета, ТабличныйДокумент, МассивПроверки, 
														СтруктураПараметров, НомерЛиста, Макет);
				КоличесвтоТекушегоЛиста = 0;
			КонецЕсли;
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		КонецЦикла;
		
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетПоНДС") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ОтчетПоНДС", 
		НСтр("ru = 'Отчет по НДС'"), 
		ПечатьОтчетаПоНДС(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоНДС.ПФ_MXL_ОтчетПоНДС");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрПоставок") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"РеестрПоставок", 
		НСтр("ru = 'Реестр поставок'"), 
		ПечатьОтчетаРеестрПоставок(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоНДС.ПФ_MXL_РеестрПоставок");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрПриобретенных") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"РеестрПриобретенных", 
		НСтр("ru = 'Реестр приобретенных материальных ресурсов'"), 
		ПечатьОтчетаРеестрПриобретенных(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоНДС.ПФ_MXL_РеестрПриобретенных");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрВвезенных") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"РеестрВвезенных", 
		НСтр("ru = 'Реестр ввезенных материальных ресурсов в КР'"), 
		ПечатьОтчетаРеестрВвезенных(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоНДС.ПФ_MXL_РеестрВвезенных");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрПоставокНаОсновеНалоговогоКонтракта") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"РеестрПоставокНаОсновеНалоговогоКонтракта", 
		НСтр("ru = 'Реестр поставок на основе налогового контракта'"), 
		ПечатьОтчетаРеестрПоставокНаОсновеНалоговогоКонтракта(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоНДС.ПФ_MXL_РеестрПоставокНаОсновеНалоговогоКонтракта");
	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрПриобретенныхНаОсновеНалоговогоКонтракта") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"РеестрПриобретенныхНаОсновеНалоговогоКонтракта", 
		НСтр("ru = 'Реестр приобретенных материальных ресурсов на основе налогового контракта'"), 
		ПечатьОтчетаРеестрПриобретенныхНаОсновеНалоговогоКонтракта(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоНДС.ПФ_MXL_РеестрПриобретенныхНаОсновеНалоговогоКонтракта");
	КонецЕсли;

	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОтчетПоНДС";
	КомандаПечати.Представление = НСтр("ru = 'Отчет по НДС'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеестрПоставок";
	КомандаПечати.Представление = НСтр("ru = 'Реестр поставок'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 2;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеестрПриобретенных";
	КомандаПечати.Представление = НСтр("ru = 'Реестр приобретенных материальных ресурсов'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 3;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеестрВвезенных";
	КомандаПечати.Представление = НСтр("ru = 'Реестр ввезенных материальных ресурсов в КР'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 4;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеестрПоставокНаОсновеНалоговогоКонтракта";
	КомандаПечати.Представление = НСтр("ru = 'Реестр поставок на основе налогового контракта'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 5;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеестрПриобретенныхНаОсновеНалоговогоКонтракта";
	КомандаПечати.Представление = НСтр("ru = 'Реестр приобретенных материальных ресурсов на основе налогового контракта'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 6;

КонецПроцедуры

#КонецОбласти

#КонецЕсли