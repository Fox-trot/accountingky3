#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Возвращает заголовок документа для печатной формы.
//
// Параметры:
//  Шапка - любая структура с полями:
//           Номер         - Строка или Число - номер документа;
//           Дата          - Дата - дата документа;
//           Представление - Строка - (необязательный) платформенное представление ссылки на документ.
//                                    Если параметр НазваниеДокумента не задан, то название документа будет вычисляться
//                                    из этого параметра.
//  НазваниеДокумента - Строка - название документа (например, "Счет на оплату").
//
// Возвращаемое значение:
//  Строка - заголовок документа.
//
Функция СформироватьЗаголовокДокумента(Шапка, Знач НазваниеДокумента = "") Экспорт
	
	ДанныеДокумента = Новый Структура("Номер,Дата,Представление");
	ЗаполнитьЗначенияСвойств(ДанныеДокумента, Шапка);
	
	// Если название документа не передано, получим название по представлению документа.
	Если ПустаяСтрока(НазваниеДокумента) И ЗначениеЗаполнено(ДанныеДокумента.Представление) Тогда
		ПоложениеНомера = СтрНайти(ДанныеДокумента.Представление, ДанныеДокумента.Номер);
		Если ПоложениеНомера > 0 Тогда
			НазваниеДокумента = СокрЛП(Лев(ДанныеДокумента.Представление, ПоложениеНомера - 1));
		КонецЕсли;
	КонецЕсли;

	НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеДокумента.Номер);
	Возврат СтрШаблон(НСтр("ru = '%1 № %2 от %3'"),
		НазваниеДокумента, НомерНаПечать, Формат(ДанныеДокумента.Дата, "ДЛФ=DD"));
	
КонецФункции

// Заполнение заголовка печатной формы основного отчета
//
Процедура ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьШапка)

	Организация 	= СтруктураПараметров.Организация;
	НачалоПериода 	= СтруктураПараметров.НачалоПериода;
	КонецПериода 	= СтруктураПараметров.КонецПериода;	

	ГоловнаяОрганизация = Организация.ГоловнаяОрганизация;
	
	ОКПО              				= Организация.КодПоОКПО;
	ИНН 							= ГоловнаяОрганизация.ИНН;
	КодГНС 							= ГоловнаяОрганизация.ГНС.Код;
	ОрганизацияНаменованиеПолное    = ГоловнаяОрганизация.НаименованиеПолное
										+ ?(ЗначениеЗаполнено(ГоловнаяОрганизация.НаименованиеПолное), Символы.ПС + " (", "")
										+ Организация.НаименованиеПолное
										+ ?(ЗначениеЗаполнено(ГоловнаяОрганизация.НаименованиеПолное), ")", "");	
	
	КонтактныеДанные = ПолучитьКонтактнуюИнформацию(Организация);
	
	Индекс           = КонтактныеДанные.Индекс;
	АдрОбластьГород  = КонтактныеДанные.АдрОбластьГород;
	ЮрАдрес	         = КонтактныеДанные.АдресОрганизации; 
	Телефон		     = КонтактныеДанные.Телефон;	
			
	ОбластьШапка.Параметры.ОрганизацияНаименованиеПолное = ОрганизацияНаменованиеПолное;
	Если ЗначениеЗаполнено(АдрОбластьГород) Тогда 
		ОбластьШапка.Параметры.АдресГород = АдрОбластьГород;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЮрАдрес) Тогда 
		ОбластьШапка.Параметры.АдресУлица = ЮрАдрес;
	КонецЕсли;
	
	ОбластьШапка.Параметры.Телефон = Телефон;
	
	Если ЗначениеЗаполнено(Индекс) ТОгда
		
		ОбластьШапка.Параметры.ИНД1 = Сред(Индекс,1,1);
		ОбластьШапка.Параметры.ИНД2 = Сред(Индекс,2,1);
		ОбластьШапка.Параметры.ИНД3 = Сред(Индекс,3,1);
		ОбластьШапка.Параметры.ИНД4 = Сред(Индекс,4,1);
		ОбластьШапка.Параметры.ИНД5 = Сред(Индекс,5,1);
		ОбластьШапка.Параметры.ИНД6 = Сред(Индекс,6,1);
		
	КонецЕсли;

	Если ЗначениеЗаполнено(ОКПО) Тогда 
		ОбластьШапка.Параметры.ОКПО1 = Сред(ОКПО,1,1);
		ОбластьШапка.Параметры.ОКПО2 = Сред(ОКПО,2,1);
		ОбластьШапка.Параметры.ОКПО3 = Сред(ОКПО,3,1);
		ОбластьШапка.Параметры.ОКПО4 = Сред(ОКПО,4,1);
		ОбластьШапка.Параметры.ОКПО5 = Сред(ОКПО,5,1);
		ОбластьШапка.Параметры.ОКПО6 = Сред(ОКПО,6,1);
		ОбластьШапка.Параметры.ОКПО7 = Сред(ОКПО,7,1);
		ОбластьШапка.Параметры.ОКПО8 = Сред(ОКПО,8,1);
	КонецЕсли;
	
	ОбластьШапка.Параметры.ИНН1 = Сред(ИНН, 1, 1);
	ОбластьШапка.Параметры.ИНН2 = Сред(ИНН, 2, 1);
	ОбластьШапка.Параметры.ИНН3 = Сред(ИНН, 3, 1);                           
	ОбластьШапка.Параметры.ИНН4 = Сред(ИНН, 4, 1);
	ОбластьШапка.Параметры.ИНН5 = Сред(ИНН, 5, 1);
	ОбластьШапка.Параметры.ИНН6 = Сред(ИНН, 6, 1);
	ОбластьШапка.Параметры.ИНН7 = Сред(ИНН, 7, 1);
	ОбластьШапка.Параметры.ИНН8 = Сред(ИНН, 8, 1);
	ОбластьШапка.Параметры.ИНН9 = Сред(ИНН, 9, 1);
	ОбластьШапка.Параметры.ИНН10 = Сред(ИНН, 10, 1);
	ОбластьШапка.Параметры.ИНН11 = Сред(ИНН, 11, 1);
	ОбластьШапка.Параметры.ИНН12 = Сред(ИНН, 12, 1);
	ОбластьШапка.Параметры.ИНН13 = Сред(ИНН, 13, 1);
	ОбластьШапка.Параметры.ИНН14 = Сред(ИНН, 14, 1);
	
	ОбластьШапка.Параметры.НаименованиеНалоговой = Организация.ГНС;
	
	ОбластьШапка.Параметры.ГНС1 = Сред(КодГНС, 1, 1);
	ОбластьШапка.Параметры.ГНС2 = Сред(КодГНС, 2, 1);
	ОбластьШапка.Параметры.ГНС3 = Сред(КодГНС, 3, 1);
	
	ОбластьШапка.Параметры.ДатаН1 = Сред(НачалоПериода, 1, 1);	
	ОбластьШапка.Параметры.ДатаН2 = Сред(НачалоПериода, 2, 1);	
	ОбластьШапка.Параметры.ДатаН3 = Сред(НачалоПериода, 4, 1);	
	ОбластьШапка.Параметры.ДатаН4 = Сред(НачалоПериода, 5, 1);	
	ОбластьШапка.Параметры.ДатаН5 = Сред(НачалоПериода, 7, 1);	
	ОбластьШапка.Параметры.ДатаН6 = Сред(НачалоПериода, 8, 1);	
	ОбластьШапка.Параметры.ДатаН7 = Сред(НачалоПериода, 9, 1);	
	ОбластьШапка.Параметры.ДатаН8 = Сред(НачалоПериода, 10, 1);	
	
	ОбластьШапка.Параметры.ДатаК1 = Сред(КонецПериода, 1, 1);	
	ОбластьШапка.Параметры.ДатаК2 = Сред(КонецПериода, 2, 1);	
	ОбластьШапка.Параметры.ДатаК3 = Сред(КонецПериода, 4, 1);	
	ОбластьШапка.Параметры.ДатаК4 = Сред(КонецПериода, 5, 1);	
	ОбластьШапка.Параметры.ДатаК5 = Сред(КонецПериода, 7, 1);	
	ОбластьШапка.Параметры.ДатаК6 = Сред(КонецПериода, 8, 1);	
	ОбластьШапка.Параметры.ДатаК7 = Сред(КонецПериода, 9, 1);	
	ОбластьШапка.Параметры.ДатаК8 = Сред(КонецПериода, 10, 1);
	
КонецПроцедуры

// Заполнение заголовка печатной формы у Приложений 1, 2, 3
//
Процедура ЗаполнитьШапкуРеестра(СтруктураПараметров, ОбластьШапка)

	Организация 	= СтруктураПараметров.Организация;
	НачалоПериода 	= СтруктураПараметров.НачалоПериода;
	КонецПериода 	= СтруктураПараметров.КонецПериода;	

	ГоловнаяОрганизация = Организация.ГоловнаяОрганизация;
	
	ОКПО              				= Организация.КодПоОКПО;
	ИНН 							= ГоловнаяОрганизация.ИНН;
	КодГНС 							= ГоловнаяОрганизация.ГНС.Код;
	ОрганизацияНаменованиеПолное    = ГоловнаяОрганизация.НаименованиеПолное
										+ ?(ЗначениеЗаполнено(ГоловнаяОрганизация.НаименованиеПолное), Символы.ПС + " (", "")
										+ Организация.НаименованиеПолное
										+ ?(ЗначениеЗаполнено(ГоловнаяОрганизация.НаименованиеПолное), ")", "");	
	ОбластьШапка.Параметры.ОрганизацияНаименованиеПолное = ОрганизацияНаменованиеПолное;
	
	Если ЗначениеЗаполнено(ОКПО) Тогда 
		ОбластьШапка.Параметры.ОКПО1 = Сред(ОКПО,1,1);
		ОбластьШапка.Параметры.ОКПО2 = Сред(ОКПО,2,1);
		ОбластьШапка.Параметры.ОКПО3 = Сред(ОКПО,3,1);
		ОбластьШапка.Параметры.ОКПО4 = Сред(ОКПО,4,1);
		ОбластьШапка.Параметры.ОКПО5 = Сред(ОКПО,5,1);
		ОбластьШапка.Параметры.ОКПО6 = Сред(ОКПО,6,1);
		ОбластьШапка.Параметры.ОКПО7 = Сред(ОКПО,7,1);
		ОбластьШапка.Параметры.ОКПО8 = Сред(ОКПО,8,1);
	КонецЕсли;
	
	ОбластьШапка.Параметры.ИНН1 = Сред(ИНН, 1, 1);
	ОбластьШапка.Параметры.ИНН2 = Сред(ИНН, 2, 1);
	ОбластьШапка.Параметры.ИНН3 = Сред(ИНН, 3, 1);                           
	ОбластьШапка.Параметры.ИНН4 = Сред(ИНН, 4, 1);
	ОбластьШапка.Параметры.ИНН5 = Сред(ИНН, 5, 1);
	ОбластьШапка.Параметры.ИНН6 = Сред(ИНН, 6, 1);
	ОбластьШапка.Параметры.ИНН7 = Сред(ИНН, 7, 1);
	ОбластьШапка.Параметры.ИНН8 = Сред(ИНН, 8, 1);
	ОбластьШапка.Параметры.ИНН9 = Сред(ИНН, 9, 1);
	ОбластьШапка.Параметры.ИНН10 = Сред(ИНН, 10, 1);
	ОбластьШапка.Параметры.ИНН11 = Сред(ИНН, 11, 1);
	ОбластьШапка.Параметры.ИНН12 = Сред(ИНН, 12, 1);
	ОбластьШапка.Параметры.ИНН13 = Сред(ИНН, 13, 1);
	ОбластьШапка.Параметры.ИНН14 = Сред(ИНН, 14, 1);
	
	ОбластьШапка.Параметры.НаименованиеНалоговой = Организация.ГНС;
	
	ОбластьШапка.Параметры.ГНС1 = Сред(КодГНС, 1, 1);
	ОбластьШапка.Параметры.ГНС2 = Сред(КодГНС, 2, 1);
	ОбластьШапка.Параметры.ГНС3 = Сред(КодГНС, 3, 1);
	
	ОбластьШапка.Параметры.ДатаН1 = Сред(НачалоПериода, 1, 1);	
	ОбластьШапка.Параметры.ДатаН2 = Сред(НачалоПериода, 2, 1);	
	ОбластьШапка.Параметры.ДатаН3 = Сред(НачалоПериода, 4, 1);	
	ОбластьШапка.Параметры.ДатаН4 = Сред(НачалоПериода, 5, 1);	
	ОбластьШапка.Параметры.ДатаН5 = Сред(НачалоПериода, 7, 1);	
	ОбластьШапка.Параметры.ДатаН6 = Сред(НачалоПериода, 8, 1);	
	ОбластьШапка.Параметры.ДатаН7 = Сред(НачалоПериода, 9, 1);	
	ОбластьШапка.Параметры.ДатаН8 = Сред(НачалоПериода, 10, 1);	
	
	ОбластьШапка.Параметры.ДатаК1 = Сред(КонецПериода, 1, 1);	
	ОбластьШапка.Параметры.ДатаК2 = Сред(КонецПериода, 2, 1);	
	ОбластьШапка.Параметры.ДатаК3 = Сред(КонецПериода, 4, 1);	
	ОбластьШапка.Параметры.ДатаК4 = Сред(КонецПериода, 5, 1);	
	ОбластьШапка.Параметры.ДатаК5 = Сред(КонецПериода, 7, 1);	
	ОбластьШапка.Параметры.ДатаК6 = Сред(КонецПериода, 8, 1);	
	ОбластьШапка.Параметры.ДатаК7 = Сред(КонецПериода, 9, 1);	
	ОбластьШапка.Параметры.ДатаК8 = Сред(КонецПериода, 10, 1);
	
КонецПроцедуры

// Процедура - Вывод строки реестра
//
// Параметры:
//  ТабличныйДокумент	- 	 - 
//  ВыборкаДанных	 	- 	 - 
//  Макет			 	- 	 - 
//  МассивПроверки	 	- 	 - 
//
Процедура ВыводСтрокиРеестра(ТабличныйДокумент, СтрокаТаблицы, Макет, МассивПроверки)
		
	ОбластьСтрокаРеестра 	= Макет.ПолучитьОбласть("СтрокаРеестра");
	ОбластьСтрокаРеестра.Параметры.Заполнить(СтрокаТаблицы);
	
	ИНН  = СтрокаТаблицы.ИННКонтрагента;
	Дата = СтрокаТаблицы.ДатаПоставки;
	
	ОбластьСтрокаРеестра.Параметры.ИНН1 	   = Сред(ИНН, 1, 1);
	ОбластьСтрокаРеестра.Параметры.ИНН2 	   = Сред(ИНН, 2, 1);
	ОбластьСтрокаРеестра.Параметры.ИНН3 	   = Сред(ИНН, 3, 1);
	ОбластьСтрокаРеестра.Параметры.ИНН4 	   = Сред(ИНН, 4, 1);
	ОбластьСтрокаРеестра.Параметры.ИНН5 	   = Сред(ИНН, 5, 1);
	ОбластьСтрокаРеестра.Параметры.ИНН6 	   = Сред(ИНН, 6, 1);
	ОбластьСтрокаРеестра.Параметры.ИНН7 		= Сред(ИНН, 7, 1);
	ОбластьСтрокаРеестра.Параметры.ИНН8 		= Сред(ИНН, 8, 1);
	ОбластьСтрокаРеестра.Параметры.ИНН9 		= Сред(ИНН, 9, 1);
	ОбластьСтрокаРеестра.Параметры.ИНН10 		= Сред(ИНН, 10, 1);
	ОбластьСтрокаРеестра.Параметры.ИНН11 		= Сред(ИНН, 11, 1);
	ОбластьСтрокаРеестра.Параметры.ИНН12 		= Сред(ИНН, 12, 1);
	ОбластьСтрокаРеестра.Параметры.ИНН13 		= Сред(ИНН, 13, 1);
	ОбластьСтрокаРеестра.Параметры.ИНН14 		= Сред(ИНН, 14, 1);     
	
	ОбластьСтрокаРеестра.Параметры.ДатаДок1		= Сред(Дата, 1, 1);
	ОбластьСтрокаРеестра.Параметры.ДатаДок2		= Сред(Дата, 2, 1);
	ОбластьСтрокаРеестра.Параметры.ДатаДок3		= Сред(Дата, 4, 1);
	ОбластьСтрокаРеестра.Параметры.ДатаДок4		= Сред(Дата, 5, 1);
	ОбластьСтрокаРеестра.Параметры.ДатаДок5		= Сред(Дата, 7, 1);
	ОбластьСтрокаРеестра.Параметры.ДатаДок6		= Сред(Дата, 8, 1);
	ОбластьСтрокаРеестра.Параметры.ДатаДок7		= Сред(Дата, 9, 1);
	ОбластьСтрокаРеестра.Параметры.ДатаДок8		= Сред(Дата, 10, 1);
	
	Если ЗначениеЗаполнено(СтрокаТаблицы.ДатаВыписки) Тогда
		ОбластьСтрокаРеестра.Параметры.ДатаВыписки = СтрокаТаблицы.ДатаВыписки;
	КонецЕсли;	
	
	ОбластьСтрокаРеестра.Параметры.КодГНС		=  СтрокаТаблицы.КодГНС;
	
	НомерСФ = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(СтрокаТаблицы.НомерСФ);
	ОбластьСтрокаРеестра.Параметры.НомерСФ = Формат(Число(?(НомерСФ = "", 0, НомерСФ)),"ЧЦ=6; ЧВН=; ЧГ=");
	ОбластьСтрокаРеестра.Параметры.СерияСФ = СтрокаТаблицы.СерияСФ;
	
	ТабличныйДокумент.Вывести(ОбластьСтрокаРеестра);
	МассивПроверки.Добавить(ОбластьСтрокаРеестра);
	
КонецПроцедуры	
		
// Процедура - Сформировать пустой бланк
//
// Параметры:
//  ТабличныйДокумент	- 	 - 
//  НачалоПериода	 	- 	 - 
//  КонецПериода	 	- 	 - 
//  Организация		 	- 	 - 
//
Процедура СформироватьПустойБланкРеестраПоставок(СтруктураПараметров, ТабличныйДокумент) Экспорт 
	
	ТабличныйДокумент.Очистить();
	Макет = ПолучитьМакет("ПФ_MXL_РеестрПоставок");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ЗаполнитьШапкуРеестра(СтруктураПараметров, ОбластьШапка);
	
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	
	ОбластьИтогиПоЛисту   = Макет.ПолучитьОбласть("ИтогиПоЛисту");
	ОбластьИтогиПоРеестру = Макет.ПолучитьОбласть("ИтогиПоРеестру");
	ОбластьПодвал		  = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвалШтамп		  = Макет.ПолучитьОбласть("ПодвалШтамп");
	ОбластьСтрокаРеестра  = Макет.ПолучитьОбласть("СтрокаРеестра");
	
	МассивПроверки = Новый Массив;
	МассивПроверки.Добавить(ОбластьШапка);
	МассивПроверки.Добавить(ОбластьШапкаТаблицы);
	МассивПроверки.Добавить(ОбластьИтогиПоЛисту);
	МассивПроверки.Добавить(ОбластьПодвалШтамп);
	
	Сч = 0;
	Пока не Сч = 7 Цикл
		МассивПроверки.Добавить(ОбластьСтрокаРеестра);
		Сч = Сч +1;
	КонецЦикла;
	
	МассивПроверки.Удалить(2);
	МассивПроверки.Удалить(2);
	МассивПроверки.Добавить(ОбластьИтогиПоЛисту);
	МассивПроверки.Добавить(ОбластьПодвалШтамп);
	
	Для Каждого Область Из МассивПроверки Цикл 
		ТабличныйДокумент.Вывести(Область);
	КонецЦикла;
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	МассивПроверки.Очистить();
	
	МассивПроверки = Новый Массив;
	МассивПроверки.Добавить(ОбластьШапкаТаблицы);
	МассивПроверки.Добавить(ОбластьИтогиПоРеестру);
	МассивПроверки.Добавить(ОбластьПодвал);
	
	Сч = 0;
	Пока не Сч = 19 Цикл
		МассивПроверки.Добавить(ОбластьСтрокаРеестра);
		Сч = Сч +1;
	КонецЦикла;
	
	МассивПроверки.Удалить(1);
	МассивПроверки.Удалить(1);
	МассивПроверки.Добавить(ОбластьИтогиПоРеестру);
	МассивПроверки.Добавить(ОбластьПодвал);
	
	Для Каждого Область Из МассивПроверки Цикл 
		ТабличныйДокумент.Вывести(Область);
	КонецЦикла;
	
КонецПроцедуры

// Процедура - Подвал с итогами первой страницы
//
// Параметры:
//  ТабличныйДокумент			 - 	 - 
//  ИтогоПоЛистуБНДС			 - 	 - 
//  ИтогоПоЛистуНДС				 - 	 - 
//  ИтогоПоЛистуОбщаяСтоимость	 - 	 - 
//  ОбластьИтогиПоЛисту			 - 	 - 
//  ОбластьПодвал				 - 	 - 
//  ОбластьШапкаТаблицы			 - 	 - 
//  МассивПроверки				 - 	 - 
//
Процедура ПодвалСИтогамиПервойСтраницы(ИтогоПоЛистуБНДС, ИтогоПоЛистуНДС, ИтогоПоЛистуНДСЗачет, МассивПроверки, ОбластьИтогиПоЛисту, ОбластьПодвал, ОбластьШапкаТаблицы, ТабличныйДокумент)
	
	ОбластьИтогиПоЛисту.Параметры.СтоимостьБезНДС 	= ИтогоПоЛистуБНДС;
	ОбластьИтогиПоЛисту.Параметры.СуммаНДС 			= ИтогоПоЛистуНДС;
	ОбластьИтогиПоЛисту.Параметры.СуммаПодлежащаяКЗачетуНДС 	= ИтогоПоЛистуНДСЗачет;
	
	ТабличныйДокумент.Вывести(ОбластьИтогиПоЛисту);
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
	ИтогоПоЛистуБНДС        = 0;
	ИтогоПоЛистуНДС         = 0;
	ИтогоПоЛистуНДСЗачет    = 0;
	
	МассивПроверки = Новый Массив;
	МассивПроверки.Добавить(ОбластьШапкаТаблицы);
	
КонецПроцедуры // СформироватьОтчет()

// Процедура - Подвал с итогами последней страницы
//
// Параметры:
//  ТабличныйДокумент			 - 	 - 
//  ИтогоПоРееструБНДС			 - 	 - 
//  ИтогоПоРееструНДС			 - 	 - 
//  ИтогоПоРееструОбщаяСтоимость - 	 - 
//  СтруктураНДС				 - 	 - 
//  ОбластьИтогиПоРеестру		 - 	 - 
//  ОбластьПодвал				 - 	 - 
//  КоличесвтоТекушегоЛиста		 - 	 - 
//  Макет						 - 	 - 
//  МассивПроверки				 - 	 - 
//
Процедура ПодвалСИтогамиПоследнейСтраницы(ИтогоПоРееструБНДС, ИтогоПоРееструНДС, ИтогоПоРееструОбщаяСтоимость, Макет, МассивПроверки, ОбластьИтогиПоРеестру, ОбластьПодвал, ТабличныйДокумент,КоличесвтоТекушегоЛиста)
	
	ОбластьИтогиПоРеестру.Параметры.СтоимостьБезНДС				= ИтогоПоРееструБНДС;
	ОбластьИтогиПоРеестру.Параметры.СуммаНДС 					= ИтогоПоРееструНДС;
	ОбластьИтогиПоРеестру.Параметры.СуммаПодлежащаяКЗачетуНДС 	= ИтогоПоРееструОбщаяСтоимость;
	
	МассивПроверки.Добавить(ОбластьИтогиПоРеестру);
	МассивПроверки.Добавить(ОбластьПодвал);
	
	Пока  Не КоличесвтоТекушегоЛиста >= 17 Цикл 
		ОбластьСтрокаРеестра 	= Макет.ПолучитьОбласть("СтрокаРеестра");
		ТабличныйДокумент.Вывести(ОбластьСтрокаРеестра);
		КоличесвтоТекушегоЛиста = КоличесвтоТекушегоЛиста +1;
	КонецЦикла;
	
	ТабличныйДокумент.Вывести(ОбластьИтогиПоРеестру);
	
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры

// Процедура - Подвал промежуточной страницы с итогами
//
// Параметры:
//  ТабличныйДокумент			 - 	 - 
//  ИтогоПоЛистуБНДС			 - 	 - 
//  ИтогоПоЛистуНДС				 - 	 - 
//  ИтогоПоЛистуОбщаяСтоимость	 - 	 - 
//  ОбластьИтогиПоЛисту			 - 	 - 
//  ОбластьПодвал				 - 	 - 
//  ОбластьШапка				 - 	 - 
//  ОбластьШапкаТаблицы			 - 	 - 
//  Макет						 - 	 - 
//  МассивПроверки				 - 	 - 
//  КоличествоОпераций			 - 	 - 
//  КоличествоВывода			 - 	 - 
//  НомерЛиста					 - 	 - 
//
Процедура ПодвалПромежуточнойСтраницыСИтогами(ИтогоПоЛистуБНДС, ИтогоПоЛистуНДС, ИтогоПоЛистуНДСЗачет, 
	ОбластьИтогиПоЛисту, ОбластьПодвал, ОбластьШапка, ОбластьШапкаТаблицы, ТабличныйДокумент, МассивПроверки, Макет, КоличествоОпераций, КоличествоВывода, НомерЛиста)
	
	ОбластьИтогиПоЛисту.Параметры.СтоимостьБезНДС 	= ИтогоПоЛистуБНДС;
	ОбластьИтогиПоЛисту.Параметры.СуммаНДС 			= ИтогоПоЛистуНДС;
	ОбластьИтогиПоЛисту.Параметры.СуммаПодлежащаяКЗачетуНДС 	= ИтогоПоЛистуНДСЗачет;
	
	ТабличныйДокумент.Вывести(ОбластьИтогиПоЛисту);
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
	ИтогоПоЛистуБНДС        = 0;
	ИтогоПоЛистуНДС         = 0;
	ИтогоПоЛистуНДСЗачет    = 0;
	
	МассивПроверки = Новый Массив;
	МассивПроверки.Добавить(ОбластьШапкаТаблицы);
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	Если КоличествоОпераций - КоличествоВывода <= 19 Тогда 
		ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЗаключительногоЛиста");
	Иначе 
		ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЛиста");
	КонецЕсли;
	
	НомерЛиста = НомерЛиста + 1;
	ОбластьНомерЛиста.Параметры.НомЛиста = НомерЛиста;
	МассивПроверки.Добавить(ОбластьНомерЛиста);
	ТабличныйДокумент.Вывести(ОбластьНомерЛиста);
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
	
КонецПроцедуры

// Процедура - Расчет итоговых значений
//
// Параметры:
//  ВыборкаДанных				 - 	 - 
//  ИтогоПоЛистуБНДС			 - 	 - 
//  ИтогоПоЛистуНДС				 - 	 - 
//  ИтогоПоЛистуОбщаяСтоимость	 - 	 - 
//  ИтогоПоРееструБНДС			 - 	 - 
//  ИтогоПоРееструНДС			 - 	 - 
//  ИтогоПоРееструОбщаяСтоимость - 	 - 
Процедура РасчетИтоговыхЗначений(ВыборкаДанных, ИтогоПоЛистуБНДС, ИтогоПоЛистуНДС, ИтогоПоЛистуНДСЗачет, ИтогоПоРееструБНДС, ИтогоПоРееструНДС, ИтогоПоРееструНДСЗачет)
	
	ИтогоПоЛистуБНДС        = ИтогоПоЛистуБНДС 	   + ВыборкаДанных.СтоимостьБезНДС;
	ИтогоПоЛистуНДС         = ИтогоПоЛистуНДС  	   + ВыборкаДанных.СуммаНДС;
	ИтогоПоЛистуНДСЗачет    = ИтогоПоЛистуНДСЗачет + ВыборкаДанных.СуммаПодлежащаяКЗачетуНДС;
	
	ИтогоПоРееструБНДС      = ИтогоПоРееструБНДС 	   + ВыборкаДанных.СтоимостьБезНДС;
	ИтогоПоРееструНДС       = ИтогоПоРееструНДС  	   + ВыборкаДанных.СуммаНДС;
	ИтогоПоРееструНДСЗачет  = ИтогоПоРееструНДСЗачет   + ВыборкаДанных.СуммаПодлежащаяКЗачетуНДС;
	
КонецПроцедуры

// Функция -ПолучитьКонтактнуюИнформацию
//
// Параметры:
//  Организация  - Спр.Ссылка - Спр.Органинизации 
// Возвращаемое значение:
//  Структура   - структура данных контактной информации
//
Функция ПолучитьКонтактнуюИнформацию(Организация)
	
	СтруктураКонтактнойИнформации = УправлениеКонтактнойИнформациейКлиентСервер.СтруктураКонтактнойИнформацииПоТипу(Перечисления.ТипыКонтактнойИнформации.Адрес);
	ТаблицаКонтактнойИнформации = УправлениеКонтактнойИнформацией.ТаблицаКонтактнойИнформацииОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	
	Если ТаблицаКонтактнойИнформации.Количество() > 0 Тогда 		
		СтруктураКонтактнойИнформации = ТаблицаКонтактнойИнформации[0].СтруктураПолей;
	КонецЕсли;
	Если СтруктураКонтактнойИнформации.Количество() > 3 Тогда 
		Индекс		    = СтруктураКонтактнойИнформации.Индекс; 
		ГородНасПункт   = ?(СтруктураКонтактнойИнформации.Город  = "",СтруктураКонтактнойИнформации.НаселенныйПункт,СтруктураКонтактнойИнформации.Город);
		АдрОбластьГород = ?(СтруктураКонтактнойИнформации.Регион = "","",СтруктураКонтактнойИнформации.Регион + ",")
		                + ?(СтруктураКонтактнойИнформации.Район  = "","", " " + СтруктураКонтактнойИнформации.Район + ",") 
						+ ?(ГородНасПункт = "",""," " + ГородНасПункт); 
		АдресОрганизации = ?(СтруктураКонтактнойИнформации.Улица    = "","",СтруктураКонтактнойИнформации.Улица + ",")
						 + ?(СтруктураКонтактнойИнформации.Дом      = "",""," " + СтруктураКонтактнойИнформации.Дом + ",")
						 + ?(СтруктураКонтактнойИнформации.Корпус   = "",""," " + СтруктураКонтактнойИнформации.Корпус + ",")
						 + ?(СтруктураКонтактнойИнформации.Квартира = "",""," " + СтруктураКонтактнойИнформации.Квартира);
		
	Иначе
		Индекс			 = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации); 
		АдрОбластьГород  = ""; 
		АдресОрганизации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);		
	КонецЕсли;	
	
	Телефон		= УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	
	Структура = Новый Структура("Индекс,АдрОбластьГород,АдресОрганизации,Телефон", Индекс,АдрОбластьГород,АдресОрганизации,Телефон);
	
	Возврат Структура;
	
КонецФункции // ПолучитьАдресОрганизации()

#КонецОбласти

#Область ИнтерфейсПечати

Функция ПечатьОтчетаПоНДС(МассивОбъектов, ОбъектыПечати)	
	Запрос = Новый Запрос;		
	Запрос.Текст =	
	"ВЫБРАТЬ
	|	ОтчетПоНДС.Ссылка,
	|	ОтчетПоНДС.Организация,
	|	ОтчетПоНДС.Дата,
	|	ОтчетПоНДС.ОтчетОсновной.(
	|		Строка КАК Строка,
	|		Содержание,
	|		Сумма
	|	)
	|ИЗ
	|	Документ.ОтчетПоНДС КАК ОтчетПоНДС
	|ГДЕ
	|	ОтчетПоНДС.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Строка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_ОтчетПоНДСОсновной";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоНДС.ПФ_MXL_ОтчетПоНДС");
	ОбластьШапка	= Макет.ПолучитьОбласть("Шапка");

	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));
		
		ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьШапка);	
		
		Выборка = Шапка.ОтчетОсновной.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.Строка = "050" Тогда
				ОбластьШапка.Параметры.ОблПоставкиКР = Выборка.Сумма;	
			ИначеЕсли Выборка.Строка = "051" Тогда
				ОбластьШапка.Параметры.ОблПоставкиНул = Выборка.Сумма;			
			ИначеЕсли Выборка.Строка = "052" Тогда
				ОбластьШапка.Параметры.ОблПоставкиЕАЭС = Выборка.Сумма;		
			ИначеЕсли Выборка.Строка = "053" Тогда
				ОбластьШапка.Параметры.ОсвИНеобл = Выборка.Сумма;		
			ИначеЕсли Выборка.Строка = "054" Тогда
				ОбластьШапка.Параметры.ВсегоПоставки = Выборка.Сумма;			
			ИначеЕсли Выборка.Строка = "055" Тогда
				ОбластьШапка.Параметры.ПриобретениеКР = Выборка.Сумма;
			ИначеЕсли Выборка.Строка = "056" Тогда
				ОбластьШапка.Параметры.ИмпортКР = Выборка.Сумма;			
			ИначеЕсли Выборка.Строка = "057" Тогда
				ОбластьШапка.Параметры.ИмпортЕАЭС = Выборка.Сумма;			
			ИначеЕсли Выборка.Строка = "058" Тогда
				ОбластьШапка.Параметры.ВсегоПриобретение = Выборка.Сумма;			
			ИначеЕсли Выборка.Строка = "059" Тогда
				ОбластьШапка.Параметры.ВсегоНДСПоставки = Выборка.Сумма;			
			ИначеЕсли Выборка.Строка = "060" Тогда
				ОбластьШапка.Параметры.НДСПриобретение = Выборка.Сумма;			
			ИначеЕсли Выборка.Строка = "061" Тогда
				ОбластьШапка.Параметры.НДСИмпорт = Выборка.Сумма;
			ИначеЕсли Выборка.Строка = "062" Тогда
				ОбластьШапка.Параметры.НДСЕАЭС = Выборка.Сумма;			
			ИначеЕсли Выборка.Строка = "063" Тогда
				ОбластьШапка.Параметры.НДСНеЗачет = Выборка.Сумма;
			ИначеЕсли Выборка.Строка = "064" Тогда
				ОбластьШапка.Параметры.НДСЗачет = Выборка.Сумма;				
			ИначеЕсли Выборка.Строка = "065" Тогда
				ОбластьШапка.Параметры.НДСЗачетНул = Выборка.Сумма;
			ИначеЕсли Выборка.Строка = "066" Тогда
				ОбластьШапка.Параметры.НДСОбязательство = Выборка.Сумма;			
			КонецЕсли;		
		
		КонецЦикла;					
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьОтчетаРеестрПоставок(МассивОбъектов, ОбъектыПечати)	
	Запрос = Новый Запрос;		
	Запрос.Текст =	
	"ВЫБРАТЬ
	|	ОтчетПоНДС.Ссылка,
	|	ОтчетПоНДС.Организация,
	|	ОтчетПоНДС.Дата,
	|	ОтчетПоНДС.ОтчетРеестрПоставок.(
	|		Ссылка,
	|		ДатаВыписки,
	|		НомерСФ,
	|		СерияСФ,
	|		КодПоставки,
	|		КонтрагентНаименование,
	|		ИННКонтрагента,
	|		КодГНС,
	|		ДатаПоставки,
	|		СтоимостьБезНДС,
	|		СуммаНДС,
	|		СуммаНСП,
	|		ОбщаяСтоимостьСНДС,
	|		КорСерияСФ,
	|		КорНомерСФ,
	|		СтавкаНДС,
	|		КонтрагентСтранаРезидентстваЕАЭС
	|	)
	|ИЗ
	|	Документ.ОтчетПоНДС КАК ОтчетПоНДС
	|ГДЕ
	|	ОтчетПоНДС.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ПолеСлева = 0;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетРеестрПоставок";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоНДС.ПФ_MXL_РеестрПоставок");
	ОбластьШапка	= Макет.ПолучитьОбласть("Шапка");

	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));
		
		ЗаполнитьШапкуРеестра(СтруктураПараметров, ОбластьШапка);	
		
		Выборка = Шапка.ОтчетРеестрПоставок.Выбрать();
		
		КоличествоОпераций = Выборка.Количество();
	
		Если КоличествоОпераций = 0 Тогда 
			СформироватьПустойБланкРеестраПоставок(СтруктураПараметров, ТабличныйДокумент); 
			Возврат ТабличныйДокумент;
		КонецЕсли;
		
		КолСтрока = Формат(КоличествоОпераций,"ЧЦ=3; ЧВН=");
		ОбластьШапка.Параметры.Кол1 = Лев(КолСтрока,1); 
		ОбластьШапка.Параметры.Кол2 = Сред(КолСтрока,2,1); 
		ОбластьШапка.Параметры.Кол3 = Сред(КолСтрока,3,1);
		
		ТабличныйДокумент.Вывести(ОбластьШапка);	
		
		ИтогоПоЛистуБНДС        		= 0; 	
		ИтогоПоЛистуНДС         		= 0; 	
		ИтогоПоЛистуОбщаяСтоимость		= 0; 	
		ИтогоПоРееструБНДС      		= 0;
		ИтогоПоРееструНДС       		= 0;
		ИтогоПоРееструОбщаяСтоимость  	= 0;
		
		ИтогоСуммаБНДСОбл		= 0;
		ИтогоСуммаНДСОбл		= 0;
		ИтогоОбщаяСтоимостьОбл	= 0;
		ИтогоСуммаБНДСНул		= 0;
		ИтогоСуммаБНДСОблТС		= 0;
		ИтогоСуммаБНДСОСВ		= 0;

		// Вывод листов отчета
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		ОбластьИтогиПоЛисту   = Макет.ПолучитьОбласть("ИтогиПоЛисту");
		ОбластьИтогиПоРеестру = Макет.ПолучитьОбласть("ИтогиПоРеестру");
		ОбластьПодвал		  = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвалШтамп	  = Макет.ПолучитьОбласть("ПодвалШтамп");
		
		// Проверка вывода на одну страницу
		МассивПроверки = Новый Массив;
		МассивПроверки.Добавить(ОбластьШапка);
		МассивПроверки.Добавить(ОбластьШапкаТаблицы);
		
		КоличествоВывода = 0; // переменная для проверки сколько вывели строк. Для определения одна страница или больше, если одна то печатается итог по реестру и подвал, иначе итог по листу и подвал
		КоличесвтоТекушегоЛиста = 0;
		НомерЛиста = 1;
		
		Пока Выборка.Следующий() Цикл
			КоличествоВывода 		= КоличествоВывода + 1;
			КоличесвтоТекушегоЛиста = КоличесвтоТекушегоЛиста + 1;
			
			ВыводСтрокиРеестра(ТабличныйДокумент, Выборка, Макет, МассивПроверки);
			
			ИтогоПоЛистуБНДС        	= ИтогоПоЛистуБНДС 	   			+ Выборка.СтоимостьБезНДС;
			ИтогоПоЛистуНДС         	= ИтогоПоЛистуНДС  	   			+ Выборка.СуммаНДС;
			ИтогоПоЛистуОбщаяСтоимость	= ИтогоПоЛистуОбщаяСтоимость 	+ Выборка.ОбщаяСтоимостьСНДС;
			
			ИтогоПоРееструБНДС      	= ИтогоПоРееструБНДС 	   		+ Выборка.СтоимостьБезНДС;
			ИтогоПоРееструНДС       	= ИтогоПоРееструНДС  	   		+ Выборка.СуммаНДС;
			ИтогоПоРееструОбщаяСтоимость= ИтогоПоРееструОбщаяСтоимость	+ Выборка.ОбщаяСтоимостьСНДС;		
					
			Если НЕ Выборка.КодПоставки = "111" И НЕ Выборка.КодПоставки = "112" Тогда
				Если НЕ Выборка.СтавкаНДС = Справочники.СтавкиНДС.Освобожденная Тогда
					ИтогоСуммаБНДСОбл      	= ИтогоСуммаБНДСОбл + Выборка.СтоимостьБезНДС;
					ИтогоСуммаНДСОбл      	= ИтогоСуммаНДСОбл + Выборка.СуммаНДС;
					ИтогоОбщаяСтоимостьОбл	= ИтогоОбщаяСтоимостьОбл + Выборка.СтоимостьБезНДС + Выборка.СуммаНДС;
				КонецЕсли;
				Если Выборка.СтавкаНДС = Справочники.СтавкиНДС.Нулевая Тогда
					ИтогоСуммаБНДСНул 		= ИтогоСуммаБНДСНул + Выборка.СтоимостьБезНДС;			
				КонецЕсли;
				Если Выборка.КонтрагентСтранаРезидентстваЕАЭС Тогда
					ИтогоСуммаБНДСОблТС 	= ИтогоСуммаБНДСОблТС + Выборка.СтоимостьБезНДС;			
				КонецЕсли;			
				Если Выборка.СтавкаНДС = Справочники.СтавкиНДС.Освобожденная Тогда
					ИтогоСуммаБНДСОСВ      	= ИтогоСуммаБНДСОСВ + Выборка.СтоимостьБезНДС;
				КонецЕсли;			
			
			КонецЕсли;
		
			Если КоличествоОпераций > КоличествоВывода И КоличествоВывода = 13 Тогда // больше чем одна страница и вывели 7 строк = количеству на первой странице
				// Вывод итогов по листу
				// Подвал С Итогами Первой Страницы
				ОбластьИтогиПоЛисту.Параметры.СтоимостьБезНДС 	= ИтогоПоЛистуБНДС;
				ОбластьИтогиПоЛисту.Параметры.СуммаНДС 			= ИтогоПоЛистуНДС;
				ОбластьИтогиПоЛисту.Параметры.ОбщаяСтоимостьСНДС = ИтогоПоЛистуОбщаяСтоимость;
				
				ТабличныйДокумент.Вывести(ОбластьИтогиПоЛисту);
				ТабличныйДокумент.Вывести(ОбластьПодвал);
				
				ИтогоПоЛистуБНДС        = 0;
				ИтогоПоЛистуНДС         = 0;
				ИтогоПоЛистуОбщаяСтоимость    = 0;  
				
				МассивПроверки = Новый Массив;
				МассивПроверки.Добавить(ОбластьШапкаТаблицы);
		
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				Если КоличествоОпераций - КоличествоВывода <= 22 Тогда 
					ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЗаключительногоЛиста");
				Иначе 
					ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЛиста");
				КонецЕсли;
				
				НомерЛиста = НомерЛиста + 1;
				ОбластьНомерЛиста.Параметры.НомЛиста = НомерЛиста;
				ТабличныйДокумент.Вывести(ОбластьНомерЛиста);
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);             			
				Продолжить;
				
			ИначеЕсли КоличествоОпераций = КоличествоВывода Тогда 
				// Вывод итогов по реестру
				//Подвал С Итогами Последней Страницы
				ОбластьИтогиПоРеестру.Параметры.СтоимостьБезНДС		= ИтогоПоРееструБНДС;
				ОбластьИтогиПоРеестру.Параметры.СуммаНДС 			= ИтогоПоРееструНДС;
				ОбластьИтогиПоРеестру.Параметры.ОбщаяСтоимостьСНДС	= ИтогоПоРееструОбщаяСтоимость;
				
				ОбластьИтогиПоРеестру.Параметры.СуммаБНДСОбл 		= ИтогоСуммаБНДСОбл;
				ОбластьИтогиПоРеестру.Параметры.СуммаНДСОбл 		= ИтогоСуммаНДСОбл;
				ОбластьИтогиПоРеестру.Параметры.ОбщаяСтоимостьОбл 	= ИтогоОбщаяСтоимостьОбл;
				ОбластьИтогиПоРеестру.Параметры.СуммаБНДСНул 		= ИтогоСуммаБНДСНул;
				ОбластьИтогиПоРеестру.Параметры.ОбщаяСтоимостьНул 	= ИтогоСуммаБНДСНул;
				ОбластьИтогиПоРеестру.Параметры.СуммаБНДСОблТС 		= ИтогоСуммаБНДСОблТС;
				ОбластьИтогиПоРеестру.Параметры.ОбщаяСтоимостьОблТС = ИтогоСуммаБНДСОблТС;
				ОбластьИтогиПоРеестру.Параметры.СуммаБНДСОСВ 		= ИтогоСуммаБНДСОСВ;			
				
				МассивПроверки.Добавить(ОбластьИтогиПоРеестру);
				МассивПроверки.Добавить(ОбластьПодвал);
				
				Пока КоличесвтоТекушегоЛиста <= 9 Цикл 
					ОбластьСтрокаРеестра 	= Макет.ПолучитьОбласть("СтрокаРеестра");
					ТабличныйДокумент.Вывести(ОбластьСтрокаРеестра);
					КоличесвтоТекушегоЛиста = КоличесвтоТекушегоЛиста +1;
				КонецЦикла;
				
				ТабличныйДокумент.Вывести(ОбластьИтогиПоРеестру);
				ТабличныйДокумент.Вывести(ОбластьПодвал);			
				
				Прервать;
			КонецЕсли;
			
			МассивПроверки.Добавить(ОбластьИтогиПоЛисту);
			МассивПроверки.Добавить(ОбластьПодвал);
			ТабдокПроверки = Новый ТабличныйДокумент;
			ТабдокПроверки.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			
			Если  ТабдокПроверки.ПРоверитьВывод(МассивПроверки) И МассивПроверки.Количество() < 25 Тогда 
				МассивПроверки.Удалить(МассивПроверки.Количество() -1);
				МассивПроверки.Удалить(МассивПроверки.Количество() -1);
				Продолжить;
			Иначе 
				// Вывод подвала
				//Подвал Промежуточной Страницы С Итогами
				ОбластьИтогиПоЛисту.Параметры.СтоимостьБезНДС 	= ИтогоПоЛистуБНДС;
				ОбластьИтогиПоЛисту.Параметры.СуммаНДС 			= ИтогоПоЛистуНДС;
				ОбластьИтогиПоЛисту.Параметры.ОбщаяСтоимостьСНДС = ИтогоПоЛистуОбщаяСтоимость;
				
				ТабличныйДокумент.Вывести(ОбластьИтогиПоЛисту);
				ТабличныйДокумент.Вывести(ОбластьПодвал);
				
				ИтогоПоЛистуБНДС        = 0;
				ИтогоПоЛистуНДС         = 0;
				ИтогоПоЛистуОбщаяСтоимость    = 0;
				
				МассивПроверки = Новый Массив;
				МассивПроверки.Добавить(ОбластьШапкаТаблицы);
				
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				Если КоличествоОпераций - КоличествоВывода <= 23 Тогда 
					ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЗаключительногоЛиста");
				Иначе 
					ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЛиста");
				КонецЕсли;
				
				НомерЛиста = НомерЛиста + 1;
				ОбластьНомерЛиста.Параметры.НомЛиста = НомерЛиста;
				МассивПроверки.Добавить(ОбластьНомерЛиста);
				ТабличныйДокумент.Вывести(ОбластьНомерЛиста);
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
				
			КонецЕсли;
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		КонецЦикла;
		
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьОтчетаРеестрПриобретенных(МассивОбъектов, ОбъектыПечати)	
	Запрос = Новый Запрос;		
	Запрос.Текст =	
	"ВЫБРАТЬ
	|	ОтчетПоНДС.Ссылка,
	|	ОтчетПоНДС.Организация,
	|	ОтчетПоНДС.Дата,
	|	ОтчетПоНДС.ОтчетРеестрПриобретенныхМатРессурсов.(
	|		Ссылка,
	|		НомерСФ,
	|		СерияСФ,
	|		КонтрагентНаименование,
	|		ИННКонтрагента,
	|		КодГНС,
	|		ДатаПоставки,
	|		СтоимостьБезНДС,
	|		СуммаНДС,
	|		СуммаПодлежащаяКЗачетуНДС,
	|		НЕОПРЕДЕЛЕНО КАК ДатаВыписки
	|	)
	|ИЗ
	|	Документ.ОтчетПоНДС КАК ОтчетПоНДС
	|ГДЕ
	|	ОтчетПоНДС.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ПолеСлева = 0;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетРеестрПриобретенных";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоНДС.ПФ_MXL_РеестрПриобретенных");
	ОбластьШапка	= Макет.ПолучитьОбласть("Шапка");

	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));
		
		ЗаполнитьШапкуРеестра(СтруктураПараметров, ОбластьШапка);	
		
		Выборка = Шапка.ОтчетРеестрПриобретенныхМатРессурсов.Выбрать();
		
		КоличествоОпераций = Выборка.Количество();
		
		КолСтрока = Формат(КоличествоОпераций,"ЧЦ=3; ЧВН=");		
		ОбластьШапка.Параметры.Кол1 = Лев(КолСтрока,1); 
		ОбластьШапка.Параметры.Кол2 = Сред(КолСтрока,2,1); 
		ОбластьШапка.Параметры.Кол3 = Сред(КолСтрока,3,1); 
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ИтогоПоЛистуБНДС        = 0; 	
		ИтогоПоРееструБНДС      = 0;
		ИтогоПоЛистуНДС         = 0; 	
		ИтогоПоРееструНДС       = 0;
		ИтогоПоЛистуНДСЗачет    = 0; 	
		ИтогоПоРееструНДСЗачет  = 0;
		
		// 3. Вывод листов отчета
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		ОбластьИтогиПоЛисту   	= Макет.ПолучитьОбласть("ИтогиПоЛисту");
		ОбластьИтогиПоРеестру 	= Макет.ПолучитьОбласть("ИтогиПоРеестру");
		ОбластьПодвал		  	= Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвалШтамп		= Макет.ПолучитьОбласть("ПодвалШтамп");
		
		// 3.1. проверка вывода на одну страницу
		МассивПроверки = Новый Массив;
		МассивПроверки.Добавить(ОбластьШапка);
		МассивПроверки.Добавить(ОбластьШапкаТаблицы);
		
		КоличествоВывода = 0; // переменная для проверки сколько вывели строк. Для определения одна страница или больше, если одна то печатается итог по реестру и подвал, иначе итог по листу и подвал
		КоличесвтоТекушегоЛиста = 0;
		НомерЛиста = 1;
		Пока Выборка.Следующий() Цикл
			КоличествоВывода 		= КоличествоВывода + 1;
			КоличесвтоТекушегоЛиста = КоличесвтоТекушегоЛиста + 1;
			                           
			ВыводСтрокиРеестра(ТабличныйДокумент, Выборка, Макет, МассивПроверки);
			
			РасчетИтоговыхЗначений(Выборка, ИтогоПоЛистуБНДС, ИтогоПоЛистуНДС, ИтогоПоЛистуНДСЗачет, ИтогоПоРееструБНДС, ИтогоПоРееструНДС, ИтогоПоРееструНДСЗачет);
			
			Если КоличествоОпераций > КоличествоВывода и КоличесвтоТекушегоЛиста = 16 Тогда // больше чем одна страница и вывели 7 строк = количеству на первой странице
				// 3.2. Вывод итогов по листу
				ПодвалСИтогамиПервойСтраницы(ИтогоПоЛистуБНДС, ИтогоПоЛистуНДС, ИтогоПоЛистуНДСЗачет, МассивПроверки, 
					ОбластьИтогиПоЛисту, ОбластьПодвалШтамп, ОбластьШапкаТаблицы, ТабличныйДокумент);
				КоличесвтоТекушегоЛиста = 0;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				Если КоличествоОпераций - КоличествоВывода <= 30 Тогда 
					ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЗаключительногоЛиста");
				Иначе 
					ОбластьНомерЛиста = Макет.ПолучитьОбласть("НомерЛиста");
				КонецЕсли;

				НомерЛиста = НомерЛиста + 1;
				ОбластьНомерЛиста.Параметры.НомЛиста = НомерЛиста;
				ТабличныйДокумент.Вывести(ОбластьНомерЛиста);

				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
				Продолжить;
			ИначеЕсли КоличествоОпераций = КоличествоВывода и КоличесвтоТекушегоЛиста < 16 Тогда 
				// 4. вывод итогов по реестру
				ПодвалСИтогамиПоследнейСтраницы(ИтогоПоРееструБНДС, ИтогоПоРееструНДС, ИтогоПоРееструНДСЗачет, Макет, МассивПроверки, 
					ОбластьИтогиПоРеестру, ОбластьПодвалШтамп, ТабличныйДокумент, КоличесвтоТекушегоЛиста);
				Прервать;
			ИначеЕсли КоличествоОпераций = КоличествоВывода Тогда 
				ПодвалСИтогамиПоследнейСтраницы(ИтогоПоРееструБНДС, ИтогоПоРееструНДС, ИтогоПоРееструНДСЗачет, Макет, МассивПроверки, 
					ОбластьИтогиПоРеестру, ОбластьПодвал, ТабличныйДокумент, КоличесвтоТекушегоЛиста);
				Прервать;
			КонецЕсли;
			
			МассивПроверки.Добавить(ОбластьИтогиПоРеестру);
			МассивПроверки.Добавить(ОбластьПодвал);
			ТабдокПроверки = Новый ТабличныйДокумент;
			ТабдокПроверки.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			
			Если ТабдокПроверки.ПРоверитьВывод(МассивПроверки) Тогда 
				МассивПроверки.Удалить(МассивПроверки.Количество() -1);
				МассивПроверки.Удалить(МассивПроверки.Количество() -1);
				Продолжить;
			Иначе 
				// 5. вывод подвала
				ПодвалПромежуточнойСтраницыСИтогами(ИтогоПоЛистуБНДС, ИтогоПоЛистуНДС, ИтогоПоЛистуНДСЗачет, 
					ОбластьИтогиПоЛисту, ОбластьПодвал, ОбластьШапка, ОбластьШапкаТаблицы, ТабличныйДокумент, МассивПроверки, Макет, КоличествоОпераций, КоличествоВывода, НомерЛиста);
				КоличесвтоТекушегоЛиста = 0;
			КонецЕсли;
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		КонецЦикла;
		
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ОтчетПоНДС") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ПФ_MXL_ОтчетПоНДС", 
		"Отчет по НДС", 
		ПечатьОтчетаПоНДС(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоНДС.ПФ_MXL_ОтчетПоНДС");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_РеестрПоставок") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ПФ_MXL_РеестрПоставок", 
		"Реестр поставок", 
		ПечатьОтчетаРеестрПоставок(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоНДС.ПФ_MXL_РеестрПоставок");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_РеестрПриобретенных") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ПФ_MXL_РеестрПриобретенных", 
		"Реестр приобретенных материальных рессурсов", 
		ПечатьОтчетаРеестрПриобретенных(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоНДС.ПФ_MXL_РеестрПриобретенных");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_ОтчетПоНДС";
	КомандаПечати.Представление = НСтр("ru = 'Отчет по НДС'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_РеестрПоставок";
	КомандаПечати.Представление = НСтр("ru = 'Реестр поставок'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 2;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_РеестрПриобретенных";
	КомандаПечати.Представление = НСтр("ru = 'Реестр приобретенных материальных рессурсов'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 3;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли