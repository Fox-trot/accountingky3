#Область ОбработчикиСобытийФормы

// Процедура - обработчик события ПриСозданииНаСервере.
// В процедуре осуществляется
// - инициализация реквизитов формы,
// - установка параметров функциональных опций формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// Установка реквизитов формы.
	ДатаДокумента = Объект.Дата;
	Если НЕ ЗначениеЗаполнено(ДатаДокумента) Тогда
		ДатаДокумента = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.Дата", "МесяцСтрокой");
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаВажныеКоманды;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

// Процедура - обработчик события ПриЧтенииНаСервере.
//
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.Дата", "МесяцСтрокой");
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменений
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменений
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры // ПриЧтенииНаСервере()

// Процедура - обработчик события ПриОткрытии.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Процедура - обработчик события ПриИзменении поля ввода Организация.
//
&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	// Обработка события изменения организации.
	Объект.Номер = "";        
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьОсновнойОтчет(Команда)
	Если Объект.ОтчетОсновной.Количество() > 0 Тогда 
		ОписаниеОповещения = Новый ОписаниеОповещения("ОтветНаВопросЗаполнитьТабличнуюЧастьОтчетОсновной", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Табличная часть документа будет очищена и перезаполнена! Продолжить выполнение операции?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60);
	Иначе
		ЗаполнитьТабличнуюЧастьОтчетОсновнойНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеестрПоставок(Команда)
	Если Объект.ОтчетРеестрПоставок.Количество() > 0 Тогда 
		ОписаниеОповещения = Новый ОписаниеОповещения("ОтветНаВопросЗаполнитьТабличнуюЧастьОтчетРеестрПоставок", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Табличная часть документа будет очищена и перезаполнена! Продолжить выполнение операции?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60);
	Иначе
		Объект.ОтчетРеестрПоставок.Очистить();
		Объект.ОтчетРеестрПоставокИтоги.Очистить();
		ЗаполнитьТабличнуюЧастьОтчетРеестрПоставокНаСервере();
		РассчитатьИтогиОтчетаРеестрПоставокНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеестрПриобретенных(Команда)
	Если Объект.ОтчетРеестрПриобретенныхМатРессурсовИтоги.Количество() > 0 Тогда 
		ОписаниеОповещения = Новый ОписаниеОповещения("ОтветНаВопросЗаполнитьТабличнуюЧастьОтчетРеестрПриобретенных", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Табличная часть документа будет очищена и перезаполнена! Продолжить выполнение операции?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60);
	Иначе
		Объект.ОтчетРеестрПриобретенныхМатРессурсов.Очистить();
		Объект.ОтчетРеестрПриобретенныхМатРессурсовИтоги.Очистить();
		ЗаполнитьТабличнуюЧастьОтчетРеестрПриобретенныхНаСервере();
		РассчитатьИтогиОтчетаРеестрПриобретенныхНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеестрГТД(Команда)
	Если Объект.ОтчетРеестрГТД.Количество() > 0 Тогда 
		ОписаниеОповещения = Новый ОписаниеОповещения("ОтветНаВопросЗаполнитьТабличнуюЧастьОтчетРеестрГТД", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Табличная часть документа будет очищена и перезаполнена! Продолжить выполнение операции?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60);
	Иначе
		ЗаполнитьТабличнуюЧастьОтчетРеестрГТДНаСервере();
		
		Если Объект.ОтчетРеестрГТД.Количество() = 0 Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'В период ""%1"" нет данных для заполнения отчета ""Реестр ГТД""!'"), 
										ПредставлениеПериода(НачалоМесяца(Объект.Дата), КонецМесяца(Объект.Дата)));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);		
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Процедура - Выгрузка в excel основная форма
//
&НаКлиенте
Процедура ВыгрузкаВExcelОсновнаяФорма(Команда)

	Если ТребуетсяНастройкаАвторизацияИнтернетПоддержки() Тогда
		ТекстВопроса = НСтр("ru='Для формирования отчета в электронной форме
			|необходимо подключиться к Интернет-поддержке пользователей.
			|Подключиться сейчас?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриПодключенииИнтернетПоддержки", ЭтотОбъект, Новый Структура("НаправлениеВыгрузки", "ОсновнаяФорма"));
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Подключиться'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки);
	Иначе
		ПродолжитьВыгрузку("ОсновнаяФорма");
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Выгрузка в excel приложение01
//
&НаКлиенте
Процедура ВыгрузкаВExcelПриложение01(Команда)
	Если ТребуетсяНастройкаАвторизацияИнтернетПоддержки() Тогда
		ТекстВопроса = НСтр("ru='Для формирования отчета в электронной форме
			|необходимо подключиться к Интернет-поддержке пользователей.
			|Подключиться сейчас?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриПодключенииИнтернетПоддержки", ЭтотОбъект, Новый Структура("НаправлениеВыгрузки", "Приложение01"));
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Подключиться'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки);
	Иначе
		ПродолжитьВыгрузку("Приложение01");
	КонецЕсли;
КонецПроцедуры

// Процедура - Выгрузка в excel приложение02
//
&НаКлиенте
Процедура ВыгрузкаВExcelПриложение02(Команда)
	Если ТребуетсяНастройкаАвторизацияИнтернетПоддержки() Тогда
		ТекстВопроса = НСтр("ru='Для формирования отчета в электронной форме
			|необходимо подключиться к Интернет-поддержке пользователей.
			|Подключиться сейчас?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриПодключенииИнтернетПоддержки", ЭтотОбъект, Новый Структура("НаправлениеВыгрузки", "Приложение02"));
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Подключиться'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки);
	Иначе
		ПродолжитьВыгрузку("Приложение02");
	КонецЕсли;
КонецПроцедуры

// Процедура - Выгрузка в excel приложение03
//
&НаКлиенте
Процедура ВыгрузкаВExcelПриложение03(Команда)
	Если ТребуетсяНастройкаАвторизацияИнтернетПоддержки() Тогда
		ТекстВопроса = НСтр("ru='Для формирования отчета в электронной форме
			|необходимо подключиться к Интернет-поддержке пользователей.
			|Подключиться сейчас?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриПодключенииИнтернетПоддержки", ЭтотОбъект, Новый Структура("НаправлениеВыгрузки", "Приложение03"));
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Подключиться'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки);
	Иначе
		ПродолжитьВыгрузку("Приложение03");
	КонецЕсли;
КонецПроцедуры

// Процедура - Выгрузка в excel приложение04
//
&НаКлиенте
Процедура ВыгрузкаВExcelПриложение04(Команда)
	Если ТребуетсяНастройкаАвторизацияИнтернетПоддержки() Тогда
		ТекстВопроса = НСтр("ru='Для формирования отчета в электронной форме
			|необходимо подключиться к Интернет-поддержке пользователей.
			|Подключиться сейчас?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриПодключенииИнтернетПоддержки", ЭтотОбъект, Новый Структура("НаправлениеВыгрузки", "Приложение04"));
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Подключиться'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки);
	Иначе
		ПродолжитьВыгрузку("Приложение04");
	КонецЕсли;
КонецПроцедуры

// Процедура - Выгрузка в excel приложение05
//
&НаКлиенте
Процедура ВыгрузкаВExcelПриложение05(Команда)
	Если ТребуетсяНастройкаАвторизацияИнтернетПоддержки() Тогда
		ТекстВопроса = НСтр("ru='Для формирования отчета в электронной форме
			|необходимо подключиться к Интернет-поддержке пользователей.
			|Подключиться сейчас?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриПодключенииИнтернетПоддержки", ЭтотОбъект, Новый Структура("НаправлениеВыгрузки", "Приложение05"));
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Подключиться'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки);
	Иначе
		ПродолжитьВыгрузку("Приложение05");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиРезультатовИнтерактивныхДействий

&НаКлиенте
Процедура ОтветНаВопросЗаполнитьТабличнуюЧастьОтчетОсновной(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.ОтчетОсновной.Очистить();
		ЗаполнитьТабличнуюЧастьОтчетОсновнойНаСервере();
	КонецЕсли; 
КонецПроцедуры	

&НаКлиенте
Процедура ОтветНаВопросЗаполнитьТабличнуюЧастьОтчетРеестрПоставок(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.ОтчетРеестрПоставок.Очистить();
		Объект.ОтчетРеестрПоставокИтоги.Очистить();
		ЗаполнитьТабличнуюЧастьОтчетРеестрПоставокНаСервере();
		РассчитатьИтогиОтчетаРеестрПоставокНаСервере();
	КонецЕсли; 
КонецПроцедуры	

&НаКлиенте
Процедура ОтветНаВопросЗаполнитьТабличнуюЧастьОтчетРеестрПриобретенных(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.ОтчетРеестрПриобретенныхМатРессурсов.Очистить();
		Объект.ОтчетРеестрПриобретенныхМатРессурсовИтоги.Очистить();
		ЗаполнитьТабличнуюЧастьОтчетРеестрПриобретенныхНаСервере();
		РассчитатьИтогиОтчетаРеестрПриобретенныхНаСервере();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОтветНаВопросЗаполнитьТабличнуюЧастьОтчетРеестрГТД(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.ОтчетРеестрГТД.Очистить();
		ЗаполнитьТабличнуюЧастьОтчетРеестрГТДНаСервере();
		Если Объект.ОтчетРеестрГТД.Количество() = 0 Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'В период ""%1"" нет данных для заполнения отчета ""Реестр ГТД""!'"), 
										ПредставлениеПериода(НачалоМесяца(Объект.Дата), КонецМесяца(Объект.Дата)));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);		
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура НачатьПодключениеРасширенияРаботыСФайламиЗавершение(Подключено, ДополнительныеПараметры) Экспорт
	
	Если НЕ Подключено Тогда
		Оповещение = Новый ОписаниеОповещения("НачатьУстановкуРасширенияРаботыСФайламиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ТекстСообщения = НСтр("ru = 'Для продолжении работы необходимо установить расширение для веб-клиента ""1С:Предприятие"". Установить?'");
		ПоказатьВопрос(Оповещение, ТекстСообщения, РежимДиалогаВопрос.ДаНет); 
	КонецЕсли;
	
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Укажите путь для сохранения файла'");
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ДиалогОткрытияФайлаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ДиалогОткрытияФайла.Показать(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДиалогОткрытияФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено И ВыбранныеФайлы.Количество() > 0 Тогда
		ФормированиеФайла(ВыбранныеФайлы[0], ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьУстановкуРасширенияРаботыСФайламиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		НачатьУстановкуРасширенияРаботыСФайлами();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ТребуетсяНастройкаАвторизацияИнтернетПоддержки()
	Если ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей") Тогда
		МодульИнтернетПоддержкаПользователей = ОбщегоНазначения.ОбщийМодуль("ИнтернетПоддержкаПользователей");
		ДанныеАутентификации = МодульИнтернетПоддержкаПользователей.ДанныеАутентификацииПользователяИнтернетПоддержки();
		Возврат Не (ДанныеАутентификации <> Неопределено
			И ЗначениеЗаполнено(ДанныеАутентификации.Логин)
			И ЗначениеЗаполнено(ДанныеАутентификации.Пароль));
	КонецЕсли;
	Возврат Ложь;
КонецФункции

&НаКлиенте
Процедура ПриПодключенииИнтернетПоддержки(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей") Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПодключенияИнтернетПоддержки", ЭтотОбъект, ДополнительныеПараметры);
		МодульИнтернетПоддержкаПользователейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ИнтернетПоддержкаПользователейКлиент");
		МодульИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(ОписаниеОповещения, ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодключенияИнтернетПоддержки(Результат, ДополнительныеПараметры) Экспорт
	Если Не (ТипЗнч(Результат) = Тип("Структура")
		И ЗначениеЗаполнено(Результат.Логин)
		И ЗначениеЗаполнено(Результат.Пароль)) Тогда
		Возврат;
	КонецЕсли;
	ПродолжитьВыгрузку(ДополнительныеПараметры.НаправлениеВыгрузки);
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьВыгрузку(НаправлениеВыгрузки)

	Если НаправлениеВыгрузки = "ОсновнаяФорма" Тогда  
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Команда", "ОсновнаяФорма");
		
		Оповещение = Новый ОписаниеОповещения("НачатьПодключениеРасширенияРаботыСФайламиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		НачатьПодключениеРасширенияРаботыСФайлами(Оповещение);
	ИначеЕсли НаправлениеВыгрузки = "Приложение01" Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Команда", "Приложение01");

		Оповещение = Новый ОписаниеОповещения("НачатьПодключениеРасширенияРаботыСФайламиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		НачатьПодключениеРасширенияРаботыСФайлами(Оповещение);
	ИначеЕсли НаправлениеВыгрузки = "Приложение02" Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Команда", "Приложение02");

		Оповещение = Новый ОписаниеОповещения("НачатьПодключениеРасширенияРаботыСФайламиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		НачатьПодключениеРасширенияРаботыСФайлами(Оповещение);
	ИначеЕсли НаправлениеВыгрузки = "Приложение03" Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Команда", "Приложение03");

		Оповещение = Новый ОписаниеОповещения("НачатьПодключениеРасширенияРаботыСФайламиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		НачатьПодключениеРасширенияРаботыСФайлами(Оповещение);
	ИначеЕсли НаправлениеВыгрузки = "Приложение04" Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Команда", "Приложение04");

		Оповещение = Новый ОписаниеОповещения("НачатьПодключениеРасширенияРаботыСФайламиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		НачатьПодключениеРасширенияРаботыСФайлами(Оповещение);
	ИначеЕсли НаправлениеВыгрузки = "Приложение05" Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Команда", "Приложение05");

		Оповещение = Новый ОписаниеОповещения("НачатьПодключениеРасширенияРаботыСФайламиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		НачатьПодключениеРасширенияРаботыСФайлами(Оповещение);
	КонецЕсли;	

КонецПроцедуры // ПродолжитьВыгрузку()

// Процедура - Заполнить табличную часть на сервере
//
&НаСервере
Процедура ЗаполнитьТабличнуюЧастьОтчетОсновнойНаСервере()
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.ЗаполнитьТабличнуюЧастьОтчетОсновной();
	ЗначениеВРеквизитФормы(Документ, "Объект");
КонецПроцедуры

// Процедура - Заполнить табличную часть на сервере
//
&НаСервере
Процедура ЗаполнитьТабличнуюЧастьОтчетРеестрГТДНаСервере()
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.ЗаполнитьТабличнуюЧастьОтчетРеестрГТД();
	ЗначениеВРеквизитФормы(Документ, "Объект");
КонецПроцедуры

// Процедура - Заполнить табличную часть на сервере
//
&НаСервере
Процедура ЗаполнитьТабличнуюЧастьОтчетРеестрПоставокНаСервере()
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.ЗаполнитьТабличнуюЧастьОтчетРеестрПоставок();
	ЗначениеВРеквизитФормы(Документ, "Объект");
КонецПроцедуры

// Процедура - Заполнить табличную часть на сервере
//
&НаСервере
Процедура РассчитатьИтогиОтчетаРеестрПоставокНаСервере()
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.РассчитатьИтогиОтчетаРеестрПоставок();
	ЗначениеВРеквизитФормы(Документ, "Объект");
КонецПроцедуры

// Процедура - Заполнить табличную часть на сервере
//
&НаСервере
Процедура ЗаполнитьТабличнуюЧастьОтчетРеестрПриобретенныхНаСервере()
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.ЗаполнитьТабличнуюЧастьОтчетРеестрПриобретенных();
	ЗначениеВРеквизитФормы(Документ, "Объект");
КонецПроцедуры

// Процедура - Заполнить табличную часть на сервере
//
&НаСервере
Процедура РассчитатьИтогиОтчетаРеестрПриобретенныхНаСервере()
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.РассчитатьИтогиОтчетаРеестрПриобретенных();
	ЗначениеВРеквизитФормы(Документ, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура ФормированиеФайла(КаталогФайлаВыгрузки, ДополнительныеПараметры)
	
	КаталогФайлаВыгрузки = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(КаталогФайлаВыгрузки);
	
	// Открытие приложения Excel
	Попытка
		Excel = Новый COMОбъект("Excel.Application");
		ИнформацияОбОшибке = Неопределено;
	Исключение
		ВызватьИсключение НСтр("ru = 'Не удалось подключить COM-объект Excel.
			|Вероятные причины:
			| - На сервере не установлен Microsoft Office;
			| - У пользователя недостаточно прав на создание COM-объектов;
			| - Включен контроль учетных записей Windows;
			| - Операционная система не из семейства Windows.
			|
			|Техническая информация:
			|'") + КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Excel.Visible = 0;
	Excel.DisplayAlerts = 0;
	Excel.DefaultSaveFormat = 51;
	
	Расширение = "xlsx";
	ТипФайла = ТипФайлаТабличногоДокумента.XLSX;
	
	// Проверка версии
	ВерсияExcel = Лев(Excel.Version, Найти(Excel.Version,".") -1);
	Если ВерсияExcel < "16" Тогда
		ТекстСообщения = НСтр("ru = 'Используется устаревшая версия Excel. Возможны ошибки.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		// для сохранения в старом формате
		Excel.DefaultSaveFormat = 56;
		Расширение = "xls";  
		ТипФайла = ТипФайлаТабличногоДокумента.XLS;
	Конецесли;

	МассивИменТемпФайлов = Новый Массив;

	КоличествоОперацийПриложение01 = 0;
	КоличествоОперацийПриложение02 = 0;
	КоличествоОперацийПриложение03 = 0;
	КоличествоОперацийПриложение04 = 0;
	КоличествоОперацийПриложение05 = 0;

	Если ДополнительныеПараметры.Команда = "ОсновнаяФорма" Тогда 
		// Формирование табличных документов
		ТабличныйДокументОсновнаяФорма= ОтчетНДСОсновнаяФорма();
		ТабличныйДокументПриложение01 = ОтчетНДСПриложение01(КоличествоОперацийПриложение01);
		ТабличныйДокументПриложение02 = ОтчетНДСПриложение02(КоличествоОперацийПриложение02);
		ТабличныйДокументПриложение03 = ОтчетНДСПриложение03(КоличествоОперацийПриложение03);
		ТабличныйДокументПриложение04 = ОтчетНДСПриложение04(КоличествоОперацийПриложение04);
		ТабличныйДокументПриложение05 = ОтчетНДСПриложение05(КоличествоОперацийПриложение05);

		// Сохранение во временных файлах
		#Если ВебКлиент Тогда
			ИмяТемпФайла0 = КаталогФайлаВыгрузки + "report_NDS_temp0." + Расширение;
			ИмяТемпФайла1 = КаталогФайлаВыгрузки + "report_NDS_temp1." + Расширение;
			ИмяТемпФайла2 = КаталогФайлаВыгрузки + "report_NDS_temp2." + Расширение;
			ИмяТемпФайла3 = КаталогФайлаВыгрузки + "report_NDS_temp3." + Расширение;
			ИмяТемпФайла4 = КаталогФайлаВыгрузки + "report_NDS_temp4." + Расширение;
			ИмяТемпФайла5 = КаталогФайлаВыгрузки + "report_NDS_temp5." + Расширение;
		#Иначе
			ИмяТемпФайла0 = ПолучитьИмяВременногоФайла("." + Расширение);
			ИмяТемпФайла1 = ПолучитьИмяВременногоФайла("." + Расширение);
			ИмяТемпФайла2 = ПолучитьИмяВременногоФайла("." + Расширение);
			ИмяТемпФайла3 = ПолучитьИмяВременногоФайла("." + Расширение);
			ИмяТемпФайла4 = ПолучитьИмяВременногоФайла("." + Расширение);
			ИмяТемпФайла5 = ПолучитьИмяВременногоФайла("." + Расширение);
		#КонецЕсли
		
		ТабличныйДокументОсновнаяФорма.Записать(ИмяТемпФайла0, ТипФайла);
		ТабличныйДокументПриложение01.Записать(ИмяТемпФайла1, ТипФайла);
	    ТабличныйДокументПриложение02.Записать(ИмяТемпФайла2, ТипФайла);
		ТабличныйДокументПриложение03.Записать(ИмяТемпФайла3, ТипФайла);
		ТабличныйДокументПриложение04.Записать(ИмяТемпФайла4, ТипФайла);
		ТабличныйДокументПриложение05.Записать(ИмяТемпФайла5, ТипФайла);

		МассивИменТемпФайлов.Добавить(ИмяТемпФайла5);
		МассивИменТемпФайлов.Добавить(ИмяТемпФайла4);
		МассивИменТемпФайлов.Добавить(ИмяТемпФайла3);
		МассивИменТемпФайлов.Добавить(ИмяТемпФайла2);
		МассивИменТемпФайлов.Добавить(ИмяТемпФайла1);
		МассивИменТемпФайлов.Добавить(ИмяТемпФайла0);
		
		// Добавление общей книги
		ОбщаяКнигаExcel = Excel.Application.Workbooks.Add();
		ОбщаяКнигаExcel.Activate();

		// Заполнение книги путем копирования листов
		Для Каждого ИмяТемпФайла Из МассивИменТемпФайлов Цикл
			// Открытие временной книги
			ВременнаяКнигаExcel = Excel.WorkBooks.Open(ИмяТемпФайла);
			// Чтение первого листа
			ЛистСДанными = ВременнаяКнигаExcel.Sheets(1);
			ЛистСДанными.Select();
			// Копирование в общую книгу
			ЛистСДанными.Copy(ОбщаяКнигаExcel.Sheets(1));
			
			// Закрытие временной книги
			ВременнаяКнигаExcel.Close(0);
			ВременнаяКнигаExcel = Неопределено;
			ЛистСДанными = Неопределено;
		КонецЦикла;
				
		// Удаление крайних листов (должно остаться только 4)
		КолЛистов = ОбщаяКнигаExcel.WorkSheets.Count;
		Пока КолЛистов > 6 Цикл 
			ОбщаяКнигаExcel.WorkSheets(КолЛистов).Delete();
			КолЛистов = КолЛистов - 1;
		КонецЦикла;	
		
		// Переименование листов по порядку
		Для Каждого ЛистExcel из ОбщаяКнигаExcel.Sheets Цикл
			Если ЛистExcel.Index = 1 Тогда 
				ЛистExcel.Name = "Отчет НДС";
				УстановитьТипыЯчеекВЭкселе(ЛистExcel);
			ИначеЕсли ЛистExcel.Index = 2 Тогда 	
				ЛистExcel.Name = "Приложение 01";
				УстановитьТипыЯчеекВЭкселе(ЛистExcel, КоличествоОперацийПриложение01);
			ИначеЕсли ЛистExcel.Index = 3 Тогда 	
				ЛистExcel.Name = "Приложение 02";
				УстановитьТипыЯчеекВЭкселе(ЛистExcel, КоличествоОперацийПриложение02);
			ИначеЕсли ЛистExcel.Index = 4 Тогда 
				ЛистExcel.Name = "Приложение 03";
				УстановитьТипыЯчеекВЭкселе(ЛистExcel, КоличествоОперацийПриложение03);
			ИначеЕсли ЛистExcel.Index = 5 Тогда 
				ЛистExcel.Name = "Приложение 04";
				УстановитьТипыЯчеекВЭкселе(ЛистExcel, КоличествоОперацийПриложение04);
			ИначеЕсли ЛистExcel.Index = 6 Тогда 
				ЛистExcel.Name = "Приложение 05";
				УстановитьТипыЯчеекВЭкселе(ЛистExcel, КоличествоОперацийПриложение05);
				
			КонецЕсли;	
		КонецЦикла;	
		
		// Имя файла
		ПолноеИмяФайла = КаталогФайлаВыгрузки + "OtchetNDS_" + Формат(Объект.Дата,"ДЛФ=D") + "." + Расширение;
		
		// Сохранение общей книги
		ОбщаяКнигаExcel.SaveCopyAs(ПолноеИмяФайла);
		ОбщаяКнигаExcel.Close();
		ОбщаяКнигаExcel = Неопределено;
	ИначеЕсли ДополнительныеПараметры.Команда = "Приложение01" Тогда 
		ПолноеИмяФайла = КаталогФайлаВыгрузки + "addition01_NDS_" + Формат(Объект.Дата,"ДФ=yyyyMMdd") + "." + Расширение;

		ТабличныйДокументПриложение = ОтчетНДСПриложение01(КоличествоОперацийПриложение01);
		ТабличныйДокументПриложение.Записать(ПолноеИмяФайла, ТипФайла);
		
	ИначеЕсли ДополнительныеПараметры.Команда = "Приложение02" Тогда 
		ПолноеИмяФайла = КаталогФайлаВыгрузки + "addition02_NDS_" + Формат(Объект.Дата,"ДФ=yyyyMMdd") + "." + Расширение;

		ТабличныйДокументПриложение = ОтчетНДСПриложение02(КоличествоОперацийПриложение02);
		ТабличныйДокументПриложение.Записать(ПолноеИмяФайла, ТипФайла);
		
	ИначеЕсли ДополнительныеПараметры.Команда = "Приложение03" Тогда 
		ПолноеИмяФайла = КаталогФайлаВыгрузки + "addition03_NDS_" + Формат(Объект.Дата,"ДФ=yyyyMMdd") + "." + Расширение;

		ТабличныйДокументПриложение = ОтчетНДСПриложение03(КоличествоОперацийПриложение03);
		ТабличныйДокументПриложение.Записать(ПолноеИмяФайла, ТипФайла);
		
	ИначеЕсли ДополнительныеПараметры.Команда = "Приложение04" Тогда 
		ПолноеИмяФайла = КаталогФайлаВыгрузки + "addition04_NDS_" + Формат(Объект.Дата,"ДФ=yyyyMMdd") + "." + Расширение;

		ТабличныйДокументПриложение = ОтчетНДСПриложение04(КоличествоОперацийПриложение04);
		ТабличныйДокументПриложение.Записать(ПолноеИмяФайла, ТипФайла);
		
	ИначеЕсли ДополнительныеПараметры.Команда = "Приложение05" Тогда 
		ПолноеИмяФайла = КаталогФайлаВыгрузки + "addition05_NDS_" + Формат(Объект.Дата,"ДФ=yyyyMMdd") + "." + Расширение;

		ТабличныйДокументПриложение = ОтчетНДСПриложение05(КоличествоОперацийПриложение05);
		ТабличныйДокументПриложение.Записать(ПолноеИмяФайла, ТипФайла);

	КонецЕсли;
	
	// Закрытие приложения
	Excel.Quit();	
	Excel = Неопределено;
	
	ТекстОповещения = НСтр("ru = 'Файл сформирован'");
	ТекстПояснения = ПолноеИмяФайла;
	ПоказатьОповещениеПользователя(ТекстОповещения, , ТекстПояснения, БиблиотекаКартинок.Информация32);
	
	// Удаление временных файлов
	Для каждого ИмяТемпФайла Из МассивИменТемпФайлов Цикл
		УдалитьФайлы(ИмяТемпФайла);
	КонецЦикла;

КонецПроцедуры // ФормированиеФайла()

// Функция - Отчет НДСОсновная форма
// 
// Возвращаемое значение:
//  ТабличныйДокумент - 
//
&НаСервере
Функция ОтчетНДСОсновнаяФорма()
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Макет = Документы.ОтчетПоНДС.ПолучитьМакет("ПФ_MXL_ОтчетНДСОсновнаяФорма");
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	// Подготовка данных
	ДанныеПечати = Новый Структура;
	
	// Данные Организации
	ГНС = Объект.Организация.ГНС;
	ДанныеПечати.Вставить("Ячейка102", Объект.Организация.ИНН);
	ДанныеПечати.Вставить("Ячейка103", Объект.Организация.НаименованиеПолное);
	ДанныеПечати.Вставить("Ячейка104", ГНС.Код);
	ДанныеПечати.Вставить("Ячейка104Наименование", ГНС.Наименование);
	ДанныеПечати.Вставить("Ячейка107", Объект.Организация.КодПоОКПО);
	
	// Контактная информация
	СведенияОбОрганизации = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСведенияОбОрганизации(Объект.Организация, КонецМесяца(Объект.Дата));
	
	ДанныеПечати.Вставить("Ячейка112", СведенияОбОрганизации.Индекс);

	// Область/Город/Район/НаселенныйПункт
	ДанныеПечати.Вставить("Ячейка113", ?(ЗначениеЗаполнено(СведенияОбОрганизации.Регион), СведенияОбОрганизации.Регион, "")
		+ ?(ЗначениеЗаполнено(СведенияОбОрганизации.Район), " " + СведенияОбОрганизации.Район, "")
		+ ?(ЗначениеЗаполнено(СведенияОбОрганизации.Город), " " + СведенияОбОрганизации.Город, "")
		+ ?(ЗначениеЗаполнено(СведенияОбОрганизации.НаселенныйПункт), " " + СведенияОбОрганизации.НаселенныйПункт, ""));
	
	// Улица/Дом
	ДанныеПечати.Вставить("Ячейка114", ?(ЗначениеЗаполнено(СведенияОбОрганизации.Улица), СведенияОбОрганизации.Улица, "")
		+ ?(ЗначениеЗаполнено(СведенияОбОрганизации.Дом), " ,д." + СведенияОбОрганизации.Дом, "")
		+ ?(ЗначениеЗаполнено(СведенияОбОрганизации.Квартира), " кв." + СведенияОбОрганизации.Квартира, ""));
		
	ДанныеПечати.Вставить("Ячейка115", СведенияОбОрганизации.Тел);
	ДанныеПечати.Вставить("Ячейка116", СведенияОбОрганизации.Email);

	ДанныеПечати.Вставить("Ячейка201", НачалоМесяца(Объект.Дата));
	ДанныеПечати.Вставить("Ячейка202", КонецМесяца(Объект.Дата));

	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	
	// Информация о НДС
	Для Каждого СтрокаТабличнойЧасти из Объект.ОтчетОсновной Цикл 
		Если СтрокаТабличнойЧасти.Строка = "050" тогда
			ОбластьМакета.Параметры.Ячейка050 = СтрокаТабличнойЧасти.Сумма;
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "051" Тогда    
			ОбластьМакета.Параметры.Ячейка051 = СтрокаТабличнойЧасти.Сумма;
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "052" Тогда
			ОбластьМакета.Параметры.Ячейка052 = СтрокаТабличнойЧасти.Сумма;
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "053" Тогда
			ОбластьМакета.Параметры.Ячейка053 = СтрокаТабличнойЧасти.Сумма;
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "054" Тогда
			ОбластьМакета.Параметры.Ячейка054 = СтрокаТабличнойЧасти.Сумма;
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "055" Тогда
			ОбластьМакета.Параметры.Ячейка055 = СтрокаТабличнойЧасти.Сумма;
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "056" Тогда
			ОбластьМакета.Параметры.Ячейка056 = СтрокаТабличнойЧасти.Сумма;
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "057" Тогда
			ОбластьМакета.Параметры.Ячейка057 = СтрокаТабличнойЧасти.Сумма;
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "058" Тогда
			ОбластьМакета.Параметры.Ячейка058 = СтрокаТабличнойЧасти.Сумма;
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "059" Тогда
			ОбластьМакета.Параметры.Ячейка059 = СтрокаТабличнойЧасти.Сумма;			
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "060" Тогда
			ОбластьМакета.Параметры.Ячейка060 = СтрокаТабличнойЧасти.Сумма;
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "061" Тогда
			ОбластьМакета.Параметры.Ячейка061 = СтрокаТабличнойЧасти.Сумма;
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "062" Тогда
			ОбластьМакета.Параметры.Ячейка062 = СтрокаТабличнойЧасти.Сумма;
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "063" Тогда
			ОбластьМакета.Параметры.Ячейка063 = СтрокаТабличнойЧасти.Сумма;
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "064" Тогда
			ОбластьМакета.Параметры.Ячейка064 = СтрокаТабличнойЧасти.Сумма;
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "065" Тогда
			ОбластьМакета.Параметры.Ячейка065 = СтрокаТабличнойЧасти.Сумма;
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "066" Тогда
			ОбластьМакета.Параметры.Ячейка066 = СтрокаТабличнойЧасти.Сумма;
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "067" Тогда
			ОбластьМакета.Параметры.Ячейка067 = СтрокаТабличнойЧасти.Сумма;			
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "068" Тогда
			ОбластьМакета.Параметры.Ячейка068 = СтрокаТабличнойЧасти.Сумма;			
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "069" Тогда
			ОбластьМакета.Параметры.Ячейка069 = СтрокаТабличнойЧасти.Сумма;			
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "070" Тогда
			ОбластьМакета.Параметры.Ячейка070 = СтрокаТабличнойЧасти.Сумма;			
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "071" Тогда
			ОбластьМакета.Параметры.Ячейка071 = СтрокаТабличнойЧасти.Сумма;			
		ИначеЕсли СтрокаТабличнойЧасти.Строка = "072" Тогда
			ОбластьМакета.Параметры.Ячейка072 = СтрокаТабличнойЧасти.Сумма;					
		КонецЕсли;
	КонецЦикла;
	
	ОбластьМакета.Параметры.Приложение01 = ?(Объект.ОтчетРеестрПоставок.Количество() = 0, "0", "1");
	ОбластьМакета.Параметры.Приложение02 = ?(Объект.ОтчетРеестрПриобретенныхМатРессурсов.Количество() = 0, "0", "1");
	ОбластьМакета.Параметры.Приложение03 = ?(Объект.ОтчетРеестрГТД.Количество() = 0, "0", "1");
	ОбластьМакета.Параметры.Приложение04 = ?(Объект.ОтчетРеестрПоставокНаОсновеНалоговогоКонтракта.Количество() = 0, "0", "1");
	ОбластьМакета.Параметры.Приложение05 = ?(Объект.ОтчетРеестрПриобретенныхНаОсновеНалоговогоКонтракта.Количество() = 0, "0", "1");

	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабличныйДокумент;	
КонецФункции // ОтчетНДСОсновнаяФорма()

&НаСервере
Функция ОтчетНДСПриложение01(КоличествоОпераций)
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Макет = Документы.ОтчетПоНДС.ПолучитьМакет("ПФ_MXL_Приложение01");
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
	// Подготовка данных
	ДанныеПечати = Новый Структура;
	
	Для Каждого СтрокаТабличнойЧасти ИЗ Объект.ОтчетРеестрПоставокИтоги Цикл 
		Если СтрокаТабличнойЧасти.НомерСтроки = 1 тогда
			ДанныеПечати.Вставить("ВсегоСуммаБНДС", СтрокаТабличнойЧасти.СтоимостьБезНДС);
			ДанныеПечати.Вставить("ВсегоСуммаНДС", СтрокаТабличнойЧасти.СуммаНДС);
			ДанныеПечати.Вставить("ВсегоОбщСтоимостьНДС", СтрокаТабличнойЧасти.ОбщаяСтоимостьСНДС);
		ИначеЕсли  СтрокаТабличнойЧасти.НомерСтроки = 2 Тогда 
			ДанныеПечати.Вставить("ОблСуммаБНДС", СтрокаТабличнойЧасти.СтоимостьБезНДС);
			ДанныеПечати.Вставить("ОблСуммаНДС", СтрокаТабличнойЧасти.СуммаНДС);
			ДанныеПечати.Вставить("ОблОбщСтоимостьНДС", СтрокаТабличнойЧасти.ОбщаяСтоимостьСНДС);
		ИначеЕсли СтрокаТабличнойЧасти.НомерСтроки = 3 Тогда 
			ДанныеПечати.Вставить("СуммаБНДССельхоз", 0);
			ДанныеПечати.Вставить("СуммаНДССельхоз", 0);
			ДанныеПечати.Вставить("СтоимостьНДССельхоз", 0);			
		ИначеЕсли СтрокаТабличнойЧасти.НомерСтроки = 4 Тогда 
			ДанныеПечати.Вставить("СтоимостьНДСНул", СтрокаТабличнойЧасти.СтоимостьБезНДС);
			ДанныеПечати.Вставить("СуммаНДСНул", СтрокаТабличнойЧасти.СуммаНДС);
			ДанныеПечати.Вставить("ОбщСтоимостьНДСНУЛ", СтрокаТабличнойЧасти.ОбщаяСтоимостьСНДС);
		ИначеЕсли СтрокаТабличнойЧасти.НомерСтроки = 5 Тогда 	
			ДанныеПечати.Вставить("СтоимНДСВТЧ", СтрокаТабличнойЧасти.СтоимостьБезНДС);
			ДанныеПечати.Вставить("СуммаНДСВтч", СтрокаТабличнойЧасти.СуммаНДС);
			ДанныеПечати.Вставить("ОбщСтоимомтьНДСВтч", СтрокаТабличнойЧасти.ОбщаяСтоимостьСНДС);
		ИначеЕсли СтрокаТабличнойЧасти.НомерСтроки = 6 Тогда 	
			ДанныеПечати.Вставить("ОсвСуммаБНДС", СтрокаТабличнойЧасти.СтоимостьБезНДС);			
		КонецЕсли;		
	КонецЦикла;
	
	КоличествоОпераций = Объект.ОтчетРеестрПоставок.Количество();
	ДанныеПечати.Вставить("КолОпераций", КоличествоОпераций);
	
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	
	// Вывод шапки	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	// Вывод строк
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого СтрокаТабличнойЧасти ИЗ Объект.ОтчетРеестрПоставок Цикл 
		ОбластьМакета.Параметры.Заполнить(СтрокаТабличнойЧасти);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;	
КонецФункции // ОтчетНДСПриложение01()

&НаСервере
Функция ОтчетНДСПриложение02(КоличествоОпераций)
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Макет = Документы.ОтчетПоНДС.ПолучитьМакет("ПФ_MXL_Приложение02");
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	// Подготовка данных
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("ИтогСтоимостьБезНДССельхоз", 0);
	ДанныеПечати.Вставить("ИтогСуммаНДССельхоз", 0);
	ДанныеПечати.Вставить("ИтогСуммаПодлЗачетуНДССельхоз", 0);
	ДанныеПечати.Вставить("ИтогСтоимостьБезНДСДругие", Объект.ОтчетРеестрПриобретенныхМатРессурсов.Итог("СтоимостьБезНДС"));
	ДанныеПечати.Вставить("ИтогСуммаНДСДругие",  Объект.ОтчетРеестрПриобретенныхМатРессурсов.Итог("СуммаНДС"));
	ДанныеПечати.Вставить("ИтогСуммаПодлЗачетуНДСДругие",  Объект.ОтчетРеестрПриобретенныхМатРессурсов.Итог("СуммаПодлежащаяКЗачетуНДС"));	
	ДанныеПечати.Вставить("ИтогСтоимостьБезНДС",  Объект.ОтчетРеестрПриобретенныхМатРессурсов.Итог("СтоимостьБезНДС"));
	ДанныеПечати.Вставить("ИтогСуммаНДС",  Объект.ОтчетРеестрПриобретенныхМатРессурсов.Итог("СуммаНДС"));
	ДанныеПечати.Вставить("ИтогСуммаПодлЗачетуНДС",  Объект.ОтчетРеестрПриобретенныхМатРессурсов.Итог("СуммаПодлежащаяКЗачетуНДС"));	
	
	КоличествоОпераций =  Объект.ОтчетРеестрПриобретенныхМатРессурсов.Количество();
	ДанныеПечати.Вставить("КолОпераций", КоличествоОпераций);
	
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);

	// Вывод шапки	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	// Вывод строк
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого СтрокаТабличнойЧасти Из  Объект.ОтчетРеестрПриобретенныхМатРессурсов Цикл 
		ОбластьМакета.Параметры.Заполнить(СтрокаТабличнойЧасти);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;	
КонецФункции // ОтчетНДСПриложение02()

&НаСервере
Функция ОтчетНДСПриложение03(КоличествоОпераций)
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Макет = Документы.ОтчетПоНДС.ПолучитьМакет("ПФ_MXL_Приложение03");
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	СведенияОбОрганизации = БухгалтерскийУчетСервер.ПолучитьСведенияОбОрганизации(Объект.Организация);
	
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("ИНН", СведенияОбОрганизации.ИНН); 
	ДанныеПечати.Вставить("ПолноеНаименование", СведенияОбОрганизации.НаименованиеПолное);
	ДанныеПечати.Вставить("ДатаС", НачалоМесяца(Объект.Дата));
	ДанныеПечати.Вставить("ДатаПо", КонецМесяца(Объект.Дата));
	
	//Вывод шапка
	ДанныеПечати.Вставить("ИтогСтоимостьБезНДС", 		Объект.ОтчетРеестрГТД.Итог("ГТДСуммаБезНДС"));
	ДанныеПечати.Вставить("ИтогСуммаНДС", 				Объект.ОтчетРеестрГТД.Итог("ГТДСуммаНДС"));
	ДанныеПечати.Вставить("ИтогСуммаНДСПД",				Объект.ОтчетРеестрГТД.Итог("ПДСуммаНДС"));
	ДанныеПечати.Вставить("СуммаНДСПодлежащаяЗачету",	Объект.ОтчетРеестрГТД.Итог("НДСЗачет"));
	  
	ГТДСуммаБезНДС_ЕАЭС = 0; 
	ГТДСуммаНДС_ЕАЭС 	= 0;	
	ПДСуммаНДС_ЕАЭС 	= 0;
	СуммаНДСЗачет_ЕАЭС 	= 0;
	Для каждого СТЧ Из Объект.ОтчетРеестрГТД Цикл
		Если СТЧ.Контрагент.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС Тогда 
			ГТДСуммаБезНДС_ЕАЭС = ГТДСуммаБезНДС_ЕАЭС 	+ СТЧ.ГТДСуммаБезНДС;
			ГТДСуммаНДС_ЕАЭС 	= ГТДСуммаНДС_ЕАЭС 		+ СТЧ.ГТДСуммаНДС;
			ПДСуммаНДС_ЕАЭС 	= ПДСуммаНДС_ЕАЭС 		+ СТЧ.ПДСуммаНДС;
			СуммаНДСЗачет_ЕАЭС 	= СуммаНДСЗачет_ЕАЭС 	+ СТЧ.СуммаНДСЗач;
		КонецЕсли;
	КонецЦикла;
	
	ДанныеПечати.Вставить("ИтогСтоимостьБезНДС_ЕАЭС", 			ГТДСуммаБезНДС_ЕАЭС);
	ДанныеПечати.Вставить("ИтогСуммаНДС_ЕАЭС", 				 	ГТДСуммаНДС_ЕАЭС);
	ДанныеПечати.Вставить("ИтогСуммаНДСПД_ЕАЭС",				ПДСуммаНДС_ЕАЭС);
	ДанныеПечати.Вставить("ИтогСуммаНДСПодлежащаяЗачету_ЕАЭС",	СуммаНДСЗачет_ЕАЭС);
	
	ДанныеПечати.Вставить("ИтогСтоимостьБезНДС_Сельхоз", 			0);
	ДанныеПечати.Вставить("ИтогСуммаНДС_Сельхоз", 				 	0);
	ДанныеПечати.Вставить("ИтогСуммаНДСПД_Сельхоз",					0);
	ДанныеПечати.Вставить("ИтогСуммаНДСПодлежащаяЗачету_Сельхоз",	0);
	
	КоличествоОпераций =  Объект.ОтчетРеестрГТД.Количество();
	ДанныеПечати.Вставить("КолОпераций", КоличествоОпераций);
	
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	
	// Вывод шапки	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	// Вывод строк
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого СтрокаТабличнойЧасти ИЗ Объект.ОтчетРеестрГТД Цикл 
		ОбластьМакета.Параметры.Заполнить(СтрокаТабличнойЧасти);
		ОбластьМакета.Параметры.КодСтраны = СтрокаТабличнойЧасти.Контрагент.СтранаРезидентства.Код;
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;	
КонецФункции // ОтчетНДСПриложение03()

&НаСервере
Функция ОтчетНДСПриложение04(КоличествоОпераций)
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Макет = Документы.ОтчетПоНДС.ПолучитьМакет("ПФ_MXL_Приложение04");
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			
	// Подготовка данных
	ДанныеПечати = Новый Структура;	
	ДанныеПечати.Вставить("СтоимостьБезНДС",  		Объект.ОтчетРеестрПоставокНаОсновеНалоговогоКонтракта.Итог("СтоимостьБезНДС"));
	ДанныеПечати.Вставить("СуммаНДС",  				Объект.ОтчетРеестрПоставокНаОсновеНалоговогоКонтракта.Итог("СуммаНДС"));
	ДанныеПечати.Вставить("ОбщаяСтоимостьСНДС",  	Объект.ОтчетРеестрПоставокНаОсновеНалоговогоКонтракта.Итог("ОбщаяСтоимостьСНДС"));	

	КоличествоОпераций = Объект.ОтчетРеестрПоставок.Количество();
	ДанныеПечати.Вставить("КолОпераций", КоличествоОпераций);
	
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	
	// Вывод шапки	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	// Вывод строк
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого СтрокаТабличнойЧасти ИЗ Объект.ОтчетРеестрПоставокНаОсновеНалоговогоКонтракта Цикл 
		ОбластьМакета.Параметры.Заполнить(СтрокаТабличнойЧасти);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;	
КонецФункции // ОтчетНДСПриложение04()

&НаСервере
Функция ОтчетНДСПриложение05(КоличествоОпераций)
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Макет = Документы.ОтчетПоНДС.ПолучитьМакет("ПФ_MXL_Приложение05");
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	// Подготовка данных
	ДанныеПечати = Новый Структура;	
	ДанныеПечати.Вставить("СтоимостьБезНДС",  	Объект.ОтчетРеестрПриобретенныхНаОсновеНалоговогоКонтракта.Итог("СтоимостьБезНДС"));
	ДанныеПечати.Вставить("СуммаНДС",  			Объект.ОтчетРеестрПриобретенныхНаОсновеНалоговогоКонтракта.Итог("СуммаНДС"));
	ДанныеПечати.Вставить("СуммаПодлежащаяКЗачетуНДС", Объект.ОтчетРеестрПриобретенныхНаОсновеНалоговогоКонтракта.Итог("СуммаПодлежащаяКЗачетуНДС"));	
	
	КоличествоОпераций =  Объект.ОтчетРеестрПриобретенныхНаОсновеНалоговогоКонтракта.Количество();
	ДанныеПечати.Вставить("КолОпераций", КоличествоОпераций);
	
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);

	// Вывод шапки	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	// Вывод строк
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого СтрокаТабличнойЧасти Из  Объект.ОтчетРеестрПриобретенныхНаОсновеНалоговогоКонтракта Цикл 
		ОбластьМакета.Параметры.Заполнить(СтрокаТабличнойЧасти);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;	
КонецФункции // ОтчетНДСПриложение05()

&НаКлиенте
Процедура УстановитьТипыЯчеекВЭкселе(ЛистExcel, КоличествоОпераций = 0)
	ФорматДата 		= "ДД.ММ.ГГГГ";
	ФорматСтрока 	= "@";
	ФорматЧисло 	= "0";

	Если ЛистExcel.Name = "Отчет 062" Тогда
		ЛистExcel.Cells(5,6).NumberFormat = ФорматСтрока; // Ячейка102
		ЛистExcel.Cells(7,6).NumberFormat = ФорматСтрока; // Ячейка103
		ЛистExcel.Cells(9,6).NumberFormat = ФорматСтрока; // Ячейка104
		ЛистExcel.Cells(11,6).NumberFormat = ФорматСтрока; // Ячейка104Наименование
		ЛистExcel.Cells(13,6).NumberFormat = ФорматСтрока; // Ячейка107
		ЛистExcel.Cells(16,6).NumberFormat = ФорматСтрока; // Ячейка112
		ЛистExcel.Cells(18,6).NumberFormat = ФорматСтрока; // Ячейка113
		ЛистExcel.Cells(20,6).NumberFormat = ФорматСтрока; // Ячейка114
		ЛистExcel.Cells(22,6).NumberFormat = ФорматСтрока; // Ячейка115
		ЛистExcel.Cells(24,6).NumberFormat = ФорматСтрока; // Ячейка116
		ЛистExcel.Cells(26,6).NumberFormat = ФорматДата;  // Ячейка201
		ЛистExcel.Cells(26,9).NumberFormat = ФорматДата;  // Ячейка202
		
	ИначеЕсли ЛистExcel.Name = "Приложение 01" Или ЛистExcel.Name = "Приложение 04" Тогда
		// Формат ячеек таблицы
		Для Счетчик = 0 По КоличествоОпераций - 1 Цикл
			ЛистExcel.Cells(19 + Счетчик, 1).NumberFormat = ФорматДата; // ДатаВыписки 
			ЛистExcel.Cells(19 + Счетчик, 2).NumberFormat = ФорматСтрока; // Номер СФ
			ЛистExcel.Cells(19 + Счетчик, 3).NumberFormat = ФорматСтрока; // Серия СФ
			ЛистExcel.Cells(19 + Счетчик, 4).NumberFormat = ФорматСтрока; // КодПоставки
			ЛистExcel.Cells(19 + Счетчик, 5).NumberFormat = ФорматСтрока; // Наименование
			ЛистExcel.Cells(19 + Счетчик, 6).NumberFormat = ФорматСтрока; // ИНН
			ЛистExcel.Cells(19 + Счетчик, 7).NumberFormat = ФорматСтрока; // КодСтраны
			ЛистExcel.Cells(19 + Счетчик, 8).NumberFormat = ФорматДата; // ДатаПоставки
			ЛистExcel.Cells(19 + Счетчик, 12).NumberFormat = ФорматСтрока; // Корр Номер СФ
			ЛистExcel.Cells(19 + Счетчик, 13).NumberFormat = ФорматСтрока; // Корр Серия СФ			
		КонецЦикла;
		
	ИначеЕсли ЛистExcel.Name = "Приложение 02" Или ЛистExcel.Name = "Приложение 05" Тогда
		// Формат ячеек таблицы
		Для Счетчик = 0 По КоличествоОпераций - 1 Цикл
			ЛистExcel.Cells(11 + Счетчик, 1).NumberFormat = ФорматСтрока; // Номер СФ
			ЛистExcel.Cells(11 + Счетчик, 2).NumberFormat = ФорматСтрока; // Серия СФ			
			ЛистExcel.Cells(11 + Счетчик, 3).NumberFormat = ФорматСтрока; // Наименование
			ЛистExcel.Cells(11 + Счетчик, 4).NumberFormat = ФорматСтрока; // ИНН
			ЛистExcel.Cells(11 + Счетчик, 5).NumberFormat = ФорматСтрока; // Код налог органа
			ЛистExcel.Cells(11 + Счетчик, 6).NumberFormat = ФорматДата; // ДатаПоставки
			ЛистExcel.Cells(11 + Счетчик, 10).NumberFormat = ФорматСтрока; // Корр Номер СФ
			ЛистExcel.Cells(11 + Счетчик, 11).NumberFormat = ФорматСтрока; // Корр Серия СФ						
		КонецЦикла;
		
	ИначеЕсли ЛистExcel.Name = "Приложение 03" Тогда
		// Формат ячеек таблицы
		Для Счетчик = 0 По КоличествоОпераций - 1 Цикл
			ЛистExcel.Cells(12 + Счетчик, 1).NumberFormat = ФорматСтрока; // Наименование
			ЛистExcel.Cells(12 + Счетчик, 2).NumberFormat = ФорматСтрока; // КодСтраны
			ЛистExcel.Cells(12 + Счетчик, 3).NumberFormat = ФорматДата; 	// Дата ГТД
			ЛистExcel.Cells(12 + Счетчик, 4).NumberFormat = ФорматСтрока; // Номер ГТД
			ЛистExcel.Cells(12 + Счетчик, 7).NumberFormat = ФорматДата; 	// Дата Платежный документ
			ЛистExcel.Cells(12 + Счетчик, 8).NumberFormat = ФорматСтрока; // Номер Платежный документ						
		КонецЦикла;
		
	КонецЕсли;	

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область РедактированиеМесяцаСтрокой

&НаКлиенте
Процедура ПериодОтчетаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.Дата", "МесяцСтрокой");
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода ПериодОтчета.
//
&НаКлиенте
Процедура ПериодОтчетаПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.Дата", "МесяцСтрокой", Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура ПериодОтчетаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.Дата", "МесяцСтрокой", Направление, Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура ПериодОтчетаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПериодОтчетаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти


