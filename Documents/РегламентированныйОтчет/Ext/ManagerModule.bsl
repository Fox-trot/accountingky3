#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Возвращает заголовок документа для печатной формы.
//
// Параметры:
//  Шапка - любая структура с полями:
//           Номер         - Строка или Число - номер документа;
//           Дата          - Дата - дата документа;
//           Представление - Строка - (необязательный) платформенное представление ссылки на документ.
//                                    Если параметр НазваниеДокумента не задан, то название документа будет вычисляться
//                                    из этого параметра.
//  НазваниеДокумента - Строка - название документа (например, "Счет на оплату").
//
// Возвращаемое значение:
//  Строка - заголовок документа.
//
Функция СформироватьЗаголовокДокумента(Шапка, Знач НазваниеДокумента = "") Экспорт
	
	ДанныеДокумента = Новый Структура("Номер,Дата,Представление");
	ЗаполнитьЗначенияСвойств(ДанныеДокумента, Шапка);
	
	// Если название документа не передано, получим название по представлению документа.
	Если ПустаяСтрока(НазваниеДокумента) И ЗначениеЗаполнено(ДанныеДокумента.Представление) Тогда
		ПоложениеНомера = СтрНайти(ДанныеДокумента.Представление, ДанныеДокумента.Номер);
		Если ПоложениеНомера > 0 Тогда
			НазваниеДокумента = СокрЛП(Лев(ДанныеДокумента.Представление, ПоложениеНомера - 1));
		КонецЕсли;
	КонецЕсли;

	НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеДокумента.Номер);
	Возврат СтрШаблон(НСтр("ru = '%1 № %2 от %3'"),
		НазваниеДокумента, НомерНаПечать, Формат(ДанныеДокумента.Дата, "ДЛФ=DD"));
	
КонецФункции

#КонецОбласти

#Область ИнтерфейсПечати

Функция ПечатьТитулБаланс(МассивОбъектов, ОбъектыПечати)
		
	Запрос = Новый Запрос();	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РегламентированныйОтчет.Ссылка,
	|	РегламентированныйОтчет.Номер,
	|	РегламентированныйОтчет.Дата КАК ДатаБаланса,
	|	РегламентированныйОтчет.Дата КАК ДатаБалансаК,
	|	РегламентированныйОтчет.Организация,
	|	РегламентированныйОтчет.Организация.НаименованиеПолное КАК Предприятие,
	|	ВЫБОР
	|		КОГДА РегламентированныйОтчет.ЕдиницаОтчета = """"
	|			ТОГДА ""Сомы""
	|		ИНАЧЕ РегламентированныйОтчет.ЕдиницаОтчета
	|	КОНЕЦ КАК ЕИ,
	|	ВЫБОР
	|		КОГДА РегламентированныйОтчет.ЕдиницаОтчета = """"
	|			ТОГДА ""Сомы""
	|		ИНАЧЕ РегламентированныйОтчет.ЕдиницаОтчета
	|	КОНЕЦ КАК МКЕИ,
	|	РегламентированныйОтчет.Организация.КодПоОКПО КАК ОКПО,
	|	РегламентированныйОтчет.Организация.ИНН КАК ИНН,
	|	РегламентированныйОтчет.Организация.НаименованиеГКЭД КАК Отрасль,
	|	РегламентированныйОтчет.Организация.КодГКЭД КАК ГКЭД,
	|	РегламентированныйОтчет.Организация.ОрганУправления КАК ОрганУправления,
	|	РегламентированныйОтчет.Организация.КодПравовойФормы.Наименование КАК ФормаСобст,
	|	РегламентированныйОтчет.Организация.КодПравовойФормы.Код КАК ГКФС
	|ИЗ
	|	Документ.РегламентированныйОтчет КАК РегламентированныйОтчет
	|ГДЕ
	|	РегламентированныйОтчет.Ссылка В(&МассивОбъектов)";	
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_ТитулБаланс";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РегламентированныйОтчет.ПФ_MXL_ТитулБаланс");
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьБаланс(МассивОбъектов, ОбъектыПечати)
	
	ТекстЗапроса = 	
	"ВЫБРАТЬ
	|	РегламентированныйОтчет.Ссылка,
	|	РегламентированныйОтчет.Дата КАК Дата,
	|	РегламентированныйОтчет.ДатаН КАК ДатаН,
	|	РегламентированныйОтчет.Организация,
	|	РегламентированныйОтчет.Организация.НаименованиеПолное КАК Предприятие,
	|	ВЫБОР
	|		КОГДА РегламентированныйОтчет.ЕдиницаОтчета = """"
	|			ТОГДА ""Сомы""
	|		ИНАЧЕ РегламентированныйОтчет.ЕдиницаОтчета
	|	КОНЕЦ КАК ЕИ,
	|	РегламентированныйОтчет.Организация.ИНН КАК ИНН,
	|	РегламентированныйОтчет.Отчет.(
	|		Строка,
	|		Наименование,
	|		НаименованиеК,
	|		Сумма,
	|		СуммаПП,
	|		Группа,
	|		Заголовок
	|	)
	|ИЗ
	|	Документ.РегламентированныйОтчет КАК РегламентированныйОтчет
	|ГДЕ
	|	РегламентированныйОтчет.Ссылка В(&МассивОбъектов)";	
		
	Запрос = Новый Запрос(ТекстЗапроса);	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_Баланс";	
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РегламентированныйОтчет.ПФ_MXL_Баланс");
	
		// Подготовка данных
		ДанныеПечати = Новый Структура;
		
		Руководители = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизаций(Шапка.Организация, Шапка.Дата);
		ДанныеПечати.Вставить("Руководитель", 	Руководители.Руководитель);
		ДанныеПечати.Вставить("Главбух", 		Руководители.ГлавныйБухгалтер);
		ДанныеПечати.Вставить("ДатаОтчета",		Формат(Шапка.Дата,"ДЛФ=ДД"));
		
		// Инициализация массива областей макета
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Заголовок");
		МассивОбластейМакета.Добавить("ШапкаТаблицы");
		МассивОбластейМакета.Добавить("Строка");
		МассивОбластейМакета.Добавить("Подвал");
		
		СтрокаОтчета = Шапка.Отчет.Выбрать();
		
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ИмяОбласти <> "Строка" Тогда
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, Шапка);
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			ИначеЕсли ИмяОбласти = "Строка" Тогда 
				Пока СтрокаОтчета.Следующий() Цикл
					ОбластьМакета = Макет.ПолучитьОбласть("Строка");
					ОбластьМакета.Параметры.Заполнить(СтрокаОтчета);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьОПУ(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос();	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РегламентированныйОтчет.Ссылка,
	|	РегламентированныйОтчет.Номер,
	|	РегламентированныйОтчет.Дата КАК Дата,
	|	РегламентированныйОтчет.ДатаН КАК ДатаН,
	|	РегламентированныйОтчет.Организация,
	|	РегламентированныйОтчет.Организация.НаименованиеПолное КАК Предприятие,
	|	ВЫБОР
	|		КОГДА РегламентированныйОтчет.ЕдиницаОтчета = """"
	|			ТОГДА ""Сомы""
	|		ИНАЧЕ РегламентированныйОтчет.ЕдиницаОтчета
	|	КОНЕЦ КАК ЕИ,
	|	РегламентированныйОтчет.Организация.ИНН КАК ИНН,
	|	РегламентированныйОтчет.Отчет.(
	|		Строка,
	|		Наименование,
	|		НаименованиеК,
	|		Сумма,
	|		СуммаПП,
	|		Группа,
	|		Заголовок
	|	)
	|ИЗ
	|	Документ.РегламентированныйОтчет КАК РегламентированныйОтчет
	|ГДЕ
	|	РегламентированныйОтчет.Ссылка В(&МассивОбъектов)";	
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_ОПУ";
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РегламентированныйОтчет.ПФ_MXL_ОПУ");
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;
		
		Руководители = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизаций(Шапка.Организация, Шапка.Дата);
		ДанныеПечати.Вставить("Руководитель", 	Руководители.Руководитель);
		ДанныеПечати.Вставить("Главбух", 		Руководители.ГлавныйБухгалтер);		
		ДанныеПечати.Вставить("ДатаН",			Формат(НачалоМесяца(Шапка.ДатаН),"ДЛФ=ДД"));
		ДанныеПечати.Вставить("ДатаК", 			Формат(Шапка.Дата,"ДЛФ=ДД"));
		
		// Инициализация массива областей макета
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Заголовок");
		МассивОбластейМакета.Добавить("ШапкаТаблицы");
		МассивОбластейМакета.Добавить("Строка");
		МассивОбластейМакета.Добавить("Подвал");
		
		СтрокаОтчета = Шапка.Отчет.Выбрать();
		
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ИмяОбласти <> "Строка" Тогда			
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, Шапка);
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			ИначеЕсли ИмяОбласти = "Строка" Тогда 
				Пока СтрокаОтчета.Следующий() Цикл
					ОбластьМакета = Макет.ПолучитьОбласть("Строка");				
					ОбластьМакета.Параметры.Заполнить(СтрокаОтчета);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьДДС(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос();	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РегламентированныйОтчет.Ссылка,
	|	РегламентированныйОтчет.Номер,
	|	РегламентированныйОтчет.Дата КАК Дата,
	|	РегламентированныйОтчет.ДатаН КАК ДатаН,
	|	РегламентированныйОтчет.Организация,
	|	РегламентированныйОтчет.Организация.НаименованиеПолное КАК Предприятие,
	|	ВЫБОР
	|		КОГДА РегламентированныйОтчет.ЕдиницаОтчета = """"
	|			ТОГДА ""Сомы""
	|		ИНАЧЕ РегламентированныйОтчет.ЕдиницаОтчета
	|	КОНЕЦ КАК ЕИ,
	|	РегламентированныйОтчет.Организация.ИНН КАК ИНН,
	|	РегламентированныйОтчет.Отчет.(
	|		Строка,
	|		Наименование,
	|		НаименованиеК,
	|		Сумма,
	|		СуммаПП,
	|		Группа,
	|		Заголовок
	|	)
	|ИЗ
	|	Документ.РегламентированныйОтчет КАК РегламентированныйОтчет
	|ГДЕ
	|	РегламентированныйОтчет.Ссылка В(&МассивОбъектов)";	
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_ДДС";
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РегламентированныйОтчет.ПФ_MXL_ДДС");
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;
		
		Руководители = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизаций(Шапка.Организация, Шапка.Дата);
		ДанныеПечати.Вставить("Руководитель", 	Руководители.Руководитель);
		ДанныеПечати.Вставить("Главбух", 		Руководители.ГлавныйБухгалтер);		
		ДанныеПечати.Вставить("ДатаН",			Формат(НачалоМесяца(Шапка.ДатаН),"ДЛФ=ДД"));
		ДанныеПечати.Вставить("ДатаК", 			Формат(Шапка.Дата,"ДЛФ=ДД"));
		
		// Инициализация массива областей макета
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Заголовок");
		МассивОбластейМакета.Добавить("ШапкаТаблицы");
		МассивОбластейМакета.Добавить("Строка");
		МассивОбластейМакета.Добавить("Подвал");
		
		СтрокаОтчета = Шапка.Отчет.Выбрать();
		
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ИмяОбласти <> "Строка" Тогда
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, Шапка);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			ИначеЕсли ИмяОбласти = "Строка" Тогда 
				Пока СтрокаОтчета.Следующий() Цикл
					ОбластьМакета = Макет.ПолучитьОбласть("Строка");
					ОбластьМакета.Параметры.Заполнить(СтрокаОтчета);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьОИК(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос();	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РегламентированныйОтчет.Ссылка,
	|	РегламентированныйОтчет.Номер,
	|	РегламентированныйОтчет.Дата КАК Дата,
	|	РегламентированныйОтчет.ДатаН КАК ДатаН,
	|	РегламентированныйОтчет.Организация,
	|	РегламентированныйОтчет.Организация.НаименованиеПолное КАК Предприятие,
	|	ВЫБОР
	|		КОГДА РегламентированныйОтчет.ЕдиницаОтчета = """"
	|			ТОГДА ""Сомы""
	|		ИНАЧЕ РегламентированныйОтчет.ЕдиницаОтчета
	|	КОНЕЦ КАК ЕИ,
	|	ВЫБОР
	|		КОГДА РегламентированныйОтчет.ЕдиницаОтчета = """"
	|			ТОГДА ""Сомы""
	|		ИНАЧЕ РегламентированныйОтчет.ЕдиницаОтчета
	|	КОНЕЦ КАК МКЕИ,
	|	РегламентированныйОтчет.Организация.КодПоОКПО КАК ОКПО,
	|	РегламентированныйОтчет.Организация.ИНН КАК ИНН,
	|	РегламентированныйОтчет.Организация.НаименованиеГКЭД КАК Отрасль,
	|	РегламентированныйОтчет.Организация.КодГКЭД КАК ГКЭД,
	|	РегламентированныйОтчет.Организация.ОрганУправления КАК ОрганУправления,
	|	РегламентированныйОтчет.Организация.КодПравовойФормы.Наименование КАК ФормаСобст,
	|	РегламентированныйОтчет.Организация.КодПравовойФормы.Код КАК ГКФС,
	|	РегламентированныйОтчет.Отчет.(
	|		Строка,
	|		Наименование,
	|		НаименованиеК,
	|		СуммаУК КАК СуммаУстКап,
	|		СуммаПК КАК СуммаПрочКап,
	|		СуммаНП КАК СуммаНераспПриб,
	|		СуммаИтг КАК СуммаИтого
	|	),
	|	РегламентированныйОтчет.ОтчетОИК.(
	|		Ссылка,
	|		НомерСтроки,
	|		Наименование,
	|		Заголовок,
	|		Группа,
	|		ЗнакГруппы,
	|		АкционерныйКапитал,
	|		ДополнительноОплаченныйКапитал,
	|		ОбщийРезерв,
	|		РезервПоПереоценкеОсновныхСредств,
	|		РезервПоПереоценкеИнвестиционногоИмущества,
	|		РезервПоХеджированиюПотокоаДенежныхСредств,
	|		РезеврПоПересчетуЗарубежнойДеятельности,
	|		РезеврПоПереоценкеФинансовыхАктивов,
	|		НераспределеннаяПрибыль,
	|		ИтогоКапиталОтосящийсяКСобственникамКомпании,
	|		НеконтрольнаяДоляУчастия,
	|		Итого,
	|		ИмяКолонки,
	|		Строка
	|	)
	|ИЗ
	|	Документ.РегламентированныйОтчет КАК РегламентированныйОтчет
	|ГДЕ
	|	РегламентированныйОтчет.Ссылка В(&МассивОбъектов)";	
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_ОИК";
		
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РегламентированныйОтчет.ПФ_MXL_ОИК");
		
		Руководители = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизаций(Шапка.Организация, Шапка.Дата);
		ДанныеПечати.Вставить("Руководитель", 	Руководители.Руководитель);
		ДанныеПечати.Вставить("Главбух", 		Руководители.ГлавныйБухгалтер);		
		ДанныеПечати.Вставить("ДатаН",			Формат(НачалоМесяца(Шапка.ДатаН),"ДЛФ=ДД"));
		ДанныеПечати.Вставить("ДатаК", 			Формат(Шапка.Дата,"ДЛФ=ДД"));
		ДанныеПечати.Вставить("ДатаОтчета",		Формат(Шапка.Дата,"ДЛФ=ДД"));
		             
		// Инициализация массива областей макета
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Заголовок");
		МассивОбластейМакета.Добавить("ШапкаТаблицы");
		МассивОбластейМакета.Добавить("Строка");
		МассивОбластейМакета.Добавить("Подвал");
		
		СтрокаОтчета = Шапка.Отчет.Выбрать();
		
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ИмяОбласти <> "Строка" Тогда
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, Шапка);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			ИначеЕсли ИмяОбласти = "Строка" Тогда 
				Пока СтрокаОтчета.Следующий() Цикл
					ОбластьМакета.Параметры.Заполнить(СтрокаОтчета);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечататьТитулБаланс") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ПечататьТитулБаланс", 
		"Баланс (титульный лист)", 
		ПечатьТитулБаланс(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.РегламентированныйОтчет.ПФ_MXL_ТитулБаланс");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечататьБаланс") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ПечататьБаланс", 
		"Баланс", 
		ПечатьБаланс(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.РегламентированныйОтчет.ПФ_MXL_Баланс");
	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечататьОПУ") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ПечататьОПУ", 
		"Отчет о прибылях и убытках", 
		ПечатьОПУ(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.РегламентированныйОтчет.ПФ_MXL_ОПУ");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечататьДДС") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ПечататьДДС", 
		"Отчет о движении денежных средств", 
		ПечатьДДС(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.РегламентированныйОтчет.ПФ_MXL_ДДС");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечататьОИК") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ПечататьОИК", 
		"Отчет об изменениях в собственном капитале", 
		ПечатьОИК(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.РегламентированныйОтчет.ПФ_MXL_ОИК");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечататьТитулБаланс";
	КомандаПечати.Представление = НСтр("ru = 'Баланс (титульный лист)'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечататьБаланс";
	КомандаПечати.Представление = НСтр("ru = 'Баланс'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 2;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечататьОПУ";
	КомандаПечати.Представление = НСтр("ru = 'Отчет о прибылях и убытках'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 3;	

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечататьДДС";
	КомандаПечати.Представление = НСтр("ru = 'Отчет о движении денежных средств'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 4;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечататьОИК";
	КомандаПечати.Представление = НСтр("ru = 'Отчет об изменениях в собственном капитале'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 5;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли