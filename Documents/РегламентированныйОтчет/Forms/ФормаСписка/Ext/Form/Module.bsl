
#Область ОбработчикиСобытийФормы
	
// Процедура - обработчик события ПриСозданииНаСервере.
// В процедуре осуществляется
// - инициализация реквизитов формы,
// - установка параметров функциональных опций формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ВидОтчета") Тогда 
		ОтборВидОтчета = Параметры.ВидОтчета;
		УстановитьМеткуИОтборСписка("ВидОтчета", "ГруппаОтборВидОтчета", ОтборВидОтчета);
	КонецЕсли;	
	
	// Установить видимость и доступность элементов формы
	УстановитьВидимостьДоступностьЭлементов();
	
	// РаботаСФормами
	РаботаСФормамиСервер.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец РаботаСФормами
	
	// СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов
	МожноРедактировать = ПравоДоступа("Редактирование", Метаданные.Документы.РегламентированныйОтчет);
	Элементы.СписокКонтекстноеМенюИзменитьВыделенные.Видимость = МожноРедактировать;
	// Конец СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаВажныеКоманды;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиРеквизитовОтборов
	
&НаКлиенте
Процедура ОтборВидОтчетаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("ВидОтчета", Элемент.Родитель.Имя, ВыбранноеЗначение);

КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Организация", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
	
&НаСервере
Процедура РедактироватьСписокКомандПечати(ОтборНастройка)
	
	// УДАЛИТЬ
	
	//ПоказатьВсе = НЕ ЗначениеЗаполнено(ОтборНастройка);
	//ЭтоБаланс 	= ОтборНастройка = Справочники.НастройкиРегламентированныхОтчетов.Баланс;
	//ЭтоОПУ 		= ОтборНастройка = Справочники.НастройкиРегламентированныхОтчетов.ОПУ;
	//ЭтоОИК 		= ОтборНастройка = Справочники.НастройкиРегламентированныхОтчетов.ОИК;
	//ЭтоДДС 		= ОтборНастройка = Справочники.НастройкиРегламентированныхОтчетов.ДДС;

	//ГруппаВажныеКоманды = ЭтаФорма.Элементы.ГруппаВажныеКоманды.ПодчиненныеЭлементы.ПодменюПечать.ПодчиненныеЭлементы;
	//
	// //Инициализация команд на форме
	//Для каждого ЭлементКоманда Из ГруппаВажныеКоманды Цикл
	//	ЭлементКоманда.Видимость = Истина;
	//КонецЦикла;

	//АдресКомандПечатиВоВременномХранилище = "АдресКомандПечатиВоВременномХранилище";
	//КомандаФормы = ЭтаФорма.Команды.Найти(АдресКомандПечатиВоВременномХранилище);
	//ОбщийСписокКомандПечатиФормы = ПолучитьИзВременногоХранилища(КомандаФормы.Действие);
	//
	//Для Каждого Команда Из ОбщийСписокКомандПечатиФормы Цикл
	//	Для каждого КомандаНаФорме Из ГруппаВажныеКоманды Цикл
	//		Если КомандаНаФорме.ИмяКоманды = Команда.ИмяКомандыНаФорме И Команда.Идентификатор = "ПечататьТитулБаланс" Тогда
	//			КомандаНаФорме.Видимость = ЭтоБаланс ИЛИ ПоказатьВсе;
	//		ИначеЕсли КомандаНаФорме.ИмяКоманды = Команда.ИмяКомандыНаФорме И Команда.Идентификатор = "ПечататьБаланс" Тогда
	//			КомандаНаФорме.Видимость = ЭтоБаланс ИЛИ ПоказатьВсе;
	//		ИначеЕсли КомандаНаФорме.ИмяКоманды = Команда.ИмяКомандыНаФорме И Команда.Идентификатор = "ПечататьОПУ" Тогда
	//			КомандаНаФорме.Видимость = ЭтоОПУ ИЛИ ПоказатьВсе;
	//		ИначеЕсли КомандаНаФорме.ИмяКоманды = Команда.ИмяКомандыНаФорме И Команда.Идентификатор = "ПечататьОИК" Тогда
	//			КомандаНаФорме.Видимость = ЭтоОИК ИЛИ ПоказатьВсе;
	//		ИначеЕсли КомандаНаФорме.ИмяКоманды = Команда.ИмяКомандыНаФорме И Команда.Идентификатор = "ПечататьДДС" Тогда
	//			КомандаНаФорме.Видимость = ЭтоДДС ИЛИ ПоказатьВсе;			
	//		КонецЕсли;                                                                     
	//	КонецЦикла;
	//КонецЦикла;
	
	// КОНЕЦ УДАЛИТЬ
	
КонецПроцедуры

// Процедура устанавливает видимость и доступность элементов.
//
&НаСервере
Процедура УстановитьВидимостьДоступностьЭлементов()
	
	Если ОтборВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.ОИК Тогда 		
		Заголовок = НСтр("ru = 'Регламентрированные отчеты об изменениях в собственном капитале'");
	ИначеЕсли ОтборВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.ОПУ Тогда 
		Заголовок = НСтр("ru = 'Регламентрированные отчеты о прибылях и убытках'");	
	ИначеЕсли ОтборВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.ОДДС Тогда 
		Заголовок = НСтр("ru = 'Регламентрированные отчеты о движении денежных средств'");
	ИначеЕсли ОтборВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.Баланс Тогда 
		Заголовок = НСтр("ru = 'Бухгалтерский баланс'");	
	КонецЕсли;	
	
	РедактироватьСписокКомандПечати(ОтборВидОтчета);	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов
&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
	
#Область МеткиОтборов
	
&НаСервере
Процедура УстановитьМеткуИОтборСписка(ИмяПоляОтбораСписка, ГруппаРодительМетки, ВыбранноеЗначение, ПредставлениеЗначения="")
	
	Если ПредставлениеЗначения = "" Тогда
		ПредставлениеЗначения = Строка(ВыбранноеЗначение);
	КонецЕсли; 
	
	РаботаСОтборами.ПрикрепитьМеткуОтбора(ЭтотОбъект, ИмяПоляОтбораСписка, ГруппаРодительМетки, ВыбранноеЗначение, ПредставлениеЗначения);
	РаботаСОтборами.УстановитьОтборСписка(ЭтотОбъект, Список, ИмяПоляОтбораСписка);
	
	Если НЕ ЭтаФорма.Элементы.Найти("ГруппаВажныеКомандыПодменюПечать") = Неопределено Тогда
		РедактироватьСписокКомандПечати(ВыбранноеЗначение);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_МеткаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	МеткаИД = Сред(Элемент.Имя, СтрДлина("Метка_")+1);
	УдалитьМеткуОтбора(МеткаИД);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьМеткуОтбора(МеткаИД)
	
	РаботаСОтборами.УдалитьМеткуОтбораСервер(ЭтотОбъект, Список, МеткаИД);
	ОтборВидОтчета = Справочники.НастройкиРегламентированныхОтчетов.ПустаяСсылка();
	РедактироватьСписокКомандПечати(ОтборВидОтчета);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПериодаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСОтборамиКлиент.ПредставлениеПериодаВыбратьПериод(ЭтотОбъект, "Список", "Дата");
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьРазвернутьПанельОтборов(Элемент)
	
	НовоеЗначениеВидимость = НЕ Элементы.ФильтрыНастройкиИДопИнфо.Видимость;
	РаботаСОтборамиКлиент.СвернутьРазвернутьПанельОтборов(ЭтотОбъект, НовоеЗначениеВидимость);
		
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОтборыНажатие(Элемент)
	
	МеткаИД = 0;
	УдаляемыеМетки = Новый СписокЗначений;
	Для каждого Метка Из ДанныеМеток Цикл
		
		УдаляемыеМетки.Добавить(МеткаИД);
		МеткаИД = МеткаИД + 1;
	КонецЦикла;
	
	УдалитьМеткиОтбора(УдаляемыеМетки);
	
	ОбновитьЭлементыМеток();
КонецПроцедуры

&НаСервере
Процедура УдалитьМеткиОтбора(Метки)
	
	РаботаСОтборами.УдалитьМеткиОтбораСервер(ЭтотОбъект, Список, Метки);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыМеток()
	
	РаботаСОтборами.ОбновитьЭлементыМеток(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти