#Область ПроцедурыИФункцииОбщегоНазначения

&НаСервере
Процедура РедактироватьСписокКомандПечати(ОтборНастройка)
	ПоказатьВсе = НЕ ЗначениеЗаполнено(ОтборНастройка);
	ЭтоБаланс 	= ОтборНастройка = Справочники.НастройкиРегламентированныхОтчетов.Баланс;
	ЭтоОПУ 		= ОтборНастройка = Справочники.НастройкиРегламентированныхОтчетов.ОПУ;
	ЭтоОИК 		= ОтборНастройка = Справочники.НастройкиРегламентированныхОтчетов.ОИК;
	ЭтоДДС 		= ОтборНастройка = Справочники.НастройкиРегламентированныхОтчетов.ДДС;

	ГруппаВажныеКоманды = ЭтаФорма.Элементы.ГруппаВажныеКомандыПодменюПечать.ПодчиненныеЭлементы;
	
	//Инициализация команд на форме
	Для каждого ЭлементКоманда Из ГруппаВажныеКоманды Цикл
		ЭлементКоманда.Видимость = Истина;
	КонецЦикла;

	АдресКомандПечатиВоВременномХранилище = "АдресКомандПечатиВоВременномХранилище";
	КомандаФормы = ЭтаФорма.Команды.Найти(АдресКомандПечатиВоВременномХранилище);
	ОбщийСписокКомандПечатиФормы = ПолучитьИзВременногоХранилища(КомандаФормы.Действие);
	
	Для Каждого Команда Из ОбщийСписокКомандПечатиФормы Цикл
		Для каждого КомандаНаФорме Из ГруппаВажныеКоманды Цикл
			Если КомандаНаФорме.ИмяКоманды = Команда.ИмяКомандыНаФорме И Команда.Идентификатор = "ПечататьТитулБаланс" Тогда
				КомандаНаФорме.Видимость = ЭтоБаланс ИЛИ ПоказатьВсе;
			ИначеЕсли КомандаНаФорме.ИмяКоманды = Команда.ИмяКомандыНаФорме И Команда.Идентификатор = "ПечататьБаланс" Тогда
				КомандаНаФорме.Видимость = ЭтоБаланс ИЛИ ПоказатьВсе;
			ИначеЕсли КомандаНаФорме.ИмяКоманды = Команда.ИмяКомандыНаФорме И Команда.Идентификатор = "ПечататьОПУ" Тогда
				КомандаНаФорме.Видимость = ЭтоОПУ ИЛИ ПоказатьВсе;
			ИначеЕсли КомандаНаФорме.ИмяКоманды = Команда.ИмяКомандыНаФорме И Команда.Идентификатор = "ПечататьОИК" Тогда
				КомандаНаФорме.Видимость = ЭтоОИК ИЛИ ПоказатьВсе;
			ИначеЕсли КомандаНаФорме.ИмяКоманды = Команда.ИмяКомандыНаФорме И Команда.Идентификатор = "ПечататьДДС" Тогда
				КомандаНаФорме.Видимость = ЭтоДДС ИЛИ ПоказатьВсе;			
			КонецЕсли;                                                                     
		КонецЦикла;
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область УправлениеВнешнимВидом

&НаКлиенте
// Процедура устанавливает видимость и доступность элементов.
//
Процедура УстановитьВидимостьДоступностьЭлементов()
	
	Если ОтборНастройка = ПредопределенноеЗначение("Справочник.НастройкиРегламентированныхОтчетов.ОИК")Тогда 		
		ЭтаФорма.Заголовок = НСтр("ru = 'Регламентрированные отчеты об изменениях в собственном капитале'");
	ИначеЕсли ОтборНастройка = ПредопределенноеЗначение("Справочник.НастройкиРегламентированныхОтчетов.ОПУ")Тогда 
		ЭтаФорма.Заголовок = НСтр("ru = 'Регламентрированные отчеты о прибылях и убытках'");	
	ИначеЕсли ОтборНастройка = ПредопределенноеЗначение("Справочник.НастройкиРегламентированныхОтчетов.ДДС")Тогда 
		ЭтаФорма.Заголовок = НСтр("ru = 'Регламентрированные отчеты о движении денежных средств'");
	ИначеЕсли ОтборНастройка = ПредопределенноеЗначение("Справочник.НастройкиРегламентированныхОтчетов.Баланс")Тогда 
		ЭтаФорма.Заголовок = НСтр("ru = 'Бухгалтерский баланс'");	
	КонецЕсли;	
	
	РедактироватьСписокКомандПечати(ОтборНастройка);	
КонецПроцедуры // УстановитьВидимостьДоступностьЭлементов()    

#КонецОбласти

#Область ОбработчикиФормы

// Процедура - обработчик события ПриСозданииНаСервере.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОтборНастройка = Параметры.Настройка;

	УстановитьМеткуИОтборСписка("Настройка.Родитель", "ГруппаОтборНастройка", ОтборНастройка);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаВажныеКоманды);
	// Конец СтандартныеПодсистемы.Печать
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьДоступностьЭлементов()
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиРеквизитов

&НаКлиенте
Процедура ОтборНастройкаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Настройка.Родитель", Элемент.Родитель.Имя, ВыбранноеЗначение);

КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Организация", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область МеткиОтборов

&НаСервере
Процедура УстановитьМеткуИОтборСписка(ИмяПоляОтбораСписка, ГруппаРодительМетки, ВыбранноеЗначение, ПредставлениеЗначения="")
	
	Если ПредставлениеЗначения = "" Тогда
		ПредставлениеЗначения = Строка(ВыбранноеЗначение);
	КонецЕсли; 
	
	РаботаСОтборами.ПрикрепитьМеткуОтбора(ЭтотОбъект, ИмяПоляОтбораСписка, ГруппаРодительМетки, ВыбранноеЗначение, ПредставлениеЗначения);
	РаботаСОтборами.УстановитьОтборСписка(ЭтотОбъект, Список, ИмяПоляОтбораСписка);
	
	Если НЕ ЭтаФорма.Элементы.Найти("ГруппаВажныеКомандыПодменюПечать") = Неопределено Тогда
		РедактироватьСписокКомандПечати(ВыбранноеЗначение);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_МеткаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	МеткаИД = Сред(Элемент.Имя, СтрДлина("Метка_")+1);
	УдалитьМеткуОтбора(МеткаИД);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьМеткуОтбора(МеткаИД)
	
	РаботаСОтборами.УдалитьМеткуОтбораСервер(ЭтотОбъект, Список, МеткаИД);
	ОтборНастройка = Справочники.НастройкиРегламентированныхОтчетов.ПустаяСсылка();
	РедактироватьСписокКомандПечати(ОтборНастройка);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПериодаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСОтборамиКлиент.ПредставлениеПериодаВыбратьПериод(ЭтотОбъект, "Список", "Дата");
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьРазвернутьПанельОтборов(Элемент)
	
	НовоеЗначениеВидимость = НЕ Элементы.ФильтрыНастройкиИДопИнфо.Видимость;
	РаботаСОтборамиКлиент.СвернутьРазвернутьПанельОтборов(ЭтотОбъект, НовоеЗначениеВидимость);
		
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОтборыНажатие(Элемент)
	
	МеткаИД = 0;
	УдаляемыеМетки = Новый СписокЗначений;
	Для каждого Метка Из ДанныеМеток Цикл
		
		УдаляемыеМетки.Добавить(МеткаИД);
		МеткаИД = МеткаИД + 1;
	КонецЦикла;
	
	УдалитьМеткиОтбора(УдаляемыеМетки);
	
	ОбновитьЭлементыМеток();
КонецПроцедуры

&НаСервере
Процедура УдалитьМеткиОтбора(Метки)
	
	РаботаСОтборами.УдалитьМеткиОтбораСервер(ЭтотОбъект, Список, Метки);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыМеток()
	
	РаботаСОтборами.ОбновитьЭлементыМеток(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Элементы.Список);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

#КонецОбласти
