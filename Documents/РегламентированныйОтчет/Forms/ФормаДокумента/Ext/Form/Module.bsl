#Область ОбработчикиСобытийФормы

// Процедура - обработчик события ПриСозданииНаСервере.
// В процедуре осуществляется
// - инициализация реквизитов формы,
// - установка параметров функциональных опций формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// Установка реквизитов формы.
	ДатаДокумента = Объект.Дата;
	Если НЕ ЗначениеЗаполнено(ДатаДокумента) Тогда
		ДатаДокумента = ТекущаяДатаСеанса();
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаВажныеКоманды;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

// Процедура - обработчик события ПриЧтенииНаСервере.
//
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменений
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменений
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры // ПриЧтенииНаСервере()

// Процедура - обработчик события ПриОткрытии.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//РедактироватьСписокКомандПечати();
	УстановитьВидимостьДоступностьЭлементов();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Процедура - обработчик события ПриИзменении поля ввода Дата.
// В процедуре определяется ситуация, когда при изменении своей даты документ 
// оказывается в другом периоде нумерации документов, и в этом случае
// присваивает документу новый уникальный номер.
// Переопределяет соответствующий параметр формы.
//
&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	Объект.Дата 	= КонецМесяца(Объект.Дата);
	ДатаДокумента 	= Объект.Дата;
	Объект.ДатаН 	= НачалоГода(ДатаДокумента);
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода Организация.
//
&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	// Обработка события изменения организации.
	Объект.Номер = "";
	БухгалтерскийУчетВызовСервера.УчетнаяПолитикаСуществует(Объект.Организация, ДатаДокумента, Истина, Объект.Ссылка);
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода Настройка.
//
&НаКлиенте
Процедура НастройкаПриИзменении(Элемент)
	ЗаполнитьНастройки();
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода ПоказатьНастройки.
//
&НаКлиенте
Процедура ПоказатьНастройкиПриИзменении(Элемент)
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Рассчитать(Команда)
	РассчитатьНаСервере();
	УстановитьВидимостьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура РасчитатьОИК(Команда)
	РассчитатьОИКНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура устанавливает видимость и доступность элементов.
//
&НаКлиенте
Процедура УстановитьВидимостьДоступностьЭлементов()
	ГруппаНастройки = ГруппаНастройки(Объект.Настройка);
	ЭтоБаланс 	= ГруппаНастройки = ПредопределенноеЗначение("Справочник.НастройкиРегламентированныхОтчетов.Баланс");
	ЭтоОПУ 		= ГруппаНастройки = ПредопределенноеЗначение("Справочник.НастройкиРегламентированныхОтчетов.ОПУ");
	ЭтоОИК 		= ГруппаНастройки = ПредопределенноеЗначение("Справочник.НастройкиРегламентированныхОтчетов.ОИК");
	ЭтоДДС 		= ГруппаНастройки = ПредопределенноеЗначение("Справочник.НастройкиРегламентированныхОтчетов.ДДС");
	
	ВидимостьПП = ГруппаНастройки(Объект.Настройка) = ПредопределенноеЗначение("Справочник.НастройкиРегламентированныхОтчетов.ОПУ");
	
	Если ЭтоОИК Тогда 		
		Элементы.СтраницаОтчетОИК.Видимость 	= Истина;
		Элементы.СтраницаОтчет.Видимость	  	= Истина; //Ложь;
		Элементы.СтраницаНастройки.Видимость	= Истина; //Ложь;
	Иначе
		Элементы.СтраницаОтчетОИК.Видимость 	= Ложь;
		Элементы.СтраницаОтчет.Видимость	   	= Истина;
		Элементы.СтраницаНастройки.Видимость 	= Истина;
	КонецЕсли;
	
	Элементы.ПрибыльПоНУ.Видимость 	= ВидимостьПП;
	Элементы.ДатаНПП.Видимость		= ВидимостьПП;
	Элементы.ДатаКПП.Видимость		= ВидимостьПП;
	Элементы.Подвал.Видимость		= ЭтоБаланс;
	
	Если ЭтоОИК Тогда
		Элементы.ОтчетСуммаИтг.Видимость = Истина;
		Элементы.ОтчетСуммаНП.Видимость  = Истина;
		Элементы.ОтчетСуммаПК.Видимость  = Истина;
		Элементы.ОтчетСуммаУК.Видимость  = Истина;
		Элементы.ОтчетСуммаПП.Видимость  = Ложь;
		Элементы.ОтчетСумма.Видимость    = Ложь;
	Иначе
		Элементы.ОтчетСуммаИтг.Видимость = Ложь;
		Элементы.ОтчетСуммаНП.Видимость  = Ложь;
		Элементы.ОтчетСуммаПК.Видимость  = Ложь;
		Элементы.ОтчетСуммаУК.Видимость  = Ложь;
		Элементы.ОтчетСуммаПП.Видимость  = Истина;
		Элементы.ОтчетСумма.Видимость    = Истина;
	КонецЕсли;
	
	Если ЭтоОИК Тогда 		
		ЭтаФорма.Заголовок = НСтр("ru = 'Регламентрированный отчет об изменениях в собственном капитале'");
	ИначеЕсли ЭтоОПУ Тогда 
		ЭтаФорма.Заголовок = НСтр("ru = 'Регламентрированный отчет о прибылях и убытках'");	
	ИначеЕсли ЭтоДДС Тогда 
		ЭтаФорма.Заголовок = НСтр("ru = 'Регламентрированный отчет о движении денежных средств'");
	ИначеЕсли ЭтоБаланс Тогда 
		ЭтаФорма.Заголовок = НСтр("ru = 'Бухгалтерский баланс'");				
	КонецЕсли;
	
	Элементы.ОтчетЗаголовок.Видимость 	= ПоказатьНастройки;
	Элементы.ОтчетЗнакГруппы.Видимость 	= ПоказатьНастройки;
	Элементы.ОтчетПроход.Видимость 		= ПоказатьНастройки;
	
	Если Объект.ЕдиницаОтчета = "Тысячи сомов" Тогда
		ФорматСтроки = "ЧЦ=15";			
	Иначе	
	    ФорматСтроки = "ЧЦ=15; ЧДЦ=2";
	КонецЕсли;
	Элементы.ОтчетСумма.Формат 		= ФорматСтроки;
	Элементы.ОтчетСуммаПП.Формат 	= ФорматСтроки;
	Элементы.ОтчетСуммаУК.Формат 	= ФорматСтроки;
	Элементы.ОтчетСуммаПК.Формат 	= ФорматСтроки;
	Элементы.ОтчетСуммаНП.Формат 	= ФорматСтроки;
	Элементы.ОтчетСуммаИтг.Формат 	= ФорматСтроки;
	
КонецПроцедуры // УстановитьВидимостьДоступностьЭлементов()    

&НаСервереБезКонтекста
Функция ГруппаНастройки(Настройка)
	
	Возврат Настройка.Родитель;	

КонецФункции // ГруппаНастройки()

&НаСервере
Процедура РассчитатьНаСервере()
	Записать();
	ПроставитьНомераПроходов();
	УстановитьПредыдущийПериод();
	
	Если Объект.Настройка.Родитель = Справочники.НастройкиРегламентированныхОтчетов.ОПУ Тогда
		РасчитатьОПУ();	
	Иначе
	    РассчитатьОтчет();
	КонецЕсли;	
	
	Если Объект.Настройка.Родитель = Справочники.НастройкиРегламентированныхОтчетов.Баланс Тогда
		ОтборСтрок = Новый Структура;
		ОтборСтрок.Вставить("КодСтроки", "299");
		МассивСтрок	= Объект.Отчет.НайтиСтроки(ОтборСтрок);
		ИтогоАктивыН 		= ?(МассивСтрок.Количество() > 0, МассивСтрок[0].СуммаПП, 0);
		ИтогоАктивыК		= ?(МассивСтрок.Количество() > 0, МассивСтрок[0].Сумма, 0);
		ОтборСтрок.Вставить("КодСтроки", "599");
		МассивСтрок	= Объект.Отчет.НайтиСтроки(ОтборСтрок);		
		ИтогоОбязательстваН	= ?(МассивСтрок.Количество() > 0, МассивСтрок[0].СуммаПП, 0);
		ИтогоОбязательстваК	= ?(МассивСтрок.Количество() > 0, МассивСтрок[0].Сумма, 0);
		
		Если ИтогоАктивыН = Неопределено Тогда
			ИтогоАктивыН = 0;
		КонецЕсли;
		Если ИтогоАктивыК = Неопределено Тогда
			ИтогоАктивыК = 0;
		КонецЕсли;
		Если ИтогоОбязательстваН = Неопределено Тогда
			ИтогоОбязательстваН  = 0;
		КонецЕсли;
		Если ИтогоОбязательстваК = Неопределено Тогда
			ИтогоОбязательстваК  = 0;
		КонецЕсли;
		
		Объект.БалансСводка = "Начало(А:"+СокрЛП(Строка(ИтогоАктивыН))+" - П:"+СокрЛП(Строка(ИтогоОбязательстваН))+")"
		+" Конец(А:"+СокрЛП(Строка(ИтогоАктивыК))+" - П:"+СокрЛП(Строка(ИтогоОбязательстваК))+")";
	КонецЕсли;											
КонецПроцедуры

&НаСервере
Процедура ПроставитьНомераПроходов()
	
	// 1. Список групп
	ТЗСГ = Объект.Отчет.Выгрузить();
	ТЗСГ.Свернуть("Группа");
	
	// 2. Удалить пустую строку
	СТЗПусто = ТЗСГ.Найти("","Группа");
	Если СТЗПусто <> Неопределено Тогда 
		ТЗСГ.Удалить(СТЗПусто);	
	КонецЕсли;
	
	// 3. Добавить колонку для прохода - всем группам присваивается уровень 1
	ТЗСГ.Колонки.Добавить("Проход");
	ТЗСГ.ЗаполнитьЗначения(1,"Проход");
	
	// 4. Список групп - формирование номеров проходов
	КЦ = 1;
	Пока КЦ < 20 Цикл
		ГруппаПустая = Истина;
		Для Каждого СТЗ Из ТЗСГ Цикл
			Если СТЗ.Проход = КЦ Тогда
				Отбор = Новый Структура("КодСтроки",СТЗ.Группа);
				СтрокиГруппы  = Объект.Отчет.НайтиСтроки(Отбор);
				Для Каждого Стр Из СтрокиГруппы Цикл 
					СТЗСГ = ТЗСГ.Найти(Стр.Группа,"Группа");
					Если СТЗСГ <> Неопределено Тогда				
						СТЗСГ.Проход = КЦ+1;
						ГруппаПустая = Ложь;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		Если ГруппаПустая Тогда
			Прервать;
		КонецЕсли;
		КЦ = КЦ+1;
	КонецЦикла;
	
	// 5. Простановка проходов в Отчет
	
	Для Каждого СТЧ Из Объект.Отчет Цикл
		СТЧ.Проход = 0;
		СТЗСГ = ТЗСГ.Найти(СТЧ.КодСтроки,"Группа");
		Если СТЗСГ <> Неопределено Тогда 
			СТЧ.Проход = СТЗСГ.Проход;	
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура УстановитьПредыдущийПериод()

		Объект.ДатаНПП = ДобавитьМесяц(Объект.ДатаН,-12); // Начало предыдущего периода
		Объект.ДатаКПП = ДобавитьМесяц(ДатаДокумента,-12);  // Конец предыдущего периода

КонецПроцедуры

// процедура предназначенна для расчета заданного отчета по настройкам
//
&НаСервере
Процедура РассчитатьОтчет()
	УсловиеОрганизации = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
		|	СУММА(ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаОборот, 0)) КАК ОборотыДТКТ
		|ПОМЕСТИТЬ ВременнаяТаблицаОборотыДтКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаН, &ДатаК, , , , , , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОборотыДтКт.СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
		|	СУММА(ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаОборот, 0)) КАК ОборотыДТКТПП
		|ПОМЕСТИТЬ ВременнаяТаблицаОборотыДтКтПП
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНПП, &ДатаКПП, , , , , , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОборотыДтКт.СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Настройки.КодСтроки КАК КодСтроки,
		|	Настройки.СчетУчета КАК СчетУчета,
		|	Настройки.Дебет КАК Дебет,
		|	Настройки.Кредит КАК Кредит,
		|	Настройки.Знак КАК Знак,
		|	Настройки.Формула КАК Формула,
		|	Настройки.ВидКапитала КАК ВидКапитала
		|ПОМЕСТИТЬ ВременнаяТаблицаНастройки
		|ИЗ
		|	&Настройки КАК Настройки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Отчет.КодСтроки КАК КодСтроки,
		|	Отчет.НаименованиеСтроки КАК НаименованиеСтроки,
		|	Отчет.ЭтоЗаголовок КАК ЭтоЗаголовок,
		|	Отчет.Группа КАК Группа,
		|	Отчет.НаименованиеСтрокиКырг КАК НаименованиеСтрокиКырг,
		|	Отчет.Картинка КАК Картинка,
		|	Отчет.ЗнакГруппы КАК ЗнакГруппы,
		|	Отчет.Проход КАК Проход
		|ПОМЕСТИТЬ ВременнаяТаблицаОтчет
		|ИЗ
		|	&Отчет КАК Отчет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаНастройки.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаНастройки.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаНастройки.Дебет КАК Дебет,
		|	ВременнаяТаблицаНастройки.Кредит КАК Кредит,
		|	ВременнаяТаблицаНастройки.Знак КАК Знак,
		|	ВременнаяТаблицаНастройки.Формула КАК Формула,
		|	ВременнаяТаблицаНастройки.ВидКапитала КАК ВидКапитала,
		|	Остатки.СуммаОборотДт КАК ОборотДт,
		|	Остатки.СуммаОборотКт КАК ОборотКт,
		|	Остатки.СуммаНачальныйОстатокДт КАК ОстатокДтН,
		|	Остатки.СуммаНачальныйОстатокКт КАК ОстатокКтН,
		|	Остатки.СуммаКонечныйОстатокДт КАК ОстатокДт,
		|	Остатки.СуммаКонечныйОстатокКт КАК ОстатокКт,
		|	0 КАК ОборотДтПП,
		|	0 КАК ОборотКтПП,
		|	0 КАК ОстатокДтПП,
		|	0 КАК ОстатокКтПП
		|ПОМЕСТИТЬ ВременнаяТаблицаОстаткиИОбороты
		|ИЗ
		|	ВременнаяТаблицаНастройки КАК ВременнаяТаблицаНастройки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаН, &ДатаК, , , , , Организация = &Организация) КАК Остатки
		|		ПО ВременнаяТаблицаНастройки.СчетУчета = Остатки.Счет
		|ГДЕ
		|	ВременнаяТаблицаНастройки.СчетУчета <> &ПустойСчет
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаНастройки.КодСтроки,
		|	ВременнаяТаблицаНастройки.СчетУчета,
		|	ВременнаяТаблицаНастройки.Дебет,
		|	ВременнаяТаблицаНастройки.Кредит,
		|	ВременнаяТаблицаНастройки.Знак,
		|	ВременнаяТаблицаНастройки.Формула,
		|	ВременнаяТаблицаНастройки.ВидКапитала,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	Остатки.СуммаОборотДт,
		|	Остатки.СуммаОборотКт,
		|	Остатки.СуммаКонечныйОстатокДт,
		|	Остатки.СуммаКонечныйОстатокКт
		|ИЗ
		|	ВременнаяТаблицаНастройки КАК ВременнаяТаблицаНастройки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНПП, &ДатаКПП, , , , , Организация = &Организация) КАК Остатки
		|		ПО ВременнаяТаблицаНастройки.СчетУчета = Остатки.Счет
		|ГДЕ
		|	ВременнаяТаблицаНастройки.СчетУчета <> &ПустойСчет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОстаткиИОбороты.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаОстаткиИОбороты.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаОстаткиИОбороты.Дебет КАК Дебет,
		|	ВременнаяТаблицаОстаткиИОбороты.Кредит КАК Кредит,
		|	ВременнаяТаблицаОстаткиИОбороты.Знак КАК Знак,
		|	ВременнаяТаблицаОстаткиИОбороты.Формула КАК Формула,
		|	ВременнаяТаблицаОстаткиИОбороты.ВидКапитала КАК ВидКапитала,
		|	СУММА(ВременнаяТаблицаОстаткиИОбороты.ОборотДт) КАК ОборотДт,
		|	СУММА(ВременнаяТаблицаОстаткиИОбороты.ОборотКт) КАК ОборотКт,
		|	СУММА(ВременнаяТаблицаОстаткиИОбороты.ОстатокДтН) КАК ОстатокДтН,
		|	СУММА(ВременнаяТаблицаОстаткиИОбороты.ОстатокКтН) КАК ОстатокКтН,
		|	СУММА(ВременнаяТаблицаОстаткиИОбороты.ОстатокДт) КАК ОстатокДт,
		|	СУММА(ВременнаяТаблицаОстаткиИОбороты.ОстатокКт) КАК ОстатокКт,
		|	СУММА(ВременнаяТаблицаОстаткиИОбороты.ОборотДтПП) КАК ОборотДтПП,
		|	СУММА(ВременнаяТаблицаОстаткиИОбороты.ОборотКтПП) КАК ОборотКтПП,
		|	СУММА(ВременнаяТаблицаОстаткиИОбороты.ОстатокДтПП) КАК ОстатокДтПП,
		|	СУММА(ВременнаяТаблицаОстаткиИОбороты.ОстатокКтПП) КАК ОстатокКтПП,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДт)
		|				ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОборотДт
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыКт)
		|				ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОборотКт
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДтКт)
		|				ТОГДА ВременнаяТаблицаОборотыДтКт.ОборотыДТКТ
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоДт)
		|				ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОстатокДт
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКт)
		|				ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОстатокКт
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоНачальное)
		|				ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОстатокДтН - ВременнаяТаблицаОстаткиИОбороты.ОстатокКтН
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКонечное)
		|				ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОстатокДт - ВременнаяТаблицаОстаткиИОбороты.ОстатокКт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Сумма,
		|	0 КАК СуммаУК,
		|	0 КАК СуммаПК,
		|	0 КАК СуммаНП,
		|	СУММА(ВЫБОР
		|			КОГДА ВЫРАЗИТЬ(&Настройка КАК Справочник.НастройкиРегламентированныхОтчетов).Родитель = ЗНАЧЕНИЕ(Справочник.НастройкиРегламентированныхОтчетов.ОИК)
		|				ТОГДА ВЫБОР
		|						КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДт)
		|							ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОборотДт
		|						КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыКт)
		|							ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОборотКт
		|						КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоДт)
		|							ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОстатокДт
		|						КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКт)
		|							ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОстатокКт
		|						КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДТКТ)
		|							ТОГДА ВременнаяТаблицаОборотыДтКт.ОборотыДТКТ
		|						КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоНачальное)
		|							ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОстатокКтН - ВременнаяТаблицаОстаткиИОбороты.ОстатокДтН
		|						КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКонечное)
		|							ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОстатокКт - ВременнаяТаблицаОстаткиИОбороты.ОстатокДт
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаИтг,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДт)
		|				ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОборотДтПП
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыКт)
		|				ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОборотКтПП
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДтКт)
		|				ТОГДА ВременнаяТаблицаОборотыДтКтПП.ОборотыДТКТПП
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоДт)
		|				ТОГДА ВЫБОР
		|						КОГДА ВЫРАЗИТЬ(&Настройка КАК Справочник.НастройкиРегламентированныхОтчетов).Родитель = ЗНАЧЕНИЕ(Справочник.НастройкиРегламентированныхОтчетов.ОПУ)
		|							ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОстатокДтПП
		|						ИНАЧЕ ВременнаяТаблицаОстаткиИОбороты.ОстатокДтН
		|					КОНЕЦ
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКт)
		|				ТОГДА ВЫБОР
		|						КОГДА ВЫРАЗИТЬ(&Настройка КАК Справочник.НастройкиРегламентированныхОтчетов).Родитель = ЗНАЧЕНИЕ(Справочник.НастройкиРегламентированныхОтчетов.ОПУ)
		|							ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОстатокКтПП
		|						ИНАЧЕ ВременнаяТаблицаОстаткиИОбороты.ОстатокКтН
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаПП,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДтКт)
		|				ТОГДА ВременнаяТаблицаОборотыДтКт.ОборотыДТКТ
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОборотыДТКТ,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДтКт)
		|				ТОГДА ВременнаяТаблицаОборотыДтКтПП.ОборотыДТКТПП
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОборотыДТКТПП
		|ПОМЕСТИТЬ ВременнаяТаблицаОсновныеРасчеты
		|ИЗ
		|	ВременнаяТаблицаОстаткиИОбороты КАК ВременнаяТаблицаОстаткиИОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОборотыДтКт КАК ВременнаяТаблицаОборотыДтКт
		|		ПО ВременнаяТаблицаОстаткиИОбороты.Дебет = ВременнаяТаблицаОборотыДтКт.СчетДт
		|			И ВременнаяТаблицаОстаткиИОбороты.Кредит = ВременнаяТаблицаОборотыДтКт.СчетКт
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОборотыДтКтПП КАК ВременнаяТаблицаОборотыДтКтПП
		|		ПО ВременнаяТаблицаОстаткиИОбороты.Дебет = ВременнаяТаблицаОборотыДтКтПП.СчетДт
		|			И ВременнаяТаблицаОстаткиИОбороты.Кредит = ВременнаяТаблицаОборотыДтКтПП.СчетКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаОстаткиИОбороты.КодСтроки,
		|	ВременнаяТаблицаОстаткиИОбороты.СчетУчета,
		|	ВременнаяТаблицаОстаткиИОбороты.Дебет,
		|	ВременнаяТаблицаОстаткиИОбороты.Кредит,
		|	ВременнаяТаблицаОстаткиИОбороты.Знак,
		|	ВременнаяТаблицаОстаткиИОбороты.Формула,
		|	ВременнаяТаблицаОстаткиИОбороты.ВидКапитала
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОсновныеРасчеты.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаОсновныеРасчеты.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаОсновныеРасчеты.Дебет КАК Дебет,
		|	ВременнаяТаблицаОсновныеРасчеты.Кредит КАК Кредит,
		|	ВременнаяТаблицаОсновныеРасчеты.Знак КАК Знак,
		|	ВременнаяТаблицаОсновныеРасчеты.Формула КАК Формула,
		|	ВременнаяТаблицаОсновныеРасчеты.ВидКапитала КАК ВидКапитала,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОборотДт
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОборотДт
		|	КОНЕЦ КАК ОборотДт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОборотКт
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОборотКт
		|	КОНЕЦ КАК ОборотКт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОстатокДтН
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОстатокДтН
		|	КОНЕЦ КАК ОстатокДтН,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОстатокКтН
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОстатокКтН
		|	КОНЕЦ КАК ОстатокКтН,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОстатокДт
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОстатокДт
		|	КОНЕЦ КАК ОстатокДт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОстатокКт
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОстатокКт
		|	КОНЕЦ КАК ОстатокКт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОборотДтПП
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОборотДтПП
		|	КОНЕЦ КАК ОборотДтПП,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОборотКтПП
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОборотКтПП
		|	КОНЕЦ КАК ОборотКтПП,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОстатокДтПП
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОстатокДтПП
		|	КОНЕЦ КАК ОстатокДтПП,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОстатокКтПП
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОстатокКтПП
		|	КОНЕЦ КАК ОстатокКтПП,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.Сумма
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.Сумма
		|	КОНЕЦ КАК Сумма,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.СуммаУК
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.СуммаУК
		|	КОНЕЦ КАК СуммаУК,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.СуммаПК
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.СуммаПК
		|	КОНЕЦ КАК СуммаПК,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.СуммаНП
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.СуммаНП
		|	КОНЕЦ КАК СуммаНП,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.СуммаИтг
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.СуммаИтг
		|	КОНЕЦ КАК СуммаИтг,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.СуммаПП
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.СуммаПП
		|	КОНЕЦ КАК СуммаПП,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОборотыДТКТ
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОборотыДТКТ
		|	КОНЕЦ КАК ОборотыДТКТ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОборотыДТКТПП
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОборотыДТКТПП
		|	КОНЕЦ КАК ОборотыДТКТПП
		|ПОМЕСТИТЬ ВременнаяТаблицаОсновныеЗнакМинусПлюс
		|ИЗ
		|	ВременнаяТаблицаОсновныеРасчеты КАК ВременнаяТаблицаОсновныеРасчеты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.КодСтроки КАК КодСтроки,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.Сумма КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.Сумма / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.Сумма / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.Сумма / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаОсновныеЗнакМинусПлюс.Сумма
		|		КОНЕЦ) КАК Сумма,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаУК КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаУК / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаУК / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаУК / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаУК
		|		КОНЕЦ) КАК СуммаУК,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПК КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПК / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПК / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПК / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПК
		|		КОНЕЦ) КАК СуммаПК,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаНП КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаНП / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаНП / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаНП / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаНП
		|		КОНЕЦ) КАК СуммаНП,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаИтг КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаИтг / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаИтг / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаИтг / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаИтг
		|		КОНЕЦ) КАК СуммаИтг,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПП КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПП / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПП / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПП / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПП
		|		КОНЕЦ) КАК СуммаПП
		|ПОМЕСТИТЬ ВременнаяТаблицаГруппировкаПоСтроке
		|ИЗ
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс КАК ВременнаяТаблицаОсновныеЗнакМинусПлюс
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОтчет.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаОтчет.НаименованиеСтроки КАК НаименованиеСтроки,
		|	ВременнаяТаблицаОтчет.ЭтоЗаголовок КАК ЭтоЗаголовок,
		|	ВременнаяТаблицаОтчет.Группа КАК Группа,
		|	ВременнаяТаблицаОтчет.НаименованиеСтрокиКырг КАК НаименованиеСтрокиКырг,
		|	ВременнаяТаблицаОтчет.Картинка КАК Картинка,
		|	ВременнаяТаблицаОтчет.ЗнакГруппы КАК ЗнакГруппы,
		|	ВременнаяТаблицаОтчет.Проход КАК Проход,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.Сумма, 0) КАК Сумма,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.СуммаУК, 0) КАК СуммаУК,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.СуммаПК, 0) КАК СуммаПК,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.СуммаНП, 0) КАК СуммаНП,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.СуммаИтг, 0) КАК СуммаИтг,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.СуммаПП, 0) КАК СуммаПП
		|ИЗ
		|	ВременнаяТаблицаОтчет КАК ВременнаяТаблицаОтчет
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаГруппировкаПоСтроке КАК ВременнаяТаблицаГруппировкаПоСтроке
		|		ПО ВременнаяТаблицаОтчет.КодСтроки = ВременнаяТаблицаГруппировкаПоСтроке.КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.Дебет КАК Дебет,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.Кредит КАК Кредит,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.Знак КАК Знак,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.Формула КАК Формула,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ВидКапитала КАК ВидКапитала,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОборотДт КАК ОборотДт,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОборотКт КАК ОборотКт,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОстатокДтН КАК ОстатокДтН,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОстатокКтН КАК ОстатокКтН,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОстатокДт КАК ОстатокДт,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОстатокКт КАК ОстатокКт,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОборотДтПП КАК ОборотДтПП,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОборотКтПП КАК ОборотКтПП,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОстатокДтПП КАК ОстатокДтПП,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОстатокКтПП КАК ОстатокКтПП,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.Сумма КАК Сумма,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаУК КАК СуммаУК,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПК КАК СуммаПК,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаНП КАК СуммаНП,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаИтг КАК СуммаИтг,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПП КАК СуммаПП,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОборотыДТКТ КАК ОборотыДТКТ,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОборотыДТКТПП КАК ОборотыДТКТПП
		|ИЗ
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс КАК ВременнаяТаблицаОсновныеЗнакМинусПлюс
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВременнаяТаблицаОтчет.Проход) КАК КоличествоПроходов
		|ИЗ
		|	ВременнаяТаблицаОтчет КАК ВременнаяТаблицаОтчет";
	Если Объект.Организация.Пустая() Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация",""); 		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаНПП",		НачалоДня(Объект.ДатаНПП));
	Запрос.УстановитьПараметр("ДатаКПП",		КонецДня(Объект.ДатаКПП));
	Запрос.УстановитьПараметр("ДатаН",			НачалоДня(Объект.ДатаН));
	Запрос.УстановитьПараметр("ДатаК",			КонецДня(ДатаДокумента));	
	Запрос.УстановитьПараметр("Настройки",		Объект.Настройки.Выгрузить());
	Запрос.УстановитьПараметр("Отчет",			Объект.Отчет.Выгрузить());
	Запрос.УстановитьПараметр("Организация",	Объект.Организация);
	Запрос.УстановитьПараметр("ПустойСчет",		ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	Запрос.УстановитьПараметр("Настройка",		Объект.Настройка);
	Запрос.УстановитьПараметр("ЕдиницаОтчета",	Объект.ЕдиницаОтчета);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Объект.Отчет.Загрузить(РезультатЗапроса[8].Выгрузить());
	Объект.Расшифровка.Загрузить(РезультатЗапроса[9].Выгрузить());
		
	// 7. Расчет групповых строк
	// 7.1. Количество проходов
	Если НЕ РезультатЗапроса[10].Пустой() Тогда 
		Выборка = РезультатЗапроса[10].Выбрать();
		Выборка.Следующий();
		Если Выборка.КоличествоПроходов = Null Тогда
			КоличествоПроходов = 0;
		Иначе 
			КоличествоПроходов = Выборка.КоличествоПроходов;
		КонецЕсли;
	КонецЕсли;	
	
	// 7.2. Знаки групповых строк
	КЦ = 1;
	Пока КЦ <= КоличествоПроходов Цикл
		ТЗГ = Объект.Отчет.Выгрузить();
		Для Каждого СТЗ Из ТЗГ Цикл 
			Если СТЗ.ЗнакГруппы = Перечисления.ПлюсМинус.Минус Тогда
				СТЗ.Сумма 	= -СТЗ.Сумма;
				СТЗ.СуммаПП	= -СТЗ.СуммаПП;
				СТЗ.СуммаУК	= -СТЗ.СуммаУК;
				СТЗ.СуммаПК	= -СТЗ.СуммаПК;
				СТЗ.СуммаНП	= -СТЗ.СуммаНП;
				СТЗ.СуммаИтг= -СТЗ.СуммаИтг;
			КонецЕсли;
		КонецЦикла;
		
		ТЗГ.Свернуть("Группа","СуммаУК,СуммаПК,СуммаНП,СуммаИтг,Сумма,СуммаПП");
		
		// 7.3. Перенос групповых Сумм и СуммПП из ТЗГ в ТЧ ОТЧЕТ
		Для Каждого СТЧ Из Объект.Отчет Цикл
			Если СТЧ.Проход = КЦ И СТЧ.КодСтроки <> "" Тогда 
				СТЗ = ТЗГ.Найти(СТЧ.КодСтроки,"Группа");
				Если СТЗ <> Неопределено Тогда 
					СТЧ.Сумма 	= СТЗ.Сумма;
					СТЧ.СуммаПП = СТЗ.СуммаПП;
					СТЧ.СуммаУК	= СТЗ.СуммаУК;
					СТЧ.СуммаПК = СТЗ.СуммаПК;
					СТЧ.СуммаНП	= СТЗ.СуммаНП;
					СТЧ.СуммаИтг= СТЗ.СуммаИтг;
				Иначе
					СТЧ.Сумма	= 0;
					СТЧ.СуммаПП	= 0;
					СТЧ.СуммаУК	= 0;
					СТЧ.СуммаПК = 0;
					СТЧ.СуммаНП	= 0;
					СТЧ.СуммаИтг= 0;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		КЦ = КЦ+1;
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура РасчитатьОПУ()
	УсловиеОрганизации = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
		|	СУММА(ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаОборот, 0)) КАК ОборотыДТКТ
		|ПОМЕСТИТЬ ВременнаяТаблицаОборотыДтКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаН, &ДатаК, , , , , , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОборотыДтКт.СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
		|	СУММА(ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаОборот, 0)) КАК ОборотыДТКТПП
		|ПОМЕСТИТЬ ВременнаяТаблицаОборотыДтКтПП
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНПП, &ДатаКПП, , , , , , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОборотыДтКт.СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Настройки.КодСтроки КАК КодСтроки,
		|	Настройки.СчетУчета КАК СчетУчета,
		|	Настройки.Дебет КАК Дебет,
		|	Настройки.Кредит КАК Кредит,
		|	Настройки.Знак КАК Знак,
		|	Настройки.Формула КАК Формула,
		|	Настройки.ВидКапитала КАК ВидКапитала
		|ПОМЕСТИТЬ ВременнаяТаблицаНастройки
		|ИЗ
		|	&Настройки КАК Настройки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Отчет.КодСтроки КАК КодСтроки,
		|	Отчет.НаименованиеСтроки КАК НаименованиеСтроки,
		|	Отчет.ЭтоЗаголовок КАК ЭтоЗаголовок,
		|	Отчет.Группа КАК Группа,
		|	Отчет.НаименованиеСтрокиКырг КАК НаименованиеСтрокиКырг,
		|	Отчет.Картинка КАК Картинка,
		|	Отчет.ЗнакГруппы КАК ЗнакГруппы,
		|	Отчет.Проход КАК Проход
		|ПОМЕСТИТЬ ВременнаяТаблицаОтчет
		|ИЗ
		|	&Отчет КАК Отчет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаНастройки.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаНастройки.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаНастройки.Дебет КАК Дебет,
		|	ВременнаяТаблицаНастройки.Кредит КАК Кредит,
		|	ВременнаяТаблицаНастройки.Знак КАК Знак,
		|	ВременнаяТаблицаНастройки.Формула КАК Формула,
		|	ВременнаяТаблицаНастройки.ВидКапитала КАК ВидКапитала,
		|	ХозрасчетныйОбороты.СуммаОборот КАК ОборотДТ,
		|	-ХозрасчетныйОбороты.СуммаОборот КАК ОборотКТ,
		|	0 КАК ОстатокДТН,
		|	0 КАК ОстатокКТН,
		|	0 КАК ОстатокДТ,
		|	0 КАК ОстатокКТ,
		|	0 КАК ОборотДТПП,
		|	0 КАК ОборотКТПП,
		|	0 КАК ОстатокДТПП,
		|	0 КАК ОстатокКТПП
		|ПОМЕСТИТЬ ВременнаяТаблицаОстаткиИОбороты
		|ИЗ
		|	ВременнаяТаблицаНастройки КАК ВременнаяТаблицаНастройки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(
		|				&ДатаН,
		|				&ДатаК,
		|				,
		|				,
		|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
		|				Организация = &Организация,
		|				КорСчет <> &Сч5999
		|					И КорСчет <> &Сч5300,
		|				) КАК ХозрасчетныйОбороты
		|		ПО ВременнаяТаблицаНастройки.СчетУчета = ХозрасчетныйОбороты.Счет
		|ГДЕ
		|	ВременнаяТаблицаНастройки.СчетУчета <> &ПустойСчет
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаНастройки.КодСтроки,
		|	ВременнаяТаблицаНастройки.СчетУчета,
		|	ВременнаяТаблицаНастройки.Дебет,
		|	ВременнаяТаблицаНастройки.Кредит,
		|	ВременнаяТаблицаНастройки.Знак,
		|	ВременнаяТаблицаНастройки.Формула,
		|	ВременнаяТаблицаНастройки.ВидКапитала,
		|	ХозрасчетныйОбороты.СуммаОборот,
		|	-ХозрасчетныйОбороты.СуммаОборот,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	ВременнаяТаблицаНастройки КАК ВременнаяТаблицаНастройки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(
		|				&ДатаН,
		|				&ДатаК,
		|				,
		|				,
		|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
		|				Организация = &Организация,
		|				КорСчет <> &Сч5999
		|					И КорСчет <> &Сч5300,
		|				) КАК ХозрасчетныйОбороты
		|		ПО ВременнаяТаблицаНастройки.СчетУчета = ХозрасчетныйОбороты.Счет
		|ГДЕ
		|	ВременнаяТаблицаНастройки.СчетУчета <> &ПустойСчет
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаНастройки.КодСтроки,
		|	ВременнаяТаблицаНастройки.СчетУчета,
		|	ВременнаяТаблицаНастройки.Дебет,
		|	ВременнаяТаблицаНастройки.Кредит,
		|	ВременнаяТаблицаНастройки.Знак,
		|	ВременнаяТаблицаНастройки.Формула,
		|	ВременнаяТаблицаНастройки.ВидКапитала,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ХозрасчетныйОбороты.СуммаОборот,
		|	-ХозрасчетныйОбороты.СуммаОборот,
		|	0,
		|	0
		|ИЗ
		|	ВременнаяТаблицаНастройки КАК ВременнаяТаблицаНастройки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(
		|				&ДатаНПП,
		|				&ДатаКПП,
		|				,
		|				,
		|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
		|				Организация = &Организация,
		|				КорСчет <> &Сч5999
		|					И КорСчет <> &Сч5300,
		|				) КАК ХозрасчетныйОбороты
		|		ПО ВременнаяТаблицаНастройки.СчетУчета = ХозрасчетныйОбороты.Счет
		|ГДЕ
		|	ВременнаяТаблицаНастройки.СчетУчета <> &ПустойСчет
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаНастройки.КодСтроки,
		|	ВременнаяТаблицаНастройки.СчетУчета,
		|	ВременнаяТаблицаНастройки.Дебет,
		|	ВременнаяТаблицаНастройки.Кредит,
		|	ВременнаяТаблицаНастройки.Знак,
		|	ВременнаяТаблицаНастройки.Формула,
		|	ВременнаяТаблицаНастройки.ВидКапитала,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ХозрасчетныйОбороты.СуммаОборот,
		|	-ХозрасчетныйОбороты.СуммаОборот,
		|	0,
		|	0
		|ИЗ
		|	ВременнаяТаблицаНастройки КАК ВременнаяТаблицаНастройки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(
		|				&ДатаНПП,
		|				&ДатаКПП,
		|				,
		|				,
		|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
		|				Организация = &Организация,
		|				КорСчет <> &Сч5999
		|					И КорСчет <> &Сч5300,
		|				) КАК ХозрасчетныйОбороты
		|		ПО ВременнаяТаблицаНастройки.СчетУчета = ХозрасчетныйОбороты.Счет
		|ГДЕ
		|	ВременнаяТаблицаНастройки.СчетУчета <> &ПустойСчет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОстаткиИОбороты.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаОстаткиИОбороты.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаОстаткиИОбороты.Дебет КАК Дебет,
		|	ВременнаяТаблицаОстаткиИОбороты.Кредит КАК Кредит,
		|	ВременнаяТаблицаОстаткиИОбороты.Знак КАК Знак,
		|	ВременнаяТаблицаОстаткиИОбороты.Формула КАК Формула,
		|	ВременнаяТаблицаОстаткиИОбороты.ВидКапитала КАК ВидКапитала,
		|	СУММА(ВременнаяТаблицаОстаткиИОбороты.ОборотДТ) КАК ОборотДт,
		|	СУММА(ВременнаяТаблицаОстаткиИОбороты.ОборотКТ) КАК ОборотКт,
		|	СУММА(ВременнаяТаблицаОстаткиИОбороты.ОстатокДТН) КАК ОстатокДтН,
		|	СУММА(ВременнаяТаблицаОстаткиИОбороты.ОстатокКТН) КАК ОстатокКтН,
		|	СУММА(ВременнаяТаблицаОстаткиИОбороты.ОстатокДТ) КАК ОстатокДт,
		|	СУММА(ВременнаяТаблицаОстаткиИОбороты.ОстатокКТ) КАК ОстатокКт,
		|	СУММА(ВременнаяТаблицаОстаткиИОбороты.ОборотДТПП) КАК ОборотДтПП,
		|	СУММА(ВременнаяТаблицаОстаткиИОбороты.ОборотКТПП) КАК ОборотКтПП,
		|	СУММА(ВременнаяТаблицаОстаткиИОбороты.ОстатокДТПП) КАК ОстатокДтПП,
		|	СУММА(ВременнаяТаблицаОстаткиИОбороты.ОстатокКТПП) КАК ОстатокКтПП,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДт)
		|				ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОборотДТ
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыКт)
		|				ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОборотКТ
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДтКт)
		|				ТОГДА ВременнаяТаблицаОборотыДтКт.ОборотыДТКТ
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоДт)
		|				ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОстатокДТ
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКт)
		|				ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОстатокКТ
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоНачальное)
		|				ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОстатокДТН - ВременнаяТаблицаОстаткиИОбороты.ОстатокКТН
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКонечное)
		|				ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОстатокДТ - ВременнаяТаблицаОстаткиИОбороты.ОстатокКТ
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Сумма,
		|	0 КАК СуммаУК,
		|	0 КАК СуммаПК,
		|	0 КАК СуммаНП,
		|	СУММА(ВЫБОР
		|			КОГДА ВЫРАЗИТЬ(&Настройка КАК Справочник.НастройкиРегламентированныхОтчетов).Родитель = ЗНАЧЕНИЕ(Справочник.НастройкиРегламентированныхОтчетов.ОИК)
		|				ТОГДА ВЫБОР
		|						КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДт)
		|							ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОборотДТ
		|						КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыКт)
		|							ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОборотКТ
		|						КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоДт)
		|							ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОстатокДТ
		|						КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКт)
		|							ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОстатокКТ
		|						КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДТКТ)
		|							ТОГДА ВременнаяТаблицаОборотыДтКт.ОборотыДТКТ
		|						КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоНачальное)
		|							ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОстатокКТН - ВременнаяТаблицаОстаткиИОбороты.ОстатокДТН
		|						КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКонечное)
		|							ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОстатокКТ - ВременнаяТаблицаОстаткиИОбороты.ОстатокДТ
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаИтг,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДт)
		|				ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОборотДТПП
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыКт)
		|				ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОборотКТПП
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДтКт)
		|				ТОГДА ВременнаяТаблицаОборотыДтКтПП.ОборотыДТКТПП
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоДт)
		|				ТОГДА ВЫБОР
		|						КОГДА ВЫРАЗИТЬ(&Настройка КАК Справочник.НастройкиРегламентированныхОтчетов).Родитель = ЗНАЧЕНИЕ(Справочник.НастройкиРегламентированныхОтчетов.ОПУ)
		|							ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОстатокДТПП
		|						ИНАЧЕ ВременнаяТаблицаОстаткиИОбороты.ОстатокДТН
		|					КОНЕЦ
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКт)
		|				ТОГДА ВЫБОР
		|						КОГДА ВЫРАЗИТЬ(&Настройка КАК Справочник.НастройкиРегламентированныхОтчетов).Родитель = ЗНАЧЕНИЕ(Справочник.НастройкиРегламентированныхОтчетов.ОПУ)
		|							ТОГДА ВременнаяТаблицаОстаткиИОбороты.ОстатокКТПП
		|						ИНАЧЕ ВременнаяТаблицаОстаткиИОбороты.ОстатокКТН
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаПП,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДтКт)
		|				ТОГДА ВременнаяТаблицаОборотыДтКт.ОборотыДТКТ
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОборотыДТКТ,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаОстаткиИОбороты.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДтКт)
		|				ТОГДА ВременнаяТаблицаОборотыДтКтПП.ОборотыДТКТПП
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОборотыДТКТПП
		|ПОМЕСТИТЬ ВременнаяТаблицаОсновныеРасчеты
		|ИЗ
		|	ВременнаяТаблицаОстаткиИОбороты КАК ВременнаяТаблицаОстаткиИОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОборотыДтКт КАК ВременнаяТаблицаОборотыДтКт
		|		ПО ВременнаяТаблицаОстаткиИОбороты.Дебет = ВременнаяТаблицаОборотыДтКт.СчетДт
		|			И ВременнаяТаблицаОстаткиИОбороты.Кредит = ВременнаяТаблицаОборотыДтКт.СчетКт
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОборотыДтКтПП КАК ВременнаяТаблицаОборотыДтКтПП
		|		ПО ВременнаяТаблицаОстаткиИОбороты.Дебет = ВременнаяТаблицаОборотыДтКтПП.СчетДт
		|			И ВременнаяТаблицаОстаткиИОбороты.Кредит = ВременнаяТаблицаОборотыДтКтПП.СчетКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаОстаткиИОбороты.КодСтроки,
		|	ВременнаяТаблицаОстаткиИОбороты.СчетУчета,
		|	ВременнаяТаблицаОстаткиИОбороты.Дебет,
		|	ВременнаяТаблицаОстаткиИОбороты.Кредит,
		|	ВременнаяТаблицаОстаткиИОбороты.Знак,
		|	ВременнаяТаблицаОстаткиИОбороты.Формула,
		|	ВременнаяТаблицаОстаткиИОбороты.ВидКапитала
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОсновныеРасчеты.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаОсновныеРасчеты.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаОсновныеРасчеты.Дебет КАК Дебет,
		|	ВременнаяТаблицаОсновныеРасчеты.Кредит КАК Кредит,
		|	ВременнаяТаблицаОсновныеРасчеты.Знак КАК Знак,
		|	ВременнаяТаблицаОсновныеРасчеты.Формула КАК Формула,
		|	ВременнаяТаблицаОсновныеРасчеты.ВидКапитала КАК ВидКапитала,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОборотДт
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОборотДт
		|	КОНЕЦ КАК ОборотДт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОборотКт
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОборотКт
		|	КОНЕЦ КАК ОборотКт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОстатокДтН
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОстатокДтН
		|	КОНЕЦ КАК ОстатокДтН,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОстатокКтН
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОстатокКтН
		|	КОНЕЦ КАК ОстатокКтН,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОстатокДт
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОстатокДт
		|	КОНЕЦ КАК ОстатокДт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОстатокКт
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОстатокКт
		|	КОНЕЦ КАК ОстатокКт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОборотДтПП
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОборотДтПП
		|	КОНЕЦ КАК ОборотДтПП,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОборотКтПП
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОборотКтПП
		|	КОНЕЦ КАК ОборотКтПП,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОстатокДтПП
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОстатокДтПП
		|	КОНЕЦ КАК ОстатокДтПП,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОстатокКтПП
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОстатокКтПП
		|	КОНЕЦ КАК ОстатокКтПП,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.Сумма
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.Сумма
		|	КОНЕЦ КАК Сумма,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.СуммаУК
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.СуммаУК
		|	КОНЕЦ КАК СуммаУК,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.СуммаПК
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.СуммаПК
		|	КОНЕЦ КАК СуммаПК,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.СуммаНП
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.СуммаНП
		|	КОНЕЦ КАК СуммаНП,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.СуммаИтг
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.СуммаИтг
		|	КОНЕЦ КАК СуммаИтг,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.СуммаПП
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.СуммаПП
		|	КОНЕЦ КАК СуммаПП,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОборотыДТКТ
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОборотыДТКТ
		|	КОНЕЦ КАК ОборотыДТКТ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОсновныеРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаОсновныеРасчеты.ОборотыДТКТПП
		|		ИНАЧЕ ВременнаяТаблицаОсновныеРасчеты.ОборотыДТКТПП
		|	КОНЕЦ КАК ОборотыДТКТПП
		|ПОМЕСТИТЬ ВременнаяТаблицаОсновныеЗнакМинусПлюс
		|ИЗ
		|	ВременнаяТаблицаОсновныеРасчеты КАК ВременнаяТаблицаОсновныеРасчеты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.КодСтроки КАК КодСтроки,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.Сумма КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.Сумма / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.Сумма / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.Сумма / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаОсновныеЗнакМинусПлюс.Сумма
		|		КОНЕЦ) КАК Сумма,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаУК КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаУК / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаУК / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаУК / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаУК
		|		КОНЕЦ) КАК СуммаУК,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПК КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПК / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПК / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПК / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПК
		|		КОНЕЦ) КАК СуммаПК,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаНП КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаНП / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаНП / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаНП / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаНП
		|		КОНЕЦ) КАК СуммаНП,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаИтг КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаИтг / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаИтг / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаИтг / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаИтг
		|		КОНЕЦ) КАК СуммаИтг,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПП КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПП / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПП / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПП / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПП
		|		КОНЕЦ) КАК СуммаПП
		|ПОМЕСТИТЬ ВременнаяТаблицаГруппировкаПоСтроке
		|ИЗ
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс КАК ВременнаяТаблицаОсновныеЗнакМинусПлюс
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОтчет.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаОтчет.НаименованиеСтроки КАК НаименованиеСтроки,
		|	ВременнаяТаблицаОтчет.ЭтоЗаголовок КАК ЭтоЗаголовок,
		|	ВременнаяТаблицаОтчет.Группа КАК Группа,
		|	ВременнаяТаблицаОтчет.НаименованиеСтрокиКырг КАК НаименованиеСтрокиКырг,
		|	ВременнаяТаблицаОтчет.Картинка КАК Картинка,
		|	ВременнаяТаблицаОтчет.ЗнакГруппы КАК ЗнакГруппы,
		|	ВременнаяТаблицаОтчет.Проход КАК Проход,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.Сумма, 0) КАК Сумма,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.СуммаУК, 0) КАК СуммаУК,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.СуммаПК, 0) КАК СуммаПК,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.СуммаНП, 0) КАК СуммаНП,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.СуммаИтг, 0) КАК СуммаИтг,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.СуммаПП, 0) КАК СуммаПП
		|ИЗ
		|	ВременнаяТаблицаОтчет КАК ВременнаяТаблицаОтчет
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаГруппировкаПоСтроке КАК ВременнаяТаблицаГруппировкаПоСтроке
		|		ПО ВременнаяТаблицаОтчет.КодСтроки = ВременнаяТаблицаГруппировкаПоСтроке.КодСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.Дебет КАК Дебет,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.Кредит КАК Кредит,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.Знак КАК Знак,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.Формула КАК Формула,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ВидКапитала КАК ВидКапитала,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОборотДт КАК ОборотДт,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОборотКт КАК ОборотКт,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОстатокДтН КАК ОстатокДтН,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОстатокКтН КАК ОстатокКтН,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОстатокДт КАК ОстатокДт,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОстатокКт КАК ОстатокКт,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОборотДтПП КАК ОборотДтПП,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОборотКтПП КАК ОборотКтПП,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОстатокДтПП КАК ОстатокДтПП,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОстатокКтПП КАК ОстатокКтПП,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.Сумма КАК Сумма,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаУК КАК СуммаУК,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПК КАК СуммаПК,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаНП КАК СуммаНП,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаИтг КАК СуммаИтг,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.СуммаПП КАК СуммаПП,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОборотыДТКТ КАК ОборотыДТКТ,
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс.ОборотыДТКТПП КАК ОборотыДТКТПП
		|ИЗ
		|	ВременнаяТаблицаОсновныеЗнакМинусПлюс КАК ВременнаяТаблицаОсновныеЗнакМинусПлюс
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодСтроки,
		|	СчетУчета";
	
	Если Объект.Организация.Пустая() Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация",""); 		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаНПП",		НачалоДня(Объект.ДатаНПП));
	Запрос.УстановитьПараметр("ДатаКПП",		КонецДня(Объект.ДатаКПП));
	Запрос.УстановитьПараметр("ДатаН",			НачалоДня(Объект.ДатаН));
	Запрос.УстановитьПараметр("ДатаК",			КонецДня(ДатаДокумента));	
	Запрос.УстановитьПараметр("Настройки",		Объект.Настройки.Выгрузить());
	Запрос.УстановитьПараметр("Отчет",			Объект.Отчет.Выгрузить());
	Запрос.УстановитьПараметр("Организация",	Объект.Организация);
	Запрос.УстановитьПараметр("ПустойСчет",		ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	Запрос.УстановитьПараметр("Сч5999",			ПланыСчетов.Хозрасчетный.СводДоходовИРасходов);
	Запрос.УстановитьПараметр("Сч5300",			ПланыСчетов.Хозрасчетный.НераспределеннаяПрибыль);	
	Запрос.УстановитьПараметр("Настройка",		Объект.Настройка);
	Запрос.УстановитьПараметр("ЕдиницаОтчета",	Объект.ЕдиницаОтчета);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Объект.Отчет.Загрузить(РезультатЗапроса[8].Выгрузить());
	Объект.Расшифровка.Загрузить(РезультатЗапроса[9].Выгрузить());
	
	// 6а. Запомним прибыль НУ и сбросим суммы строки 170
	ОтборСтрок = Новый Структура;
	ОтборСтрок.Вставить("КодСтроки", "170");
	МассивСтрок			= Объект.Отчет.НайтиСтроки(ОтборСтрок);
	НалогНаПрибыль 		= ?(МассивСтрок.Количество() > 0, МассивСтрок[0].Сумма, 0); 
	НалогНаПрибыльПП 	= ?(МассивСтрок.Количество() > 0, МассивСтрок[0].СуммаПП, 0);
	Если НЕ Объект.ПрибыльПоНУ Тогда
		Для каждого Стр170 Из МассивСтрок Цикл	
			Стр170.Сумма 		= 0;
			Стр170.СуммаПП 		= 0;
		КонецЦикла;	 
	КонецЕсли;
	
	// 7. Расчет групповых строк
	// 7.1. Количество проходов
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	МАКСИМУМ(ОтчетР.Проход) КАК Проход
	|ИЗ
	|	Документ.РегламентированныйОтчет.Отчет КАК ОтчетР
	|ГДЕ
	|	ОтчетР.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	ТЗП = Запрос.Выполнить().Выгрузить();
	КолвоПроходов = ТЗП[0].Проход;
	Если КолвоПроходов = Null Или КолвоПроходов = Неопределено Тогда
		КолвоПроходов = 0;	
	КонецЕсли;
	
	// 7.2. Знаки групповых строк
	КЦ = 1;
	Пока КЦ <= КолвоПроходов Цикл
		ТЗГ = Объект.Отчет.Выгрузить();
		Для Каждого СТЗ Из ТЗГ Цикл 
			Если СТЗ.ЗнакГруппы = Перечисления.ПлюсМинус.Минус Тогда
				СТЗ.Сумма 	= -СТЗ.Сумма;
				СТЗ.СуммаПП	= -СТЗ.СуммаПП;
				СТЗ.СуммаУК	= -СТЗ.СуммаУК;
				СТЗ.СуммаПК	= -СТЗ.СуммаПК;
				СТЗ.СуммаНП	= -СТЗ.СуммаНП;
				СТЗ.СуммаИтг= -СТЗ.СуммаИтг;
			КонецЕсли;
		КонецЦикла;
		
		ТЗГ.Свернуть("Группа","СуммаУК,СуммаПК,СуммаНП,СуммаИтг,Сумма,СуммаПП");
		
		// 7.3. Перенос групповых Сумм и СуммПП из ТЗГ в ТЧ ОТЧЕТ
		Для Каждого СТЧ Из Объект.Отчет Цикл
			Если СТЧ.Проход = КЦ И СТЧ.КодСтроки <> "" Тогда 
				СТЗ = ТЗГ.Найти(СТЧ.КодСтроки,"Группа");
				Если СТЗ <> Неопределено Тогда 
					СТЧ.Сумма 	= СТЗ.Сумма;
					СТЧ.СуммаПП = СТЗ.СуммаПП;
					СТЧ.СуммаУК	= СТЗ.СуммаУК;
					СТЧ.СуммаПК = СТЗ.СуммаПК;
					СТЧ.СуммаНП	= СТЗ.СуммаНП;
					СТЧ.СуммаИтг= СТЗ.СуммаИтг;
				Иначе
					СТЧ.Сумма	= 0;
					СТЧ.СуммаПП	= 0;
					СТЧ.СуммаУК	= 0;
					СТЧ.СуммаПК = 0;
					СТЧ.СуммаНП	= 0;
					СТЧ.СуммаИтг= 0;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		КЦ = КЦ+1;
	КонецЦикла;
	
	// 8. Замена расходов по налогу на прибыль с НУ на БУ
	Если НЕ Объект.ПрибыльПоНУ Тогда 
		// 8.1. Ставка налога на прибыль
		ДанныеУчетнойПолитики = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьДанныеУчетнойПолитикиОрганизаций(ДатаДокумента, Объект.Организация);
		СтавкаНП = ?(ЗначениеЗаполнено(ДанныеУчетнойПолитики.СтавкаНалогаНаПрибыль), ДанныеУчетнойПолитики.СтавкаНалогаНаПрибыль, 10);
				
		// 8.2. КодСтроки 170
		ОтборСтрок.Вставить("КодСтроки", "160");
		МассивСтрок		= Объект.Отчет.НайтиСтроки(ОтборСтрок);
		ПрибыльБУ 		= ?(МассивСтрок.Количество() > 0, МассивСтрок[0].Сумма, 0); 
		ПрибыльБУПП		= ?(МассивСтрок.Количество() > 0, МассивСтрок[0].СуммаПП, 0);
		
		Если ПрибыльБУ > 0 Тогда 
			НалогНаПрибыль = Окр(ПрибыльБУ * СтавкаНП / 100, 2);
		Иначе
			НалогНаПрибыль = 0;
		КонецЕсли;		
		Если ПрибыльБУПП > 0 Тогда 
			НалогНаПрибыльПП = Окр(ПрибыльБУПП * СтавкаНП / 100, 2);
		Иначе
			НалогНаПрибыльПП = 0;
		КонецЕсли;		
		
		ОтборСтрок.Вставить("КодСтроки", "170");
		МассивСтрок			= Объект.Отчет.НайтиСтроки(ОтборСтрок);
		Для каждого Стр170 Из МассивСтрок Цикл	
			Стр170.Сумма 	= НалогНаПрибыль;
			Стр170.СуммаПП 	= НалогНаПрибыльПП;
		КонецЦикла;
		
		// 8.3. КодСтроки 180		
		ОтборСтрок.Вставить("КодСтроки", "180");
		МассивСтрок			= Объект.Отчет.НайтиСтроки(ОтборСтрок);
		Для каждого Стр180 Из МассивСтрок Цикл	
			Стр180.Сумма 	= Стр180.Сумма 		- НалогНаПрибыль;
			Стр180.СуммаПП 	= Стр180.СуммаПП 	- НалогНаПрибыльПП;
		КонецЦикла;
		
		// 8.4. КодСтроки 200
		ОтборСтрок.Вставить("КодСтроки", "200");
		МассивСтрок			= Объект.Отчет.НайтиСтроки(ОтборСтрок);
		Для каждого Стр200 Из МассивСтрок Цикл	
			Стр200.Сумма 	= Стр200.Сумма 		- НалогНаПрибыль;
			Стр200.СуммаПП 	= Стр200.СуммаПП 	- НалогНаПрибыльПП;
		КонецЦикла;
		
	КонецЕсли;
				
КонецПроцедуры // РасчитатьОПУ()

&НаСервере
Процедура ЗаполнитьНастройки()

	Если НЕ Объект.Настройка.Пустая() Тогда			
		Объект.Отчет.Загрузить(Объект.Настройка.СтрокиОтчета.Выгрузить());
		
		Если Объект.Настройка.Родитель = Справочники.НастройкиРегламентированныхОтчетов.Баланс 
			Или Объект.Настройка.Родитель = Справочники.НастройкиРегламентированныхОтчетов.ОПУ Тогда 
			Объект.Настройки.Загрузить(Объект.Настройка.НастройкиСтрок.Выгрузить());
		ИначеЕсли Объект.Настройка.Родитель = Справочники.НастройкиРегламентированныхОтчетов.ДДС Тогда 
			Объект.Настройки.Загрузить(Объект.Настройка.НастройкиСтрокОДДС.Выгрузить());
		ИначеЕсли Объект.Настройка.Родитель = Справочники.НастройкиРегламентированныхОтчетов.ОИК Тогда 
			Объект.Настройки.Загрузить(Объект.Настройка.НастройкиСтрокОИК.Выгрузить());
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

//&НаСервере
//Процедура РедактироватьСписокКомандПечати()
//	ГруппаНастройки = ГруппаНастройки(Объект.Настройка);
//	ЭтоБаланс 	= ГруппаНастройки = Справочники.НастройкиРегламентированныхОтчетов.Баланс;
//	ЭтоОПУ 		= ГруппаНастройки = Справочники.НастройкиРегламентированныхОтчетов.ОПУ;
//	ЭтоОИК 		= ГруппаНастройки = Справочники.НастройкиРегламентированныхОтчетов.ОИК;
//	ЭтоДДС 		= ГруппаНастройки = Справочники.НастройкиРегламентированныхОтчетов.ДДС;
//	
//	//ГруппаВажныеКоманды =ЭтаФорма.Элементы.ГруппаВажныеКоманды.ПодчиненныеЭлементы.ПодменюПечать.ПодчиненныеЭлементы;
//	//
//	////Инициализация команд на форме
//	//Для каждого ЭлементКоманда Из ГруппаВажныеКоманды Цикл
//	//	ЭлементКоманда.Видимость = Истина;
//	//КонецЦикла;
//	//
//	//АдресКомандПечатиВоВременномХранилище = "АдресКомандПечатиВоВременномХранилище";
//	//КомандаФормы = ЭтаФорма.Команды.Найти(АдресКомандПечатиВоВременномХранилище);
//	//ОбщийСписокКомандПечатиФормы = ПолучитьИзВременногоХранилища(КомандаФормы.Действие);
//	//
//	//Для Каждого Команда Из ОбщийСписокКомандПечатиФормы Цикл
//	//	Для каждого КомандаНаФорме Из ГруппаВажныеКоманды Цикл
//	//		Если КомандаНаФорме.ИмяКоманды = Команда.ИмяКомандыНаФорме И Команда.Идентификатор = "ПечататьТитулБаланс" Тогда
//	//			КомандаНаФорме.Видимость = ЭтоБаланс;
//	//		ИначеЕсли КомандаНаФорме.ИмяКоманды = Команда.ИмяКомандыНаФорме И Команда.Идентификатор = "ПечататьБаланс" Тогда
//	//			КомандаНаФорме.Видимость = ЭтоБаланс;
//	//		ИначеЕсли КомандаНаФорме.ИмяКоманды = Команда.ИмяКомандыНаФорме И Команда.Идентификатор = "ПечататьОПУ" Тогда
//	//			КомандаНаФорме.Видимость = ЭтоОПУ;
//	//		ИначеЕсли КомандаНаФорме.ИмяКоманды = Команда.ИмяКомандыНаФорме И Команда.Идентификатор = "ПечататьОИК" Тогда
//	//			КомандаНаФорме.Видимость = ЭтоОИК;
//	//		ИначеЕсли КомандаНаФорме.ИмяКоманды = Команда.ИмяКомандыНаФорме И Команда.Идентификатор = "ПечататьДДС" Тогда
//	//			КомандаНаФорме.Видимость = ЭтоДДС;				
//	//		КонецЕсли;                                                                     
//	//	КонецЦикла;
//	//КонецЦикла;
//		
//КонецПроцедуры

&НаСервере
Процедура РассчитатьОИКНаСервере()
	НачалоПериода 				= НачалоГода(Объект.ДатаН);
	КонецПериода 				= КонецГода(ДатаДокумента);
	НачалоПредыдущегоПериода 	= НачалоГода(НачалоГода(Объект.ДатаН)-1);
	КонецПредыдущегоПериода 	= КонецГода(НачалоГода(Объект.ДатаН)-1);	
	
	ТЗ = Объект.Настройка.Отчет.Выгрузить();
	Объект.ОтчетОИК.Загрузить(ТЗ);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиРегламентированныхОтчетовНастройки.КодСтроки КАК КодСтроки,
		|	НастройкиРегламентированныхОтчетовНастройки.СчетУчета КАК СчетУчета,
		|	НастройкиРегламентированныхОтчетовНастройки.Знак КАК Знак,
		|	НастройкиРегламентированныхОтчетовНастройки.Формула КАК Формула,
		|	НастройкиРегламентированныхОтчетовНастройки.ВидКапитала КАК ВидКапитала,
		|	Остатки.СуммаОборотДт КАК ОборотДТ,
		|	Остатки.СуммаОборотКт КАК ОборотКТ,
		|	Остатки.СуммаНачальныйОстатокДт КАК ОстатокДТН,
		|	Остатки.СуммаНачальныйОстатокКт КАК ОстатокКТН,
		|	Остатки.СуммаКонечныйОстатокДт КАК ОстатокДТ,
		|	Остатки.СуммаКонечныйОстатокКт КАК ОстатокКТ,
		|	0 КАК ОборотДТПП,
		|	0 КАК ОборотКТПП,
		|	0 КАК ОстатокДТПП,
		|	0 КАК ОстатокКТПП
		|ПОМЕСТИТЬ ВременнаяТаблицаНастройки
		|ИЗ
		|	Справочник.НастройкиРегламентированныхОтчетов.НастройкиСтрокОИК КАК НастройкиРегламентированныхОтчетовНастройки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаН, &ДатаК, , , , , Организация = &Организация) КАК Остатки
		|		ПО НастройкиРегламентированныхОтчетовНастройки.СчетУчета = Остатки.Счет
		|ГДЕ
		|	НастройкиРегламентированныхОтчетовНастройки.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НастройкиРегламентированныхОтчетовНастройки.КодСтроки,
		|	НастройкиРегламентированныхОтчетовНастройки.СчетУчета,
		|	НастройкиРегламентированныхОтчетовНастройки.Знак,
		|	НастройкиРегламентированныхОтчетовНастройки.Формула,
		|	НастройкиРегламентированныхОтчетовНастройки.ВидКапитала,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	Остатки.СуммаОборотДт,
		|	Остатки.СуммаОборотКт,
		|	Остатки.СуммаКонечныйОстатокДт,
		|	Остатки.СуммаКонечныйОстатокКт
		|ИЗ
		|	Справочник.НастройкиРегламентированныхОтчетов.НастройкиСтрокОИК КАК НастройкиРегламентированныхОтчетовНастройки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНПП, &ДатаКПП, , , , , Организация = &Организация) КАК Остатки
		|		ПО НастройкиРегламентированныхОтчетовНастройки.СчетУчета = Остатки.Счет
		|ГДЕ
		|	НастройкиРегламентированныхОтчетовНастройки.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаНастройки.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаНастройки.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаНастройки.Знак КАК Знак,
		|	ВременнаяТаблицаНастройки.Формула КАК Формула,
		|	ВременнаяТаблицаНастройки.ВидКапитала КАК ВидКапитала,
		|	СУММА(ВременнаяТаблицаНастройки.ОборотДТ) КАК ОборотДТ,
		|	СУММА(ВременнаяТаблицаНастройки.ОборотКТ) КАК ОборотКТ,
		|	СУММА(ВременнаяТаблицаНастройки.ОстатокДТН) КАК ОстатокДТН,
		|	СУММА(ВременнаяТаблицаНастройки.ОстатокКТН) КАК ОстатокКТН,
		|	СУММА(ВременнаяТаблицаНастройки.ОстатокДТ) КАК ОстатокДТ,
		|	СУММА(ВременнаяТаблицаНастройки.ОстатокКТ) КАК ОстатокКТ,
		|	СУММА(ВременнаяТаблицаНастройки.ОборотДТПП) КАК ОборотДТПП,
		|	СУММА(ВременнаяТаблицаНастройки.ОборотКТПП) КАК ОборотКТПП,
		|	СУММА(ВременнаяТаблицаНастройки.ОстатокДТПП) КАК ОстатокДТПП,
		|	СУММА(ВременнаяТаблицаНастройки.ОстатокКТПП) КАК ОстатокКТПП
		|ИЗ
		|	ВременнаяТаблицаНастройки КАК ВременнаяТаблицаНастройки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаНастройки.КодСтроки,
		|	ВременнаяТаблицаНастройки.СчетУчета,
		|	ВременнаяТаблицаНастройки.Знак,
		|	ВременнаяТаблицаНастройки.Формула,
		|	ВременнаяТаблицаНастройки.ВидКапитала
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодСтроки";
				   
	Запрос.УстановитьПараметр("ДатаН",		НачалоПериода);	 //Дата
	Запрос.УстановитьПараметр("ДатаНПП",	НачалоПредыдущегоПериода);	 //Дата
	Запрос.УстановитьПараметр("ДатаК",		КонецПериода);	 //Дата
	Запрос.УстановитьПараметр("ДатаКПП",	КонецПредыдущегоПериода);	 //Дата	
	Запрос.УстановитьПараметр("Организация",Объект.Организация);	 //Организации
	Запрос.УстановитьПараметр("ПустойСчет",	ПланыСчетов.Хозрасчетный.ПустаяСсылка());	 //Типовой план счетов бухгалтерского учета
	Запрос.УстановитьПараметр("Ссылка",		Объект.Настройка);	 //Настройки регламентных отчетов
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
	  	ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("КодСтроки", 		Выборка.КодСтроки);
		ПараметрыОтбора.Вставить("ИмяКолонки", 	Выборка.ИмяКолонки);
		
		МассивСТЧ =  Объект.ОтчетОИК.НайтиСтроки(ПараметрыОтбора);
		
		Если МассивСТЧ.Количество() > 0 Тогда 
			СТЧ = МассивСТЧ[0];	
		Иначе
			Продолжить;			
		КонецЕсли;
		
		СтруктураДанных = Новый Структура;
		СтруктураДанных.Вставить("СТЧ", 			СТЧ);
		СтруктураДанных.Вставить("Выборка", 		Выборка);
		СтруктураДанных.Вставить("НачалоПериода", 	НачалоПериода);
		СтруктураДанных.Вставить("КонецПериода", 	ДатаДокумента);
		СтруктураДанных.Вставить("НачалоПредыдущегоПериода", 	НачалоПредыдущегоПериода);
		СтруктураДанных.Вставить("КонецПредыдущегоПериода", 	КонецПредыдущегоПериода);
		
		ЗаполнитьСтрокуОИК(СтруктураДанных);
		
		СТЧ.ИтогоКапиталОтосящийсяКСобственникамКомпании = СТЧ.АкционерныйКапитал + СТЧ.ДополнительноОплаченныйКапитал + СТЧ.ОбщийРезерв 
		+ СТЧ.РезервПоПереоценкеОсновныхСредств + СТЧ.РезервПоПереоценкеИнвестиционногоИмущества 
		+ СТЧ.РезервПоХеджированиюПотокоаДенежныхСредств + СТЧ.РезеврПоПересчетуЗарубежнойДеятельности
		+ СТЧ.РезеврПоПереоценкеФинансовыхАктивов + СТЧ.НераспределеннаяПрибыль;
		
		СТЧ.Итого = СТЧ.ИтогоКапиталОтосящийсяКСобственникамКомпании + СТЧ.НеконтрольнаяДоляУчастия;
		
	КонецЦикла;
	
	ОтчетЕГ = Объект.ОтчетОИК.Выгрузить();
	
	ОтчетЕГ.ЗаполнитьЗначения("", "ИмяКолонки");
	
	ОтчетЕГ.Свернуть("НаименованиеСтроки,ЭтоЗаголовок,Группа,ЗнакГруппы,ИмяКолонки,КодСтроки",
	"АкционерныйКапитал,ДополнительноОплаченныйКапитал,ОбщийРезерв,РезервПоПереоценкеОсновныхСредств,РезервПоПереоценкеИнвестиционногоИмущества,РезервПоХеджированиюПотокоаДенежныхСредств,
	|РезеврПоПересчетуЗарубежнойДеятельности,РезеврПоПереоценкеФинансовыхАктивов,НераспределеннаяПрибыль,ИтогоКапиталОтосящийсяКСобственникамКомпании,НеконтрольнаяДоляУчастия,Итого");
	
	Объект.ОтчетОИК.Загрузить(ОтчетЕГ);
	
	ОтчетЕГ.Очистить();	
	Для Счетчик = 0 По 2 Цикл
		НоваяСтрока = ОтчетЕГ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Объект.ОтчетОИК[Счетчик]);
	КонецЦикла;
	ОтчетЕГ.Свернуть(,
	"АкционерныйКапитал,ДополнительноОплаченныйКапитал,ОбщийРезерв,РезервПоПереоценкеОсновныхСредств,РезервПоПереоценкеИнвестиционногоИмущества,РезервПоХеджированиюПотокоаДенежныхСредств,
	|РезеврПоПересчетуЗарубежнойДеятельности,РезеврПоПереоценкеФинансовыхАктивов,НераспределеннаяПрибыль,ИтогоКапиталОтосящийсяКСобственникамКомпании,НеконтрольнаяДоляУчастия,Итого");
	ЗаполнитьЗначенияСвойств(Объект.ОтчетОИК[3], ОтчетЕГ[0],	"АкционерныйКапитал,ДополнительноОплаченныйКапитал,ОбщийРезерв,РезервПоПереоценкеОсновныхСредств,РезервПоПереоценкеИнвестиционногоИмущества,РезервПоХеджированиюПотокоаДенежныхСредств,
	|РезеврПоПересчетуЗарубежнойДеятельности,РезеврПоПереоценкеФинансовыхАктивов,НераспределеннаяПрибыль,ИтогоКапиталОтосящийсяКСобственникамКомпании,НеконтрольнаяДоляУчастия,Итого");
	
	ОтчетЕГ.Очистить();
	Для Счетчик = 3 По 13 Цикл
		НоваяСтрока = ОтчетЕГ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Объект.ОтчетОИК[Счетчик]);
	КонецЦикла;
	ОтчетЕГ.Свернуть(,
	"АкционерныйКапитал,ДополнительноОплаченныйКапитал,ОбщийРезерв,РезервПоПереоценкеОсновныхСредств,РезервПоПереоценкеИнвестиционногоИмущества,РезервПоХеджированиюПотокоаДенежныхСредств,
	|РезеврПоПересчетуЗарубежнойДеятельности,РезеврПоПереоценкеФинансовыхАктивов,НераспределеннаяПрибыль,ИтогоКапиталОтосящийсяКСобственникамКомпании,НеконтрольнаяДоляУчастия,Итого");
	ЗаполнитьЗначенияСвойств(Объект.ОтчетОИК[14], ОтчетЕГ[0],	"АкционерныйКапитал,ДополнительноОплаченныйКапитал,ОбщийРезерв,РезервПоПереоценкеОсновныхСредств,РезервПоПереоценкеИнвестиционногоИмущества,РезервПоХеджированиюПотокоаДенежныхСредств,
	|РезеврПоПересчетуЗарубежнойДеятельности,РезеврПоПереоценкеФинансовыхАктивов,НераспределеннаяПрибыль,ИтогоКапиталОтосящийсяКСобственникамКомпании,НеконтрольнаяДоляУчастия,Итого");
	
	ОтчетЕГ.Очистить();
	Для Счетчик = 14 По 20 Цикл
		НоваяСтрока = ОтчетЕГ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Объект.ОтчетОИК[Счетчик]);
	КонецЦикла;
	ОтчетЕГ.Свернуть(,
	"АкционерныйКапитал,ДополнительноОплаченныйКапитал,ОбщийРезерв,РезервПоПереоценкеОсновныхСредств,РезервПоПереоценкеИнвестиционногоИмущества,РезервПоХеджированиюПотокоаДенежныхСредств,
	|РезеврПоПересчетуЗарубежнойДеятельности,РезеврПоПереоценкеФинансовыхАктивов,НераспределеннаяПрибыль,ИтогоКапиталОтосящийсяКСобственникамКомпании,НеконтрольнаяДоляУчастия,Итого");
	ЗаполнитьЗначенияСвойств(Объект.ОтчетОИК[21], ОтчетЕГ[0],	"АкционерныйКапитал,ДополнительноОплаченныйКапитал,ОбщийРезерв,РезервПоПереоценкеОсновныхСредств,РезервПоПереоценкеИнвестиционногоИмущества,РезервПоХеджированиюПотокоаДенежныхСредств,
	|РезеврПоПересчетуЗарубежнойДеятельности,РезеврПоПереоценкеФинансовыхАктивов,НераспределеннаяПрибыль,ИтогоКапиталОтосящийсяКСобственникамКомпании,НеконтрольнаяДоляУчастия,Итого");	
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьСтрокуОИК(СтруктураДанных)
	СТЧ 			= СтруктураДанных.СТЧ;
	Выборка 		= СтруктураДанных.Выборка;
	КонецПериода 	= СтруктураДанных.КонецПериода;
	НачалоПредыдущегоПериода 	= СтруктураДанных.НачалоПредыдущегоПериода;
	КонецПредыдущегоПериода 	= СтруктураДанных.КонецПредыдущегоПериода;
	
	Если Выборка.КодСтроки < "016" Тогда
		Если Выборка.Формула = Перечисления.Формулы.ОборотыДт Тогда 	
			ОбщегоНазначения.ВыполнитьВБезопасномРежиме("СТЧ." + Выборка.ИмяКолонки + "= Выборка.ОборотДТПП");
		ИначеЕсли Выборка.Формула = Перечисления.Формулы.ОборотыКт Тогда 	
			ОбщегоНазначения.ВыполнитьВБезопасномРежиме("СТЧ." + Выборка.ИмяКолонки + "= Выборка.ОборотКТПП");
		ИначеЕсли Выборка.Формула = Перечисления.Формулы.СальдоДт Тогда 	
			ОбщегоНазначения.ВыполнитьВБезопасномРежиме("СТЧ." + Выборка.ИмяКолонки + "= Выборка.ОстатокДТПП");
		ИначеЕсли Выборка.Формула = Перечисления.Формулы.СальдоКт Тогда 	
			ОбщегоНазначения.ВыполнитьВБезопасномРежиме("СТЧ." + Выборка.ИмяКолонки + "= Выборка.ОстатокКТПП");
		КонецЕсли;
		
		Если Выборка.КодСтроки = "001" Тогда
			СТЧ.НаименованиеСтроки = НСтр("ru = 'Баланс по состоянию на'") + " " + Формат(НачалоПредыдущегоПериода, "ДЛФ=DD");
		ИначеЕсли Выборка.КодСтроки = "004" Тогда
			СТЧ.НаименованиеСтроки = НСтр("ru = 'Скорректированый баланс по состоянию на'") + " " + Формат(НачалоПредыдущегоПериода, "ДЛФ=DD");			
		ИначеЕсли Выборка.КодСтроки = "015" Тогда
			СТЧ.НаименованиеСтроки = НСтр("ru = 'Баланс по состоянию на'") + " " + Формат(КонецПредыдущегоПериода, "ДЛФ=DD");					
		КонецЕсли;
			
	Иначе
		Если Выборка.Формула = Перечисления.Формулы.ОборотыДт Тогда 	
			ОбщегоНазначения.ВыполнитьВБезопасномРежиме("СТЧ." + Выборка.ИмяКолонки + "= Выборка.ОборотДТ");
		ИначеЕсли Выборка.Формула = Перечисления.Формулы.ОборотыКт Тогда 	
			ОбщегоНазначения.ВыполнитьВБезопасномРежиме("СТЧ." + Выборка.ИмяКолонки + "= Выборка.ОборотКт");
		ИначеЕсли Выборка.Формула = Перечисления.Формулы.СальдоДт Тогда 	
			ОбщегоНазначения.ВыполнитьВБезопасномРежиме("СТЧ." + Выборка.ИмяКолонки + "= Выборка.ОстатокДт");
		ИначеЕсли Выборка.Формула = Перечисления.Формулы.СальдоКт Тогда 	
			ОбщегоНазначения.ВыполнитьВБезопасномРежиме("СТЧ." + Выборка.ИмяКолонки + "= Выборка.ОстатокКт");
		КонецЕсли;			
		
		Если Выборка.КодСтроки = "022" Тогда
			СТЧ.НаименованиеСтроки = НСтр("ru = 'Баланс по состоянию на'") + " " + Формат(КонецПериода, "ДЛФ=DD");				
		КонецЕсли;	
	КонецЕсли;	
		
КонецФункции

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

