#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПроцедурыПроведенияДокумента

// Формирует таблицу значений, содержащую данные для проведения по регистру бухгалтерии Хозрасчетный.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаХозрасчетный(ДокументСсылка,СтруктураДополнительныеСвойства, Отказ)
	
	// Подготовка данных	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Регистратор,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	&Содержание КАК Содержание,
		|	ВременнаяТаблицаШапка.Склад КАК Склад
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""Товары"" КАК ИмяСписка,
		|	&СинонимСписка КАК СинонимСписка,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаТовары.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаТовары.Номенклатура,
		|	ВременнаяТаблицаШапка.Склад КАК Склад,
		|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
		|	0 КАК Себестоимость,
		|	ВременнаяТаблицаТовары.Количество,
		|	ВременнаяТаблицаТовары.СчетСебестоимости КАК КорСчетСписания,
		|	ВременнаяТаблицаТовары.СтатьяРасхода КАК КорСубконто1,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто2,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто3
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	Запрос.УстановитьПараметр("Содержание", НСтр("ru = 'Списание товаров'")); 
	Запрос.УстановитьПараметр("СинонимСписка", НСтр("ru = 'Товары'"));
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизиты = МассивРезультатов[0].Выгрузить();
	ТаблицаТовары = МассивРезультатов[1].Выгрузить();
	
	ТаблицаСписанныеТовары = УчетТоваров.ПодготовитьТаблицуСписанныеТовары(ТаблицаТовары, ТаблицаРеквизиты, Отказ);
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРеквизиты", ТаблицаРеквизиты);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСписанныеТовары", ТаблицаСписанныеТовары);

	// 1. Доход от реализации товаров
	// 2. НДС товары
	// 3. НСП товары
	// 4. Скидки товары
	
	// 5. Доход от реализации услуг
	// 6. НДС услуги
	// 7. НСП услуги
	// 8. Скидки услуги
	
	// 9. Доход от реализации ОС
	// 10. НДС ОС
	// 11. НСП ОС
	// 12. Скидки ОС
	
	// ОС 
	// 13. Распределение расходов по амортизации за месяц
	// 14. Списание амортизации
	// 15. Списание остаточной стоимости
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	1 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетов КАК СчетДт,
		|	ВременнаяТаблицаТовары.СчетДохода КАК СчетКт,
		|	ВременнаяТаблицаШапка.Контрагент КАК ЗначениеСубконтоДт1,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК ЗначениеСубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК ЗначениеСубконтоДт3,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Всего - ВременнаяТаблицаТовары.СуммаНДС - ВременнаяТаблицаТовары.СуммаНСП) * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)) КАК Сумма,
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаДт,
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаКт,
		|	ВременнаяТаблицаТовары.Всего - ВременнаяТаблицаТовары.СуммаНДС - ВременнаяТаблицаТовары.СуммаНСП КАК ВалютнаяСуммаДт,
		|	ВременнаяТаблицаТовары.Всего - ВременнаяТаблицаТовары.СуммаНДС - ВременнаяТаблицаТовары.СуммаНСП КАК ВалютнаяСуммаКт,
		|	ВЫРАЗИТЬ(&СодержаниеТоварыДоход КАК СТРОКА(150)) КАК Содержание,
		|	0 КАК КоличествоДт,
		|	0 КАК КоличествоКт,
		|	НЕОПРЕДЕЛЕНО КАК СпособОтраженияРасходовПоАмортизации,
		|	ЛОЖЬ КАК РаспределятьПоКоэффициентам
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.Всего = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	ВременнаяТаблицаШапка.СчетУчетаНДС,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаТовары.СуммаНДС * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаТовары.СуммаНДС,
		|	ВременнаяТаблицаТовары.СуммаНДС,
		|	&СодержаниеТоварыНДС,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ЛОЖЬ
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.СуммаНДС = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	ВременнаяТаблицаШапка.СчетУчетаНСП,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаТовары.СуммаНСП * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаТовары.СуммаНСП,
		|	ВременнаяТаблицаТовары.СуммаНСП,
		|	&СодержаниеТоварыНСП,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ЛОЖЬ
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.СуммаНСП = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	4,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетУчетаСкидок,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаТовары.СуммаСкидки * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаТовары.СуммаСкидки,
		|	ВременнаяТаблицаТовары.СуммаСкидки,
		|	&СодержаниеТоварыСкидка,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ЛОЖЬ
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.СуммаСкидки = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	5,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	ВременнаяТаблицаУслуги.СчетДохода,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВЫРАЗИТЬ((ВременнаяТаблицаУслуги.Всего - ВременнаяТаблицаУслуги.СуммаНДС - ВременнаяТаблицаУслуги.СуммаНСП) * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаУслуги.Всего - ВременнаяТаблицаУслуги.СуммаНДС - ВременнаяТаблицаУслуги.СуммаНСП,
		|	ВременнаяТаблицаУслуги.Всего - ВременнаяТаблицаУслуги.СуммаНДС - ВременнаяТаблицаУслуги.СуммаНСП,
		|	&СодержаниеУслугиДоход,
		|	0,
		|	0,
		|	НЕОПРЕДЕЛЕНО,
		|	ЛОЖЬ
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаУслуги.Всего = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	6,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	ВременнаяТаблицаШапка.СчетУчетаНДС,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаУслуги.СуммаНДС * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаУслуги.СуммаНДС,
		|	ВременнаяТаблицаУслуги.СуммаНДС,
		|	&СодержаниеУслугиНДС,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ЛОЖЬ
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаУслуги.СуммаНДС = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	7,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	ВременнаяТаблицаШапка.СчетУчетаНСП,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаУслуги.СуммаНСП * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаУслуги.СуммаНСП,
		|	ВременнаяТаблицаУслуги.СуммаНСП,
		|	&СодержаниеУслугиНСП,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ЛОЖЬ
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаУслуги.СуммаНСП = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	8,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетУчетаСкидок,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаУслуги.СуммаСкидки * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаУслуги.СуммаСкидки,
		|	ВременнаяТаблицаУслуги.СуммаСкидки,
		|	&СодержаниеУслугиСкидка,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ЛОЖЬ
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаУслуги.СуммаСкидки = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	9,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	ВременнаяТаблицаОС.СчетДохода,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВЫРАЗИТЬ((ВременнаяТаблицаОС.Всего - ВременнаяТаблицаОС.СуммаНДС - ВременнаяТаблицаОС.СуммаНСП) * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаОС.Всего - ВременнаяТаблицаОС.СуммаНДС - ВременнаяТаблицаОС.СуммаНСП,
		|	ВременнаяТаблицаОС.Всего - ВременнаяТаблицаОС.СуммаНДС - ВременнаяТаблицаОС.СуммаНСП,
		|	&СодержаниеОСДоход,
		|	0,
		|	0,
		|	НЕОПРЕДЕЛЕНО,
		|	ЛОЖЬ
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаОС.Всего = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	10,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	ВременнаяТаблицаШапка.СчетУчетаНДС,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаОС.СуммаНДС * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаОС.СуммаНДС,
		|	ВременнаяТаблицаОС.СуммаНДС,
		|	&СодержаниеОСНДС,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ЛОЖЬ
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаОС.СуммаНДС = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	11,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	ВременнаяТаблицаШапка.СчетУчетаНСП,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаОС.СуммаНСП * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаОС.СуммаНСП,
		|	ВременнаяТаблицаОС.СуммаНСП,
		|	&СодержаниеОСНСП,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ЛОЖЬ
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаОС.СуммаНСП = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	12,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетУчетаСкидок,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаОС.СуммаСкидки * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаОС.СуммаСкидки,
		|	ВременнаяТаблицаОС.СуммаСкидки,
		|	&СодержаниеОССкидка,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ЛОЖЬ
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаОС.СуммаСкидки = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	13,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаОС.СчетУчета.ПарныйСчет,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаОС.ОсновноеСредство,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаОС.АмортизацияЗаМесяц,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	0,
		|	0,
		|	&СодержаниеРасходыПоАмортизации,
		|	0,
		|	0,
		|	ВременнаяТаблицаОС.СпособОтраженияРасходовПоАмортизации,
		|	ИСТИНА
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаОС.АмортизацияЗаМесяц = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	14,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаОС.СчетУчета.ПарныйСчет,
		|	ВременнаяТаблицаОС.СчетУчета,
		|	ВременнаяТаблицаОС.ОсновноеСредство,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаОС.ОсновноеСредство,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаОС.ЛиквидационнаяСтоимость,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	0,
		|	0,
		|	&СодержаниеСписаниеАмортизации,
		|	0,
		|	0,
		|	НЕОПРЕДЕЛЕНО,
		|	ЛОЖЬ
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаОС.НакопленнаяАмортизация + ВременнаяТаблицаОС.АмортизацияЗаМесяц = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	15,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаОС.СчетРасхода,
		|	ВременнаяТаблицаОС.СчетУчета,
		|	ВременнаяТаблицаШапка.СтатьяЗатрат,
		|	ВременнаяТаблицаШапка.Подразделение,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаОС.ОсновноеСредство,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаОС.НакопленнаяАмортизация - ВременнаяТаблицаОС.АмортизацияЗаМесяц,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	0,
		|	0,
		|	&СодержаниеСписаниеОстаточнойСтоимости,
		|	0,
		|	0,
		|	НЕОПРЕДЕЛЕНО,
		|	ЛОЖЬ
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаОС.ПервоначальнаяСтоимость - ВременнаяТаблицаОС.НакопленнаяАмортизация - ВременнаяТаблицаОС.АмортизацияЗаМесяц > 0";
	Запрос.УстановитьПараметр("СодержаниеТоварыДоход", НСтр("ru = 'Доход от реализации товаров'")); 
	Запрос.УстановитьПараметр("СодержаниеТоварыНДС", НСтр("ru = 'НДС (товары)'")); 
	Запрос.УстановитьПараметр("СодержаниеТоварыНСП", НСтр("ru = 'НСП (товары)'")); 
	Запрос.УстановитьПараметр("СодержаниеТоварыСкидка", НСтр("ru = 'Скидка на товары'")); 
	
	Запрос.УстановитьПараметр("СодержаниеУслугиДоход", НСтр("ru = 'Доход от реализации услуг'")); 
	Запрос.УстановитьПараметр("СодержаниеУслугиНДС", НСтр("ru = 'НДС (услуги)'")); 
	Запрос.УстановитьПараметр("СодержаниеУслугиНСП", НСтр("ru = 'НСП (услуги)'")); 
	Запрос.УстановитьПараметр("СодержаниеУслугиСкидка", НСтр("ru = 'Скидка на услуги'")); 
	
	Запрос.УстановитьПараметр("СодержаниеОСДоход", НСтр("ru = 'Доход от реализации ОС'")); 
	Запрос.УстановитьПараметр("СодержаниеОСНДС", НСтр("ru = 'НДС (ОС)'")); 
	Запрос.УстановитьПараметр("СодержаниеОСНСП", НСтр("ru = 'НСП (ОС)'")); 
	Запрос.УстановитьПараметр("СодержаниеОССкидка", НСтр("ru = 'Скидка на ОС'")); 

	Запрос.УстановитьПараметр("СодержаниеРасходыПоАмортизации", НСтр("ru = 'Расходы по амортизации ОС за месяц'")); 
	Запрос.УстановитьПараметр("СодержаниеСписаниеАмортизации", НСтр("ru = 'Списание стоимости ОС'")); 
	Запрос.УстановитьПараметр("СодержаниеСписаниеОстаточнойСтоимости", НСтр("ru = 'Расходы по амортизации'")); 
	РезультатЗапроса = Запрос.Выполнить();
	
	ТЗ = РезультатЗапроса.Выгрузить();
	
	// Добавляем колонки в ТЗ для записи в рег. бухг.
	ТЗ.Колонки.Добавить("СубконтоДт1");
	ТЗ.Колонки.Добавить("СубконтоДт2");
	ТЗ.Колонки.Добавить("СубконтоДт3");
	
	КэшДанныхСпрСпособыОтрРасхПоАморт = Новый Соответствие();
	
	// Создаем результирующую ТЗ с теми же колонками, что и в запросе.
	ТаблицаХозрасчетный = ТЗ.СкопироватьКолонки();
	
	// Данный цикл перебирает строки ТЗ, полученные из запроса.
	//
	// 1. Если накопленная амортизация не равна нуля, тогда по данной строке идет проверка способа отражения 
	// расходов по амортизации. Обращаемся к табличной части данного справочника и в зависимости от количества 
	// строк в ТЧ строка ТЗ дублируется и записывается в результирующую ТЗ. Записывается счет затрат (СчетДт) и в 
	// зависимости от коэффициентов в строках ТЧ распределяется сумма. А также заполняются созданные колонки "СубконтоДт".
	//
	// 2. В остальных случаях распределять сумму по коэффициенам не нужно, поэтому мы просто копируем строку 
	// в исходную ТЗ и заполняем созданные колонки "СубконтоДт" значениями из колонок "ЗначениеСубконтоДт"
	Для Каждого СтрокаТаблицыЗначений Из ТЗ Цикл
		
		Если НЕ СтрокаТаблицыЗначений.РаспределятьПоКоэффициентам Тогда
			СтрокаРезультирующейТЗ = ТаблицаХозрасчетный.Добавить();			
			ЗаполнитьЗначенияСвойств(СтрокаРезультирующейТЗ, СтрокаТаблицыЗначений);
			
			СтрокаРезультирующейТЗ.СубконтоДт1 = СтрокаРезультирующейТЗ.ЗначениеСубконтоДт1;
			СтрокаРезультирующейТЗ.СубконтоДт2 = СтрокаРезультирующейТЗ.ЗначениеСубконтоДт2;
			СтрокаРезультирующейТЗ.СубконтоДт3 = СтрокаРезультирующейТЗ.ЗначениеСубконтоДт3;
			
			Продолжить;
		КонецЕсли;
		
		// В соответствие записывается: 
		// Ключ - ссылка на справочник "СпособыОтраженияРасходовПоАмортизации".
		// Значение - ТЗ из запроса к данному элементу справочника.
		// При каждом шаге основного цикла (перебор ТЗ из данных документа) проверяется наличие строки соответствия 
		// по ссылке на справочник, чтобы не обращаться к запросу каждый раз.
		ТЗСпособаОтражения = КэшДанныхСпрСпособыОтрРасхПоАморт.Получить(СтрокаТаблицыЗначений.СпособОтраженияРасходовПоАмортизации);
		
		Если ТЗСпособаОтражения = Неопределено Тогда
			ТЗСпособаОтражения = УправлениеВнеоборотнымиАктивамиПовтИсп.СпособыОтраженияРасходовПоАмортизации(СтрокаТаблицыЗначений.СпособОтраженияРасходовПоАмортизации); 
			КэшДанныхСпрСпособыОтрРасхПоАморт.Вставить(СтрокаТаблицыЗначений.СпособОтраженияРасходовПоАмортизации, ТЗСпособаОтражения);
		КонецЕсли;
		
		МассивКоэфициентов = ТЗСпособаОтражения.ВыгрузитьКолонку("Коэффициент");
		
		МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаТаблицыЗначений.Сумма, МассивКоэфициентов, 2);
		
		Если МассивСумм = Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		
		ИндексМассива = 0;
		Для Каждого СтрокаМассива Из МассивСумм Цикл
			СтрокаРезультирующейТЗ = ТаблицаХозрасчетный.Добавить();			
			ЗаполнитьЗначенияСвойств(СтрокаРезультирующейТЗ, СтрокаТаблицыЗначений);
			
			СтрокаРезультирующейТЗ.Сумма		   = СтрокаМассива;
			
			СтрокаРезультирующейТЗ.СчетДт		   = ТЗСпособаОтражения[ИндексМассива].СчетЗатрат;
			СтрокаРезультирующейТЗ.СубконтоДт1     = ТЗСпособаОтражения[ИндексМассива].Субконто1;
			СтрокаРезультирующейТЗ.СубконтоДт2     = ТЗСпособаОтражения[ИндексМассива].Субконто2;
			СтрокаРезультирующейТЗ.СубконтоДт3     = ТЗСпособаОтражения[ИндексМассива].Субконто3;
			
			ИндексМассива = ИндексМассива + 1;
		КонецЦикла;
	КонецЦикла;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаХозрасчетный", ТаблицаХозрасчетный);	
		
КонецПроцедуры // СформироватьТаблицаХозрасчетный()

// Формирует таблицу значений, содержащую данные для проведения по регистру бухгалтерии Хозрасчетный.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРеализацияТоваров(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	// 1. Товары
	// 2. Усуги
	// 3. ОС
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	1 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Ссылка КАК ДокументРеализации,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК Договор,
		|	ВременнаяТаблицаШапка.СтавкаНДС КАК СтавкаНДС,
		|	ВременнаяТаблицаШапка.СтавкаНСП КАК СтавкаНСП,
		|	ВременнаяТаблицаШапка.БезналичныйРасчет КАК БезналичныйРасчет,
		|	ВременнаяТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаТовары.Количество КАК Количество,
		|	ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Всего - ВременнаяТаблицаТовары.СуммаНДС - ВременнаяТаблицаТовары.СуммаНСП) * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)) КАК Доход,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаТовары.СуммаНДС * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаТовары.СуммаНСП * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)) КАК СуммаНСП,
		|	ВременнаяТаблицаТовары.СуммаСкидки КАК СуммаСкидки,
		|	0 КАК Себестоимость
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.Всего = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Ссылка,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.СтавкаНДС,
		|	ВременнаяТаблицаШапка.СтавкаНСП,
		|	ВременнаяТаблицаШапка.БезналичныйРасчет,
		|	ВременнаяТаблицаУслуги.Номенклатура,
		|	ВременнаяТаблицаУслуги.Количество,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаУслуги.Всего - ВременнаяТаблицаУслуги.СуммаНДС - ВременнаяТаблицаУслуги.СуммаНСП * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВЫРАЗИТЬ(ВременнаяТаблицаУслуги.СуммаНДС * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВЫРАЗИТЬ(ВременнаяТаблицаУслуги.СуммаНСП * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВременнаяТаблицаУслуги.СуммаСкидки,
		|	0
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаУслуги.Всего = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Ссылка,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.СтавкаНДС,
		|	ВременнаяТаблицаШапка.СтавкаНСП,
		|	ВременнаяТаблицаШапка.БезналичныйРасчет,
		|	ВременнаяТаблицаОС.ОсновноеСредство,
		|	1,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаОС.Всего - ВременнаяТаблицаОС.СуммаНДС - ВременнаяТаблицаОС.СуммаНСП * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВЫРАЗИТЬ(ВременнаяТаблицаОС.СуммаНДС * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВЫРАЗИТЬ(ВременнаяТаблицаОС.СуммаНСП * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВременнаяТаблицаОС.СуммаСкидки,
		|	0
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаОС.Всего = 0";
	РезультатЗапроса = Запрос.Выполнить();	
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРеализацияТоваров", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаРеализацияТоваров(ДокументСсылка, СтруктураДополнительныеСвойства) 

// Формирует таблицу значений, содержащую данные для проведения по регистру бухгалтерии Хозрасчетный.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаБланкиСФ(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СерияБланкаСФ КАК Серия,
		|	ВременнаяТаблицаШапка.НомерБланкаСФ КАК Номер,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ИспользованиеБланковСФ) КАК Операция,
		|	1 КАК Количество,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|ГДЕ
		|	НЕ ВременнаяТаблицаШапка.СерияБланкаСФ = """"
		|	И НЕ ВременнаяТаблицаШапка.НомерБланкаСФ = """"";		
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаБланкиСФ", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаСотрудники()

// Формирует таблицу значений, содержащую данные для проведения по регистру бухгалтерии Хозрасчетный.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаНДС(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	// 1. Товары
	// 2. Усуги
	// 3. ОС
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =	
		"ВЫБРАТЬ
		|	1 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.СтавкаНДС КАК СтавкаНДС,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаТовары.СуммаНДС * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаТовары.СуммаНСП * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)) КАК СуммаНСП,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.СуммаВключаетНалоги
		|			ТОГДА ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Всего - ВременнаяТаблицаТовары.СуммаНДС - ВременнаяТаблицаТовары.СуммаНСП) * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ ВЫРАЗИТЬ(ВременнаяТаблицаТовары.Всего * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2))
		|	КОНЕЦ КАК СуммаБезНДС
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.Всего = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.СтавкаНДС,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаУслуги.СуммаНДС * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВЫРАЗИТЬ(ВременнаяТаблицаУслуги.СуммаНСП * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.СуммаВключаетНалоги
		|			ТОГДА ВЫРАЗИТЬ((ВременнаяТаблицаУслуги.Всего - ВременнаяТаблицаУслуги.СуммаНДС - ВременнаяТаблицаУслуги.СуммаНСП) * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ ВЫРАЗИТЬ(ВременнаяТаблицаУслуги.Всего * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2))
		|	КОНЕЦ
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаУслуги.Всего = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.СтавкаНДС,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаОС.СуммаНДС * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВЫРАЗИТЬ(ВременнаяТаблицаОС.СуммаНСП * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2)),
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.СуммаВключаетНалоги
		|			ТОГДА ВЫРАЗИТЬ((ВременнаяТаблицаОС.Всего - ВременнаяТаблицаОС.СуммаНДС - ВременнаяТаблицаОС.СуммаНСП) * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ ВЫРАЗИТЬ(ВременнаяТаблицаОС.Всего * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15, 2))
		|	КОНЕЦ
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаОС.Всего = 0";
	РезультатЗапроса = Запрос.Выполнить();
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаНДС", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСостоянияОС(ДокументСсылка, СтруктураДополнительныеСвойства)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ТаблицаДокумента.ОсновноеСредство,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.СнятоСУчета) КАК Состояние
		|ИЗ
		|	ВременнаяТаблицаОС КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСостоянияОС", РезультатЗапроса.Выгрузить()); 
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСобытияОС(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ТаблицаДокумента.ОсновноеСредство,
		|	ВременнаяТаблицаШапка.СобытиеОС КАК Событие,
		|	ВременнаяТаблицаШапка.Номер КАК НомерДокумента,
		|	""Реализация ОС"" КАК НазваниеДокумента
		|ИЗ
		|	ВременнаяТаблицаОС КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСобытияОС", РезультатЗапроса.Выгрузить());
КонецПроцедуры     

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДвижениеОСНУ(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ПараметрыУчетаОССрезПоследних.ГруппаНУ КАК ГруппаНУ,
		|	ТаблицаДокумента.ОсновноеСредство,
		|	ТаблицаДокумента.ПервоначальнаяСтоимость КАК Выбытие,
		|	ТаблицаДокумента.ПервоначальнаяСтоимость * (12 - МЕСЯЦ(ВременнаяТаблицаШапка.Дата) + 0.5) / 12 КАК ТекущееВыбытие
		|ИЗ
		|	ВременнаяТаблицаОС КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|				&Период,
		|				Организация = &Организация
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							ТаблицаДокумента.ОсновноеСредство
		|						ИЗ
		|							ВременнаяТаблицаОС КАК ТаблицаДокумента)) КАК ПараметрыУчетаОССрезПоследних
		|		ПО ТаблицаДокумента.ОсновноеСредство = ПараметрыУчетаОССрезПоследних.ОсновноеСредство";
	Запрос.УстановитьПараметр("Период", СтруктураДополнительныеСвойства.ДляПроведения.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвижениеОСНУ", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаКорректировкиНУ(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет,
		|	Хозрасчетный.Вид
		|ПОМЕСТИТЬ ВременнаяТаблицаСчетов
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Временный = ИСТИНА
		|	И (Хозрасчетный.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
		|			ИЛИ Хозрасчетный.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаХозрасчетный.Период,
		|	ТаблицаХозрасчетный.Организация,
		|	ТаблицаХозрасчетный.СчетДт,
		|	ТаблицаХозрасчетный.СчетКт,
		|	ТаблицаХозрасчетный.Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаХозрасчетный
		|ИЗ
		|	&ТаблицаХозрасчетный КАК ТаблицаХозрасчетный
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаХозрасчетный.Период КАК Период,
		|	ВременнаяТаблицаХозрасчетный.Организация КАК Организация,
		|	ВременнаяТаблицаХозрасчетный.СчетДт КАК Счет,
		|	ВЫБОР                                                                               
		|		КОГДА ВременнаяТаблицаСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПризнакСчета.Расходный)
		|		КОГДА ВременнаяТаблицаСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПризнакСчета.Доходный)
		|	КОНЕЦ КАК ДоходРасход,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыУчета.ПР) КАК ВидУчета,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
		|			ТОГДА ВременнаяТаблицаХозрасчетный.Сумма
		|		КОГДА ВременнаяТаблицаСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
		|			ТОГДА -ВременнаяТаблицаХозрасчетный.Сумма
		|	КОНЕЦ КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаКорректировкиНУ
		|ИЗ
		|	ВременнаяТаблицаХозрасчетный КАК ВременнаяТаблицаХозрасчетный
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСчетов КАК ВременнаяТаблицаСчетов
		|		ПО ВременнаяТаблицаХозрасчетный.СчетДт = ВременнаяТаблицаСчетов.Счет
		|ГДЕ
		|   ВременнаяТаблицаХозрасчетный.СчетДт В (
		|										ВЫБРАТЬ
		|											ВременнаяТаблицаСчетов.Счет
		|										ИЗ
		|											ВременнаяТаблицаСчетов КАК ВременнаяТаблицаСчетов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаХозрасчетный.Период,
		|	ВременнаяТаблицаХозрасчетный.Организация,
		|	ВременнаяТаблицаХозрасчетный.СчетКт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПризнакСчета.Расходный)
		|		КОГДА ВременнаяТаблицаСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПризнакСчета.Доходный)
		|	КОНЕЦ,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыУчета.ПР),
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
		|			ТОГДА -ВременнаяТаблицаХозрасчетный.Сумма
		|		КОГДА ВременнаяТаблицаСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
		|			ТОГДА ВременнаяТаблицаХозрасчетный.Сумма
		|	КОНЕЦ		
		|ИЗ
		|	ВременнаяТаблицаХозрасчетный КАК ВременнаяТаблицаХозрасчетный
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСчетов КАК ВременнаяТаблицаСчетов
		|		ПО ВременнаяТаблицаХозрасчетный.СчетКт = ВременнаяТаблицаСчетов.Счет
		|ГДЕ
		|   ВременнаяТаблицаХозрасчетный.СчетКт В (
		|										ВЫБРАТЬ
		|											ВременнаяТаблицаСчетов.Счет
		|										ИЗ
		|											ВременнаяТаблицаСчетов КАК ВременнаяТаблицаСчетов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаКорректировкиНУ.Период,
		|	ВременнаяТаблицаКорректировкиНУ.Организация,
		|	ВременнаяТаблицаКорректировкиНУ.Счет,
		|	ВременнаяТаблицаКорректировкиНУ.ДоходРасход,
		|	ВременнаяТаблицаКорректировкиНУ.ВидУчета,
		|	СУММА(ВременнаяТаблицаКорректировкиНУ.Сумма) КАК Сумма
		|ИЗ
		|	ВременнаяТаблицаКорректировкиНУ КАК ВременнаяТаблицаКорректировкиНУ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаКорректировкиНУ.Счет,
		|	ВременнаяТаблицаКорректировкиНУ.ДоходРасход,
		|	ВременнаяТаблицаКорректировкиНУ.ВидУчета,
		|	ВременнаяТаблицаКорректировкиНУ.Организация,
		|	ВременнаяТаблицаКорректировкиНУ.Период";
	Запрос.УстановитьПараметр("ТаблицаХозрасчетный", СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаХозрасчетный);
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаКорректировкиНУ", РезультатЗапроса.Выгрузить());
КонецПроцедуры

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства, Отказ) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.Дата КАК Дата,
		|	ТаблицаДокумента.Номер КАК Номер,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.БезналичныйРасчет КАК БезналичныйРасчет,
		|	ТаблицаДокумента.Склад КАК Склад,
		|	ТаблицаДокумента.Контрагент КАК Контрагент,
		|	ТаблицаДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ТаблицаДокумента.СчетРасчетов КАК СчетРасчетов,
		|	ТаблицаДокумента.ВалютаДокумента КАК ВалютаДокумента,
		|	ТаблицаДокумента.Курс КАК Курс,
		|	ТаблицаДокумента.Кратность КАК Кратность,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСКОплате) КАК СчетУчетаНДС,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НалогСПродаж) КАК СчетУчетаНСП,
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаДокумента.СтавкаНСП КАК СтавкаНСП,
		|	ТаблицаДокумента.СтавкаНСПУслуги КАК СтавкаНСПУслуги,
		|	ТаблицаДокумента.СуммаВключаетНалоги КАК СуммаВключаетНалоги,
		|	ТаблицаДокумента.ВидПоставкиНДС КАК ВидПоставкиНДС,
		|	ТаблицаДокумента.СерияБланкаСФ КАК СерияБланкаСФ,
		|	ТаблицаДокумента.НомерБланкаСФ КАК НомерБланкаСФ,
		|	ТаблицаДокумента.ДатаСФ КАК ДатаСФ,
		|	ТаблицаДокумента.ТипПоставкиСФ КАК ТипПоставкиСФ,
		|	ТаблицаДокумента.СчетУчетаСкидок КАК СчетУчетаСкидок,
		|	ТаблицаДокумента.СобытиеОС КАК СобытиеОС,
		|	ТаблицаДокумента.СтатьяЗатрат КАК СтатьяЗатрат,
		|	ТаблицаДокумента.ФизЛицо КАК ФизЛицо,
		|	ТаблицаДокумента.Подразделение КАК Подразделение
		|ПОМЕСТИТЬ ВременнаяТаблицаШапка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.Количество КАК Количество,
		|	ТаблицаДокумента.Всего КАК Всего,
		|	ТаблицаДокумента.Сумма КАК Сумма,
		|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
		|	ТаблицаДокумента.СуммаНСП КАК СуммаНСП,
		|	ТаблицаДокумента.СуммаСкидки КАК СуммаСкидки,
		|	ТаблицаДокумента.СчетУчета КАК СчетУчета,
		|	ТаблицаДокумента.СчетДохода КАК СчетДохода,
		|	ТаблицаДокумента.СчетСебестоимости КАК СчетСебестоимости,
		|	ТаблицаДокумента.СтатьяРасхода КАК СтатьяРасхода
		|ПОМЕСТИТЬ ВременнаяТаблицаТовары
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.Количество КАК Количество,
		|	ТаблицаДокумента.Всего КАК Всего,
		|	ТаблицаДокумента.Сумма КАК Сумма,
		|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
		|	ТаблицаДокумента.СуммаНСП КАК СуммаНСП,
		|	ТаблицаДокумента.СуммаСкидки КАК СуммаСкидки,
		|	ТаблицаДокумента.СчетУчета КАК СчетУчета,
		|	ТаблицаДокумента.СчетДохода КАК СчетДохода
		|ПОМЕСТИТЬ ВременнаяТаблицаУслуги
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Услуги КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаДокумента.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
		|	ТаблицаДокумента.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
		|	ТаблицаДокумента.ОстаточнаяСтоимость КАК ОстаточнаяСтоимость,
		|	ТаблицаДокумента.НакопленнаяАмортизация КАК НакопленнаяАмортизация,
		|	ТаблицаДокумента.АмортизацияЗаМесяц КАК АмортизацияЗаМесяц,
		|	ТаблицаДокумента.СчетУчета КАК СчетУчета,
		|	ТаблицаДокумента.СпособОтраженияРасходовПоАмортизации КАК СпособОтраженияРасходовПоАмортизации,
		|	ТаблицаДокумента.Всего КАК Всего,
		|	ТаблицаДокумента.Сумма КАК Сумма,
		|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
		|	ТаблицаДокумента.СуммаНСП КАК СуммаНСП,
		|	ТаблицаДокумента.СуммаСкидки КАК СуммаСкидки,
		|	ТаблицаДокумента.СчетРасхода КАК СчетРасхода,
		|	ТаблицаДокумента.СчетДохода КАК СчетДохода
		|ПОМЕСТИТЬ ВременнаяТаблицаОС
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.ОС КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства, Отказ);
	СформироватьТаблицаРеализацияТоваров(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаНДС(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаБланкиСФ(ДокументСсылка, СтруктураДополнительныеСвойства);
	
	СформироватьТаблицаСостоянияОС(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСобытияОС(ДокументСсылка, СтруктураДополнительныеСвойства); 	
	СформироватьТаблицаДвижениеОСНУ(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаКорректировкиНУ(ДокументСсылка, СтруктураДополнительныеСвойства);

КонецПроцедуры

#КонецОбласти	

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой ПечатьНакладной
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьНакладной(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "РеализацияТоваровУслуг_Накладная";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РеализацияТоваровУслуг.ПФ_MXL_Накладная");
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка,
		|	ТаблицаДокумента.Номер,
		|	ТаблицаДокумента.Дата,
		|	ТаблицаДокумента.Организация,
		|	ТаблицаДокумента.Организация.НаименованиеПолное КАК ОрганизацияПредставление,
		|	ТаблицаДокумента.Склад,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокумента.Склад) КАК СкладПредставление,
		|	ТаблицаДокумента.Контрагент,
		|	ТаблицаДокумента.Контрагент.НаименованиеПолное КАК КонтрагентПредставление,
		|	ТаблицаДокумента.Товары.(
		|		НомерСтроки,
		|		Номенклатура,
		|		Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
		|		ПРЕДСТАВЛЕНИЕ(ТаблицаДокумента.Товары.Номенклатура.ЕдиницаИзмерения) КАК ЕИ,
		|		Количество,
		|		Цена,
		|		Сумма,
		|		СуммаНДС,
		|		СуммаНСП,
		|		СуммаСкидки,
		|		Всего
		|	),
		|	ТаблицаДокумента.Услуги.(
		|		НомерСтроки,
		|		Номенклатура,
		|		Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
		|		ПРЕДСТАВЛЕНИЕ(ТаблицаДокумента.Услуги.Номенклатура.ЕдиницаИзмерения) КАК ЕИ,
		|		Количество,
		|		Цена,
		|		Сумма,
		|		СуммаНДС,
		|		СуммаНСП,
		|		СуммаСкидки,
		|		Всего
		|	)
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка В(&СписокДокументов)";		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;
		
		ТекстЗаголовка = СформироватьЗаголовокДокумента(Шапка, НСтр("ru = 'Накладная на реализацию'"));
		ДанныеПечати.Вставить("ТекстЗаголовка", ТекстЗаголовка);
		ДанныеПечати.Вставить("ОрганизацияПредставление", Шапка.ОрганизацияПредставление);
		ДанныеПечати.Вставить("СкладПредставление", Шапка.СкладПредставление);
		ДанныеПечати.Вставить("ПолучательПредставление", Шапка.КонтрагентПредставление);

		ТаблицаТовары = Шапка.Товары.Выгрузить();
		ТаблицаУслуги = Шапка.Услуги.Выгрузить();
		
		Всего = ТаблицаТовары.Итог("Всего") + ТаблицаУслуги.Итог("Всего");
		ВсегоНДС = ТаблицаТовары.Итог("СуммаНДС") + ТаблицаУслуги.Итог("СуммаНДС");
		ВсегоНСП = ТаблицаТовары.Итог("СуммаНСП") + ТаблицаУслуги.Итог("СуммаНСП");
		КоличествоНаименований = ТаблицаТовары.Количество() + ТаблицаУслуги.Количество();		
		
		ВсегоСкидка = ТаблицаТовары.Итог("СуммаСкидки") + ТаблицаУслуги.Итог("СуммаСкидки");
		ЕстьСкидка = ВсегоСкидка <> 0;
		
		ДанныеПечати.Вставить("Всего", Всего);
		ДанныеПечати.Вставить("ВсегоНДС", ВсегоНДС);
		ДанныеПечати.Вставить("ВсегоНСП", ВсегоНСП);
		ДанныеПечати.Вставить("ИтоговаяСтрока", 
			СтрШаблон(НСтр("ru = 'Всего наименований %1, на сумму %2'"), 
			Формат(КоличествоНаименований, "ЧН=0; ЧГ=0"), Формат(ДанныеПечати.Всего, "ЧЦ=15; ЧДЦ=2")));
		ДанныеПечати.Вставить("СуммаПрописью", БухгалтерскийУчетСервер.СформироватьСуммуПрописью(ДанныеПечати.Всего));

		// Области
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Заголовок");
		Если ЕстьСкидка Тогда 
			МассивОбластейМакета.Добавить("ШапкаТаблицыСоСкидкой");
			МассивОбластейМакета.Добавить("СтрокаСоСкидкой");
		Иначе 
			МассивОбластейМакета.Добавить("ШапкаТаблицы");
			МассивОбластейМакета.Добавить("Строка");
		КонецЕсли;	
		МассивОбластейМакета.Добавить("Подвал");
		МассивОбластейМакета.Добавить("Итоги");
		МассивОбластейМакета.Добавить("ИтогиНДС");
		МассивОбластейМакета.Добавить("ИтогиНСП");
		Если ЕстьСкидка Тогда 
			МассивОбластейМакета.Добавить("ИтогиСкидка");
		КонецЕсли;	
		МассивОбластейМакета.Добавить("СуммаПрописью");
		МассивОбластейМакета.Добавить("Подписи");
	
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ИмяОбласти <> "Строка" Тогда
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			ИначеЕсли ИмяОбласти = "Строка" Тогда 
				Для Каждого СтрокаТаблицы Из ТаблицаТовары Цикл
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
				Для Каждого СтрокаТаблицы Из ТаблицаУслуги Цикл
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой Счет-фактура
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьСчетФактура(МассивОбъектов, ОбъектыПечати, КоличествоСтрокСчетаФактуры)
		
	ТабличныйДокумент = Новый ТабличныйДокумент;		
	ТабличныйДокумент.КлючПараметровПечати = "РеализацияТоваровУслуг_СчетФактура";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщиеМакеты.СчетФактура");
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка,
		|	ТаблицаДокумента.Номер,
		|	ТаблицаДокумента.Дата,
		|	ТаблицаДокумента.Организация,
		// Сведения об организации
		|	ТаблицаДокумента.Организация.ЭтоГоловнаяОрганизация КАК ЭтоГоловнаяОрганизация,
		|	ТаблицаДокумента.Организация.НаименованиеПолное КАК ОрганизацияПредставление,
		|	ТаблицаДокумента.Организация.ИНН КАК ИННОрганизации,
		|	ТаблицаДокумента.Организация.ГНС КАК ГНСОрганизации,
		|	ТаблицаДокумента.Организация.ГНС.Код КАК КодГНСОрганизации,
		// Сведения о головной организации
		|	ТаблицаДокумента.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ТаблицаДокумента.Организация.ГоловнаяОрганизация.НаименованиеПолное КАК ГоловнаяОрганизацияПредставление,
		|	ТаблицаДокумента.Организация.ГоловнаяОрганизация.ИНН КАК ИННГоловнойОрганизации,
		|	ТаблицаДокумента.Организация.ГоловнаяОрганизация.ГНС КАК ГНСГоловнойОрганизации,
		|	ТаблицаДокумента.Организация.ГоловнаяОрганизация.ГНС.Код КАК КодГНСГоловнойОрганизации,
		// Сведения о банковском счете организации
		|	ТаблицаДокумента.ЭкспортнаяПоставка КАК ЭкспортнаяПоставка,
		|	ТаблицаДокумента.БанковскийСчет.НомерСчета КАК НомерБанковскогоСчетаОрганизации,
		|	ТаблицаДокумента.БанковскийСчет.Банк.Код КАК БикБанкаОрганизации,
		|	ТаблицаДокумента.БанковскийСчет.Банк.Наименование КАК НаименованиеБанкаОрганизации,
		// Сведения о контрегенте
		|	ТаблицаДокумента.Контрагент,
		|	ТаблицаДокумента.Контрагент.ИНН КАК ИННКонтрагента,
		|	ТаблицаДокумента.Контрагент.ГНС КАК ГНСКонтрагента,
		|	ТаблицаДокумента.Контрагент.ГНС.Код КАК КодГНСКонтрагента,
		|	ТаблицаДокумента.Контрагент.ОсновнойБанковскийСчет КАК БанковскогоСчетаКонтрагента,
		|	ТаблицаДокумента.Контрагент.ОсновнойБанковскийСчет.НомерСчета КАК НомерБанковскогоСчетаКонтрагента,
		|	ТаблицаДокумента.Контрагент.ОсновнойБанковскийСчет.Банк.Код КАК БикБанкаКонтрагента,
		|	ТаблицаДокумента.Контрагент.ОсновнойБанковскийСчет.Банк.Наименование КАК НаименованиеБанкаКонтрагента,
		// Сведения о счете-фактуре
		|	ТаблицаДокумента.ТипПоставкиСФ КАК ТипПоставки,
		|	ТаблицаДокумента.ТипПоставкиСФ.Наименование КАК НаименованиеПоставки,
		|	ТаблицаДокумента.ВидПлатежа,
		|	ТаблицаДокумента.НомерБланкаСФ,
		|	ТаблицаДокумента.СерияБланкаСФ,
		|	ТаблицаДокумента.ДатаСФ,
		// Ставки
		|	ТаблицаДокумента.БезналичныйРасчет,
		|	ТаблицаДокумента.СтавкаНДС,
		|	ТаблицаДокумента.СтавкаНСП,
		|	ТаблицаДокумента.СтавкаНСПУслуги,
		|	ТаблицаДокумента.Товары.(
		|		Номенклатура,
		|		Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
		|		Количество,
		|		Цена,
		|		Всего,
		|		Всего КАК Стоимость,
		|		СуммаНДС,
		|		СуммаНСП,
		|		СуммаСкидки,
		|		Номенклатура.КодТНВЭД КАК КодТНВЭД
		|	),
		|	ТаблицаДокумента.Услуги.(
		|		Номенклатура,
		|		Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
		|		Количество,
		|		Цена,
		|		Всего,
		|		Всего КАК Стоимость,
		|		СуммаНДС,
		|		СуммаНСП,
		|		СуммаСкидки,
		|		Номенклатура.КодТНВЭД КАК КодТНВЭД
		|	)
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка В(&СписокДокументов)";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;
		ДанныеПечати.Вставить("НомерОтчета", ?(КоличествоСтрокСчетаФактуры = 20,"001","002"));
		ДанныеПечати.Вставить("НомерПриложения", ?(КоличествоСтрокСчетаФактуры = 20,"2","3"));
		ДанныеПечати.Вставить("НомерБланкаСФ", Шапка.НомерБланкаСФ);
		ДанныеПечати.Вставить("СерияБланкаСФ", Шапка.СерияБланкаСФ);
		ДанныеПечати.Вставить("ТипПоставки", ?(Шапка.ЭкспортнаяПоставка, "Экспорт", "Внутренняя"));
		
		ДанныеПечати.Вставить("ТекстЗаголовка", "СЧЕТ-ФАКТУРА НДС");

		ДанныеПечати.Вставить("ДатаПоставки", Формат(Шапка.Дата,"ДЛФ=DD"));
		ДанныеПечати.Вставить("БанкПоставщика", Шапка.НаименованиеБанкаОрганизации);		
		
		ПредставлениеПоставщика = "";
		Если Шапка.ЭтоГоловнаяОрганизация Тогда 
			Организация = Шапка.Организация;
			ИНН = Шапка.ИННОрганизации;
		    ГНС = Шапка.ГНСОрганизации;
		    КодГНС = Шапка.КодГНСОрганизации;
			
			ПредставлениеПоставщика = Шапка.ОрганизацияПредставление;
		Иначе 
			Организация = Шапка.ГоловнаяОрганизация;
			ИНН = Шапка.ИННГоловнойОрганизации;
		    ГНС = Шапка.ГНСГоловнойОрганизации;
		    КодГНС = Шапка.КодГНСГоловнойОрганизации;
			
			ПредставлениеПоставщика = СтрШаблон("%1 (%2)", Шапка.ГоловнаяОрганизацияПредставление, Шапка.ОрганизацияПредставление);
		КонецЕсли;	
		
		ДатаСФ = Формат(Шапка.ДатаСФ, "ДЛФ=D");
		ДанныеПечати.Вставить("Дата1", Сред(ДатаСФ,1,1));
		ДанныеПечати.Вставить("Дата2", Сред(ДатаСФ,2,1));
		ДанныеПечати.Вставить("Дата3", Сред(ДатаСФ,4,1));
		ДанныеПечати.Вставить("Дата4", Сред(ДатаСФ,5,1));
		ДанныеПечати.Вставить("Дата5", Сред(ДатаСФ,7,1));
		ДанныеПечати.Вставить("Дата6", Сред(ДатаСФ,8,1));
		ДанныеПечати.Вставить("Дата7", Сред(ДатаСФ,9,1));
		ДанныеПечати.Вставить("Дата8", Сред(ДатаСФ,10,1));
		
		ДанныеПечати.Вставить("ИННПост1", Сред(ИНН,1,1));
		ДанныеПечати.Вставить("ИННПост2", Сред(ИНН,2,1));
		ДанныеПечати.Вставить("ИННПост3", Сред(ИНН,3,1));
		ДанныеПечати.Вставить("ИННПост4", Сред(ИНН,4,1));
		ДанныеПечати.Вставить("ИННПост5", Сред(ИНН,5,1));
		ДанныеПечати.Вставить("ИННПост6", Сред(ИНН,6,1));
		ДанныеПечати.Вставить("ИННПост7", Сред(ИНН,7,1));
		ДанныеПечати.Вставить("ИННПост8", Сред(ИНН,8,1));
		ДанныеПечати.Вставить("ИННПост9", Сред(ИНН,9,1));
		ДанныеПечати.Вставить("ИННПост10", Сред(ИНН,10,1));
		ДанныеПечати.Вставить("ИННПост11", Сред(ИНН,11,1));
		ДанныеПечати.Вставить("ИННПост12", Сред(ИНН,12,1));
		ДанныеПечати.Вставить("ИННПост13", Сред(ИНН,13,1));
		ДанныеПечати.Вставить("ИННПост14", Сред(ИНН,14,1));

        БИК = Шапка.БикБанкаОрганизации;
		ДанныеПечати.Вставить("КодБанкаПоставщика1", Сред(БИК,1,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика2", Сред(БИК,2,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика3", Сред(БИК,3,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика4", Сред(БИК,4,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика5", Сред(БИК,5,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика6", Сред(БИК,6,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика7", Сред(БИК,7,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика8", Сред(БИК,8,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика9", Сред(БИК,9,1));		
		
		НомерСчета = Шапка.НомерБанковскогоСчетаОрганизации;
		ДанныеПечати.Вставить("СчетПоставщика1", Сред(НомерСчета,1,1));		
		ДанныеПечати.Вставить("СчетПоставщика2", Сред(НомерСчета,2,1));		
		ДанныеПечати.Вставить("СчетПоставщика3", Сред(НомерСчета,3,1));		
		ДанныеПечати.Вставить("СчетПоставщика4", Сред(НомерСчета,4,1));		
		ДанныеПечати.Вставить("СчетПоставщика5", Сред(НомерСчета,5,1));		
		ДанныеПечати.Вставить("СчетПоставщика6", Сред(НомерСчета,6,1));		
		ДанныеПечати.Вставить("СчетПоставщика7", Сред(НомерСчета,7,1));		
		ДанныеПечати.Вставить("СчетПоставщика8", Сред(НомерСчета,8,1));		
		ДанныеПечати.Вставить("СчетПоставщика9", Сред(НомерСчета,9,1));		
		ДанныеПечати.Вставить("СчетПоставщика10", Сред(НомерСчета,10,1));		
		ДанныеПечати.Вставить("СчетПоставщика11", Сред(НомерСчета,11,1));		
		ДанныеПечати.Вставить("СчетПоставщика12", Сред(НомерСчета,12,1));		
		ДанныеПечати.Вставить("СчетПоставщика13", Сред(НомерСчета,13,1));		
		ДанныеПечати.Вставить("СчетПоставщика14", Сред(НомерСчета,14,1));		
		ДанныеПечати.Вставить("СчетПоставщика15", Сред(НомерСчета,15,1));		
		ДанныеПечати.Вставить("СчетПоставщика16", Сред(НомерСчета,16,1));		
		
		ДанныеПечати.Вставить("ГНСПоставщика1", Сред(КодГНС,1,1));		
		ДанныеПечати.Вставить("ГНСПоставщика2", Сред(КодГНС,2,1));		
		ДанныеПечати.Вставить("ГНСПоставщика3", Сред(КодГНС,3,1));		

		ДанныеПечати.Вставить("НаименованиеГНСПоставщика", ГНС);		
		ДанныеПечати.Вставить("ПредставлениеПоставщика", ПредставлениеПоставщика);		
		
		АдресПоставщика = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента, Шапка.Дата); 
		ДанныеПечати.Вставить("АдресПоставщика", АдресПоставщика);		

		// Данные по контрагенту
		АдресПокупателя = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Шапка.Контрагент, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента); 
		ДанныеПечати.Вставить("АдресПокупателя", АдресПокупателя);		
		
		ИННКонтрагента = Шапка.ИННКонтрагента;
		ДанныеПечати.Вставить("ИННПок1", Сред(ИННКонтрагента,1,1));		
		ДанныеПечати.Вставить("ИННПок2", Сред(ИННКонтрагента,2,1));		
		ДанныеПечати.Вставить("ИННПок3", Сред(ИННКонтрагента,3,1));		
		ДанныеПечати.Вставить("ИННПок4", Сред(ИННКонтрагента,4,1));		
		ДанныеПечати.Вставить("ИННПок5", Сред(ИННКонтрагента,5,1));		
		ДанныеПечати.Вставить("ИННПок6", Сред(ИННКонтрагента,6,1));		
		ДанныеПечати.Вставить("ИННПок7", Сред(ИННКонтрагента,7,1));		
		ДанныеПечати.Вставить("ИННПок8", Сред(ИННКонтрагента,8,1));		
		ДанныеПечати.Вставить("ИННПок9", Сред(ИННКонтрагента,9,1));		
		ДанныеПечати.Вставить("ИННПок10", Сред(ИННКонтрагента,10,1));		
		ДанныеПечати.Вставить("ИННПок11", Сред(ИННКонтрагента,11,1));		
		ДанныеПечати.Вставить("ИННПок12", Сред(ИННКонтрагента,12,1));		
		ДанныеПечати.Вставить("ИННПок13", Сред(ИННКонтрагента,13,1));		
		ДанныеПечати.Вставить("ИННПок14", Сред(ИННКонтрагента,14,1));		
		
		КодГНСКонтрагента = Шапка.КодГНСКонтрагента;
		ДанныеПечати.Вставить("ГНСПокупателя1", Сред(КодГНСКонтрагента,1,1));		
		ДанныеПечати.Вставить("ГНСПокупателя2", Сред(КодГНСКонтрагента,2,1));		
		ДанныеПечати.Вставить("ГНСПокупателя3", Сред(КодГНСКонтрагента,3,1));		
		
		Если ЗначениеЗаполнено(Шапка.БанковскогоСчетаКонтрагента) Тогда 
			НомерСчетаКонтрагента = Шапка.НомерБанковскогоСчетаКонтрагента;
			ДанныеПечати.Вставить("СчетПокупателя1", Сред(НомерСчетаКонтрагента,1,1));		
			ДанныеПечати.Вставить("СчетПокупателя2", Сред(НомерСчетаКонтрагента,2,1));		
			ДанныеПечати.Вставить("СчетПокупателя3", Сред(НомерСчетаКонтрагента,3,1));		
			ДанныеПечати.Вставить("СчетПокупателя4", Сред(НомерСчетаКонтрагента,4,1));		
			ДанныеПечати.Вставить("СчетПокупателя5", Сред(НомерСчетаКонтрагента,5,1));		
			ДанныеПечати.Вставить("СчетПокупателя6", Сред(НомерСчетаКонтрагента,6,1));		
			ДанныеПечати.Вставить("СчетПокупателя7", Сред(НомерСчетаКонтрагента,7,1));		
			ДанныеПечати.Вставить("СчетПокупателя8", Сред(НомерСчетаКонтрагента,8,1));		
			ДанныеПечати.Вставить("СчетПокупателя9", Сред(НомерСчетаКонтрагента,9,1));		
			ДанныеПечати.Вставить("СчетПокупателя10", Сред(НомерСчетаКонтрагента,10,1));		
			ДанныеПечати.Вставить("СчетПокупателя11", Сред(НомерСчетаКонтрагента,11,1));		
			ДанныеПечати.Вставить("СчетПокупателя12", Сред(НомерСчетаКонтрагента,12,1));		
			ДанныеПечати.Вставить("СчетПокупателя13", Сред(НомерСчетаКонтрагента,13,1));		
			ДанныеПечати.Вставить("СчетПокупателя14", Сред(НомерСчетаКонтрагента,14,1));		
			
			БикБанкаКонтрагента = Шапка.БикБанкаКонтрагента;
			ДанныеПечати.Вставить("КодБанкаПокупателя1", Сред(БикБанкаКонтрагента,1,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя2", Сред(БикБанкаКонтрагента,2,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя3", Сред(БикБанкаКонтрагента,3,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя4", Сред(БикБанкаКонтрагента,4,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя5", Сред(БикБанкаКонтрагента,5,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя6", Сред(БикБанкаКонтрагента,6,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя7", Сред(БикБанкаКонтрагента,7,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя8", Сред(БикБанкаКонтрагента,8,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя9", Сред(БикБанкаКонтрагента,9,1));		
			
			ДанныеПечати.Вставить("БанкПокупателя", Шапка.НаименованиеБанкаКонтрагента);
		Иначе 	
			// Отсутствует
			ДанныеПечати.Вставить("СчетПокупателя1","о");
			ДанныеПечати.Вставить("СчетПокупателя2","т");
			ДанныеПечати.Вставить("СчетПокупателя3","с");
			ДанныеПечати.Вставить("СчетПокупателя4","у");
			ДанныеПечати.Вставить("СчетПокупателя5","т");
			ДанныеПечати.Вставить("СчетПокупателя6","с");
			ДанныеПечати.Вставить("СчетПокупателя7","т");
			ДанныеПечати.Вставить("СчетПокупателя8","в");
			ДанныеПечати.Вставить("СчетПокупателя9","у");
			ДанныеПечати.Вставить("СчетПокупателя10","е");
			ДанныеПечати.Вставить("СчетПокупателя11","т");	

			ДанныеПечати.Вставить("БанкПокупателя", "отсутствует");
		КонецЕсли;	
		
		// Таблицы
		ТаблицаТовары = Шапка.Товары.Выгрузить();                                      
		ТаблицаУслуги = Шапка.Услуги.Выгрузить();   
		
		// Ставки
		Если Шапка.БезналичныйРасчет Тогда 
			ЗначениеСтавкиНСП = "0";
			ЗначениеСтавкиНСПУслуги = "0";
		Иначе 
			ЗначениеСтавкиНСП 		= УчетНДСВызовСервера.ПолучитьСтавкуНСП(Шапка.Дата, Шапка.СтавкаНДС, Шапка.СтавкаНСП);
			ЗначениеСтавкиНСПУслуги = УчетНДСВызовСервера.ПолучитьСтавкуНСП(Шапка.Дата, Шапка.СтавкаНДС, Шапка.СтавкаНСПУслуги);
		КонецЕсли;
		
		ЗначениеСтавкиНДС = УчетНДСВызовСервера.ПолучитьСтавкуНДС(Шапка.Дата, Шапка.СтавкаНДС);
		ДанныеПечати.Вставить("СтавкаНДС", ?(ЗначениеЗаполнено(ЗначениеСтавкиНДС), Строка(ЗначениеСтавкиНДС) + "%",""));
		ДанныеПечати.Вставить("СтавкаНСП", ?(ЗначениеЗаполнено(ЗначениеСтавкиНСП), Строка(ЗначениеСтавкиНСП) + "%",""));
		ДанныеПечати.Вставить("СтавкаНСПУслуги", ?(ЗначениеЗаполнено(ЗначениеСтавкиНСПУслуги), Строка(ЗначениеСтавкиНСПУслуги) + "%",""));
		
		// Итоги
		Всего = ТаблицаТовары.Итог("Всего") + ТаблицаУслуги.Итог("Всего");
		ВсегоНДС = ТаблицаТовары.Итог("СуммаНДС") + ТаблицаУслуги.Итог("СуммаНДС");
		ВсегоНСП = ТаблицаТовары.Итог("СуммаНСП") + ТаблицаУслуги.Итог("СуммаНСП");
		ВсегоСуммаСкидки = ТаблицаТовары.Итог("СуммаСкидки") + ТаблицаУслуги.Итог("СуммаСкидки");
		КоличествоСтрок = ТаблицаТовары.Количество() + ТаблицаУслуги.Количество();
		
		ДанныеПечати.Вставить("Всего", Всего);
		ДанныеПечати.Вставить("ВсегоНДС", ВсегоНДС);
		ДанныеПечати.Вставить("ВсегоНСП", ВсегоНСП);
		ДанныеПечати.Вставить("ВсегоСНДС", Всего + ВсегоНДС + ВсегоНСП);
		ДанныеПечати.Вставить("ИтогоКоличество", ТаблицаТовары.Итог("Количество"));
		
		// Скидка
		ЕстьСкидка = Ложь;
		Если ВсегоСуммаСкидки > 0 Тогда								
			ЕстьСкидка = Истина;
			Всего = Всего - ВсегоСуммаСкидки;
			ДанныеПечати.Вставить("СтоимостьСкидка", -Всего);
			ДанныеПечати.Вставить("СуммаНДССкидка", -ВсегоНДС);
			ДанныеПечати.Вставить("ВсегоСкидка", -Всего -ВсегоНДС);
		КонецЕсли;
		
		// Информация подвала
		ТекстОКоличестве = СтрШаблон("%1 (%2)", КоличествоСтрокСчетаФактуры, ?(КоличествоСтрокСчетаФактуры = 20,"(двадцати)","(семи)"));
		ДанныеПечати.Вставить("КоличествоСтрокСчетаФактуры", ТекстОКоличестве);
		ДанныеПечати.Вставить("НомерОтчета", ?(КоличествоСтрокСчетаФактуры = 20,"001","002"));
		
		// Области
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Шапка");
		МассивОбластейМакета.Добавить("Строка");
		Если ЕстьСкидка Тогда 
			МассивОбластейМакета.Добавить("СтрокаСоСкидкой");
		КонецЕсли;	
		МассивОбластейМакета.Добавить("Итоги");
		МассивОбластейМакета.Добавить("Подвал");
		
		ДанныеПечатиСтроки = Новый Структура("КодТовара1, КодТовара2, КодТовара3, КодТовара4","0","0","0","0");
		ДанныеПечатиПустаяСтрока = Новый Структура("КодТовара1, КодТовара2, КодТовара3, КодТовара4, Количество, СтавкаНДС, СтавкаНСП, Стоимость, СуммаНДС, СуммаНСП, Номенклатура, ЕдиницаИзмерения, Цена, Всего",
			"","","","","Х","Х","Х","Х","Х","Х","Х","Х","Х","Х");
		
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ИмяОбласти <> "Строка" Тогда
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			ИначеЕсли ИмяОбласти = "Строка" Тогда 
				Для Каждого СтрокаТаблицы Из ТаблицаТовары Цикл
					КодТНВЭД = ?(ЗначениеЗаполнено(СтрокаТаблицы.КодТНВЭД), СтрокаТаблицы.КодТНВЭД, "0000");
					ДанныеПечатиСтроки.КодТовара1 = Сред(КодТНВЭД,1,1);
					ДанныеПечатиСтроки.КодТовара2 = Сред(КодТНВЭД,2,1);
					ДанныеПечатиСтроки.КодТовара3 = Сред(КодТНВЭД,3,1);
					ДанныеПечатиСтроки.КодТовара4 = Сред(КодТНВЭД,4,1);
					
					ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ОбластьМакета.Параметры.Заполнить(ДанныеПечатиСтроки);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
				
				Для Каждого СтрокаТаблицы Из ТаблицаУслуги Цикл 
					КодТНВЭД = ?(ЗначениеЗаполнено(СтрокаТаблицы.КодТНВЭД), СтрокаТаблицы.КодТНВЭД, "0000");
					ДанныеПечатиСтроки.КодТовара1 = Сред(КодТНВЭД,1,1);
					ДанныеПечатиСтроки.КодТовара2 = Сред(КодТНВЭД,2,1);
					ДанныеПечатиСтроки.КодТовара3 = Сред(КодТНВЭД,3,1);
					ДанныеПечатиСтроки.КодТовара4 = Сред(КодТНВЭД,4,1);
					
					ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ОбластьМакета.Параметры.Заполнить(ДанныеПечатиСтроки);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;	
						
				// Добавление пустых строк
				Если КоличествоСтрокСчетаФактуры > КоличествоСтрок Тогда 
					Для Счетчик = 1 По КоличествоСтрокСчетаФактуры - КоличествоСтрок Цикл
						ОбластьМакета.Параметры.Заполнить(ДанныеПечатиПустаяСтрока);
						ТабличныйДокумент.Вывести(ОбластьМакета);		
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции
	
// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"Накладная", НСтр("ru = 'Накладная на сторону'"), ПечатьНакладной(МассивОбъектов, ОбъектыПечати),,
		"Документ.РеализацияТоваровУслуг.ПФ_MXL_Накладная");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактура001") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"СчетФактура001", НСтр("ru = 'Счет-фактура (001)'"), ПечатьСчетФактура(МассивОбъектов, ОбъектыПечати, 20));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактура002") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"СчетФактура002", НСтр("ru = 'Счет-фактура (002)'"), ПечатьСчетФактура(МассивОбъектов, ОбъектыПечати, 47));
	КонецЕсли;	
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru = 'Накладная'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 1;

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактура001";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура (001)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 2;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактура002";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура (002)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 3;
	
	Если НЕ ПользователиКлиентСервер.ЭтоСеансВнешнегоПользователя() Тогда
		// Настраиваемый комплект документов.
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Накладная,СчетФактура001,СчетФактура002";
		КомандаПечати.Представление = НСтр("ru = 'Комплект'");
		КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Настраиваемый комплект'");
		КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
		КомандаПечати.Порядок = 75;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает заголовок документа для печатной формы.
//
// Параметры:
//  Шапка - любая структура с полями:
//           Номер         - Строка или Число - номер документа;
//           Дата          - Дата - дата документа;
//           Представление - Строка - (необязательный) платформенное представление ссылки на документ.
//                                    Если параметр НазваниеДокумента не задан, то название документа будет вычисляться
//                                    из этого параметра.
//  НазваниеДокумента - Строка - название документа (например, "Счет на оплату").
//
// Возвращаемое значение:
//  Строка - заголовок документа.
//
Функция СформироватьЗаголовокДокумента(Шапка, Знач НазваниеДокумента = "")
	
	ДанныеДокумента = Новый Структура("Номер,Дата,Представление");
	ЗаполнитьЗначенияСвойств(ДанныеДокумента, Шапка);
	
	// Если название документа не передано, получим название по представлению документа.
	Если ПустаяСтрока(НазваниеДокумента) И ЗначениеЗаполнено(ДанныеДокумента.Представление) Тогда
		ПоложениеНомера = СтрНайти(ДанныеДокумента.Представление, ДанныеДокумента.Номер);
		Если ПоложениеНомера > 0 Тогда
			НазваниеДокумента = СокрЛП(Лев(ДанныеДокумента.Представление, ПоложениеНомера - 1));
		КонецЕсли;
	КонецЕсли;

	НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокумента.Номер);
	Возврат СтрШаблон(НСтр("ru = '%1 № %2 от %3'"),
		НазваниеДокумента, НомерНаПечать, Формат(ДанныеДокумента.Дата, "ДЛФ=DD"));
	
КонецФункции

#КонецОбласти

#КонецЕсли