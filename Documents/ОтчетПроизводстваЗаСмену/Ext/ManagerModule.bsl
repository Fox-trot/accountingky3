#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыПроведенияДокумента

// Формирует таблицу значений, содержащую данные для проведения по регистру бухгалтерии Хозрасчетный.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства, Отказ)	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	ТекстЗапроса =
		// Таблица Реквизиты.
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Регистратор,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	&СодержаниеПроводкиВыпускОтходов КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// Таблица Продукция.
		|ВЫБРАТЬ
		|	""Продукция"" КАК ИмяСписка,
		|	&СинонимПродукция КАК СинонимСписка,
		|	ВременнаяТаблицаПродукция.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаПродукция.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаПродукция.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаПродукция.СуммаПлановая КАК СуммаПлановая,
		|	ВременнаяТаблицаПродукция.Количество КАК Количество,
		|	ВременнаяТаблицаШапка.Склад КАК Склад,
		|	ВременнаяТаблицаШапка.СчетЗатрат КАК СчетЗатрат,
		|	ВременнаяТаблицаШапка.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.НоменклатурнаяГруппаВТаблице
		|			ТОГДА ВременнаяТаблицаПродукция.НоменклатурнаяГруппа
		|		ИНАЧЕ ВременнаяТаблицаШапка.НоменклатурнаяГруппа
		|	КОНЕЦ КАК НоменклатурнаяГруппаЗатрат
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаПродукция КАК ВременнаяТаблицаПродукция
		|		ПО (ИСТИНА)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

	// Таблица Выпуск.
	ТекстЗапросаФрагмент =
		"ВЫБРАТЬ
		|	""Продукция"" КАК ИмяСписка,
		|	&СинонимПродукция КАК СинонимСписка,
		|	ВременнаяТаблицаПродукция.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаПродукция.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаШапка.СчетЗатрат КАК СчетЗатрат,
		|	ВременнаяТаблицаШапка.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.НоменклатурнаяГруппаВТаблице
		|			ТОГДА ВременнаяТаблицаПродукция.НоменклатурнаяГруппа
		|		ИНАЧЕ ВременнаяТаблицаШапка.НоменклатурнаяГруппа
		|	КОНЕЦ КАК НоменклатурнаяГруппаЗатрат,
		|	ВременнаяТаблицаПродукция.СчетУчета КАК СчетСписания,
		|	ВЫБОР
		|		КОГДА ВидыСубконто1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
		|			ТОГДА ВременнаяТаблицаПродукция.Номенклатура
		|		КОГДА ВидыСубконто1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады)
		|			ТОГДА ВременнаяТаблицаШапка.Склад
		|		КОГДА ВидыСубконто1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии)
		|				И &ВедетсяУчетПоПартиям
		|			ТОГДА ВременнаяТаблицаШапка.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоСписания1,
		|	ВЫБОР
		|		КОГДА ВидыСубконто2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
		|			ТОГДА ВременнаяТаблицаПродукция.Номенклатура
		|		КОГДА ВидыСубконто2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады)
		|			ТОГДА ВременнаяТаблицаШапка.Склад
		|		КОГДА ВидыСубконто2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии)
		|				И &ВедетсяУчетПоПартиям
		|			ТОГДА ВременнаяТаблицаШапка.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоСписания2,
		|	ВЫБОР
		|		КОГДА ВидыСубконто3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
		|			ТОГДА ВременнаяТаблицаПродукция.Номенклатура
		|		КОГДА ВидыСубконто3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады)
		|			ТОГДА ВременнаяТаблицаШапка.Склад
		|		КОГДА ВидыСубконто3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии)
		|				И &ВедетсяУчетПоПартиям
		|			ТОГДА ВременнаяТаблицаШапка.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоСписания3,
		|	ВременнаяТаблицаПродукция.Количество КАК Количество,
		|	ВременнаяТаблицаПродукция.СуммаПлановая КАК ПлановаяСтоимость,
		|	ЛОЖЬ КАК ПрямыеРасходыРаспределятьПоКоличеству
		|ИЗ
		|	ВременнаяТаблицаПродукция КАК ВременнаяТаблицаПродукция
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконто1
		|		ПО ВременнаяТаблицаПродукция.СчетУчета = ВидыСубконто1.Ссылка
		|			И (ВидыСубконто1.НомерСтроки = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконто2
		|		ПО ВременнаяТаблицаПродукция.СчетУчета = ВидыСубконто2.Ссылка
		|			И (ВидыСубконто2.НомерСтроки = 2)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконто3
		|		ПО ВременнаяТаблицаПродукция.СчетУчета = ВидыСубконто3.Ссылка
		|			И (ВидыСубконто3.НомерСтроки = 3)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|		ПО ВременнаяТаблицаПродукция.СчетУчета = Хозрасчетный.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВременнаяТаблицаПродукция.НомерСтроки";
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаФрагмент + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	// Таблица Услуги.
	ТекстЗапросаФрагмент =
		"ВЫБРАТЬ
		|	""Услуги"" КАК ИмяСписка,
		|	&СинонимУслуги КАК СинонимСписка,
		|	ВременнаяТаблицаУслуги.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаУслуги.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаШапка.СчетЗатрат КАК СчетЗатрат,
		|	ВременнаяТаблицаШапка.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.НоменклатурнаяГруппаВТаблице
		|			ТОГДА ВременнаяТаблицаУслуги.НоменклатурнаяГруппа
		|		ИНАЧЕ ВременнаяТаблицаШапка.НоменклатурнаяГруппа
		|	КОНЕЦ КАК НоменклатурнаяГруппаЗатрат,
		|	ВременнаяТаблицаУслуги.СчетЗатрат КАК СчетСписания,
		|	ВременнаяТаблицаУслуги.Субконто1 КАК СубконтоСписания1,
		|	ВременнаяТаблицаУслуги.Субконто2 КАК СубконтоСписания2,
		|	ВременнаяТаблицаУслуги.Субконто3 КАК СубконтоСписания3,
		|	1 КАК ВидСубконтоСписания1,
		|	2 КАК ВидСубконтоСписания2,
		|	3 КАК ВидСубконтоСписания3,
		|	ВременнаяТаблицаУслуги.Количество КАК Количество,
		|	ВременнаяТаблицаУслуги.СуммаПлановая КАК СуммаПлановая,
		|	ВременнаяТаблицаУслуги.Содержание КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаУслуги.СуммаПлановая <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВременнаяТаблицаУслуги.НомерСтроки";
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаФрагмент + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	// Таблица Отходы.
	ТекстЗапросаФрагмент =
		"ВЫБРАТЬ
		|	""ВозвратныеОтходы"" КАК ИмяСписка,
		|	&СинонимВозвратныеОтходы КАК СинонимСписка,
		|	ВременнаяТаблицаВозвратныеОтходы.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаВозвратныеОтходы.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаШапка.СчетЗатрат КАК СчетЗатрат,
		|	ВременнаяТаблицаШапка.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.НоменклатурнаяГруппаВТаблице
		|			ТОГДА ВременнаяТаблицаВозвратныеОтходы.НоменклатурнаяГруппа
		|		ИНАЧЕ ВременнаяТаблицаШапка.НоменклатурнаяГруппа
		|	КОНЕЦ КАК НоменклатурнаяГруппаЗатрат,
		|	ВременнаяТаблицаВозвратныеОтходы.Продукция КАК Продукция,
		|	ВременнаяТаблицаВозвратныеОтходы.СтатьяЗатрат КАК СтатьяЗатрат,
		|	ВременнаяТаблицаВозвратныеОтходы.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаШапка.Склад КАК Склад,
		|	ВременнаяТаблицаВозвратныеОтходы.Количество КАК Количество,
		|	ВременнаяТаблицаВозвратныеОтходы.Сумма КАК Сумма
		|ИЗ
		|	ВременнаяТаблицаВозвратныеОтходы КАК ВременнаяТаблицаВозвратныеОтходы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВременнаяТаблицаВозвратныеОтходы.НомерСтроки";
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаФрагмент + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	// Таблица Списание материалов.
	ТекстЗапросаФрагмент = 
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Регистратор,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Склад КАК Склад,
		|	&СодержаниеПроводкиСписаниеМатериалов КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""Материалы"" КАК ИмяСписка,
		|	&СинонимМатериалы КАК СинонимСписка,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаМатериалы.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаМатериалы.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаМатериалы.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаШапка.Склад КАК Склад,
		//|	ВременнаяТаблицаМатериалы.ДокументОприходования КАК ДокументОприходования,
		//|	ВременнаяТаблицаМатериалы.Себестоимость КАК Себестоимость,
		|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
		|	0 КАК Себестоимость,
		|	ВременнаяТаблицаМатериалы.Количество КАК Количество,
		|	ВременнаяТаблицаШапка.СчетЗатрат КАК КорСчетСписания,
		|	ВременнаяТаблицаШапка.ПодразделениеЗатрат КАК КорСубконто1,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.НоменклатурнаяГруппаВТаблице
		|			ТОГДА ВременнаяТаблицаМатериалы.НоменклатурнаяГруппа
		|		ИНАЧЕ ВременнаяТаблицаШапка.НоменклатурнаяГруппа
		|	КОНЕЦ КАК КорСубконто2,
		|	ВременнаяТаблицаМатериалы.СтатьяЗатрат КАК КорСубконто3
		|ИЗ
		|	ВременнаяТаблицаМатериалы КАК ВременнаяТаблицаМатериалы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаФрагмент + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Запрос.УстановитьПараметр("СодержаниеПроводкиСписаниеМатериалов", НСтр("ru = 'Списание материалов в производство'")); 
	Запрос.УстановитьПараметр("СодержаниеПроводкиВыпускОтходов", НСтр("ru = 'Оприходование возвратных отходов'")); 
	
	Запрос.УстановитьПараметр("СинонимПродукция", НСтр("ru = 'Продукция'"));
	Запрос.УстановитьПараметр("СинонимУслуги", НСтр("ru = 'Услуги'"));
	Запрос.УстановитьПараметр("СинонимВозвратныеОтходы", НСтр("ru = 'Возвратные отходы'"));
	Запрос.УстановитьПараметр("СинонимМатериалы", НСтр("ru = 'Материалы'"));

	СпособОценкиТМЗ = БухгалтерскийУчетСервер.СпособОценкиТМЗ(СтруктураДополнительныеСвойства.ДляПроведения.Дата, 
		СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	ВедетсяУчетПоПартиям = СпособОценкиТМЗ <> Перечисления.СпособыОценки.ПоСредней;
	Запрос.УстановитьПараметр("ВедетсяУчетПоПартиям", ВедетсяУчетПоПартиям);
	
	Запрос.Текст = ТекстЗапроса;
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизиты = МассивРезультатов[0].Выгрузить();
	ТаблицаПродукция = МассивРезультатов[1].Выгрузить();
	ТаблицаВыпуск = МассивРезультатов[2].Выгрузить();
	ТаблицаУслуги = МассивРезультатов[3].Выгрузить();
	ТаблицаОтходы = МассивРезультатов[4].Выгрузить();

	ТаблицаРеквизитыМатериалы = МассивРезультатов[5].Выгрузить();
	ТаблицаМатериалы = МассивРезультатов[6].Выгрузить();
	
	ТаблицаСписанныеМатериалы = УчетТоваров.ПодготовитьТаблицуСписанныеТовары(ТаблицаМатериалы, ТаблицаРеквизитыМатериалы, Отказ);
	
	ДобавитьКолонкуСодержание(ТаблицаПродукция);
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРеквизиты", ТаблицаРеквизиты);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПродукция", ТаблицаПродукция);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаВыпуск", ТаблицаВыпуск);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаУслуги", ТаблицаУслуги);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОтходы", ТаблицаОтходы);
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРеквизитыМатериалы", ТаблицаРеквизитыМатериалы);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСписанныеМатериалы", ТаблицаСписанныеМатериалы);
	
КонецПроцедуры // СформироватьТаблицаХозрасчетный()

Процедура ДобавитьКолонкуСодержание(ТаблицаЗначений) Экспорт
	
	Если ТаблицаЗначений = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ТаблицаЗначений.Колонки.Найти("Содержание") = Неопределено Тогда
		ТаблицаЗначений.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	КонецЕсли;
	
	Для каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
		СтрокаТаблицы.Содержание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Выпуск %1", 
			БухгалтерскийУчетПовтИсп.НазваниеОбъектаПоСчетуУчета(СтрокаТаблицы.СчетУчета));
	КонецЦикла;
	
КонецПроцедуры

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства, Отказ) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.Дата КАК Дата,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.Склад КАК Склад,
		|	ТаблицаДокумента.СчетЗатрат КАК СчетЗатрат,
		|	ТаблицаДокумента.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
		|	ТаблицаДокумента.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	ТаблицаДокумента.НоменклатурнаяГруппаВТаблице КАК НоменклатурнаяГруппаВТаблице
		|ПОМЕСТИТЬ ВременнаяТаблицаШапка
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.Количество КАК Количество,
		|	ТаблицаДокумента.СуммаПлановая КАК СуммаПлановая,
		|	ТаблицаДокумента.СчетУчета КАК СчетУчета,
		|	ТаблицаДокумента.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа
		|ПОМЕСТИТЬ ВременнаяТаблицаПродукция
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену.Продукция КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.Количество КАК Количество,
		|	ТаблицаДокумента.СуммаПлановая КАК СуммаПлановая,
		|	ТаблицаДокумента.СчетЗатрат КАК СчетЗатрат,
		|	ТаблицаДокумента.Субконто1 КАК Субконто1,
		|	ТаблицаДокумента.Субконто2 КАК Субконто2,
		|	ТаблицаДокумента.Субконто3 КАК Субконто3,
		|	ТаблицаДокумента.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Номенклатура.НаименованиеПолное ПОДОБНО """"
		|			ТОГДА ТаблицаДокумента.Номенклатура.Наименование
		|		ИНАЧЕ ТаблицаДокумента.Номенклатура.НаименованиеПолное
		|	КОНЕЦ КАК Содержание
		|ПОМЕСТИТЬ ВременнаяТаблицаУслуги
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену.Услуги КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.Количество КАК Количество,
		|	ТаблицаДокумента.Сумма КАК Сумма,
		|	ТаблицаДокумента.СчетУчета КАК СчетУчета,
		|	ТаблицаДокумента.СтатьяЗатрат КАК СтатьяЗатрат,
		|	ТаблицаДокумента.Продукция КАК Продукция,
		|	ТаблицаДокумента.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа
		|ПОМЕСТИТЬ ВременнаяТаблицаВозвратныеОтходы
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену.ВозвратныеОтходы КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.Количество КАК Количество,
		|	ТаблицаДокумента.СчетУчета КАК СчетУчета,
		|	ТаблицаДокумента.СтатьяЗатрат КАК СтатьяЗатрат,
		|	ТаблицаДокумента.Продукция КАК Продукция,
		|	ТаблицаДокумента.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа
		|ПОМЕСТИТЬ ВременнаяТаблицаМатериалы
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену.Материалы КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой ПечатьНакладной
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьНакладной(МассивОбъектов, ОбъектыПечати)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ОприходованиеТоваров.Ссылка,
		|	ОприходованиеТоваров.Номер,
		|	ОприходованиеТоваров.Дата,
		|	ОприходованиеТоваров.Организация,
		|	ОприходованиеТоваров.Склад,
		|	ОприходованиеТоваров.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	ПРЕДСТАВЛЕНИЕ(ОприходованиеТоваров.Склад) КАК СкладПредставление,
		|	ОприходованиеТоваров.Продукция.(
		|		НомерСтроки,
		|		Номенклатура,
		|		Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
		|		ПРЕДСТАВЛЕНИЕ(ОприходованиеТоваров.Продукция.Номенклатура.ЕдиницаИзмерения) КАК ЕИ,
		|		Количество,
		|		Цена,
		|		Сумма
		|	)
		|ИЗ
		|	Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
		|ГДЕ
		|	ОприходованиеТоваров.Ссылка В(&СписокДокументов)";		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОприходованиеТоваров_Накладная";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОприходованиеТоваров.ПФ_MXL_Накладная");
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;
		
		ТекстЗаголовка = СформироватьЗаголовокДокумента(Шапка, НСтр("ru = 'Накладная на оприходование'"));
		ДанныеПечати.Вставить("ТекстЗаголовка", ТекстЗаголовка);
		ДанныеПечати.Вставить("ОрганизацияПредставление", Шапка.ОрганизацияНаименованиеПолное);
		ДанныеПечати.Вставить("СкладПредставление", Шапка.СкладПредставление);

		ТаблицаПродукция = Шапка.Продукция.Выгрузить();
		
		ДанныеПечати.Вставить("Всего", ТаблицаПродукция.Итог("Сумма"));
		ДанныеПечати.Вставить("ИтоговаяСтрока", 
			СтрШаблон(НСтр("ru = 'Всего наименований %1, на сумму %2'"), 
			Формат(ТаблицаПродукция.Количество(), "ЧН=0; ЧГ=0"), 
			Формат(ДанныеПечати.Всего, "ЧЦ=15; ЧДЦ=2")));
		ДанныеПечати.Вставить("СуммаПрописью", БухгалтерскийУчетСервер.СформироватьСуммуПрописью(ДанныеПечати.Всего));
		
		ДанныеПечатиСебестоимость = Новый Структура;
		ДанныеПечатиСебестоимость.Вставить("Цена", 0);
		ДанныеПечатиСебестоимость.Вставить("Сумма", 0);

		ПараметрыОтбора = Новый Структура("Регистратор, Номенклатура", Шапка.Ссылка, Неопределено);
		
		// Области
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Заголовок");
		МассивОбластейМакета.Добавить("ШапкаТаблицы");
		МассивОбластейМакета.Добавить("Строка");
		МассивОбластейМакета.Добавить("Подвал");
		МассивОбластейМакета.Добавить("Итоги");
		МассивОбластейМакета.Добавить("СуммаПрописью");
		МассивОбластейМакета.Добавить("Подписи");

		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ИмяОбласти <> "Строка" Тогда
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			ИначеЕсли ИмяОбласти = "Строка" Тогда 
				Для Каждого СтрокаТаблицы Из ТаблицаПродукция Цикл
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"Накладная", 
		НСтр("ru = 'Накладная'"), 
		ПечатьНакладной(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОприходованиеТоваров.ПФ_MXL_Накладная");
	КонецЕсли;	
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru = 'Накладная'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "РеестрОприходованиеТоваров";
	КомандаПечати.Представление  = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Реестр документов ""Оприходование товаров""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает заголовок документа для печатной формы.
//
// Параметры:
//  Шапка - любая структура с полями:
//           Номер         - Строка или Число - номер документа;
//           Дата          - Дата - дата документа;
//           Представление - Строка - (необязательный) платформенное представление ссылки на документ.
//                                    Если параметр НазваниеДокумента не задан, то название документа будет вычисляться
//                                    из этого параметра.
//  НазваниеДокумента - Строка - название документа (например, "Счет на оплату").
//
// Возвращаемое значение:
//  Строка - заголовок документа.
//
Функция СформироватьЗаголовокДокумента(Шапка, Знач НазваниеДокумента = "")
	
	ДанныеДокумента = Новый Структура("Номер,Дата,Представление");
	ЗаполнитьЗначенияСвойств(ДанныеДокумента, Шапка);
	
	// Если название документа не передано, получим название по представлению документа.
	Если ПустаяСтрока(НазваниеДокумента) И ЗначениеЗаполнено(ДанныеДокумента.Представление) Тогда
		ПоложениеНомера = СтрНайти(ДанныеДокумента.Представление, ДанныеДокумента.Номер);
		Если ПоложениеНомера > 0 Тогда
			НазваниеДокумента = СокрЛП(Лев(ДанныеДокумента.Представление, ПоложениеНомера - 1));
		КонецЕсли;
	КонецЕсли;

	НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокумента.Номер);
	Возврат СтрШаблон(НСтр("ru = '%1 № %2 от %3'"),
		НазваниеДокумента, НомерНаПечать, Формат(ДанныеДокумента.Дата, "ДЛФ=DD"));
	
КонецФункции

#КонецОбласти

#КонецЕсли
