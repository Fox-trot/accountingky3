#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПроцедурыПроведенияДокумента

Процедура СформироватьТаблицаМестонахождениеОС(ДокументСсылка, СтруктураДополнительныеСвойства)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.МОЛПолучатель КАК МОЛ,
		|	ВременнаяТаблицаШапка.ПодразделениеПолучатель КАК Подразделение,
		|	ВременнаяТаблицаШапка.МОЛОтправитель КАК МОЛДо,
		|	ВременнаяТаблицаШапка.ПодразделениеОтправитель КАК ПодразделениеДо,
		|	ВременнаяТаблицаОС.ОсновноеСредство
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаМестонахождениеОС", РезультатЗапроса.Выгрузить()); 	
КонецПроцедуры 

Процедура СформироватьТаблицаСобытияОС(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СобытиеОС КАК Событие,
		|	ВременнаяТаблицаШапка.Номер КАК НомерДокумента,
		|	ВременнаяТаблицаШапка.Ссылка КАК НазваниеДокумента,
		|	ВременнаяТаблицаОС.ОсновноеСредство,
		|	ИСТИНА КАК ПередачаСИзносом
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСобытияОС", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Дата,
		|	ТаблицаДокумента.Номер,
		|	ТаблицаДокумента.Организация,
		|	ТаблицаДокумента.СобытиеОС,
		|	ТаблицаДокумента.ПодразделениеПолучатель,
		|	ТаблицаДокумента.МОЛПолучатель,
		|	ТаблицаДокумента.ПодразделениеОтправитель,
		|	ТаблицаДокумента.МОЛОтправитель
		|ПОМЕСТИТЬ ВременнаяТаблицаШапка
		|ИЗ
		|	Документ.ПеремещениеОС КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.ОсновноеСредство
		|ПОМЕСТИТЬ ВременнаяТаблицаОС
		|ИЗ
		|	Документ.ПеремещениеОС.ОС КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Выполнить();    		        			
	
	СформироватьТаблицаМестонахождениеОС(ДокументСсылка, СтруктураДополнительныеСвойства); 
	СформироватьТаблицаСобытияОС(ДокументСсылка, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает заголовок документа для печатной формы.
//
// Параметры:
//  Шапка - любая структура с полями:
//           Номер         - Строка или Число - номер документа;
//           Дата          - Дата - дата документа;
//           Представление - Строка - (необязательный) платформенное представление ссылки на документ.
//                                    Если параметр НазваниеДокумента не задан, то название документа будет вычисляться
//                                    из этого параметра.
//  НазваниеДокумента - Строка - название документа (например, "Счет на оплату").
//
// Возвращаемое значение:
//  Строка - заголовок документа.
//
Функция СформироватьЗаголовокДокумента(Шапка, Знач НазваниеДокумента = "") Экспорт
	
	ДанныеДокумента = Новый Структура("Номер,Дата,Представление");
	ЗаполнитьЗначенияСвойств(ДанныеДокумента, Шапка);
	
	// Если название документа не передано, получим название по представлению документа.
	Если ПустаяСтрока(НазваниеДокумента) И ЗначениеЗаполнено(ДанныеДокумента.Представление) Тогда
		ПоложениеНомера = СтрНайти(ДанныеДокумента.Представление, ДанныеДокумента.Номер);
		Если ПоложениеНомера > 0 Тогда
			НазваниеДокумента = СокрЛП(Лев(ДанныеДокумента.Представление, ПоложениеНомера - 1));
		КонецЕсли;
	КонецЕсли;

	НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеДокумента.Номер);
	Возврат СтрШаблон(НСтр("ru = '%1 № %2 от %3'"),
		НазваниеДокумента, НомерНаПечать, Формат(ДанныеДокумента.Дата, "ДЛФ=DD"));
	
КонецФункции

#КонецОбласти

#Область ИнтерфейсПечати

// Формирует и возвращает текст запроса для выборки данных,
// необходимых для формирования печатной формы
//
Функция ПолучитьТекстЗапросаПеремещениеОС()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПеремещениеОСОС.Ссылка,
	|	ПеремещениеОСОС.НомерСтроки,
	|	ПеремещениеОСОС.ОсновноеСредство,
	|	ПеремещениеОСОС.Ссылка.ПодразделениеОтправитель КАК ПодразделениеОС,
	|	ПеремещениеОСОС.Ссылка.МОЛОтправитель КАК МОЛОС,
	|	ПеремещениеОСОС.АмортизацияЗаМесяц,
	|	ПеремещениеОСОС.ПервоначальнаяСтоимость,
	|	ПеремещениеОСОС.СчетУчета,
	|	ПеремещениеОСОС.ИнвентарныйНомер,
	|	ПеремещениеОСОС.Ссылка.Номер КАК Номер,
	|	ПеремещениеОСОС.Ссылка.Дата КАК Дата,
	|	ПеремещениеОСОС.Ссылка.МОЛПолучатель КАК МОЛ,
	|	ПеремещениеОСОС.Ссылка.Организация,
	|	ПеремещениеОСОС.Ссылка.ПодразделениеПолучатель КАК Подразделение,
	|	ПеремещениеОСОС.Ссылка.СобытиеОС,
	|	ПеремещениеОСОС.ОсновноеСредство.Наименование,
	|	ПеремещениеОСОС.СчетУчета.Код
	|ИЗ
	|	Документ.ПеремещениеОС.ОС КАК ПеремещениеОСОС
	|ГДЕ
	|	ПеремещениеОСОС.Ссылка В(&МассивОбъектов)
	|ИТОГИ
	|	МАКСИМУМ(ПодразделениеОС),
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(Дата),
	|	МАКСИМУМ(МОЛ),
	|	МАКСИМУМ(Подразделение)
	|ПО
	|	МОЛОС";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция формирует табличный документ с печатной формой ПеремещениеОС
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьНакладной(МассивОбъектов, ОбъектыПечати)
	Перем Ошибки;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати 	= "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеОС_Накладная";
	ТабличныйДокумент.ИмяПараметровПечати 	= "ПеремещениеОС_Накладная";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеОС.ПФ_MXL_Накладная");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = ПолучитьТекстЗапросаПеремещениеОС();
	
	РезультатЗапроса 	= Запрос.Выполнить();
	Шапка 				= РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока Шапка.Следующий()  Цикл
		//Выводим из таблицы: на каждого МОЛ-получатель своя накладная
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовок = СформироватьЗаголовокДокумента(Шапка, НСтр("ru = 'Накладная на перемещение'"));
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		СтрокаТаблицы = Шапка.Выбрать();
		Пока СтрокаТаблицы.Следующий() Цикл
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			ТабличныйДокумент.Вывести(ОбластьМакета);			
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Если НЕ Ошибки = Неопределено Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
	КонецЕсли;	
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	// Добавление дополнительных параметров
	БухгалтерскиеОтчетыКлиентСервер.ЗаполнитьДополнительныеПараметрыПечати(ТабличныйДокумент);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьАктаПриемаПередачи(МассивОбъектов, ОбъектыПечати)
	Перем Ошибки;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати 	= "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеОС_ПечатьАктПриемаПередачи";
	ТабличныйДокумент.ИмяПараметровПечати 	= "ПеремещениеОС_АктПриемаПередачи";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеОС.ПФ_MXL_АктПриемаПередачи");
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеОС.Ссылка,
	|	ПеремещениеОС.Номер,
	|	ПеремещениеОС.Дата,
	|	ПеремещениеОС.Дата КАК ДатаДокумента,
	|	ПеремещениеОС.Организация,
	|	ПеремещениеОС.Организация.НаименованиеПолное,
	|	ПеремещениеОС.МОЛПолучатель,
	|	ПеремещениеОС.МОЛОтправитель,
	|	ПеремещениеОС.ПодразделениеПолучатель.Наименование,
	|	ПеремещениеОС.НомерПриказаОснования,
	|	ПеремещениеОС.ДатаПриказаОснования,
	|	ПеремещениеОС.ОС.(
	|		НомерСтроки,
	|		ОсновноеСредство,
	|		ИнвентарныйНомер,
	|		ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер,
	|		ОсновноеСредство.ДатаВыпуска КАК ГодВыпуска,
	|		1 КАК КоличествоБУ,
	|		ОсновноеСредство.Наименование,
	|		ПервоначальнаяСтоимость КАК СтоимостьБУ
	|	),
	|	ПеремещениеОС.Комиссия.(
	|		ФизЛицо,
	|		Председатель
	|	)
	|ИЗ
	|	Документ.ПеремещениеОС КАК ПеремещениеОС
	|ГДЕ
	|	ПеремещениеОС.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеремещениеОСОС.СчетУчета
	|ИЗ
	|	Документ.ПеремещениеОС.ОС КАК ПеремещениеОСОС
	|ГДЕ
	|	ПеремещениеОСОС.Ссылка В(&МассивОбъектов)";		
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);		
	МассивРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	Шапка = МассивРезультатовЗапроса[0].Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока Шапка.Следующий() Цикл		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");		
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.Заголовок = СформироватьЗаголовокДокумента(Шапка, НСтр("ru = 'Акт приема передачи'"));
		
		ДанныеФизЛица = БухгалтерскийУчетСервер.ДанныеФизЛица(Шапка.Организация, Шапка.МОЛОтправитель, Шапка.ДатаДокумента);
		ОбластьМакета.Параметры.Должность = ДанныеФизЛица.Должность;
		ОбластьМакета.Параметры.МОЛОтправитель = ДанныеФизЛица.Представление;
		
		ДанныеФизЛица = БухгалтерскийУчетСервер.ДанныеФизЛица(Шапка.Организация, Шапка.МОЛПолучатель, Шапка.ДатаДокумента);
		ОбластьМакета.Параметры.МОЛПолучатель = ДанныеФизЛица.Представление;
		
		ОбластьМакета.Параметры.Дата = Формат(Шапка.Дата, "ДФ=dd.MM.yyyy");
		ОбластьМакета.Параметры.НомерПриказаОснования = Шапка.НомерПриказаОснования;
		ОбластьМакета.Параметры.ДатаПриказаОснования = Формат(Шапка.ДатаПриказаОснования, "ДФ=dd.MM.yyyy");
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.ЗагрузитьЗначения(МассивРезультатовЗапроса[1].Выгрузить().ВыгрузитьКолонку("СчетУчета"));
		ОбластьМакета.Параметры.СписокСчетов = СписокСчетов;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ВременнаяТаблицаОС = Шапка.ОС.Выгрузить();
		Для каждого СтрокаТаблицы Из ВременнаяТаблицаОС Цикл		
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы");
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			ПараметрыУчетаОС = УправлениеВнеоборотнымиАктивамиВызовСервера.ПолучитьПараметрыУчетаОС(Шапка.ДатаДокумента, 
				Шапка.Организация, СтрокаТаблицы.ОсновноеСредство);

			ОбластьМакета.Параметры.СрокСлужбы = ПараметрыУчетаОС.СрокСлужбы;
			ОбластьМакета.Параметры.ДатаВводаВЭксплуатацию = ПараметрыУчетаОС.ДатаВводаВЭксплуатацию;
				
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоТаблицы");
		ОбластьМакета.Параметры.КоличествоБУ = ВременнаяТаблицаОС.Итог("КоличествоБУ");
		ОбластьМакета.Параметры.СтоимостьБУ = ВременнаяТаблицаОС.Итог("СтоимостьБУ");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("СредняяОбласть");			
		ТабличныйДокумент.Вывести(ОбластьМакета);			

		ОбластьМакета = Макет.ПолучитьОбласть("ПодписиКомиссия");

		// Формирование комиссии
		ПервыйРядовойЧленКомиссиии = Истина;	
		ВыборкаКомиссия = Шапка.Комиссия.Выбрать();
		Пока ВыборкаКомиссия.Следующий() Цикл
			Если ВыборкаКомиссия.Председатель Тогда
				ЗаголовокРазделаКомиссии = "Председатель комиссии";
			ИначеЕсли ПервыйРядовойЧленКомиссиии Тогда
				ЗаголовокРазделаКомиссии = "Члены комиссии";
				ПервыйРядовойЧленКомиссиии = Ложь;				
			Иначе
				ЗаголовокРазделаКомиссии = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.Заполнить(ВыборкаКомиссия);
			ОбластьМакета.Параметры.ЗаголовокРазделаКомиссии = ЗаголовокРазделаКомиссии;

			ДанныеФизЛица = БухгалтерскийУчетСервер.ДанныеФизЛица(Шапка.Организация, ВыборкаКомиссия.ФизЛицо, Шапка.ДатаДокумента);
			ОбластьМакета.Параметры.Должность 			= ДанныеФизЛица.Должность;
			ОбластьМакета.Параметры.РасшифровкаПодписи	= ДанныеФизЛица.Представление;						
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодписиМОЛ");
		ОбластьМакета.Параметры.МОЛОтправитель = Шапка.МолОтправитель;
		ОбластьМакета.Параметры.МОлПолучатель = Шапка.МОЛПолучатель;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Если НЕ Ошибки = Неопределено Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
	КонецЕсли;	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	// Добавление дополнительных параметров
	БухгалтерскиеОтчетыКлиентСервер.ЗаполнитьДополнительныеПараметрыПечати(ТабличныйДокумент);
	
	Возврат ТабличныйДокумент;	
	
КонецФункции // ПечатьАктаПриемаПередачи()

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	// Проверяем, нужно ли для макета ПКО формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПеремещениеОС") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПеремещениеОС", НСтр("ru = 'Накладная'"), ПечатьНакладной(МассивОбъектов, ОбъектыПечати),,
		"Документ.ПеремещениеОС.ПФ_MXL_Накладная");
	КонецЕсли;
	
	//// Проверяем, нужно ли для макета ПКО формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПеремещениеОС_АктПриемаПередачи") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПеремещениеОС_АктПриемаПередачи", НСтр("ru = 'Акт приема-передачи'"), ПечатьАктаПриемаПередачи(МассивОбъектов, ОбъектыПечати),,
		"Документ.ПеремещениеОС.ПФ_MXL_АктПриемаПередачи");
	КонецЕсли;
	
	//УправлениеПечатью.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПеремещениеОС";
	КомандаПечати.Представление = НСтр("ru = 'Накладная'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПеремещениеОС_АктПриемаПередачи";
	КомандаПечати.Представление = НСтр("ru = 'Акт приема-передачи'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 2;
КонецПроцедуры

#КонецОбласти


#КонецЕсли
