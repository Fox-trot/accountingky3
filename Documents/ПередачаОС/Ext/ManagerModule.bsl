#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПроцедурыПроведенияДокумента

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	1 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ТаблицаДокумента.СпособОтраженияРасходовПоАмортизации.СчетЗатрат КАК СчетДт,
		|	ТаблицаДокумента.СчетУчета.ПарныйСчет КАК СчетКт,
		|	ВременнаяТаблицаШапка.СтатьяЗатрат КАК СубконтоДт1,
		|	ВременнаяТаблицаШапка.Подразделение КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	ТаблицаДокумента.ОсновноеСредство КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ТаблицаДокумента.АмортизацияЗаМесяц КАК Сумма,
		|	&ВалютаРегламентированногоУчета КАК ВалютаДт,
		|	ТаблицаДокумента.АмортизацияЗаМесяц КАК ВалютнаяСуммаДт,
		|	&ВалютаРегламентированногоУчета КАК ВалютаКт,
		|	ТаблицаДокумента.АмортизацияЗаМесяц КАК ВалютнаяСуммаКт,
		|	""Начисление износа за ОС"" КАК Содержание,
		|	1 КАК КоличествоДт,
		|	1 КАК КоличествоКт
		|ИЗ
		|	ВременнаяТаблицаОС КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ТаблицаДокумента.АмортизацияЗаМесяц = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетовПокупателя,
		|	ТаблицаДокумента.СчетУчета,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	ТаблицаДокумента.ОсновноеСредство,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ТаблицаДокумента.ПервоначальнаяСтоимость,
		|	&ВалютаРегламентированногоУчета,
		|	ТаблицаДокумента.ПервоначальнаяСтоимость,
		|	&ВалютаРегламентированногоУчета,
		|	ТаблицаДокумента.ПервоначальнаяСтоимость,
		|	""Списание стоимости ОС"",
		|	1,
		|	1
		|ИЗ
		|	ВременнаяТаблицаОС КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаШапка.ПередачаСИзносом
		|	И НЕ ТаблицаДокумента.ПервоначальнаяСтоимость = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетовПокупателя,
		|	ТаблицаДокумента.СчетУчета,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	ТаблицаДокумента.ОсновноеСредство,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ТаблицаДокумента.ПервоначальнаяСтоимость - ТаблицаДокумента.НакопленнаяАмортизация - ТаблицаДокумента.АмортизацияЗаМесяц,
		|	&ВалютаРегламентированногоУчета,
		|	ТаблицаДокумента.ПервоначальнаяСтоимость - ТаблицаДокумента.НакопленнаяАмортизация - ТаблицаДокумента.АмортизацияЗаМесяц,
		|	&ВалютаРегламентированногоУчета,
		|	ТаблицаДокумента.ПервоначальнаяСтоимость - ТаблицаДокумента.НакопленнаяАмортизация - ТаблицаДокумента.АмортизацияЗаМесяц,
		|	""Списание стоимости ОС"",
		|	1,
		|	1
		|ИЗ
		|	ВременнаяТаблицаОС КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаШапка.ПередачаСИзносом
		|	И НЕ ТаблицаДокумента.ПервоначальнаяСтоимость - ТаблицаДокумента.НакопленнаяАмортизация - ТаблицаДокумента.АмортизацияЗаМесяц = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	4,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ТаблицаДокумента.СчетУчета.ПарныйСчет,
		|	ВременнаяТаблицаШапка.СчетРасчетовПокупателя,
		|	ТаблицаДокумента.ОсновноеСредство,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	ТаблицаДокумента.НакопленнаяАмортизация + ТаблицаДокумента.АмортизацияЗаМесяц,
		|	&ВалютаРегламентированногоУчета,
		|	ТаблицаДокумента.НакопленнаяАмортизация + ТаблицаДокумента.АмортизацияЗаМесяц,
		|	&ВалютаРегламентированногоУчета,
		|	ТаблицаДокумента.НакопленнаяАмортизация + ТаблицаДокумента.АмортизацияЗаМесяц,
		|	""Накопленный износ ОС"",
		|	1,
		|	1
		|ИЗ
		|	ВременнаяТаблицаОС КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаШапка.ПередачаСИзносом
		|	И НЕ ТаблицаДокумента.НакопленнаяАмортизация + ТаблицаДокумента.АмортизацияЗаМесяц = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	5,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ТаблицаДокумента.СчетУчета.ПарныйСчет,
		|	ТаблицаДокумента.СчетУчета,
		|	ТаблицаДокумента.ОсновноеСредство,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	ТаблицаДокумента.НакопленнаяАмортизация + ТаблицаДокумента.АмортизацияЗаМесяц,
		|	&ВалютаРегламентированногоУчета,
		|	ТаблицаДокумента.НакопленнаяАмортизация + ТаблицаДокумента.АмортизацияЗаМесяц,
		|	&ВалютаРегламентированногоУчета,
		|	ТаблицаДокумента.НакопленнаяАмортизация + ТаблицаДокумента.АмортизацияЗаМесяц,
		|	""Накопленный износ ОС"",
		|	1,
		|	1
		|ИЗ
		|	ВременнаяТаблицаОС КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаШапка.ПередачаСИзносом
		|	И НЕ ТаблицаДокумента.НакопленнаяАмортизация + ТаблицаДокумента.АмортизацияЗаМесяц = 0";
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", СтруктураДополнительныеСвойства.ДляПроведения.ВалютаРегламентированногоУчета);	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаХозрасчетный", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСостоянияОС(ДокументСсылка, СтруктураДополнительныеСвойства)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ТаблицаДокумента.ОсновноеСредство,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.Передано) КАК Состояние
		|ИЗ
		|	ВременнаяТаблицаОС КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСостоянияОС", РезультатЗапроса.Выгрузить()); 
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСобытияОС(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ТаблицаДокумента.ОсновноеСредство,
		|	ВременнаяТаблицаШапка.СобытиеОС КАК Событие,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ПередачаСИзносом,
		|	ВременнаяТаблицаШапка.Номер КАК НомерДокумента,
		|	""Передача ОС"" КАК НазваниеДокумента
		|ИЗ
		|	ВременнаяТаблицаОС КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСобытияОС", РезультатЗапроса.Выгрузить());
КонецПроцедуры     

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДвижениеОСНУ(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ПараметрыУчетаОССрезПоследних.ГруппаНУ КАК ГруппаНУ,
		|	ТаблицаДокумента.ОсновноеСредство,
		|	ТаблицаДокумента.ПервоначальнаяСтоимость КАК Выбытие,
		|	ТаблицаДокумента.ПервоначальнаяСтоимость * (12 - МЕСЯЦ(ВременнаяТаблицаШапка.Дата) + 0.5) / 12 КАК ТекущееВыбытие
		|ИЗ
		|	ВременнаяТаблицаОС КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|				&Период,
		|				Организация = &Организация
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							ТаблицаДокумента.ОсновноеСредство
		|						ИЗ
		|							ВременнаяТаблицаОС КАК ТаблицаДокумента)) КАК ПараметрыУчетаОССрезПоследних
		|		ПО ТаблицаДокумента.ОсновноеСредство = ПараметрыУчетаОССрезПоследних.ОсновноеСредство";
	Запрос.УстановитьПараметр("Период", СтруктураДополнительныеСвойства.ДляПроведения.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвижениеОСНУ", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры 

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Дата,
		|	ТаблицаДокумента.Организация,
		|	ТаблицаДокумента.СобытиеОС,
		|	ТаблицаДокумента.Контрагент,
		|	ТаблицаДокумента.ДоговорКонтрагента,
		|	ТаблицаДокумента.СтатьяЗатрат,
		|	ТаблицаДокумента.Номер,
		|	ТаблицаДокумента.Подразделение,
		|	ТаблицаДокумента.СчетРасчетовПокупателя,
		|	ЛОЖЬ КАК ПередачаСИзносом
		|ПОМЕСТИТЬ ВременнаяТаблицаШапка
		|ИЗ
		|	Документ.ПередачаОС КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.ОсновноеСредство,
		|	ТаблицаДокумента.ПервоначальнаяСтоимость,
		|	ТаблицаДокумента.ЛиквидационнаяСтоимость,
		|	ТаблицаДокумента.ОстаточнаяСтоимость,
		|	ТаблицаДокумента.НакопленнаяАмортизация,
		|	ТаблицаДокумента.АмортизацияЗаМесяц,
		|	ТаблицаДокумента.СчетУчета,
		|	ТаблицаДокумента.СпособОтраженияРасходовПоАмортизации
		|ПОМЕСТИТЬ ВременнаяТаблицаОС
		|ИЗ
		|	Документ.ПередачаОС.ОС КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Выполнить();      	
	
	СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства);			 
	СформироватьТаблицаСостоянияОС(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСобытияОС(ДокументСсылка, СтруктураДополнительныеСвойства); 	
	СформироватьТаблицаДвижениеОСНУ(ДокументСсылка, СтруктураДополнительныеСвойства); 
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой Накладной на передачу ОС
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьНакладной(МассивОбъектов, ОбъектыПечати)
	Перем Ошибки;
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати 	= "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаОС_Накладная";
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаОС.Ссылка,
	|	ПередачаОС.Номер,
	|	ПередачаОС.Дата КАК ДатаДокумента,
	|	ПередачаОС.Контрагент.НаименованиеПолное КАК КонтрагентНаименованиеПолное,
	|	ПередачаОС.ДоговорКонтрагента,
	|	ПередачаОС.Организация.НаименованиеПолное,
	|	ПередачаОС.ОС.(
	|		Ссылка,
	|		НомерСтроки,
	|		ОсновноеСредство,
	|		ИнвентарныйНомер,
	|		ОстаточнаяСтоимость
	|	)
	|ИЗ
	|	Документ.ПередачаОС КАК ПередачаОС
	|ГДЕ
	|	ПередачаОС.Ссылка В(&СписокДокументов)";
	
	
	ВыборкаДляПечати = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаДляПечати.Следующий()  Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ТабличныйДокумент.ИмяПараметровПечати 	= "ПередачаОС_Накладная";
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПередачаОС.ПФ_MXL_ПередачаОС");
		
		//Выводим заголовок
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовок = "Накладная на передачу №   " + ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаДляПечати.Номер)+ " от " + Формат(ВыборкаДляПечати.ДатаДокумента, "ДЛФ=DD");
		ОбластьМакета.Параметры.Заполнить(ВыборкаДляПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		//Выводим шапку
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьМакета.Параметры.Заполнить(ВыборкаДляПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		//Выводим строку
		СтрокаТаблицы = ВыборкаДляПечати.ОС.Выбрать();
		Пока СтрокаТаблицы.Следующий() Цикл
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			ОбластьМакета.Параметры.ИнвентарныйНомер = СтрокаТаблицы.ИнвентарныйНомер;
			ОбластьМакета.Параметры.Количество = 1;	
			ОбластьМакета.Параметры.Цена = СтрокаТаблицы.ОстаточнаяСтоимость;
			ОбластьМакета.Параметры.Сумма = СтрокаТаблицы.ОстаточнаяСтоимость;
			ТабличныйДокумент.Вывести(ОбластьМакета);			
		КонецЦикла;
		
		//Выводим Итоги
		ВсегоСумма = 0;
		СтрокаТаблицы = ВыборкаДляПечати.ОС.Выбрать();
		Пока СтрокаТаблицы.Следующий() Цикл
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогиТаблицы");
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			ВсегоСумма = ВсегоСумма + СтрокаТаблицы.ОстаточнаяСтоимость;
		КонецЦикла;
		ОбластьМакета.Параметры.Всего = ВсегоСумма;
		ТабличныйДокумент.Вывести(ОбластьМакета);			
		
		//Выводим Сумму прописью
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		ОбластьМакета.Параметры.Заполнить(ВыборкаДляПечати);
		ОбластьМакета.Параметры.ИтоговаяСтрока = "Всего наименований " + Формат(ВыборкаДляПечати.ОС.Выбрать().КОличество(), "ЧЦ=3") + ", на сумму " + Формат(ВсегоСумма,"ЧЦ=15; ЧДЦ=2") + " сом";
		ОбластьМакета.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ВсегоСумма,ВалютаРегламентированногоУчета);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		//Выводим подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(ВыборкаДляПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДляПечати.Ссылка);
		
	КонецЦикла;
	
	Если НЕ Ошибки = Неопределено Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
	КонецЕсли;	
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьАктаПриемаПередачи(МассивОбъектов, ОбъектыПечати)
	Перем Ошибки;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати 	= "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаОС_ПечатьАктПриемаПередачи";
	ТабличныйДокумент.ИмяПараметровПечати 	= "ПередачаОС_ПечатьАктПриемаПередачи";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПередачаОС.ПФ_MXL_АктПриемаПередачи");
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СостоянияОССрезПоследних.Период КАК ДатаПринятияКУчету,
	|	СостоянияОССрезПоследних.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.СостоянияОС.СрезПоследних(, Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.ПринятоКУчету)) КАК СостоянияОССрезПоследних
	|ГДЕ
	|	СостоянияОССрезПоследних.ОсновноеСредство В
	|			(ВЫБРАТЬ
	|				ПередачаОСОС.ОсновноеСредство
	|			ИЗ
	|				Документ.ПередачаОС.ОС КАК ПередачаОСОС
	|			ГДЕ
	|				ПередачаОСОС.Ссылка В (&МассивОбъектов))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаОС.Ссылка,
	|	ПередачаОС.Номер,
	|	ПередачаОС.Дата,
	|	ПередачаОС.Организация,
	|	ПередачаОС.ОС.(
	|		Ссылка,
	|		НомерСтроки,
	|		ОсновноеСредство,
	|		ИнвентарныйНомер,
	|		ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер,
	|		ОсновноеСредство.ДатаВыпуска КАК ГодВыпуска,
	|		1 КАК КоличествоБУ,
	|		ОсновноеСредство.Наименование,
	|		ПервоначальнаяСтоимость КАК СтоимостьБУ,
	|		СрокСлужбы
	|	),
	|	ПередачаОС.Организация.НаименованиеПолное,
	|	ПередачаОС.Контрагент.НаименованиеПолное КАК КонтрагентНаименованиеПолное,
	|	ПередачаОС.ДоговорКонтрагента.Наименование,
	|	ПередачаОС.Подразделение.Наименование,
	|	ПередачаОС.МОЛ.Наименование,
	|	ПередачаОС.Комиссия.(
	|		Ссылка,
	|		НомерСтроки,
	|		ФизЛицо,
	|		Председатель
	|	)
	|ИЗ
	|	Документ.ПередачаОС КАК ПередачаОС
	|ГДЕ
	|	ПередачаОС.Ссылка В(&МассивОбъектов)";		
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);		
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	МассивЗначений = РезультатЗапроса[0].Выгрузить();
	Шапка = РезультатЗапроса[1].Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока Шапка.Следующий() Цикл		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");		
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ДатаНомер	= "Списание ОС № " + ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.Номер) + " от " + Формат(Шапка.Дата, "ДФ=dd.MM.yyyy");
		ОбластьМакета.Параметры.Дата		= Формат(Шапка.Дата, "ДФ=dd.MM.yyyy");
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ВременнаяТаблицаОС = Шапка.ОС.Выгрузить();
		Для каждого СтрокаТаблицы Из ВременнаяТаблицаОС Цикл		
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы");
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			Структура= МассивЗначений.Найти(СтрокаТаблицы.ОсновноеСредство);
			Если НЕ Структура = Неопределено Тогда
				ОбластьМакета.Параметры.ДатаПринятияКУчету = Структура.ДатаПринятияКУчету;
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоТаблицы");
		ОбластьМакета.Параметры.КоличествоБУ = ВременнаяТаблицаОС.Итог("КоличествоБУ");
		ОбластьМакета.Параметры.СтоимостьБУ = ВременнаяТаблицаОС.Итог("СтоимостьБУ");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("СредняяОбласть");			
		ТабличныйДокумент.Вывести(ОбластьМакета);			
		
		//Выводим комиссию
		ВыборкаСтрокКомиссия = Шапка.Комиссия.Выбрать();
		ПервыйРядовойЧленКомиссиии = Истина;	
		
		Пока ВыборкаСтрокКомиссия.Следующий() Цикл
			Если ВыборкаСтрокКомиссия.Председатель Тогда
				ЗаголовокРазделаКомиссии = "Председатель комиссии";
			ИначеЕсли ПервыйРядовойЧленКомиссиии Тогда
				ЗаголовокРазделаКомиссии = "Члены комиссии";
				ПервыйРядовойЧленКомиссиии = Ложь;				
			Иначе
				ЗаголовокРазделаКомиссии = "";
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Комиссия");
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокКомиссия);
			ФИО = "";
			БухгалтерскийУчетСервер.ФамилияИнициалыПоНаименованию(Фио,ВыборкаСтрокКомиссия.ФизЛицо);
			ОбластьМакета.Параметры.РасшифровкаПодписи = Фио;
			
			ОбластьМакета.Параметры.ЗаголовокРазделаКомиссии = ЗаголовокРазделаКомиссии;
			ОбластьМакета.Параметры.Должность= БухгалтерскийУчетСервер.ДанныеФизЛица(Шапка.Организация, ВыборкаСтрокКомиссия.ФизЛицо, Шапка.Дата).Должность;
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// В табличном документе зададим имя области, в которую был 
			// выведен объект. Нужно для возможности печати покомплектно.
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
			
		КонецЦикла;
	КонецЦикла;
	Если НЕ Ошибки = Неопределено Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
	КонецЕсли;	
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	// Добавление дополнительных параметров
	БухгалтерскиеОтчетыКлиентСервер.ЗаполнитьДополнительныеПараметрыПечати(ТабличныйДокумент);
	
	Возврат ТабличныйДокумент;	
	
КонецФункции // ПечатьАктаПриемаПередачи()

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПередачаОС";
	КомандаПечати.Представление = НСтр("ru = 'Накладная'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктПриемаПередачи";
	КомандаПечати.Представление = НСтр("ru = 'Акт приема – передачи'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 2;
		
КонецПроцедуры

//Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	//	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПередачаОС") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПередачаОС", НСтр("ru = 'Накладная'"), ПечатьНакладной(МассивОбъектов, ОбъектыПечати),,
		"Документ.ПередачаОС.ПФ_MXL_ПередачаОС");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктПриемаПередачи") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"АктПриемаПередачи", НСтр("ru = 'Акт приема – передачи'"), ПечатьАктаПриемаПередачи(МассивОбъектов, ОбъектыПечати),,
		"Документ.ПередачаОС.ПФ_MXL_АктПриемаПередачи");
	КонецЕсли;
		
	//УправлениеПечатью.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
	
КонецПроцедуры

#КонецОбласти
	
#КонецЕсли

