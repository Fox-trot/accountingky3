#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыПроведенияДокумента

Процедура СформироватьТаблицаЗапасы(ДокументСсылка, СтруктураДополнительныеСвойства)
	Если СтруктураДополнительныеСвойства.ДляПроведения.СпособОценки = Перечисления.СпособыОценки.ФИФО 
		И СтруктураДополнительныеСвойства.ДляПроведения.ПодборНоменклатурыПоПартии Тогда
		
		БухгалтерскийУчетСервер.СформироватьТаблицаЗапасыСписаниеПоПартии(ДокументСсылка, СтруктураДополнительныеСвойства, Ложь);		
	Иначе
		БухгалтерскийУчетСервер.СформироватьТаблицаЗапасыСписание(ДокументСсылка, СтруктураДополнительныеСвойства, Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства)	
	Если СтруктураДополнительныеСвойства.ДляПроведения.СпособОценки = Перечисления.СпособыОценки.ФИФО 
		И СтруктураДополнительныеСвойства.ДляПроведения.ПодборНоменклатурыПоПартии Тогда
		
		БухгалтерскийУчетСервер.ПолучитьПроводкиСписанияСебестоимостиПоРБХПоПартии(ДокументСсылка, СтруктураДополнительныеСвойства);		
	Иначе
		БухгалтерскийУчетСервер.ПолучитьПроводкиСписанияСебестоимостиПоРБХ(ДокументСсылка, СтруктураДополнительныеСвойства);
	КонецЕсли;
	
КонецПроцедуры // СформироватьТаблицаХозрасчетный()

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписаниеТоваров.Склад КАК СкладРасход,
	|	СписаниеТоваров.Организация,
	|	СписаниеТоваров.Дата КАК Период,
	|	СписаниеТоваров.Ссылка,
	|	НЕОПРЕДЕЛЕНО КАК СкладПриход,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоСписанияСебестоимости,
	|	СписаниеТоваров.ОсновноеСредство,
	|	СписаниеТоваров.ЕстьОсновноеСредство
	|ПОМЕСТИТЬ ВременнаяТаблицаШапка
	|ИЗ
	|	Документ.СписаниеТоваров КАК СписаниеТоваров
	|ГДЕ
	|	СписаниеТоваров.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписаниеТоваровТовары.Ссылка,
	|	СписаниеТоваровТовары.Номенклатура,
	|	СУММА(СписаниеТоваровТовары.Количество) КАК Количество,
	|	СписаниеТоваровТовары.СчетУчета,
	|	СписаниеТоваровТовары.Цена,
	|	СписаниеТоваровТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(СписаниеТоваровТовары.Сумма) КАК Сумма,
	|	СписаниеТоваровТовары.СчетЗатрат КАК СчетСебестоимости,
	|	СписаниеТоваровТовары.СубконтоЗатрат1 КАК СубконтоСписанияСебестоимости1,
	|	СписаниеТоваровТовары.СубконтоЗатрат2 КАК СубконтоСписанияСебестоимости2,
	|	СписаниеТоваровТовары.СубконтоЗатрат3 КАК СубконтоСписанияСебестоимости3,
	|	СписаниеТоваровТовары.Партия,
	|	СписаниеТоваровТовары.НомерСтроки
	|ПОМЕСТИТЬ ВременнаяТаблицаТовары
	|ИЗ
	|	Документ.СписаниеТоваров.Товары КАК СписаниеТоваровТовары
	|ГДЕ
	|	СписаниеТоваровТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СписаниеТоваровТовары.СчетУчета,
	|	СписаниеТоваровТовары.СчетЗатрат,
	|	СписаниеТоваровТовары.СубконтоЗатрат1,
	|	СписаниеТоваровТовары.СубконтоЗатрат2,
	|	СписаниеТоваровТовары.СубконтоЗатрат3,
	|	СписаниеТоваровТовары.Номенклатура,
	|	СписаниеТоваровТовары.Ссылка,
	|	СписаниеТоваровТовары.Цена,
	|	СписаниеТоваровТовары.Номенклатура.ЕдиницаИзмерения,
	|	СписаниеТоваровТовары.Партия,
	|	СписаниеТоваровТовары.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписаниеТоваровТовары.Номенклатура,
	|	СписаниеТоваровТовары.Количество,
	|	СписаниеТоваровТовары.СчетУчета,
	|	СписаниеТоваровТовары.Цена,
	|	СписаниеТоваровТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СписаниеТоваровТовары.Сумма,
	|	СписаниеТоваровТовары.СпособОценки,
	|	СписаниеТоваровТовары.НомерСтроки,
	|	СписаниеТоваровТовары.Ссылка,
	|	СписаниеТоваровТовары.СчетЗатрат,
	|	СписаниеТоваровТовары.СубконтоЗатрат1,
	|	СписаниеТоваровТовары.СубконтоЗатрат2,
	|	СписаниеТоваровТовары.СубконтоЗатрат3,
	|	СписаниеТоваровТовары.СчетЗатрат КАК СчетСебестоимости,
	|	СписаниеТоваровТовары.ОсновноеСредство
	|ПОМЕСТИТЬ ВременнаяТаблицаТоварыБезГруппировки
	|ИЗ
	|	Документ.СписаниеТоваров.Товары КАК СписаниеТоваровТовары
	|ГДЕ
	|	СписаниеТоваровТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	РезультатЗапроса = Запрос.Выполнить();

	СформироватьТаблицаЗапасы(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает заголовок документа для печатной формы.
//
// Параметры:
//  Шапка - любая структура с полями:
//           Номер         - Строка или Число - номер документа;
//           Дата          - Дата - дата документа;
//           Представление - Строка - (необязательный) платформенное представление ссылки на документ.
//                                    Если параметр НазваниеДокумента не задан, то название документа будет вычисляться
//                                    из этого параметра.
//  НазваниеДокумента - Строка - название документа (например, "Счет на оплату").
//
// Возвращаемое значение:
//  Строка - заголовок документа.
//
Функция СформироватьЗаголовокДокумента(Шапка, Знач НазваниеДокумента = "") Экспорт
	
	ДанныеДокумента = Новый Структура("Номер,Дата,Представление");
	ЗаполнитьЗначенияСвойств(ДанныеДокумента, Шапка);
	
	// Если название документа не передано, получим название по представлению документа.
	Если ПустаяСтрока(НазваниеДокумента) И ЗначениеЗаполнено(ДанныеДокумента.Представление) Тогда
		ПоложениеНомера = СтрНайти(ДанныеДокумента.Представление, ДанныеДокумента.Номер);
		Если ПоложениеНомера > 0 Тогда
			НазваниеДокумента = СокрЛП(Лев(ДанныеДокумента.Представление, ПоложениеНомера - 1));
		КонецЕсли;
	КонецЕсли;

	НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеДокумента.Номер);
	Возврат СтрШаблон(НСтр("ru = '%1 № %2 от %3'"),
		НазваниеДокумента, НомерНаПечать, Формат(ДанныеДокумента.Дата, "ДЛФ=DD"));
	
КонецФункции

#КонецОбласти

#Область ИнтерфейсПечати

Функция ПечатьНакладной(МассивОбъектов, ОбъектыПечати)
	
	ВалютаРегламентированногоУчета 	= ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписаниеТоваров.Ссылка,
	|	СписаниеТоваров.Дата,
	|	СписаниеТоваров.Организация,
	|	СписаниеТоваров.Склад,
	|	СписаниеТоваров.Организация.НаименованиеПолное,
	|	СписаниеТоваров.Номер,
	|	СписаниеТоваров.Склад.Наименование,
	|	СписаниеТоваров.Товары.(
	|		Ссылка,
	|		НомерСтроки,
	|		Номенклатура,
	|		Номенклатура.Наименование,
	|		Количество,
	|		Цена,
	|		Сумма,
	|		Номенклатура.ЕдиницаИзмерения,
	|		Номенклатура.ЕдиницаИзмерения.Код,
	|		Номенклатура.ЕдиницаИзмерения.Наименование
	|	)
	|ИЗ
	|	Документ.СписаниеТоваров КАК СписаниеТоваров
	|ГДЕ
	|	СписаниеТоваров.Ссылка В(&МассивОбъектов)";		
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ВыборкаДок=Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_СписаниеТоваров_Накладная";
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаДок.Следующий() Цикл
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеТоваров_Накладная";
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеТоваров.ПФ_MXL_Накладная");
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.ТекстЗаголовка = "Списание товаров №"+" "+ ВыборкаДок.Номер + " от " + Формат(ВыборкаДок.Дата,"ДФ=dd.MM.yyyy");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("РевизитыОрганизации");
		ОбластьМакета.Параметры.Заполнить(ВыборкаДок);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		СуммаИтог = 0;
		ВыборкаСтрокТовары = ВыборкаДок.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			СуммаИтог = СуммаИтог + ВыборкаСтрокТовары.Сумма;
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		ОбластьМакета.Параметры.СуммаИтог = СуммаИтог;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		ОбластьМакета.Параметры.ИтоговаяСтрока ="Всего наименований " + ВыборкаСтрокТовары.Количество()
		+ ", на сумму " + СуммаИтог
		+ " " + ВалютаРегламентированногоУчета;
		ОбластьМакета.Параметры.СуммаПрописью  = БухгалтерскийУчетСервер.СформироватьСуммуПрописью(СуммаИтог, ВалютаРегламентированногоУчета);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДок.Ссылка);
		
	КонецЦикла;//ВыборкаДок.Следующий()
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьАктаСписания(МассивОбъектов, ОбъектыПечати)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка,
		|	ТаблицаДокумента.Номер,
		|	ТаблицаДокумента.Дата,
		|	ТаблицаДокумента.Дата КАК ДатаДокумента,
		|	ТаблицаДокумента.Организация,
		|	ТаблицаДокумента.Комментарий,
		|	ТаблицаДокумента.Комиссия.(
		|		Ссылка,
		|		ФизЛицо,
		|		Председатель,
		|		ФизЛицо.Наименование
		|	),
		|	ТаблицаДокумента.Товары.(
		|		Ссылка,
		|		НомерСтроки,
		|		Номенклатура,
		|		Количество,
		|		Цена,
		|		Сумма,
		|		Номенклатура.ЕдиницаИзмерения КАК ЕдИзм
		|	)
		|ИЗ
		|	Документ.СписаниеТоваров КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка В(&МассивОбъектов)";	
	Запрос = Новый Запрос(ТекстЗапроса);	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_АктСписания";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеТоваров.ПФ_MXL_АктСписания");
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;
		
		ДанныеПечати.Вставить("ДатаДокумента", Шапка.ДатаДокумента);
		ДанныеПечати.Вставить("ТекстЗаголовка", СформироватьЗаголовокДокумента(Шапка, НСтр("ru = 'Акт списания'")));
		
		ТекстПодЗаголовка = НСтр("ru = 'Мы, нижеподписавшиеся,'");
		ВыборкаКомиссия = Шапка.Комиссия.Выбрать();
		Пока ВыборкаКомиссия.Следующий() Цикл
			ДанныеФизЛица = БухгалтерскийУчетСервер.ДанныеФизЛица(Шапка.Организация, ВыборкаКомиссия.ФизЛицо, Шапка.ДатаДокумента);
			ТекстПодЗаголовка = ТекстПодЗаголовка 
				+ ?(ЗначениеЗаполнено(ДанныеФизЛица.Должность), ДанныеФизЛица.Должность, "")
				+ " " + ДанныеФизЛица.Представление + ", ";
		КонецЦикла;
		ТекстПодЗаголовка = ТекстПодЗаголовка + Символы.ПС + НСтр("ru = 'составили настоящий акт о том, что, '") + СокрЛП(Шапка.Комментарий);

		ДанныеПечати.Вставить("ТекстПодЗаголовка", ТекстПодЗаголовка);
		
		ВременнаяТаблицаТовары = Шапка.Товары.Выгрузить();
		ДанныеПечати.Вставить("Всего", ВременнаяТаблицаТовары.Итог("Сумма"));
		ДанныеПечати.Вставить("ИтоговаяСтрока", 
			СтрШаблон(НСтр("ru = 'Всего наименований %1, на сумму %2'"), 
			Формат(ВременнаяТаблицаТовары.Количество(), "ЧН=0; ЧГ=0"), 
			Формат(ДанныеПечати.Всего, "ЧЦ=15; ЧДЦ=2")));
		ДанныеПечати.Вставить("СуммаПрописью", БухгалтерскийУчетСервер.СформироватьСуммуПрописью(ДанныеПечати.Всего));
		
		// Инициализация массива областей макета
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Заголовок");
		МассивОбластейМакета.Добавить("ШапкаТаблицы");
		МассивОбластейМакета.Добавить("Строка");
		МассивОбластейМакета.Добавить("ИтогиТаблицы");
		МассивОбластейМакета.Добавить("СуммаПрописью");
		МассивОбластейМакета.Добавить("Подвал");
		МассивОбластейМакета.Добавить("ПодписиКомиссия");
		
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ИмяОбласти <> "Строка"
				И ИмяОбласти <> "ПодписиКомиссия" Тогда
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			ИначеЕсли ИмяОбласти = "Строка" Тогда 
				Для Каждого СтрокаТаблицы Из ВременнаяТаблицаТовары Цикл
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
			ИначеЕсли ИмяОбласти = "ПодписиКомиссия" Тогда
				// Формирование комиссии
				ВыборкаКомиссия = Шапка.Комиссия.Выбрать();
				Пока ВыборкаКомиссия.Следующий() Цикл
					ОбластьМакета.Параметры.Заполнить(ВыборкаКомиссия);
					
					ДанныеФизЛица = БухгалтерскийУчетСервер.ДанныеФизЛица(Шапка.Организация, ВыборкаКомиссия.ФизЛицо, Шапка.ДатаДокумента);
					ОбластьМакета.Параметры.Должность 			= ДанныеФизЛица.Должность;
					ОбластьМакета.Параметры.РасшифровкаПодписи	= ДанныеФизЛица.Представление;						
					
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьАктаОСписанииМатериалов(МассивОбъектов, ОбъектыПечати)
	// Варианты заголовков разделов с подписями печатной формы	
	ЗаголовокРазделаКомиссии = Новый Структура();
	ЗаголовокРазделаКомиссии.Вставить("ПредседательКомиссии", "Председатель комиссии");
	ЗаголовокРазделаКомиссии.Вставить("ЧленыКомиссии",        "Члены комиссии");
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка,
		|	ТаблицаДокумента.Номер,
		|	ТаблицаДокумента.Дата,
		|	ТаблицаДокумента.Дата КАК ДатаДокумента,
		|	ТаблицаДокумента.Организация,
		|	ТаблицаДокумента.Организация.НаименованиеПолное,
		|	ТаблицаДокумента.Склад,
		|	ТаблицаДокумента.ФизЛицо,
		|	ТаблицаДокумента.Комментарий,
		|	ТаблицаДокумента.Комиссия.(
		|		Ссылка,
		|		ФизЛицо,
		|		Председатель,
		|		ФизЛицо.Наименование
		|	),
		|	ТаблицаДокумента.Товары.(
		|		Ссылка,
		|		НомерСтроки,
		|		Номенклатура.Наименование КАК Номенклатура,
		|		СчетУчета.Код КАК СчетУчета,
		|		СчетЗатрат.Код КАК СчетЗатрат,
		|		Количество,
		|		Цена,
		|		Сумма,
		|		Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдИзм
		|		Примечание
		|	)
		|ИЗ
		|	Документ.СписаниеТоваров КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка В(&МассивОбъектов)";	
	Запрос = Новый Запрос(ТекстЗапроса);	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_АктОСписанииМатериалов";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеТоваров.ПФ_MXL_АктОСписанииМатериалов");
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;
		
		Руководители = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизаций(Шапка.Организация, Шапка.Дата);
		Руководитель    = Руководители.Руководитель;		
		ДанныеПечати.Вставить("ОрганизацияНаименованиеПолное", 				Шапка.ОрганизацияНаименованиеПолное);
		ДанныеПечати.Вставить("Склад", 					Шапка.Склад);
		ДанныеПечати.Вставить("МОЛ", 					Шапка.ФизЛицо);		
		ДанныеПечати.Вставить("ДатаДокумента", 			Шапка.ДатаДокумента);
		ДанныеПечати.Вставить("ТекстЗаголовка", 		СформироватьЗаголовокДокумента(Шапка, НСтр("ru = 'Акт о списании материалов'")));
		
		ТекстПодЗаголовка = НСтр("ru = 'Мы, нижеподписавшиеся,'");
		ВыборкаКомиссия = Шапка.Комиссия.Выбрать();
		Пока ВыборкаКомиссия.Следующий() Цикл
			ДанныеФизЛица = БухгалтерскийУчетСервер.ДанныеФизЛица(Шапка.Организация, ВыборкаКомиссия.ФизЛицо, Шапка.ДатаДокумента);
			ТекстПодЗаголовка = ТекстПодЗаголовка 
				+ ?(ЗначениеЗаполнено(ДанныеФизЛица.Должность), ДанныеФизЛица.Должность, "")
				+ " " + ДанныеФизЛица.Представление + ", ";
		КонецЦикла;
		ТекстПодЗаголовка = ТекстПодЗаголовка + Символы.ПС + НСтр("ru = 'составили настоящий акт о том, что произведены следующие работы: '") + СокрЛП(Шапка.Комментарий);

		ДанныеПечати.Вставить("ТекстПодЗаголовка", ТекстПодЗаголовка);
		
		ВременнаяТаблицаТовары = Шапка.Товары.Выгрузить();
		ДанныеПечати.Вставить("СуммаИтог", ВременнаяТаблицаТовары.Итог("Сумма"));
		ДанныеПечати.Вставить("КоличествоИтог", ВременнаяТаблицаТовары.Итог("Количество"));
		ДанныеПечати.Вставить("ИтогКоличествоПрописью", 
			СтрШаблон(НСтр("ru = 'Всего по настоящему акту списано %1(%2)'"),
			Формат(ДанныеПечати.КоличествоИтог, "ЧН=0; ЧГ=0"),
			БухгалтерскийУчетСервер.КоличествоПрописью(ДанныеПечати.КоличествоИтог)));
		ДанныеПечати.Вставить("ИтогСуммаПрописью", 
			СтрШаблон(НСтр("ru = 'предметов на общую сумму %1(%2)'"), Формат(ДанныеПечати.СуммаИтог, "ЧЦ=15; ЧДЦ=2"),
			БухгалтерскийУчетСервер.СформироватьСуммуПрописью(ДанныеПечати.СуммаИтог)));
		
		// Инициализация массива областей макета
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Заголовок");
		МассивОбластейМакета.Добавить("ШапкаТаблицы");
		МассивОбластейМакета.Добавить("Строка");
		МассивОбластейМакета.Добавить("ИтогиТаблицы");
		МассивОбластейМакета.Добавить("СуммаПрописью");
		МассивОбластейМакета.Добавить("Подвал");
		МассивОбластейМакета.Добавить("Комиссия");
		
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ИмяОбласти <> "Строка"
				И ИмяОбласти <> "Комиссия" Тогда
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			ИначеЕсли ИмяОбласти = "Строка" Тогда 
				Для Каждого СтрокаТаблицы Из ВременнаяТаблицаТовары Цикл
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
			ИначеЕсли ИмяОбласти = "Комиссия" Тогда
				ВыборкаСтрокКомиссия	= Шапка.Комиссия.Выбрать();
				Пока ВыборкаСтрокКомиссия.Следующий() Цикл
					Если ВыборкаСтрокКомиссия.Председатель Тогда
						ДанныеФизЛица = БухгалтерскийУчетСервер.ДанныеФизЛица(Шапка.Организация,ВыборкаСтрокКомиссия.ФизЛицо, Шапка.ДатаДокумента);
						ОбластьМакета.Параметры.ЗаголовокКомиссии = ЗаголовокРазделаКомиссии.ПредседательКомиссии;
						ОбластьМакета.Параметры.ДолжностьКомиссии = ДанныеФизЛица.Должность;
						ОбластьМакета.Параметры.ФИОКомиссии       = ДанныеФизЛица.Представление;
						ТабличныйДокумент.Вывести(ОбластьМакета);
						Прервать;
					КонецЕсли;
				КонецЦикла;
				ПервыйЧленКомиссии = Истина;
				ВыборкаСтрокКомиссия.Сбросить();
				Пока ВыборкаСтрокКомиссия.Следующий() Цикл
					Если НЕ ВыборкаСтрокКомиссия.Председатель Тогда
						ДанныеФизЛица = БухгалтерскийУчетСервер.ДанныеФизЛица(Шапка.Организация,ВыборкаСтрокКомиссия.ФизЛицо, Шапка.ДатаДокумента);
						ОбластьМакета.Параметры.ЗаголовокКомиссии = ?(ПервыйЧленКомиссии, ЗаголовокРазделаКомиссии.ЧленыКомиссии, "");
						ОбластьМакета.Параметры.ДолжностьКомиссии = ДанныеФизЛица.Должность;
						ОбластьМакета.Параметры.ФИОКомиссии       = ДанныеФизЛица.Представление;
						ТабличныйДокумент.Вывести(ОбластьМакета);
						ПервыйЧленКомиссии = Ложь;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_АктСписания") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ПФ_MXL_АктСписания", 
		"Акт списания", 
		ПечатьАктаСписания(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.СписаниеТоваров.ПФ_MXL_АктСписания");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Накладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ПФ_MXL_Накладная", 
		"Накладная", 
		ПечатьНакладной(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.СписаниеТоваров.ПФ_MXL_Накладная");
	КонецЕсли;	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_АктОСписанииМатериалов") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ПФ_MXL_АктОСписанииМатериалов", 
		"Акт о списании материалов", 
		ПечатьАктаОСписанииМатериалов(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.СписаниеТоваров.ПФ_MXL_АктОСписанииМатериалов");
	КонецЕсли;

КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_АктСписания";
	КомандаПечати.Представление = НСтр("ru = 'Акт списания'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_Накладная";
	КомандаПечати.Представление = НСтр("ru = 'Накладная'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 2;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_АктОСписанииМатериалов";
	КомандаПечати.Представление = НСтр("ru = 'Акт о списании материалов'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 4;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
