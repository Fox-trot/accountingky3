#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыПроведенияДокумента

Процедура СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ВременнаяТаблицаУслуги.Сумма) КАК Сумма,
	|	ВременнаяТаблицаУслуги.Ссылка
	|ПОМЕСТИТЬ ПредварительныеДопрасходы
	|ИЗ
	|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
	|ГДЕ
	|	ВременнаяТаблицаУслуги.ПредварительныеДопрасходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаУслуги.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВременнаяТаблицаУслуги.Сумма) КАК Сумма,
	|	ВременнаяТаблицаУслуги.Ссылка
	|ПОМЕСТИТЬ ОбычныеДопрасходы
	|ИЗ
	|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
	|ГДЕ
	|	НЕ ВременнаяТаблицаУслуги.ПредварительныеДопрасходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаУслуги.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Период КАК Период,
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ВременнаяТаблицаТовары.СчетУчета КАК СчетДт,
	|	ВременнаяТаблицаШапка.СчетРасчетов КАК СчетКт,
	|	ВременнаяТаблицаТовары.Номенклатура КАК СубконтоДт1,
	|	ВЫРАЗИТЬ(ВременнаяТаблицаТовары.ДокументПоступления КАК Документ.ПоступлениеТоваровУслуг).Склад КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	ВременнаяТаблицаШапка.Контрагент КАК СубконтоКт1,
	|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	ВременнаяТаблицаТовары.СуммаРасходов * ВременнаяТаблицаШапка.Курс * ЕСТЬNULL(ОбычныеДопрасходы.Сумма, 0) / (ЕСТЬNULL(ПредварительныеДопрасходы.Сумма, 0) + ЕСТЬNULL(ОбычныеДопрасходы.Сумма, 0)) КАК Сумма,
	|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаДт,
	|	ВременнаяТаблицаТовары.СуммаРасходов * ЕСТЬNULL(ОбычныеДопрасходы.Сумма, 0) / (ЕСТЬNULL(ПредварительныеДопрасходы.Сумма, 0) + ЕСТЬNULL(ОбычныеДопрасходы.Сумма, 0)) КАК ВалютнаяСуммаДт,
	|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаКт,
	|	ВременнаяТаблицаТовары.СуммаРасходов * ЕСТЬNULL(ОбычныеДопрасходы.Сумма, 0) / (ЕСТЬNULL(ПредварительныеДопрасходы.Сумма, 0) + ЕСТЬNULL(ОбычныеДопрасходы.Сумма, 0)) КАК ВалютнаяСуммаКт,
	|	""Поступление допрасходов по ТМЗ"" КАК Содержание,
	|	0 КАК КоличествоДт,
	|	0 КАК КоличествоКт
	|ИЗ
	|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПредварительныеДопрасходы КАК ПредварительныеДопрасходы
	|		ПО ВременнаяТаблицаТовары.Ссылка = ПредварительныеДопрасходы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОбычныеДопрасходы КАК ОбычныеДопрасходы
	|		ПО ВременнаяТаблицаТовары.Ссылка = ОбычныеДопрасходы.Ссылка
	|ГДЕ
	|	ОбычныеДопрасходы.Сумма <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаОС.СчетУчета,
	|	ВременнаяТаблицаШапка.СчетПредварительныхДополнительныхРасходов,
	|	ВременнаяТаблицаОС.ОсновноеСредство,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ВременнаяТаблицаШапка.Контрагент,
	|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО,
	|	ВременнаяТаблицаОС.СуммаРасходов * ВременнаяТаблицаШапка.Курс * ЕСТЬNULL(ПредварительныеДопрасходы.Сумма, 0) / (ЕСТЬNULL(ПредварительныеДопрасходы.Сумма, 0) + ЕСТЬNULL(ОбычныеДопрасходы.Сумма, 0)),
	|	ВременнаяТаблицаШапка.ВалютаДокумента,
	|	ВременнаяТаблицаОС.СуммаРасходов * ЕСТЬNULL(ПредварительныеДопрасходы.Сумма, 0) / (ЕСТЬNULL(ПредварительныеДопрасходы.Сумма, 0) + ЕСТЬNULL(ОбычныеДопрасходы.Сумма, 0)),
	|	ВременнаяТаблицаШапка.ВалютаДокумента,
	|	ВременнаяТаблицаОС.СуммаРасходов * ЕСТЬNULL(ПредварительныеДопрасходы.Сумма, 0) / (ЕСТЬNULL(ПредварительныеДопрасходы.Сумма, 0) + ЕСТЬNULL(ОбычныеДопрасходы.Сумма, 0)),
	|	""Поступление допрасходов по ОС"",
	|	0,
	|	0
	|ИЗ
	|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПредварительныеДопрасходы КАК ПредварительныеДопрасходы
	|		ПО ВременнаяТаблицаОС.Ссылка = ПредварительныеДопрасходы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОбычныеДопрасходы КАК ОбычныеДопрасходы
	|		ПО ВременнаяТаблицаОС.Ссылка = ОбычныеДопрасходы.Ссылка
	|ГДЕ
	|	ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаОС.СчетУчета,
	|	ВременнаяТаблицаШапка.СчетРасчетов,
	|	ВременнаяТаблицаОС.ОсновноеСредство,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ВременнаяТаблицаШапка.Контрагент,
	|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО,
	|	ВременнаяТаблицаОС.СуммаРасходов * ВременнаяТаблицаШапка.Курс * ЕСТЬNULL(ОбычныеДопрасходы.Сумма, 0) / (ЕСТЬNULL(ПредварительныеДопрасходы.Сумма, 0) + ЕСТЬNULL(ОбычныеДопрасходы.Сумма, 0)),
	|	ВременнаяТаблицаШапка.ВалютаДокумента,
	|	ВременнаяТаблицаОС.СуммаРасходов * ЕСТЬNULL(ОбычныеДопрасходы.Сумма, 0) / (ЕСТЬNULL(ПредварительныеДопрасходы.Сумма, 0) + ЕСТЬNULL(ОбычныеДопрасходы.Сумма, 0)),
	|	ВременнаяТаблицаШапка.ВалютаДокумента,
	|	ВременнаяТаблицаОС.СуммаРасходов * ЕСТЬNULL(ОбычныеДопрасходы.Сумма, 0) / (ЕСТЬNULL(ПредварительныеДопрасходы.Сумма, 0) + ЕСТЬNULL(ОбычныеДопрасходы.Сумма, 0)),
	|	""Поступление допрасходов по ОС"",
	|	0,
	|	0
	|ИЗ
	|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПредварительныеДопрасходы КАК ПредварительныеДопрасходы
	|		ПО ВременнаяТаблицаОС.Ссылка = ПредварительныеДопрасходы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОбычныеДопрасходы КАК ОбычныеДопрасходы
	|		ПО ВременнаяТаблицаОС.Ссылка = ОбычныеДопрасходы.Ссылка
	|ГДЕ
	|	ОбычныеДопрасходы.Сумма <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС_ПодлежащийВозмещению),
	|	ВременнаяТаблицаШапка.СчетРасчетов,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ВременнаяТаблицаШапка.СуммаНДС * ВременнаяТаблицаШапка.Курс,
	|	ВременнаяТаблицаШапка.ВалютаДокумента,
	|	ВременнаяТаблицаШапка.СуммаНДС,
	|	ВременнаяТаблицаШапка.ВалютаДокумента,
	|	ВременнаяТаблицаШапка.СуммаНДС,
	|	""Поступление допрасходов - НДС"",
	|	0,
	|	0
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	ВременнаяТаблицаШапка.СуммаНДС <> 0";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаХозрасчетный", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

Процедура СформироватьТаблицаПоступления(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Ссылка КАК ДокументПоступления,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаШапка.Контрагент,
	|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
	|	ВременнаяТаблицаШапка.СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО КАК ЗачетНДС,
	|	ВременнаяТаблицаШапка.СуммаНДС * ВременнаяТаблицаШапка.Курс КАК СуммаНДС,
	|	(ВременнаяТаблицаШапка.СуммаДокумента - ВременнаяТаблицаШапка.СуммаНДС) * ВременнаяТаблицаШапка.Курс КАК СуммаСебестоимости,
	|	ВременнаяТаблицаШапка.СуммаНСП * ВременнаяТаблицаШапка.Курс КАК СуммаНеоблагаемая,
	|	ВременнаяТаблицаШапка.СуммаНДС КАК СуммаНДСВал,
	|	ВременнаяТаблицаШапка.СуммаДокумента - ВременнаяТаблицаШапка.СуммаНДС КАК СуммаСебестоимостиВал,
	|	ВременнаяТаблицаШапка.СуммаНСП КАК СуммаНеоблагаемаяВал,
	|	0 КАК Количество
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка";
	
	РезультатЗапроса = Запрос.Выполнить();
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПоступления", РезультатЗапроса.Выгрузить());
		
КонецПроцедуры 

Процедура СформироватьТаблицаЗапасы(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	ОсновнойСпособОценкиЗапасов = Перечисления.СпособыОценки.ПоСредней;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаТовары.СчетУчета,
	|	ВременнаяТаблицаТовары.ДокументПоступления.Склад КАК Склад,
	|	ВременнаяТаблицаТовары.Номенклатура,
	|	ВЫБОР
	|		КОГДА СпособыОценкиЗапасов.СчетУчета ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА &ОсновнойСпособОценкиЗапасов = ЗНАЧЕНИЕ(Перечисление.СпособыОценки.ПоСредней)
	|						ТОГДА НЕОПРЕДЕЛЕНО
	|					ИНАЧЕ ВременнаяТаблицаТовары.ДокументПоступления
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СпособыОценкиЗапасов.СпособОценки = ЗНАЧЕНИЕ(Перечисление.СпособыОценки.ПоСредней)
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|				ИНАЧЕ ВременнаяТаблицаТовары.ДокументПоступления
	|			КОНЕЦ
	|	КОНЕЦ КАК Партия,
	|	0 КАК Количество,
	|	ВременнаяТаблицаТовары.СуммаРасходов * ВременнаяТаблицаШапка.Курс КАК Цена,
	|	ВременнаяТаблицаТовары.СуммаРасходов * ВременнаяТаблицаШапка.Курс КАК Сумма
	|ИЗ
	|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|		ПО ВременнаяТаблицаТовары.Ссылка = ВременнаяТаблицаШапка.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОценкиЗапасов КАК СпособыОценкиЗапасов
	|		ПО ВременнаяТаблицаТовары.СчетУчета = СпособыОценкиЗапасов.СчетУчета
	|ГДЕ
	|	НЕ ВременнаяТаблицаТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МБП)
	|	И (ВЫРАЗИТЬ(ВременнаяТаблицаТовары.ДокументПоступления КАК Документ.ПоступлениеТоваровУслуг) ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|				И ВЫРАЗИТЬ(ВременнаяТаблицаТовары.ДокументПоступления КАК Документ.АвансовыйОтчет) ССЫЛКА Документ.АвансовыйОтчет)"; 
	
	Запрос.Параметры.Вставить("ОсновнойСпособОценкиЗапасов", ОсновнойСпособОценкиЗапасов);
	РезультатЗапроса = Запрос.Выполнить();
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасы", РезультатЗапроса.Выгрузить());
		
КонецПроцедуры 

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц 	= СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДополнительныеРасходы.Ссылка,
		|	ДополнительныеРасходы.Номер,
		|	ДополнительныеРасходы.Дата КАК Период,
		|	ДополнительныеРасходы.Организация,
		|	ДополнительныеРасходы.ВалютаДокумента,
		|	ДополнительныеРасходы.Контрагент,
		|	ДополнительныеРасходы.СчетРасчетов,
		|	ДополнительныеРасходы.Комментарий,
		|	ДополнительныеРасходы.СуммаДокумента,
		|	ДополнительныеРасходы.ДоговорКонтрагента,
		|	ДополнительныеРасходы.Курс,
		|	&СчетПредварительныхДополнительныхРасходов,
		|	&ПлательщикНДС,
		|	ДополнительныеРасходы.СуммаНДС,
		|	ДополнительныеРасходы.СуммаНСП,
		|	ДополнительныеРасходы.СтавкаНДС,
		|	ДополнительныеРасходы.СтавкаНСП,
		|	ДополнительныеРасходы.ЗачетНДС
		|ПОМЕСТИТЬ ВременнаяТаблицаШапка
		|ИЗ
		|	Документ.ДополнительныеРасходы КАК ДополнительныеРасходы
		|ГДЕ
		|	ДополнительныеРасходы.Ссылка = &ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДополнительныеРасходыТовары.Ссылка,
		|	ДополнительныеРасходыТовары.ДокументПоступления,
		|	ДополнительныеРасходыТовары.Номенклатура,
		|	ДополнительныеРасходыТовары.СчетУчета,
		|	ДополнительныеРасходыТовары.Количество,
		|	ДополнительныеРасходыТовары.СуммаРасходов,
		|	ДополнительныеРасходыТовары.Курс
		|ПОМЕСТИТЬ ВременнаяТаблицаТовары
		|ИЗ
		|	Документ.ДополнительныеРасходы.Товары КАК ДополнительныеРасходыТовары
		|ГДЕ
		|	ДополнительныеРасходыТовары.Ссылка = &ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДополнительныеРасходыОС.Ссылка,
		|	ДополнительныеРасходыОС.ДокументПоступления,
		|	ДополнительныеРасходыОС.ОсновноеСредство,
		|	ДополнительныеРасходыОС.СчетУчета,
		|	ДополнительныеРасходыОС.СуммаРасходов,
		|	ДополнительныеРасходыОС.Курс
		|ПОМЕСТИТЬ ВременнаяТаблицаОС
		|ИЗ
		|	Документ.ДополнительныеРасходы.ОС КАК ДополнительныеРасходыОС
		|ГДЕ
		|	ДополнительныеРасходыОС.Ссылка = &ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДополнительныеРасходыУслуги.Ссылка,
		|	ДополнительныеРасходыУслуги.Сумма,
		|	ДополнительныеРасходыУслуги.ПредварительныеДопрасходы
		|ПОМЕСТИТЬ ВременнаяТаблицаУслуги
		|ИЗ
		|	Документ.ДополнительныеРасходы.Услуги КАК ДополнительныеРасходыУслуги
		|ГДЕ
		|	ДополнительныеРасходыУслуги.Ссылка = &ДокументСсылка";	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Запрос.УстановитьПараметр("СчетПредварительныхДополнительныхРасходов", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПлательщикНДС", СтруктураДополнительныеСвойства.УчетнаяПолитика.ПлательщикНДС);
	Запрос.Выполнить();    		
		
	СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства);	
	СформироватьТаблицаПоступления(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗапасы(ДокументСсылка, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти

#Область ИнтерфейсПечати

Функция ПечатьДопРасходы(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	Запрос = Новый Запрос;
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ДополнительныеРасходы.Ссылка КАК Ссылка,
		|	ДополнительныеРасходы.Дата КАК Дата,
		|	ДополнительныеРасходы.Номер КАК Номер,
		|	ДополнительныеРасходы.Контрагент.НаименованиеПолное КАК ПредставлениеПоставщика,
		|	ДополнительныеРасходы.Организация.НаименованиеПолное КАК ПредставлениеПолучателя,
		|	ДополнительныеРасходы.ДоговорКонтрагента.ВалютаРасчетов,
		|	ДополнительныеРасходы.Услуги.(
		|		Номенклатура.Наименование КАК Содержание,
		|		Сумма КАК Сумма,
		|		СуммаНДС КАК НДС,
		|		СуммаНСП КАК НСП,
		|		Всего КАК Всего
		|	),
		|	ДополнительныеРасходы.Товары.(
		|		Количество КАК Количество,
		|		Сумма КАК Сумма,
		|		СуммаРасходов,
		|		Номенклатура.Наименование КАК Наименование,
		|		ДополнительныеРасходы.Товары.Сумма + ДополнительныеРасходы.Товары.СуммаРасходов + ДополнительныеРасходы.Товары.СуммаНДС + ДополнительныеРасходы.Товары.СуммаНСП КАК Всего
		|	),
		|	ДополнительныеРасходы.ОС.(
		|		ОсновноеСредство.Наименование КАК Наименование,
		|		1 КАК Количество,
		|		Сумма КАК Сумма,
		|		СуммаРасходов,
		|		ДополнительныеРасходы.ОС.Сумма + ДополнительныеРасходы.ОС.СуммаРасходов + ДополнительныеРасходы.ОС.СуммаНДС + ДополнительныеРасходы.ОС.СуммаНСП КАК Всего
		|	)
		|ИЗ
		|	Документ.ДополнительныеРасходы КАК ДополнительныеРасходы
		|ГДЕ
		|	ДополнительныеРасходы.Ссылка В(&МассивОбъектов)";
		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ДополнительныеРасходы_ДопРасходы";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ДополнительныеРасходы.ПФ_MXL_ДопРасходы");
		
	Пока Выборка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ДанныеПечати = Новый Структура;
		ЗаполнитьЗначенияСвойств(ДанныеПечати, Выборка);
		
		ВременнаяТаблицаТовары 		= Выборка.Товары.Выгрузить();                                      
		ВременнаяТаблицаОС 			= Выборка.ОС.Выгрузить();
		ВременнаяТаблицаДопРасходы	= Выборка.Услуги.Выгрузить();
		
		ВыборкаДопРасходы 	= Выборка.Услуги.Выбрать();
		ВыборкаТовары 		= Выборка.Товары.Выбрать();
		ВыборкаОС 			= Выборка.ОС.Выбрать();
		
		ТекстЗаголовка = "Доп. расходы № " + ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Выборка.Номер)
		               + " от "+Формат(Выборка.Дата,"ДЛФ=DD");
		ДанныеПечати.Вставить("ТекстЗаголовка", ТекстЗаголовка);
		ДанныеПечати.Вставить("ПредставлениеПоставщика", Выборка.ПредставлениеПоставщика);
		ДанныеПечати.Вставить("ПредставлениеПолучателя", Выборка.ПредставлениеПолучателя);
		
		СуммаДопРасходыИтого 			= ВременнаяТаблицаДопРасходы.Итог("Всего");
		СуммаТоварыИтого 			= ВременнаяТаблицаТовары.Итог("Сумма");
		СуммаОСИтого 				= ВременнаяТаблицаОС.Итог("Сумма");
		СуммаРасходовТоварыИтого 	= ВременнаяТаблицаТовары.Итог("СуммаРасходов");
		СуммаРасходовОСИтого 		= ВременнаяТаблицаОС.Итог("СуммаРасходов");		
		ВсегоИтого                  = СуммаТоварыИтого + СуммаРасходовТоварыИтого
									+ СуммаОСИтого + СуммаРасходовОСИтого;
		
		ДанныеПечати.Вставить("СуммаИтого", 		СуммаТоварыИтого + СуммаОСИтого);
		ДанныеПечати.Вставить("СуммаРасходовИтого", СуммаРасходовТоварыИтого + СуммаРасходовОСИтого);
		ДанныеПечати.Вставить("ВсегоИтого", 		ВсегоИтого);													
        ДанныеПечати.Вставить("СуммаДокументаПрописью", БухгалтерскийУчетСервер.СформироватьСуммуПрописью(СуммаДопРасходыИтого));
													
			
		МассивОбластейМакета = Новый Массив;  
		МассивОбластейМакета.Добавить("Заголовок");
		МассивОбластейМакета.Добавить("Поставщик");
		МассивОбластейМакета.Добавить("Покупатель");
		МассивОбластейМакета.Добавить("ШапкаТаблицы");
		МассивОбластейМакета.Добавить("СтрокаДопРасходы");		
		МассивОбластейМакета.Добавить("СуммаПрописью");
		МассивОбластейМакета.Добавить("ШапкаТаблицыОсновная");
		МассивОбластейМакета.Добавить("СтрокаОсновная");
		МассивОбластейМакета.Добавить("Итоги");
		МассивОбластейМакета.Добавить("Подписи");
		                      
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			
			Если ИмяОбласти = "СтрокаДопРасходы" Тогда
				НомерСтроки = 0;
				Пока ВыборкаДопРасходы.Следующий() Цикл
					НомерСтроки = НомерСтроки + 1;
					ОбластьМакета.Параметры.Заполнить(ВыборкаДопРасходы);
					ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
			ИначеЕсли ИмяОбласти = "СтрокаОсновная" Тогда
				НомерСтроки = 0;
				Пока ВыборкаТовары.Следующий() Цикл
					НомерСтроки = НомерСтроки + 1;
					ОбластьМакета.Параметры.Заполнить(ВыборкаТовары);
					ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
				Пока ВыборкаОС.Следующий() Цикл
					НомерСтроки = НомерСтроки + 1;
					ОбластьМакета.Параметры.Заполнить(ВыборкаОС);
					ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
			Иначе
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЕсли;
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ТабличныйДокумент;
			
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов – Массив – ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати – Структура – дополнительные настройки печати;
//  КоллекцияПечатныхФорм – ТаблицаЗначений – сформированные табличные документы (выходной параметр)
//  ОбъектыПечати – СписокЗначений – значение – ссылка на объект;
//                                            представление – имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода – Структура – дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДопРасходы") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
				"ДопРасходы", НСтр("ru = 'Доп. расходы'"), ПечатьДопРасходы(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,
				"Документ.ДополнительныеРасходы.ПФ_MXL_ДопРасходы");
	КонецЕсли;
		
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ДопРасходы";
	КомандаПечати.Представление = НСтр("ru = 'Доп. расходы'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 1;
	
КонецПроцедуры

#КонецОбласти


#КонецЕсли