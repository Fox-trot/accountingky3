#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеОбъектовБП.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения);
	
	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		Дата = КонецМесяца(ТекущаяДатаСеанса());
	КонецЕсли;
		
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	ДополнительныеСвойства.ДляПроведения.Вставить("ДанныеУчетнойПолитикиПоПерсоналу", БухгалтерскийУчетСервер.ПолучитьДанныеУчетнойПолитикиПоПерсоналу(Дата, Организация));

	// Инициализация данных документа.
	Документы.ЗакрытиеМесяцаЗП.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства, ЭтотОбъект);
	
	// Подготовка наборов записей.
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	БухгалтерскийУчетСервер.ОтразитьХозрасчетный(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьУдержания(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьПодоходныйНалог(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьСоциальныйФонд(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьНалогиПоЗаработнойПлате(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьОтчетПоПодоходному(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьОтчетЕжемесячныйСоцфонд(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей.
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	// Предварительный контроль
	ВыполнитьПредварительныйКонтроль(Отказ);	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура выполняет контроль противоречий.
//
Процедура ВыполнитьПредварительныйКонтроль(Отказ)
	
	// Проверка повторного закрытия месяца
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЗакрытиеМесяцаЗП.Ссылка
		|ИЗ
		|	Документ.ЗакрытиеМесяцаЗП КАК ЗакрытиеМесяцаЗП
		|ГДЕ
		|	ЗакрытиеМесяцаЗП.Организация = &Организация
		|	И ЗакрытиеМесяцаЗП.Дата = &Дата
		|	И ЗакрытиеМесяцаЗП.Проведен
		|	И ЗакрытиеМесяцаЗП.Ссылка <> &Ссылка";
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Документ закрытия месяца по заработной плате за выбранный период уже существует: %1.'"), 
			ВыборкаДетальныеЗаписи.Ссылка);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЕсли;
	
	ДанныеУчетнойПолитики = БухгалтерскийУчетСервер.ПолучитьДанныеУчетнойПолитикиПоПерсоналу(Дата, Организация);
	
	// Проверка заполнения данных учетной политики.
	Если НЕ ЗначениеЗаполнено(ДанныеУчетнойПолитики.СчетУчетаРасходовПоДоплатеПН) Тогда 
		ТекстСообщения = НСтр("ru = 'В учетной политике по персоналу не заполнен счет учета расходов по доплате ПН.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(ДанныеУчетнойПолитики.СчетУчетаРасходовПоКорректировкеСФ) Тогда 
		ТекстСообщения = НСтр("ru = 'В учетной политике по персоналу не заполнен счет учета расходов по корректировке СФ.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЕсли;	

	Если НЕ ЗначениеЗаполнено(ДанныеУчетнойПолитики.СчетУчетаРасчетовПФР) Тогда 
		ТекстСообщения = НСтр("ru = 'В учетной политике по персоналу не заполнен счет учета расчетов ПФР.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(ДанныеУчетнойПолитики.СчетУчетаРасчетовГНПФР) Тогда 
		ТекстСообщения = НСтр("ru = 'В учетной политике по персоналу не заполнен счет учета расчетов ГНПФР.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЕсли;	

	Если НЕ ЗначениеЗаполнено(ДанныеУчетнойПолитики.СчетУчетаРасчетовМСФ) Тогда 
		ТекстСообщения = НСтр("ru = 'В учетной политике по персоналу не заполнен счет учета расчетов МСФ.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЕсли;	

	Если НЕ ЗначениеЗаполнено(ДанныеУчетнойПолитики.СчетУчетаРасчетовПФФ) Тогда 
		ТекстСообщения = НСтр("ru = 'В учетной политике по персоналу не заполнен счет учета расчетов ПФФ.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЕсли;	

	Если НЕ ЗначениеЗаполнено(ДанныеУчетнойПолитики.СчетУчетаРасчетовФОТФ) Тогда 
		ТекстСообщения = НСтр("ru = 'В учетной политике по персоналу не заполнен счет учета расчетов ФОТФ.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЕсли;	

	Если ДанныеУчетнойПолитики.СтавкаПрофВзнос > 0 
		И НЕ ЗначениеЗаполнено(ДанныеУчетнойПолитики.СчетУчетаРасчетовПрофВзнос) Тогда 
		ТекстСообщения = НСтр("ru = 'В учетной политике по персоналу не заполнен счет учета расчетов ПрофВзнос.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЕсли;	

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Начисления.ФизЛицо КАК ФизЛицо,
		|	Начисления.ВидРасчета КАК ВидРасчета,
		|	Начисления.СпособОтражения КАК СпособОтражения,
		|	Начисления.Подразделение КАК Подразделение,
		|	ПРЕДСТАВЛЕНИЕ(Начисления.Регистратор) КАК ДокументСсылка
		|ПОМЕСТИТЬ ВременнаяТаблицаНачисления
		|ИЗ
		|	РегистрРасчета.Начисления КАК Начисления
		|ГДЕ
		|	Начисления.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
		|	И Начисления.Организация = &Организация
		|	И НЕ Начисления.Результат = 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПРЕДСТАВЛЕНИЕ(ВременнаяТаблицаНачисления.ФизЛицо) КАК ФизЛицо,
		|	ПРЕДСТАВЛЕНИЕ(ВременнаяТаблицаНачисления.ВидРасчета) КАК ВидРасчета,
		|	ВременнаяТаблицаНачисления.СпособОтражения КАК СпособОтражения,
		|	ВременнаяТаблицаНачисления.ДокументСсылка КАК ДокументСсылка
		|ИЗ
		|	ВременнаяТаблицаНачисления КАК ВременнаяТаблицаНачисления
		|ГДЕ
		|	ВременнаяТаблицаНачисления.СпособОтражения = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗаработнойПлаты.ПустаяСсылка)";
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// Пустой счет или статья затрат. 
	Если НЕ МассивРезультатов[1].Пустой() Тогда
		ВыборкаДетальныеЗаписи = МассивРезультатов[1].Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
			Если НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СпособОтражения) Тогда 	
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Не заполнен способ отражения Сотрудник: %1, Вид расчета: %2, Документ: %3.'"), 
					ВыборкаДетальныеЗаписи.ФизЛицо, ВыборкаДетальныеЗаписи.ВидРасчета, ВыборкаДетальныеЗаписи.ДокументСсылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Процедура выполняет расчет налогов и удержаний
//
Процедура ВыполнитьЗакрытиеМесяца(ЕстьОшибки) Экспорт 
	
	// 1. Расчет налогов по заработной плате
	// 2. Расчет удержаний с учетом рассчитанных налогов
	// 3. Заполнение соответствующих табличных частей- итого удержано	
	// 4. Распределение сумм налогов с организации по счетам учета
	// 5. Распределение сумм - корректировок налогов с организации по счетам учета
	
	РассчитатьНалогиПоЗарплате();	
	РассчитатьПлановыеУдержания();
	ДозаполнитьНалогиПоЗарплате();
	РаспределитьНалогиСОрганизации();
	РаспределитьНалогиСОрганизацииКорректировки();
	ДозаполнитьВыплату();
	
КонецПроцедуры // ЗаполнитьТабличнуюЧасть()

// Процедура - Рассчитать налоги по зарплате
//
Процедура РассчитатьНалогиПоЗарплате()
	
	// Список сотрудников, работающих на начало месяца и принятых в текущем месяце.
	// Этот список сотрудников будет основным.
	// Для этих сотрудников будем рассчитывать налоги, даже если не было начислений (для накопления вычетов).
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	СотрудникиСрезПоследних.ФизЛицо КАК ФизЛицо,
		|	СотрудникиСрезПоследних.ФизЛицо.Наименование КАК ФизЛицоНаименование,
		|	СотрудникиСрезПоследних.ГрафикРаботы КАК ГрафикРаботы,
		|	СотрудникиСрезПоследних.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок
		|ПОМЕСТИТЬ ВременнаяТаблицаСотрудники
		|ИЗ
		// Убираем секунду, так как запись попадет во втором запросе.
		|	РегистрСведений.Сотрудники.СрезПоследних(ДОБАВИТЬКДАТЕ(&НачалоПериода, СЕКУНДА, -1), Организация = &Организация) КАК СотрудникиСрезПоследних
		|ГДЕ
		|	НЕ СотрудникиСрезПоследних.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СотрудникиСрезПервых.ФизЛицо,
		|	СотрудникиСрезПервых.ФизЛицо.Наименование,
		|	СотрудникиСрезПервых.ГрафикРаботы,
		|	СотрудникиСрезПервых.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок
		|ИЗ
		|	РегистрСведений.Сотрудники.СрезПервых(
		|			&НачалоПериода,
		|			Организация = &Организация
		|				И ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Прием)
		|				И Период <= &КонецПериода) КАК СотрудникиСрезПервых
		|
		// Сотрудники, принятые на работу по трудовым соглашениям.
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СотрудникиПоТрудовымСоглашениямСрезПоследних.ФизЛицо КАК ФизЛицо,
		|	СотрудникиПоТрудовымСоглашениямСрезПоследних.ФизЛицо.Наименование КАК ФизЛицоНаименование,
		|	СотрудникиПоТрудовымСоглашениямСрезПоследних.ГрафикРаботы КАК ГрафикРаботы,
		|	1 КАК ЗанимаемыхСтавок
		|ИЗ
		// Убираем секунду, так как запись попадет во втором запросе.
		|	РегистрСведений.СотрудникиПоТрудовымСоглашениям.СрезПоследних(ДОБАВИТЬКДАТЕ(&НачалоПериода, СЕКУНДА, -1), Организация = &Организация) КАК СотрудникиПоТрудовымСоглашениямСрезПоследних
		|ГДЕ
		|	НЕ СотрудникиПоТрудовымСоглашениямСрезПоследних.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СотрудникиПоТрудовымСоглашениямСрезПервых.ФизЛицо,
		|	СотрудникиПоТрудовымСоглашениямСрезПервых.ФизЛицо.Наименование,
		|	СотрудникиПоТрудовымСоглашениямСрезПервых.ГрафикРаботы,
		|	1 КАК ЗанимаемыхСтавок
		|ИЗ
		|	РегистрСведений.СотрудникиПоТрудовымСоглашениям.СрезПервых(
		|			&НачалоПериода,
		|			Организация = &Организация
		|				И ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Прием)
		|				И Период <= &КонецПериода) КАК СотрудникиПоТрудовымСоглашениямСрезПервых
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо,
		|	ГрафикРаботы";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	// Определение больше 15 дней (в месяце приема и увольнения).
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	СотрудникиСрезПоследних.ФизЛицо КАК ФизЛицо,
		|	ДЕНЬ(СотрудникиСрезПоследних.Период) КАК ДеньПриема,
		|	0 КАК ДеньУвольнения
		|ПОМЕСТИТЬ ВременнаяТаблицаСотрудникиПриемУвольнение
		|ИЗ
		|	РегистрСведений.Сотрудники.СрезПоследних(
		|			&КонецПериода,
		|			Период МЕЖДУ &НачалоПериода И &КонецПериода
		|				И Организация = &Организация
		|				И ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Прием)) КАК СотрудникиСрезПоследних
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СотрудникиСрезПоследних.ФизЛицо,
		|	0,
		|	ДЕНЬ(СотрудникиСрезПоследних.Период)
		|ИЗ
		|	РегистрСведений.Сотрудники.СрезПоследних(
		|			&КонецПериода,
		|			Период МЕЖДУ &НачалоПериода И &КонецПериода
		|				И Организация = &Организация
		|				И ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)) КАК СотрудникиСрезПоследних
		// Сотрудники, принятые на работу по трудовым соглашениям.
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СотрудникиПоТрудовымСоглашениямСрезПоследних.ФизЛицо КАК ФизЛицо,
		|	ДЕНЬ(СотрудникиПоТрудовымСоглашениямСрезПоследних.Период) КАК ДеньПриема,
		|	0 КАК ДеньУвольнения
		|ИЗ
		|	РегистрСведений.СотрудникиПоТрудовымСоглашениям.СрезПоследних(
		|			&КонецПериода,
		|			Период МЕЖДУ &НачалоПериода И &КонецПериода
		|				И Организация = &Организация
		|				И ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Прием)) КАК СотрудникиПоТрудовымСоглашениямСрезПоследних
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СотрудникиПоТрудовымСоглашениямСрезПоследних.ФизЛицо,
		|	0,
		|	ДЕНЬ(СотрудникиПоТрудовымСоглашениямСрезПоследних.Период)
		|ИЗ
		|	РегистрСведений.СотрудникиПоТрудовымСоглашениям.СрезПоследних(
		|			&КонецПериода,
		|			Период МЕЖДУ &НачалоПериода И &КонецПериода
		|				И Организация = &Организация
		|				И ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)) КАК СотрудникиПоТрудовымСоглашениямСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаСотрудникиПриемУвольнение.ФизЛицо КАК ФизЛицо,
		|	СУММА(ВременнаяТаблицаСотрудникиПриемУвольнение.ДеньПриема) КАК ДеньПриема,
		|	СУММА(ВременнаяТаблицаСотрудникиПриемУвольнение.ДеньУвольнения) КАК ДеньУвольнения,
		|	ВЫБОР
		|		КОГДА ВЫБОР
		|				КОГДА СУММА(ВременнаяТаблицаСотрудникиПриемУвольнение.ДеньУвольнения) = 0
		|					ТОГДА ДЕНЬ(&КонецПериода)
		|				ИНАЧЕ СУММА(ВременнаяТаблицаСотрудникиПриемУвольнение.ДеньУвольнения)
		|			КОНЕЦ - СУММА(ВременнаяТаблицаСотрудникиПриемУвольнение.ДеньПриема) >= 15
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Больше15дней
		|ПОМЕСТИТЬ ВременнаяТаблицаСотрудникиОтработаноДней
		|ИЗ
		|	ВременнаяТаблицаСотрудникиПриемУвольнение КАК ВременнаяТаблицаСотрудникиПриемУвольнение
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаСотрудникиПриемУвольнение.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВременнаяТаблицаСотрудникиПриемУвольнение";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	// Получение начислений за месяц, определение расчетных баз.
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	1 КАК Порядок,
		|	Начисления.ФизЛицо КАК ФизЛицо,
		|	СУММА(ВЫБОР
		|			КОГДА Начисления.ВидРасчета.ЗачетОтработанногоВремени
		|				ТОГДА Начисления.ОтработаноДней
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОтработаноДней,
		|	СУММА(ВЫБОР
		|			КОГДА Начисления.ВидРасчета.ДополнительныйДоход
		|				ТОГДА 0
		|			ИНАЧЕ Начисления.Результат
		|		КОНЕЦ) КАК СуммаНачислено,
		|	СУММА(ВЫБОР
		|			КОГДА Начисления.ВидРасчета.ДополнительныйДоход
		|				ТОГДА Начисления.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаДопДоход,
		|	СУММА(ВЫБОР
		|			КОГДА Начисления.ВидРасчета.ОблагаетсяСФ
		|				ТОГДА Начисления.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОДСФ,
		|	СУММА(ВЫБОР
		|			КОГДА Начисления.ВидРасчета.ОблагаетсяПН
		|				ТОГДА Начисления.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОДПН,
		|	СУММА(ВЫБОР
		|			КОГДА Начисления.ВидРасчета.ОблагаетсяСФ
		|					И Начисления.ВидРасчета.ОблагаетсяПН
		|				ТОГДА Начисления.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОДСФПН,
		|	СУММА(ВЫБОР
		|			КОГДА Начисления.ВидРасчета.ОблагаетсяПрофВзнос
		|				ТОГДА Начисления.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОДПрофВзнос
		|ПОМЕСТИТЬ ВременнаяТаблицаНачисленияЗаМесяц
		|ИЗ
		|	РегистрРасчета.Начисления КАК Начисления
		|ГДЕ
		|	Начисления.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
		|	И Начисления.Организация = &Организация
		|	И НЕ Начисления.Результат = 0
		|
		|СГРУППИРОВАТЬ ПО
		|	Начисления.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	// Статусы сотрудников и ставки налогов по этим статусам.
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	3 КАК Порядок,
		|	СтатусыСотрудниковСрезПоследних.ФизЛицо КАК ФизЛицо,
		|	СтатусыСотрудниковСрезПоследних.Статус КАК Статус,
		|	ЕСТЬNULL(ВременнаяТаблицаСотрудникиОтработаноДней.Больше15дней, ИСТИНА) КАК ПрименятьВычет,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВременнаяТаблицаСотрудникиОтработаноДней.Больше15дней, ИСТИНА)
		|			ТОГДА ЕСТЬNULL(СтавкиНалоговЗаработнойПлатыСрезПоследних.Вычеты, 0) + ЕСТЬNULL(СтатусыСотрудниковСрезПоследних.ДопВычет, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Вычеты,
		|	СтавкиНалоговЗаработнойПлатыСрезПоследних.СтавкаПФР КАК СтавкаПФР,
		|	СтавкиНалоговЗаработнойПлатыСрезПоследних.СтавкаГНПФР КАК СтавкаГНПФР,
		|	СтавкиНалоговЗаработнойПлатыСрезПоследних.СтавкаПН КАК СтавкаПН,
		|	СтавкиНалоговЗаработнойПлатыСрезПоследних.СтавкаПФФ КАК СтавкаПФФ,
		|	СтавкиНалоговЗаработнойПлатыСрезПоследних.СтавкаМСФ КАК СтавкаМСФ,
		|	СтавкиНалоговЗаработнойПлатыСрезПоследних.СтавкаФОТФ КАК СтавкаФОТФ,
		|	СтавкиНалоговЗаработнойПлатыСрезПоследних.НеВычитатьПФ КАК НеВычитатьПФ,
		|	СтавкиНалоговЗаработнойПлатыСрезПоследних.СтавкаМСР КАК СтавкаМСР,
		|	СтатусыСотрудниковСрезПоследних.Статус.Категория КАК Категория,
		|	СтатусыСотрудниковСрезПоследних.Статус.ВидЗанятости КАК ВидЗанятости,
		|	ВЫБОР
		|		КОГДА СтатусыСотрудниковСрезПоследних.Статус.Категория = ЗНАЧЕНИЕ(Справочник.КатегорииСотрудников.Арендодатель)
		|			ТОГДА &СреднемесячнаяЗПСФ
		|		ИНАЧЕ &СреднемесячнаяЗПСФ / 100 * &ПроцентОтСЗПСФ
		|	КОНЕЦ КАК СреднемесячнаяЗПСФ
		|ПОМЕСТИТЬ ВременнаяТаблицаСтатусы
		|ИЗ
		|	РегистрСведений.СтатусыСотрудников.СрезПоследних(
		|			&КонецПериода,
		|			Организация = &Организация
		|				И ФизЛицо В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВременнаяТаблицаСотрудники.ФизЛицо
		|					ИЗ
		|						ВременнаяТаблицаСотрудники КАК ВременнаяТаблицаСотрудники)) КАК СтатусыСотрудниковСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалоговЗаработнойПлаты.СрезПоследних(&КонецПериода, ) КАК СтавкиНалоговЗаработнойПлатыСрезПоследних
		|		ПО СтатусыСотрудниковСрезПоследних.Статус = СтавкиНалоговЗаработнойПлатыСрезПоследних.Статус
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСотрудникиОтработаноДней КАК ВременнаяТаблицаСотрудникиОтработаноДней
		|		ПО СтатусыСотрудниковСрезПоследних.ФизЛицо = ВременнаяТаблицаСотрудникиОтработаноДней.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	// Графики сотрудников и нормы дней по этим графикам.
	// Расчет СЗП приведенного.
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаСотрудники.ФизЛицо КАК ФизЛицо,
		|	ГрафикиРаботы.ГрафикРаботы КАК ГрафикРаботы,
		|	СУММА(ГрафикиРаботы.ЗначениеДней) КАК НормаДней
		|ПОМЕСТИТЬ ВременнаяТаблицаНормыДней
		|ИЗ
		|	ВременнаяТаблицаСотрудники КАК ВременнаяТаблицаСотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ГрафикиРаботы
		|		ПО ВременнаяТаблицаСотрудники.ГрафикРаботы = ГрафикиРаботы.ГрафикРаботы
		|ГДЕ
		|	ГрафикиРаботы.ГрафикРаботы В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				ВременнаяТаблицаСотрудники.ГрафикРаботы
		|			ИЗ
		|				ВременнаяТаблицаСотрудники КАК ВременнаяТаблицаСотрудники)
		|	И ГрафикиРаботы.Год = ГОД(&КонецПериода)
		|	И ГрафикиРаботы.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаСотрудники.ФизЛицо,
		|	ГрафикиРаботы.ГрафикРаботы
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	4 КАК Порядок,
		|	ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо КАК ФизЛицо,
		|	ВременнаяТаблицаНачисленияЗаМесяц.ОтработаноДней КАК ОтработаноДней,
		|	ВременнаяТаблицаНормыДней.НормаДней КАК НормаДней,
		|	ВременнаяТаблицаСтатусы.СреднемесячнаяЗПСФ КАК СреднемесячнаяЗПСФ,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВременнаяТаблицаНормыДней.НормаДней, 0) = 0
		|			ТОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СреднемесячнаяЗПСФ, 0)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВременнаяТаблицаНачисленияЗаМесяц.ОтработаноДней > ЕСТЬNULL(ВременнаяТаблицаНормыДней.НормаДней, 0)
		|					ТОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СреднемесячнаяЗПСФ, 0)
		|				ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(ВременнаяТаблицаСтатусы.СреднемесячнаяЗПСФ, 0) * ВременнаяТаблицаНачисленияЗаМесяц.ОтработаноДней / ЕСТЬNULL(ВременнаяТаблицаНормыДней.НормаДней, 0) КАК ЧИСЛО(15, 2))
		|			КОНЕЦ
		|	КОНЕЦ КАК СреднемесячнаяЗПСФПриведенная
		|ПОМЕСТИТЬ ВременнаяТаблицаСреднемесячнаяЗПСФПриведенная
		|ИЗ
		|	ВременнаяТаблицаНачисленияЗаМесяц КАК ВременнаяТаблицаНачисленияЗаМесяц
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтатусы КАК ВременнаяТаблицаСтатусы
		|		ПО ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо = ВременнаяТаблицаСтатусы.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНормыДней КАК ВременнаяТаблицаНормыДней
		|		ПО ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо = ВременнаяТаблицаНормыДней.ФизЛицо
		|ГДЕ
		|	НЕ(ВременнаяТаблицаСтатусы.Категория В (&МассивОсобыхКатегорий)
		|				ИЛИ ВременнаяТаблицаСтатусы.ВидЗанятости В ИЕРАРХИИ (&МассивОсобыхВидовЗанятости))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		
	// Расчет налогов СФ.
	// 1 пакет - не арендодатели.
	// 2 пакет - арендодатели, расчет от СЗП.
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	5 КАК Порядок,
		|	ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо КАК ФизЛицо,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаПФР, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаНачисленияЗаМесяц.ОДСФ * ВременнаяТаблицаСтатусы.СтавкаПФР / 100
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ПФР,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаГНПФР, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаНачисленияЗаМесяц.ОДСФ * ВременнаяТаблицаСтатусы.СтавкаГНПФР / 100
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ГНПФР,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаПФР, 0) = 0
		|					ИЛИ ВременнаяТаблицаСтатусы.НеВычитатьПФ
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаНачисленияЗаМесяц.ОДСФПН * ВременнаяТаблицаСтатусы.СтавкаПФР / 100
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ПФРДляВычетаПН,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаГНПФР, 0) = 0
		|					ИЛИ ВременнаяТаблицаСтатусы.НеВычитатьПФ
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаНачисленияЗаМесяц.ОДСФПН * ВременнаяТаблицаСтатусы.СтавкаГНПФР / 100
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ГНПФРДляВычетаПН,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаМСР, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаНачисленияЗаМесяц.ОДСФ * ВременнаяТаблицаСтатусы.СтавкаМСР / 100
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК МСР,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаПФФ, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаНачисленияЗаМесяц.ОДСФ * ВременнаяТаблицаСтатусы.СтавкаПФФ / 100
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ПФФ,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаМСФ, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаНачисленияЗаМесяц.ОДСФ * ВременнаяТаблицаСтатусы.СтавкаМСФ / 100
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК МСФ,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаФОТФ, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаНачисленияЗаМесяц.ОДСФ * ВременнаяТаблицаСтатусы.СтавкаФОТФ / 100
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ФОТФ
		|ПОМЕСТИТЬ ВременнаяТаблицаНалогиСФ
		|ИЗ
		|	ВременнаяТаблицаНачисленияЗаМесяц КАК ВременнаяТаблицаНачисленияЗаМесяц
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтатусы КАК ВременнаяТаблицаСтатусы
		|		ПО ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо = ВременнаяТаблицаСтатусы.ФизЛицо
		|ГДЕ
		|	ВременнаяТаблицаНачисленияЗаМесяц.ОДСФ > 0
		|	И НЕ ВременнаяТаблицаСтатусы.Категория = ЗНАЧЕНИЕ(Справочник.КатегорииСотрудников.Арендодатель)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	5,
		|	ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаПФР, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаСтатусы.СреднемесячнаяЗПСФ * ВременнаяТаблицаСтатусы.СтавкаПФР / 100
		|		КОНЕЦ КАК ЧИСЛО(15, 2)),
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаГНПФР, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаСтатусы.СреднемесячнаяЗПСФ * ВременнаяТаблицаСтатусы.СтавкаГНПФР / 100
		|		КОНЕЦ КАК ЧИСЛО(15, 2)),
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаПФР, 0) = 0
		|					ИЛИ ВременнаяТаблицаСтатусы.НеВычитатьПФ
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаСтатусы.СреднемесячнаяЗПСФ * ВременнаяТаблицаСтатусы.СтавкаПФР / 100
		|		КОНЕЦ КАК ЧИСЛО(15, 2)),
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаГНПФР, 0) = 0
		|					ИЛИ ВременнаяТаблицаСтатусы.НеВычитатьПФ
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаСтатусы.СреднемесячнаяЗПСФ * ВременнаяТаблицаСтатусы.СтавкаГНПФР / 100
		|		КОНЕЦ КАК ЧИСЛО(15, 2)),
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаМСР, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаСтатусы.СреднемесячнаяЗПСФ * ВременнаяТаблицаСтатусы.СтавкаМСР / 100
		|		КОНЕЦ КАК ЧИСЛО(15, 2)),
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаПФФ, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаСтатусы.СреднемесячнаяЗПСФ * ВременнаяТаблицаСтатусы.СтавкаПФФ / 100
		|		КОНЕЦ КАК ЧИСЛО(15, 2)),
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаМСФ, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаСтатусы.СреднемесячнаяЗПСФ * ВременнаяТаблицаСтатусы.СтавкаМСФ / 100
		|		КОНЕЦ КАК ЧИСЛО(15, 2)),
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаФОТФ, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаСтатусы.СреднемесячнаяЗПСФ * ВременнаяТаблицаСтатусы.СтавкаФОТФ / 100
		|		КОНЕЦ КАК ЧИСЛО(15, 2))
		|ИЗ
		|	ВременнаяТаблицаНачисленияЗаМесяц КАК ВременнаяТаблицаНачисленияЗаМесяц
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтатусы КАК ВременнаяТаблицаСтатусы
		|		ПО ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо = ВременнаяТаблицаСтатусы.ФизЛицо
		|ГДЕ
		|	ВременнаяТаблицаНачисленияЗаМесяц.ОДСФ > 0
		|	И ВременнаяТаблицаСтатусы.Категория = ЗНАЧЕНИЕ(Справочник.КатегорииСотрудников.Арендодатель)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		
	// Расчет корректировок налогов СФ.
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо КАК ФизЛицо,
		|	ВременнаяТаблицаНачисленияЗаМесяц.ОДСФ КАК ОДСФ,
		|	ВременнаяТаблицаСреднемесячнаяЗПСФПриведенная.СреднемесячнаяЗПСФПриведенная КАК СреднемесячнаяЗПСФПриведенная,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаПФФ, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ ЕСТЬNULL(ВременнаяТаблицаСреднемесячнаяЗПСФПриведенная.СреднемесячнаяЗПСФПриведенная, 0) * ЕСТЬNULL(ВременнаяТаблицаСотрудники.ЗанимаемыхСтавок, 1) * ВременнаяТаблицаСтатусы.СтавкаПФФ / 100
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ПФФотСЗП,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаМСФ, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ ЕСТЬNULL(ВременнаяТаблицаСреднемесячнаяЗПСФПриведенная.СреднемесячнаяЗПСФПриведенная, 0) * ЕСТЬNULL(ВременнаяТаблицаСотрудники.ЗанимаемыхСтавок, 1) * ВременнаяТаблицаСтатусы.СтавкаМСФ / 100
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК МСФотСЗП,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаФОТФ, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ ЕСТЬNULL(ВременнаяТаблицаСреднемесячнаяЗПСФПриведенная.СреднемесячнаяЗПСФПриведенная, 0) * ЕСТЬNULL(ВременнаяТаблицаСотрудники.ЗанимаемыхСтавок, 1) * ВременнаяТаблицаСтатусы.СтавкаФОТФ / 100
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ФОТФотСЗП
		|ПОМЕСТИТЬ ВременнаяТаблицаНалогиСФКорректировкиПредварит
		|ИЗ
		|	ВременнаяТаблицаНачисленияЗаМесяц КАК ВременнаяТаблицаНачисленияЗаМесяц
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтатусы КАК ВременнаяТаблицаСтатусы
		|		ПО ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо = ВременнаяТаблицаСтатусы.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСреднемесячнаяЗПСФПриведенная КАК ВременнаяТаблицаСреднемесячнаяЗПСФПриведенная
		|		ПО ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо = ВременнаяТаблицаСреднемесячнаяЗПСФПриведенная.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСотрудники КАК ВременнаяТаблицаСотрудники
		|		ПО ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо = ВременнаяТаблицаСотрудники.ФизЛицо
		|ГДЕ
		|	ВременнаяТаблицаНачисленияЗаМесяц.ОДСФ > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	6 КАК Порядок,
		|	ВременнаяТаблицаНалогиСФ.ФизЛицо КАК ФизЛицо,
		|	ВременнаяТаблицаНалогиСФКорректировкиПредварит.СреднемесячнаяЗПСФПриведенная КАК СреднемесячнаяЗПСФПриведенная,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВременнаяТаблицаНалогиСФКорректировкиПредварит.ПФФотСЗП, 0) - ВременнаяТаблицаНалогиСФ.ПФФ > 0
		|			ТОГДА ЕСТЬNULL(ВременнаяТаблицаНалогиСФКорректировкиПредварит.ПФФотСЗП, 0) - ВременнаяТаблицаНалогиСФ.ПФФ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПФФКорректировка,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВременнаяТаблицаНалогиСФКорректировкиПредварит.МСФотСЗП, 0) - ВременнаяТаблицаНалогиСФ.МСФ > 0
		|			ТОГДА ЕСТЬNULL(ВременнаяТаблицаНалогиСФКорректировкиПредварит.МСФотСЗП, 0) - ВременнаяТаблицаНалогиСФ.МСФ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК МСФКорректировка,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВременнаяТаблицаНалогиСФКорректировкиПредварит.ФОТФотСЗП, 0) - ВременнаяТаблицаНалогиСФ.ФОТФ > 0
		|			ТОГДА ЕСТЬNULL(ВременнаяТаблицаНалогиСФКорректировкиПредварит.ФОТФотСЗП, 0) - ВременнаяТаблицаНалогиСФ.ФОТФ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ФОТФКорректировка
		|ПОМЕСТИТЬ ВременнаяТаблицаНалогиСФКорректировки
		|ИЗ
		|	ВременнаяТаблицаНалогиСФ КАК ВременнаяТаблицаНалогиСФ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНалогиСФКорректировкиПредварит КАК ВременнаяТаблицаНалогиСФКорректировкиПредварит
		|		ПО ВременнаяТаблицаНалогиСФ.ФизЛицо = ВременнаяТаблицаНалогиСФКорректировкиПредварит.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	// Расчет налогов ПН.
	ДанныеУчетнойПолитикиПоПерсоналу = БухгалтерскийУчетСервер.ПолучитьДанныеУчетнойПолитикиПоПерсоналу(Дата, Организация);
	                        
	// ПН НЕ нарастающим итогом.
	Если ДанныеУчетнойПолитикиПоПерсоналу.РасчетПНБезНакопления Тогда
		ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	7 КАК Порядок,
			|	ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо КАК ФизЛицо,
			|	ВЫРАЗИТЬ(ВЫБОР
			|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаПН, 0) = 0
			|				ТОГДА 0
			|			ИНАЧЕ (ВременнаяТаблицаНачисленияЗаМесяц.ОДПН - ЕСТЬNULL(ВременнаяТаблицаНалогиСФ.ПФРДляВычетаПН, 0) - ЕСТЬNULL(ВременнаяТаблицаНалогиСФ.ГНПФРДляВычетаПН, 0) - ВременнаяТаблицаСтатусы.Вычеты * 100) * ВременнаяТаблицаСтатусы.СтавкаПН / 100
			|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ПН,
			|	ВЫРАЗИТЬ(ВЫБОР
			|			КОГДА ВременнаяТаблицаНачисленияЗаМесяц.ОтработаноДней = 0
			|						И ВременнаяТаблицаНачисленияЗаМесяц.ОДПН > 0
			|					ИЛИ ЕСТЬNULL(ВременнаяТаблицаНормыДней.НормаДней, 0) = 0
			|					ИЛИ ВременнаяТаблицаНачисленияЗаМесяц.ОтработаноДней > ЕСТЬNULL(ВременнаяТаблицаНормыДней.НормаДней, 0)
			|				ТОГДА &МРД * ВременнаяТаблицаСтатусы.СтавкаПН / 100
			|			ИНАЧЕ &МРД * ВременнаяТаблицаНачисленияЗаМесяц.ОтработаноДней / ЕСТЬNULL(ВременнаяТаблицаНормыДней.НормаДней, 0) * ВременнаяТаблицаСтатусы.СтавкаПН / 100
			|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ПНотМРД,
			|	ВременнаяТаблицаСтатусы.Вычеты КАК Вычеты,
			|	&МРД КАК МРД,
			|	&ДоплатаПНЗаСчетФирмы КАК ДоплатаПНЗаСчетФирмы
			|ПОМЕСТИТЬ ВременнаяТаблицаНалогиПН
			|ИЗ
			|	ВременнаяТаблицаНачисленияЗаМесяц КАК ВременнаяТаблицаНачисленияЗаМесяц
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтатусы КАК ВременнаяТаблицаСтатусы
			|		ПО ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо = ВременнаяТаблицаСтатусы.ФизЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНалогиСФ КАК ВременнаяТаблицаНалогиСФ
			|		ПО ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо = ВременнаяТаблицаНалогиСФ.ФизЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНормыДней КАК ВременнаяТаблицаНормыДней
			|		ПО ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо = ВременнаяТаблицаНормыДней.ФизЛицо
			|ГДЕ
			|	ВременнаяТаблицаНачисленияЗаМесяц.ОДПН > 0
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ФизЛицо";
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		
	// ПН нарастающим итогом.
	Иначе	
		ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	7 КАК Порядок,
			|	ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо КАК ФизЛицо,
			|	ВЫРАЗИТЬ(ВЫБОР
			|			КОГДА ЕСТЬNULL(ВременнаяТаблицаСтатусы.СтавкаПН, 0) = 0
			|				ТОГДА 0
			|			КОГДА &НачалоПериода = &НачалоГода
			|				ТОГДА (ВременнаяТаблицаНачисленияЗаМесяц.ОДПН - ЕСТЬNULL(ВременнаяТаблицаНалогиСФ.ПФРДляВычетаПН, 0) - ЕСТЬNULL(ВременнаяТаблицаНалогиСФ.ГНПФРДляВычетаПН, 0) - ВременнаяТаблицаСтатусы.Вычеты * 100) * ВременнаяТаблицаСтатусы.СтавкаПН / 100
			|			ИНАЧЕ (ВременнаяТаблицаНачисленияЗаМесяц.ОДПН + ЕСТЬNULL(ПодоходныйНалогОбороты.ОДПНОборот, 0) - ЕСТЬNULL(ВременнаяТаблицаНалогиСФ.ПФРДляВычетаПН, 0) - ЕСТЬNULL(ПодоходныйНалогОбороты.ПФРДляРасчетаПНОборот, 0) - ЕСТЬNULL(ВременнаяТаблицаНалогиСФ.ГНПФРДляВычетаПН, 0) - ЕСТЬNULL(ПодоходныйНалогОбороты.ГНПФРДляРасчетаПНОборот, 0) - (ВременнаяТаблицаСтатусы.Вычеты * 100 + (ЕСТЬNULL(ПодоходныйНалогОбороты.ПиИВычетыОборот, 0) - ЕСТЬNULL(ПодоходныйНалогОбороты.ПФРОборот, 0) - ЕСТЬNULL(ПодоходныйНалогОбороты.ГНПФРОборот, 0)))) * ВременнаяТаблицаСтатусы.СтавкаПН / 100 - ЕСТЬNULL(ПодоходныйНалогОбороты.ПНОборот, 0)
			|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ПН,
			|	ВЫРАЗИТЬ(ВЫБОР
			|			КОГДА ВременнаяТаблицаНачисленияЗаМесяц.ОтработаноДней = 0
			|				ТОГДА 0
			|			КОГДА ЕСТЬNULL(ВременнаяТаблицаНормыДней.НормаДней, 0) = 0
			|					ИЛИ ВременнаяТаблицаНачисленияЗаМесяц.ОтработаноДней > ЕСТЬNULL(ВременнаяТаблицаНормыДней.НормаДней, 0)
			|				ТОГДА &МРД * ВременнаяТаблицаСтатусы.СтавкаПН / 100
			|			ИНАЧЕ &МРД * ВременнаяТаблицаНачисленияЗаМесяц.ОтработаноДней / ЕСТЬNULL(ВременнаяТаблицаНормыДней.НормаДней, 0) * ВременнаяТаблицаСтатусы.СтавкаПН / 100
			|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ПНотМРД,
			|	ВременнаяТаблицаСтатусы.Вычеты КАК Вычеты,
			|	&МРД КАК МРД,
			|	&ДоплатаПНЗаСчетФирмы КАК ДоплатаПНЗаСчетФирмы
			|ПОМЕСТИТЬ ВременнаяТаблицаНалогиПН
			|ИЗ
			|	ВременнаяТаблицаНачисленияЗаМесяц КАК ВременнаяТаблицаНачисленияЗаМесяц
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтатусы КАК ВременнаяТаблицаСтатусы
			|		ПО ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо = ВременнаяТаблицаСтатусы.ФизЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНалогиСФ КАК ВременнаяТаблицаНалогиСФ
			|		ПО ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо = ВременнаяТаблицаНалогиСФ.ФизЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПодоходныйНалог.Обороты(&НачалоГода, &КонецПрошлогоМесяца, , Организация = &Организация) КАК ПодоходныйНалогОбороты
			|		ПО ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо = ПодоходныйНалогОбороты.ФизЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНормыДней КАК ВременнаяТаблицаНормыДней
			|		ПО ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо = ВременнаяТаблицаНормыДней.ФизЛицо
			|ГДЕ
			|	ВременнаяТаблицаНачисленияЗаМесяц.ОДПН > 0
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ФизЛицо";
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;	
		
	// Расчет налогов Проф.взнос.
	// Если результат меньше 0- то обнуляется.
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	8 КАК Порядок,
		|	ПрофвзносыСрезПоследних.ФизЛицо КАК ФизЛицо,
		|	ВЫРАЗИТЬ((ВременнаяТаблицаНачисленияЗаМесяц.ОДПрофВзнос - ВЫБОР
		|			КОГДА &ПрофВзносЗаВычетомПФРиГНПФР
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаНалогиСФ.ПФР, 0) + ЕСТЬNULL(ВременнаяТаблицаНалогиСФ.ГНПФР, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ - ВЫБОР
		|			КОГДА &ПрофВзносЗаВычетомПН
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаНалогиПН.ПН, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) * &СтавкаПрофВзнос / 100 КАК ЧИСЛО(15, 2)) КАК ПрофВзнос
		|ПОМЕСТИТЬ ВременнаяТаблицаНалогиПрофВзнос
		|ИЗ
		|	ВременнаяТаблицаНачисленияЗаМесяц КАК ВременнаяТаблицаНачисленияЗаМесяц
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Профвзносы.СрезПоследних(
		|				&КонецПериода,
		|				Организация = &Организация
		|					И ФизЛицо В
		|						(ВЫБРАТЬ
		|							ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо
		|						ИЗ
		|							ВременнаяТаблицаНачисленияЗаМесяц КАК ВременнаяТаблицаНачисленияЗаМесяц)) КАК ПрофвзносыСрезПоследних
		|		ПО ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо = ПрофвзносыСрезПоследних.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНалогиСФ КАК ВременнаяТаблицаНалогиСФ
		|		ПО ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо = ВременнаяТаблицаНалогиСФ.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНалогиПН КАК ВременнаяТаблицаНалогиПН
		|		ПО ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо = ВременнаяТаблицаНалогиПН.ФизЛицо
		|ГДЕ
		|	ПрофвзносыСрезПоследних.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПоПрофсоюзам.Вступление)
		|	И ВременнаяТаблицаНачисленияЗаМесяц.ОДПрофВзнос - ВЫБОР
		|			КОГДА &ПрофВзносЗаВычетомПФРиГНПФР
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаНалогиСФ.ПФР, 0) + ЕСТЬNULL(ВременнаяТаблицаНалогиСФ.ГНПФР, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ - ВЫБОР
		|			КОГДА &ПрофВзносЗаВычетомПН
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаНалогиПН.ПН, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		
	// Результат.
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаСотрудники.ФизЛицо КАК ФизЛицо,
		|	ВременнаяТаблицаСотрудники.ФизЛицоНаименование КАК ФизЛицоНаименование,
		|	ВременнаяТаблицаСтатусы.Статус КАК Статус,
		|	ВременнаяТаблицаСтатусы.ПрименятьВычет КАК ПрименятьВычет,
		|	ВременнаяТаблицаСтатусы.Вычеты КАК Вычеты,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаНачисленияЗаМесяц.ОтработаноДней = 0
		|				И ВременнаяТаблицаНачисленияЗаМесяц.СуммаНачислено > 0
		|			ТОГДА 1
		|		ИНАЧЕ ВременнаяТаблицаНачисленияЗаМесяц.ОтработаноДней
		|	КОНЕЦ КАК ОтработаноДней,
		|	ВременнаяТаблицаНачисленияЗаМесяц.СуммаНачислено КАК СуммаНачислено,
		|	ВременнаяТаблицаНачисленияЗаМесяц.СуммаДопДоход КАК СуммаДопДоход,
		|	ВременнаяТаблицаНачисленияЗаМесяц.ОДСФ КАК ОДСФ,
		|	ВременнаяТаблицаНачисленияЗаМесяц.ОДПН КАК ОДПН,
		|	ВременнаяТаблицаНачисленияЗаМесяц.ОДПрофВзнос КАК ОДПрофВзнос,
		|	ВременнаяТаблицаНалогиСФ.ПФР КАК ПФР,
		|	ВременнаяТаблицаНалогиСФ.ГНПФР КАК ГНПФР,
		|	ВременнаяТаблицаНалогиСФ.МСР КАК МСР,
		|	ВременнаяТаблицаНалогиСФ.ПФФ КАК ПФФ,
		|	ВременнаяТаблицаНалогиСФ.МСФ КАК МСФ,
		|	ВременнаяТаблицаНалогиСФ.ФОТФ КАК ФОТФ,
		|	ВременнаяТаблицаНалогиСФ.ПФРДляВычетаПН КАК ПФРДляРасчетаПН,
		|	ВременнаяТаблицаНалогиСФ.ГНПФРДляВычетаПН КАК ГНПФРДляРасчетаПН,
		|	ВременнаяТаблицаНалогиПН.МРД КАК МРД,
		|	ВЫБОР
		|		КОГДА &ПлательщикЕН
		|			ТОГДА ВЫБОР
		|					КОГДА ВременнаяТаблицаСтатусы.Категория В (&МассивОсобыхКатегорий)
		|							ИЛИ ВременнаяТаблицаСтатусы.ВидЗанятости В ИЕРАРХИИ (&МассивОсобыхВидовЗанятости)
		|						ТОГДА ВременнаяТаблицаНалогиПН.ПН
		|					ИНАЧЕ ВременнаяТаблицаНалогиПН.ПНотМРД
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВременнаяТаблицаНалогиПН.ПН < ВременнаяТаблицаНалогиПН.ПНотМРД
		|					ТОГДА ВЫБОР
		|							КОГДА ВременнаяТаблицаСтатусы.Категория В (&МассивОсобыхКатегорий)
		|									ИЛИ ВременнаяТаблицаСтатусы.ВидЗанятости В ИЕРАРХИИ (&МассивОсобыхВидовЗанятости)
		|								ТОГДА ВЫБОР
		|										КОГДА &ПННарастающимИтогом
		|												И ВременнаяТаблицаНалогиПН.ПН < 0
		|											ТОГДА 0
		|										ИНАЧЕ ВременнаяТаблицаНалогиПН.ПН
		|									КОНЕЦ
		|							ИНАЧЕ ВременнаяТаблицаНалогиПН.ПНотМРД
		|						КОНЕЦ
		|				ИНАЧЕ ВременнаяТаблицаНалогиПН.ПН
		|			КОНЕЦ
		|	КОНЕЦ КАК ПН,
		|	ВЫБОР
		|		КОГДА &ПлательщикЕН
		|			ТОГДА 0
		|		КОГДА ВременнаяТаблицаСтатусы.Категория В (&МассивОсобыхКатегорий)
		|				ИЛИ ВременнаяТаблицаСтатусы.ВидЗанятости В ИЕРАРХИИ (&МассивОсобыхВидовЗанятости)
		|			ТОГДА 0
		|		КОГДА &ПННарастающимИтогом
		|				И ВременнаяТаблицаНалогиПН.ПН < 0
		|				И ВременнаяТаблицаНалогиПН.ПНотМРД * ВременнаяТаблицаСотрудники.ЗанимаемыхСтавок > 0
		|			ТОГДА ВременнаяТаблицаНалогиПН.ПНотМРД * ВременнаяТаблицаСотрудники.ЗанимаемыхСтавок
		|		КОГДА ВременнаяТаблицаНалогиПН.ПНотМРД * ВременнаяТаблицаСотрудники.ЗанимаемыхСтавок > ВременнаяТаблицаНалогиПН.ПН
		|			ТОГДА ВременнаяТаблицаНалогиПН.ПНотМРД * ВременнаяТаблицаСотрудники.ЗанимаемыхСтавок - ВременнаяТаблицаНалогиПН.ПН
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ДоплатаПН,
		|	ВременнаяТаблицаНалогиПрофВзнос.ПрофВзнос КАК ПрофВзнос,
		|	ВременнаяТаблицаНалогиСФКорректировки.СреднемесячнаяЗПСФПриведенная КАК СреднемесячнаяЗПСФПриведенная,
		|	ВременнаяТаблицаНалогиСФКорректировки.ПФФКорректировка КАК ПФФКорректировка,
		|	ВременнаяТаблицаНалогиСФКорректировки.МСФКорректировка КАК МСФКорректировка,
		|	ВременнаяТаблицаНалогиСФКорректировки.ФОТФКорректировка КАК ФОТФКорректировка
		|ИЗ
		|	ВременнаяТаблицаСотрудники КАК ВременнаяТаблицаСотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНачисленияЗаМесяц КАК ВременнаяТаблицаНачисленияЗаМесяц
		|		ПО ВременнаяТаблицаСотрудники.ФизЛицо = ВременнаяТаблицаНачисленияЗаМесяц.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНалогиСФ КАК ВременнаяТаблицаНалогиСФ
		|		ПО ВременнаяТаблицаСотрудники.ФизЛицо = ВременнаяТаблицаНалогиСФ.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНалогиПН КАК ВременнаяТаблицаНалогиПН
		|		ПО ВременнаяТаблицаСотрудники.ФизЛицо = ВременнаяТаблицаНалогиПН.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНалогиПрофВзнос КАК ВременнаяТаблицаНалогиПрофВзнос
		|		ПО ВременнаяТаблицаСотрудники.ФизЛицо = ВременнаяТаблицаНалогиПрофВзнос.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтатусы КАК ВременнаяТаблицаСтатусы
		|		ПО ВременнаяТаблицаСотрудники.ФизЛицо = ВременнаяТаблицаСтатусы.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНалогиСФКорректировки КАК ВременнаяТаблицаНалогиСФКорректировки
		|		ПО ВременнаяТаблицаСотрудники.ФизЛицо = ВременнаяТаблицаНалогиСФКорректировки.ФизЛицо
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВременнаяТаблицаСотрудники.ФизЛицоНаименование";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;

	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(Дата));
	Запрос.УстановитьПараметр("КонецПрошлогоМесяца", НачалоМесяца(Дата) - 1);
	Запрос.УстановитьПараметр("Организация", Организация);
		
	// По данным учетной политики
	ДанныеУчетнойПолитикиПоПерсоналу = БухгалтерскийУчетСервер.ПолучитьДанныеУчетнойПолитикиПоПерсоналу(Дата, Организация);
	ДанныеУчетнойПолитикиПоОрганизации = БухгалтерскийУчетСервер.ПолучитьДанныеУчетнойПолитикиОрганизаций(Дата, Организация);
	
	// СФ
	Запрос.УстановитьПараметр("СреднемесячнаяЗПСФ", ДанныеУчетнойПолитикиПоПерсоналу.СреднемесячнаяЗПСФ);
	Запрос.УстановитьПараметр("ПроцентОтСЗПСФ", ДанныеУчетнойПолитикиПоПерсоналу.ПроцентОтСЗПСФ);
	
	// ПН
	Запрос.УстановитьПараметр("МРД", ДанныеУчетнойПолитикиПоПерсоналу.МинимальныйРасчетныйДоход);	
	Запрос.УстановитьПараметр("ДоплатаПНЗаСчетФирмы", ДанныеУчетнойПолитикиПоПерсоналу.ДоплатаПНЗаСчетФирмы);
	Запрос.УстановитьПараметр("ПННарастающимИтогом", НЕ ДанныеУчетнойПолитикиПоПерсоналу.РасчетПНБезНакопления);
	
	// Корп.отчисления
	Запрос.УстановитьПараметр("СтавкаПрофВзнос", ДанныеУчетнойПолитикиПоПерсоналу.СтавкаПрофВзнос);
	Запрос.УстановитьПараметр("ПрофВзносЗаВычетомПН", ДанныеУчетнойПолитикиПоПерсоналу.ПрофВзносЗаВычетомПН);
	Запрос.УстановитьПараметр("ПрофВзносЗаВычетомПФРиГНПФР", ДанныеУчетнойПолитикиПоПерсоналу.ПрофВзносЗаВычетомПФРиГНПФР);
	
	// Плательщик Единого Налога для расчета от МРД.
	Запрос.УстановитьПараметр("ПлательщикЕН", ДанныеУчетнойПолитикиПоОрганизации.ПлательщикЕН);
	
	МассивОсобыхКатегорий = Новый Массив;
	МассивОсобыхКатегорий.Добавить(Справочники.КатегорииСотрудников.ИнвалидВОВ1_2гр); // 101
	МассивОсобыхКатегорий.Добавить(Справочники.КатегорииСотрудников.ИнвалидВОВ3гр); // 102
	МассивОсобыхКатегорий.Добавить(Справочники.КатегорииСотрудников.МОП); // 106
	МассивОсобыхКатегорий.Добавить(Справочники.КатегорииСотрудников.РаботающиеПенсионерыМОП); // 107
	МассивОсобыхКатегорий.Добавить(Справочники.КатегорииСотрудников.ИностранныеГраждане); // 010
	Запрос.УстановитьПараметр("МассивОсобыхКатегорий", МассивОсобыхКатегорий);
	
	МассивОсобыхВидовЗанятости = Новый Массив;
	МассивОсобыхВидовЗанятости.Добавить(Справочники.ВидыЗанятости.Совместители);
	Запрос.УстановитьПараметр("МассивОсобыхВидовЗанятости", МассивОсобыхВидовЗанятости);
	
	НалогиПоЗарплате.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры // РассчитатьНалогиПоЗарплате()

// Процедура - Рассчитать удержания
//
Процедура РассчитатьПлановыеУдержания()
	
	// 1. Получение рассчитанных налогов для рассчета размера вычета
	// 2. Получение актуальных плановых удержаний
	// 3. Расчет удержаний
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВременнаяТаблицаНалоги.ФизЛицо КАК ФизЛицо,
		|	ВременнаяТаблицаНалоги.ПФР КАК ПФР,
		|	ВременнаяТаблицаНалоги.ГНПФР КАК ГНПФР,
		|	ВременнаяТаблицаНалоги.ПН КАК ПН,
		|	ВременнаяТаблицаНалоги.ПрофВзнос КАК ПрофВзнос
		|ПОМЕСТИТЬ ВременнаяТаблицаНалоги
		|ИЗ
		|	&ВременнаяТаблицаНалоги КАК ВременнаяТаблицаНалоги
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеУдержанияНачало.ФизЛицо,
		|	ПлановыеУдержанияНачало.ВидРасчета,
		|	ПлановыеУдержанияНачало.Размер,
		|	ВЫБОР
		|		КОГДА ПлановыеУдержанияНачало.ВидРасчета.РасчетЗаМинусомСФ
		|			ТОГДА ЕСТЬNULL(ВременнаяТаблицаНалоги.ПФР, 0) + ЕСТЬNULL(ВременнаяТаблицаНалоги.ГНПФР, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ + ВЫБОР
		|		КОГДА ПлановыеУдержанияНачало.ВидРасчета.РасчетЗаМинусомПН
		|			ТОГДА ЕСТЬNULL(ВременнаяТаблицаНалоги.ПН, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ + ВЫБОР
		|		КОГДА ПлановыеУдержанияНачало.ВидРасчета.РасчетЗаМинусомПрофВзнос
		|			ТОГДА ЕСТЬNULL(ВременнаяТаблицаНалоги.ПрофВзнос, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РазмерВычета
		|ИЗ
		|	РегистрСведений.ПлановыеУдержанияНачало.СрезПоследних(&Период, Организация = &Организация) КАК ПлановыеУдержанияНачало
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияОкончание.СрезПоследних(&Период, Организация = &Организация) КАК ПлановыеУдержанияОкончание
		|		ПО ПлановыеУдержанияНачало.Организация = ПлановыеУдержанияОкончание.Организация
		|			И ПлановыеУдержанияНачало.ФизЛицо = ПлановыеУдержанияОкончание.ФизЛицо
		|			И ПлановыеУдержанияНачало.ВидРасчета = ПлановыеУдержанияОкончание.ВидРасчета
		|			И ПлановыеУдержанияНачало.Регистратор = ПлановыеУдержанияОкончание.ДокументСсылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНалоги КАК ВременнаяТаблицаНалоги
		|		ПО ПлановыеУдержанияНачало.ФизЛицо = ВременнаяТаблицаНалоги.ФизЛицо
		|ГДЕ
		|	ПлановыеУдержанияОкончание.Организация ЕСТЬ NULL";
	Запрос.УстановитьПараметр("ВременнаяТаблицаНалоги", НалогиПоЗарплате.Выгрузить());
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// Нет плановых удержаний для расчета
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат;
	КонецЕсли;	
	
	Удержания.Загрузить(Запрос.Выполнить().Выгрузить());
	
	// Подготовка таблицы для движения в регистр
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаУдержания.ФизЛицо,
		|	ВременнаяТаблицаУдержания.ВидРасчета,
		|	ВременнаяТаблицаУдержания.Размер,
		|	ВременнаяТаблицаУдержания.РазмерВычета,
		|	ВременнаяТаблицаУдержания.Результат
		|ПОМЕСТИТЬ ВременнаяТаблицаУдержания
		|ИЗ
		|	&ВременнаяТаблицаУдержания КАК ВременнаяТаблицаУдержания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) КАК ПериодРегистрации,
		|	НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) КАК БазовыйПериодНачало,
		|	КОНЕЦПЕРИОДА(&Дата, ДЕНЬ) КАК БазовыйПериодКонец,
		|	ТаблицаДокумента.ВидРасчета,
		|	&Организация КАК Организация,
		|	ТаблицаДокумента.ФизЛицо,
		|	ТаблицаДокумента.Размер,
		|	ТаблицаДокумента.РазмерВычета,
		|	ТаблицаДокумента.Результат
		|ИЗ
		|	ВременнаяТаблицаУдержания КАК ТаблицаДокумента";
	Запрос.УстановитьПараметр("ВременнаяТаблицаУдержания", Удержания.Выгрузить());	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// Инициализация дополнительных свойств для проведения документа.
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаУдержания", РезультатЗапроса.Выгрузить());
	
	// Подготовка наборов записей.
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	БухгалтерскийУчетСервер.ОтразитьУдержания(ДополнительныеСвойства, Движения, Ложь);

	// Запись наборов записей.
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	Ошибки = Неопределено;
	ПроведениеРасчетовПоЗарплатеСервер.РассчитатьЗаписиРегистраРасчета("Удержания", Движения.Удержания, Удержания, Ошибки);
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
	
	// Подготовка наборов записей
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
КонецПроцедуры // РассчитатьПлановыеУдержания()

// Процедура - Дозаполнить налоги по зарплате
//
Процедура ДозаполнитьНалогиПоЗарплате()
	
	// 1. Получение рассчитанных удержаний
	// 2. Получение разовых удержаний
	// 3. Заполнение суммы удержано
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВременнаяТаблицаУдержания.ФизЛицо,
		|	ВременнаяТаблицаУдержания.Результат
		|ПОМЕСТИТЬ ВременнаяТаблицаУдержания
		|ИЗ
		|	&ВременнаяТаблицаУдержания КАК ВременнаяТаблицаУдержания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Удержания.ФизЛицо,
		|	Удержания.Результат
		|ПОМЕСТИТЬ ВременнаяТаблицаУдержанияЗаМесяц
		|ИЗ
		|	РегистрРасчета.Удержания КАК Удержания
		|ГДЕ
		|	Удержания.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
		|	И Удержания.Организация = &Организация
		|	И НЕ Удержания.Результат = 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.ФизЛицо,
		|	СУММА(ВложенныйЗапрос.Результат) КАК Результат
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВременнаяТаблицаУдержания.ФизЛицо КАК ФизЛицо,
		|		ВременнаяТаблицаУдержания.Результат КАК Результат
		|	ИЗ
		|		ВременнаяТаблицаУдержания КАК ВременнаяТаблицаУдержания
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВременнаяТаблицаУдержанияЗаМесяц.ФизЛицо,
		|		ВременнаяТаблицаУдержанияЗаМесяц.Результат
		|	ИЗ
		|		ВременнаяТаблицаУдержанияЗаМесяц КАК ВременнаяТаблицаУдержанияЗаМесяц) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.ФизЛицо";
	Запрос.УстановитьПараметр("ВременнаяТаблицаУдержания", Удержания.Выгрузить());		
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Для Каждого СтрокаТабличнойЧасти Из НалогиПоЗарплате Цикл 
		СуммаУдержано = 0;
		// Удержания
		Если ВыборкаДетальныеЗаписи.НайтиСледующий(Новый Структура("ФизЛицо", СтрокаТабличнойЧасти.ФизЛицо)) Тогда 
			СуммаУдержано = СуммаУдержано + ВыборкаДетальныеЗаписи.Результат;
			ВыборкаДетальныеЗаписи.Сбросить();
		КонецЕсли;	
		
		// Налоги
		СуммаУдержано = СуммаУдержано 
			+ СтрокаТабличнойЧасти.ПФР 
			+ СтрокаТабличнойЧасти.ГНПФР 
			+ СтрокаТабличнойЧасти.ПН 
			+ СтрокаТабличнойЧасти.ПрофВзнос;
			
		СтрокаТабличнойЧасти.СуммаУдержано = СуммаУдержано;	
	КонецЦикла;	
	
КонецПроцедуры // ДозаполнитьНалогиПоЗарплате()

// Процедура - Дозаполнить выплату
//
Процедура ДозаполнитьВыплату()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВыплаченнаяЗарплатаОбороты.ФизЛицо,
		|	ВыплаченнаяЗарплатаОбороты.СуммаОборот КАК Выплачено
		|ИЗ
		|	РегистрНакопления.ВыплаченнаяЗарплата.Обороты(&НачалоПериода, &КонецПериода, , Организация = &Организация) КАК ВыплаченнаяЗарплатаОбороты";
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
		НайденнаяСтрокаТабличнойЧасти = НалогиПоЗарплате.Найти(ВыборкаДетальныеЗаписи.ФизЛицо, "ФизЛицо");
		
		Если НайденнаяСтрокаТабличнойЧасти = Неопределено Тогда 
			Продолжить;
		КонецЕсли;	
		
		ЗаполнитьЗначенияСвойств(НайденнаяСтрокаТабличнойЧасти, ВыборкаДетальныеЗаписи, "Выплачено");
	КонецЦикла;	
	
КонецПроцедуры // ДозаполнитьВыплату()

// Процедура - Распределить налоги с организации
//
Процедура РаспределитьНалогиСОрганизации()
	
	// Выборка всех начислений за месяц в разрезе Способа отражения.
	// Для каждого налога определяется база распределения, для исключения нулевых ставок.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Начисления.ФизЛицо КАК ФизЛицо,
		|	Начисления.СпособОтражения КАК СпособОтражения,
		|	Начисления.СпособОтражения.СчетЗатратСФ КАК СчетЗатрат,
		|	Начисления.СпособОтражения.СубконтоЗатратСФ1 КАК СубконтоЗатрат1,
		|	Начисления.СпособОтражения.СубконтоЗатратСФ2 КАК СубконтоЗатрат2,
		|	Начисления.СпособОтражения.СубконтоЗатратСФ3 КАК СубконтоЗатрат3,
		|	СУММА(Начисления.Результат) КАК Результат
		|ИЗ
		|	РегистрРасчета.Начисления КАК Начисления
		|ГДЕ
		|	Начисления.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
		|	И Начисления.Организация = &Организация
		|	И НЕ Начисления.Результат = 0
		|	И Начисления.ВидРасчета.ОблагаетсяСФ
		|
		|СГРУППИРОВАТЬ ПО
		|	Начисления.ФизЛицо,
		|	Начисления.СпособОтражения,
		|	Начисления.СпособОтражения.СчетЗатратСФ,
		|	Начисления.СпособОтражения.СубконтоЗатратСФ1,
		|	Начисления.СпособОтражения.СубконтоЗатратСФ2,
		|	Начисления.СпособОтражения.СубконтоЗатратСФ3
		|ИТОГИ ПО
		|	ФизЛицо";
	Запрос.УстановитьПараметр("НалогиПоЗарплате", НалогиПоЗарплате.Выгрузить());
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Организация", Организация);

	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат;	
	КонецЕсли;
	
	ВыборкаФизЛицо = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаФизЛицо.Следующий() Цикл 
		
		// Распределение сумм налогов.
		НайденныеСтроки = НалогиПоЗарплате.НайтиСтроки(Новый Структура("ФизЛицо", ВыборкаФизЛицо.ФизЛицо));
		Если НайденныеСтроки.Количество() = 0 Тогда 
			Продолжить;
		Иначе 
			ПФФ = НайденныеСтроки[0].ПФФ;
			МСФ = НайденныеСтроки[0].МСФ;
			ФОТФ = НайденныеСтроки[0].ФОТФ;
		КонецЕсли;
		
		ВыборкаДетальныеЗаписи = ВыборкаФизЛицо.Выбрать();
		
		МассивКоэффициентов = Новый Массив;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
			МассивКоэффициентов.Добавить(ВыборкаДетальныеЗаписи.Результат);
		КонецЦикла;
		
		МассивСуммПФФ = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(ПФФ, МассивКоэффициентов);
		МассивСуммМСФ = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(МСФ, МассивКоэффициентов);
		МассивСуммФОТФ = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(ФОТФ, МассивКоэффициентов);
		
		// Определение параметров отражения в учете.
		ВыборкаДетальныеЗаписи.Сбросить();
		
		ИндексВМассиве = 0;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НайденныеСтроки = НалогиСОрганизации.НайтиСтроки(Новый Структура("СчетЗатрат, СубконтоЗатрат1, СубконтоЗатрат2, СубконтоЗатрат3", 
				ВыборкаДетальныеЗаписи.СчетЗатрат, 
				ВыборкаДетальныеЗаписи.СубконтоЗатрат1,
				ВыборкаДетальныеЗаписи.СубконтоЗатрат2,
				ВыборкаДетальныеЗаписи.СубконтоЗатрат3));
				
			Если НайденныеСтроки.Количество() = 0 Тогда 
				СтрокаТабличнойЧасти = НалогиСОрганизации.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ВыборкаДетальныеЗаписи);
			Иначе 
				СтрокаТабличнойЧасти = НайденныеСтроки[0];
			КонецЕсли;			
			
			Если НЕ МассивСуммПФФ = Неопределено Тогда 
				СтрокаТабличнойЧасти.ПФФ = СтрокаТабличнойЧасти.ПФФ + МассивСуммПФФ[ИндексВМассиве];
			КонецЕсли;
			Если НЕ МассивСуммМСФ = Неопределено Тогда 
				СтрокаТабличнойЧасти.МСФ = СтрокаТабличнойЧасти.МСФ + МассивСуммМСФ[ИндексВМассиве];
			КонецЕсли;
			Если НЕ МассивСуммФОТФ = Неопределено Тогда 
				СтрокаТабличнойЧасти.ФОТФ = СтрокаТабличнойЧасти.ФОТФ + МассивСуммФОТФ[ИндексВМассиве];
			КонецЕсли;	
			
			ИндексВМассиве = ИндексВМассиве + 1;
		КонецЦикла;
	КонецЦикла;	
КонецПроцедуры // РаспределитьНалогиСОрганизации()

// Процедура - Распределить налоги с организации (Корректировки)
//
Процедура РаспределитьНалогиСОрганизацииКорректировки()
	
	// Выборка всех начислений за месяц в разрезе подразделения и вида начисления для Физлиц, у которых есть корректировки.
	// Для каждого налога определяется база распределения, для исключения нулевых ставок.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗакрытиеМесяцаЗПНалогиПоЗарплате.ФизЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ВременнаяТаблицаНалогиКорректировкиФизлицаДляОтбора
		|ИЗ
		|	&НалогиПоЗарплате КАК ЗакрытиеМесяцаЗПНалогиПоЗарплате
		|ГДЕ
		|	(ЗакрытиеМесяцаЗПНалогиПоЗарплате.ПФФКорректировка <> 0
		|			ИЛИ ЗакрытиеМесяцаЗПНалогиПоЗарплате.МСФКорректировка <> 0
		|			ИЛИ ЗакрытиеМесяцаЗПНалогиПоЗарплате.ФОТФКорректировка <> 0)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Начисления.ФизЛицо КАК ФизЛицо,
		|	Начисления.СпособОтражения КАК СпособОтражения,
		|	Начисления.СпособОтражения.СчетЗатратСФ КАК СчетЗатрат,
		|	Начисления.СпособОтражения.СубконтоЗатратСФ1 КАК СубконтоЗатрат1,
		|	Начисления.СпособОтражения.СубконтоЗатратСФ2 КАК СубконтоЗатрат2,
		|	Начисления.СпособОтражения.СубконтоЗатратСФ3 КАК СубконтоЗатрат3,
		|	СУММА(Начисления.Результат) КАК Результат
		|ИЗ
		|	РегистрРасчета.Начисления КАК Начисления
		|ГДЕ
		|	Начисления.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
		|	И Начисления.Организация = &Организация
		|	И НЕ Начисления.Результат = 0
		|	И Начисления.ВидРасчета.ОблагаетсяСФ
		|	И Начисления.ФизЛицо В
		|			(ВЫБРАТЬ
		|				ВременнаяТаблицаНалогиКорректировкиФизлицаДляОтбора.ФизЛицо КАК ФизЛицо
		|			ИЗ
		|				ВременнаяТаблицаНалогиКорректировкиФизлицаДляОтбора КАК ВременнаяТаблицаНалогиКорректировкиФизлицаДляОтбора)
		|
		|СГРУППИРОВАТЬ ПО
		|	Начисления.ФизЛицо,
		|	Начисления.СпособОтражения,
		|	Начисления.СпособОтражения.СчетЗатратСФ,
		|	Начисления.СпособОтражения.СубконтоЗатратСФ1,
		|	Начисления.СпособОтражения.СубконтоЗатратСФ2,
		|	Начисления.СпособОтражения.СубконтоЗатратСФ3
		|ИТОГИ ПО
		|	ФизЛицо";
	Запрос.УстановитьПараметр("НалогиПоЗарплате", НалогиПоЗарплате.Выгрузить());
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Организация", Организация);

	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат;	
	КонецЕсли;
			 
	ВыборкаФизЛицо = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаФизЛицо.Следующий() Цикл 
		
		// Распределение сумм налогов.
		НайденныеСтроки = НалогиПоЗарплате.НайтиСтроки(Новый Структура("ФизЛицо", ВыборкаФизЛицо.ФизЛицо));
		Если НайденныеСтроки.Количество() = 0 Тогда 
			Продолжить;
		Иначе 
			ПФФКорректировка = НайденныеСтроки[0].ПФФКорректировка;
			МСФКорректировка = НайденныеСтроки[0].МСФКорректировка;
			ФОТФКорректировка = НайденныеСтроки[0].ФОТФКорректировка;
		КонецЕсли;
		
		ВыборкаДетальныеЗаписи = ВыборкаФизЛицо.Выбрать();
		
		МассивКоэффициентов = Новый Массив;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
			МассивКоэффициентов.Добавить(ВыборкаДетальныеЗаписи.Результат);
		КонецЦикла;
		
		МассивСуммПФФ = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(ПФФКорректировка, МассивКоэффициентов);
		МассивСуммМСФ = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(МСФКорректировка, МассивКоэффициентов);
		МассивСуммФОТФ = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(ФОТФКорректировка, МассивКоэффициентов);
		
		// Определение параметров отражения в учете.
		ВыборкаДетальныеЗаписи.Сбросить();
		
		ИндексВМассиве = 0;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
			НайденныеСтроки = НалогиСОрганизацииКорректировки.НайтиСтроки(Новый Структура("СчетЗатрат, СубконтоЗатрат1, СубконтоЗатрат2, СубконтоЗатрат3", 
				ВыборкаДетальныеЗаписи.СчетЗатрат, 
				ВыборкаДетальныеЗаписи.СубконтоЗатрат1,
				ВыборкаДетальныеЗаписи.СубконтоЗатрат2,
				ВыборкаДетальныеЗаписи.СубконтоЗатрат3));
				
			Если НайденныеСтроки.Количество() = 0 Тогда 
				СтрокаТабличнойЧасти = НалогиСОрганизацииКорректировки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ВыборкаДетальныеЗаписи);
			Иначе 
				СтрокаТабличнойЧасти = НайденныеСтроки[0];
			КонецЕсли;			
			
			Если НЕ МассивСуммПФФ = Неопределено Тогда 
				СтрокаТабличнойЧасти.ПФФКорректировка = СтрокаТабличнойЧасти.ПФФКорректировка + МассивСуммПФФ[ИндексВМассиве];
			КонецЕсли;
			Если НЕ МассивСуммМСФ = Неопределено Тогда 
				СтрокаТабличнойЧасти.МСФКорректировка = СтрокаТабличнойЧасти.МСФКорректировка + МассивСуммМСФ[ИндексВМассиве];
			КонецЕсли;
			Если НЕ МассивСуммФОТФ = Неопределено Тогда 
				СтрокаТабличнойЧасти.ФОТФКорректировка = СтрокаТабличнойЧасти.ФОТФКорректировка + МассивСуммФОТФ[ИндексВМассиве];
			КонецЕсли;	
			
			ИндексВМассиве = ИндексВМассиве + 1;
		КонецЦикла;
	КонецЦикла;	
КонецПроцедуры // РаспределитьНалогиСОрганизацииКорректировки()

#КонецОбласти

#КонецЕсли
