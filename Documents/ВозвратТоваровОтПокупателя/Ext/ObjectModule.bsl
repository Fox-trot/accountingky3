#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииОбщегоНазначения

Процедура УстановитьДополнительныеСвойства(ДополнительныеСвойства)
	ДополнительныеСвойства.ДляПроведения.Вставить("СкладРасход", 		Склад);
	ДополнительныеСвойства.ДляПроведения.Вставить("ДокументОснование", 	ДокументОснование);	
	ДополнительныеСвойства.ДляПроведения.Вставить("СпособОценки", ?(Товары.Количество() > 0 И ЗначениеЗаполнено(Ссылка.Товары[0].СпособОценки), 
																		Ссылка.Товары[0].СпособОценки, 
																		Перечисления.СпособыОценки.ПоСредней));
		
КонецПроцедуры

Функция ПолучитьЗапросВыполнитьПредварительныйКонтроль() Экспорт

 	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|	Товары.Количество,
	|	Товары.СчетУчета,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ВременнаяТаблицаТовары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыОбороты.СчетУчета,
	|	ЗапасыОбороты.Номенклатура,
	|	ЗапасыОбороты.Партия,
	|	СУММА(ЗапасыОбороты.КоличествоПриход) КАК Количество,
	|	ЗапасыОбороты.Цена
	|ПОМЕСТИТЬ ВременнаяТаблицаУжеВозвращенныхТоваров
	|ИЗ
	|	РегистрНакопления.Запасы.Обороты(
	|			,
	|			,
	|			Авто,
	|			Организация = &Организация
	|				И (Склад = &Склад
	|					ИЛИ &Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						ВременнаяТаблицаТовары.Номенклатура
	|					ИЗ
	|						ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары)) КАК ЗапасыОбороты
	|ГДЕ
	|	ВЫРАЗИТЬ(ЗапасыОбороты.Регистратор КАК Документ.ВозвратТоваровПоставщику).ДокументОснование = &ДокументОснование
	|	И (ВЫРАЗИТЬ(ЗапасыОбороты.Регистратор КАК Документ.ВозвратТоваровПоставщику)) <> &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОбороты.СчетУчета,
	|	ЗапасыОбороты.Партия,
	|	ЗапасыОбороты.Номенклатура,
	|	ЗапасыОбороты.Цена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаТовары.Номенклатура,
	|	ЕСТЬNULL(ЗапасыОбороты.КоличествоРасход, 0) - ЕСТЬNULL(ВременнаяТаблицаУжеВозвращенныхТоваров.Количество, 0) КАК ДоступноеКоличество,
	|	ЕСТЬNULL(ЗапасыОбороты.КоличествоРасход, 0) - ЕСТЬNULL(ВременнаяТаблицаУжеВозвращенныхТоваров.Количество, 0) - ВременнаяТаблицаТовары.Количество КАК Разница,
	|	ВременнаяТаблицаТовары.НомерСтроки,
	|	ВременнаяТаблицаТовары.ЕдиницаИзмерения,
	|	ВременнаяТаблицаТовары.СчетУчета
	|ПОМЕСТИТЬ ВременнаяТаблицаПроверкаОстатка
	|ИЗ
	|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Обороты(, , Авто, ) КАК ЗапасыОбороты
	|		ПО ВременнаяТаблицаТовары.Номенклатура = ЗапасыОбороты.Номенклатура
	|			И ВременнаяТаблицаТовары.СчетУчета = ЗапасыОбороты.СчетУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаУжеВозвращенныхТоваров КАК ВременнаяТаблицаУжеВозвращенныхТоваров
	|		ПО ВременнаяТаблицаТовары.Номенклатура = ВременнаяТаблицаУжеВозвращенныхТоваров.Номенклатура
	|			И ВременнаяТаблицаТовары.СчетУчета = ВременнаяТаблицаУжеВозвращенныхТоваров.СчетУчета
	|ГДЕ
	|	ЗапасыОбороты.Регистратор = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаПроверкаОстатка.Номенклатура,
	|	ВременнаяТаблицаПроверкаОстатка.Разница,
	|	ВременнаяТаблицаПроверкаОстатка.НомерСтроки,
	|	ВременнаяТаблицаПроверкаОстатка.ЕдиницаИзмерения,
	|	ВременнаяТаблицаПроверкаОстатка.ДоступноеКоличество,
	|	ВременнаяТаблицаПроверкаОстатка.СчетУчета
	|ИЗ
	|	ВременнаяТаблицаПроверкаОстатка КАК ВременнаяТаблицаПроверкаОстатка
	|ГДЕ
	|	ВременнаяТаблицаПроверкаОстатка.Разница < 0";
	
	Возврат ТекстЗапроса;	

КонецФункции // ПролучитьЗапросВыполнитьПредварительныйКонтроль()

Функция ПолучитьТекстЗапросаПодбора() Экспорт
 	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗапасыОбороты.Регистратор
	|ПОМЕСТИТЬ СписокДокументовРеализации
	|ИЗ
	|	РегистрНакопления.Запасы.Обороты(, , Авто, Организация = &Организация) КАК ЗапасыОбороты
	|ГДЕ
	|	(ВЫРАЗИТЬ(ЗапасыОбороты.Регистратор КАК Документ.РеализацияТоваровУслуг).Контрагент = &Контрагент
	|			ИЛИ &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	|	И ((ВЫРАЗИТЬ(ЗапасыОбороты.Регистратор КАК Документ.РеализацияТоваровУслуг)) = &ДокументРеализации
	|			ИЛИ &ДокументРеализации = ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка))
	|	И (ВЫРАЗИТЬ(ЗапасыОбороты.Регистратор КАК Документ.РеализацияТоваровУслуг).ДоговорКонтрагента = &ДоговорКонтрагента
	|			ИЛИ &ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.НомерСтроки,
	|	РеализацияТоваровУслугТовары.Номенклатура,
	|	РеализацияТоваровУслугТовары.Количество,
	|	РеализацияТоваровУслугТовары.СчетУчета,
	|	ВЫРАЗИТЬ(РеализацияТоваровУслугТовары.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РеализацияТоваровУслугТовары.Ссылка КАК ДокументРеализации,
	|	РеализацияТоваровУслугТовары.Себестоимость,
	|	РеализацияТоваровУслугТовары.Цена,
	|	РеализацияТоваровУслугТовары.Всего,
	|	РеализацияТоваровУслугТовары.Доход,
	|	РеализацияТоваровУслугТовары.Итого,
	|	РеализацияТоваровУслугТовары.СтавкаНДС,
	|	РеализацияТоваровУслугТовары.СуммаНДС,
	|	РеализацияТоваровУслугТовары.СуммаНСП,
	|	РеализацияТоваровУслугТовары.СкидкаПроцент,
	|	РеализацияТоваровУслугТовары.СуммаСкидки,
	|	РеализацияТоваровУслугТовары.СчетДохода,
	|	РеализацияТоваровУслугТовары.СчетСебестоимости,
	|	РеализацияТоваровУслугТовары.СпособОценки,
	|	РеализацияТоваровУслугТовары.ИндивидуальныйНомер,
	|	РеализацияТоваровУслугТовары.Партия,
	|	РеализацияТоваровУслугТовары.предСтатусМБП,
	|	РеализацияТоваровУслугТовары.Сотрудник
	|ПОМЕСТИТЬ ВременнаяТаблицаТовары
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				СписокДокументовРеализации.Регистратор
	|			ИЗ
	|				СписокДокументовРеализации КАК СписокДокументовРеализации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыОбороты.СчетУчета,
	|	ЗапасыОбороты.Номенклатура,
	|	ЗапасыОбороты.Партия,
	|	СУММА(ЗапасыОбороты.КоличествоПриход) КАК Количество,
	|	ЗапасыОбороты.Цена,
	|	ВЫРАЗИТЬ(ЗапасыОбороты.Регистратор КАК Документ.ВозвратТоваровОтПокупателя).ДокументОснование КАК ДокументРеализации
	|ПОМЕСТИТЬ ВременнаяТаблицаУжеВозвращенныхТоваров
	|ИЗ
	|	РегистрНакопления.Запасы.Обороты(
	|			,
	|			,
	|			Авто,
	|			Организация = &Организация
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						ВременнаяТаблицаТовары.Номенклатура
	|					ИЗ
	|						ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары)) КАК ЗапасыОбороты
	|ГДЕ
	|	ВЫРАЗИТЬ(ЗапасыОбороты.Регистратор КАК Документ.ВозвратТоваровОтПокупателя).ДокументОснование В
	|			(ВЫБРАТЬ
	|				СписокДокументовРеализации.Регистратор
	|			ИЗ
	|				СписокДокументовРеализации КАК СписокДокументовРеализации)
	|	И ВЫРАЗИТЬ(ЗапасыОбороты.Регистратор КАК Документ.ВозвратТоваровОтПокупателя) ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОбороты.СчетУчета,
	|	ЗапасыОбороты.Партия,
	|	ЗапасыОбороты.Номенклатура,
	|	ЗапасыОбороты.Цена,
	|	ВЫРАЗИТЬ(ЗапасыОбороты.Регистратор КАК Документ.ВозвратТоваровОтПокупателя).ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаТовары.Номенклатура,
	|	ЕСТЬNULL(ЗапасыОбороты.КоличествоРасход, 0) - ЕСТЬNULL(ВременнаяТаблицаУжеВозвращенныхТоваров.Количество, 0) КАК ДоступноеКоличество,
	|	ВременнаяТаблицаТовары.НомерСтроки,
	|	ВременнаяТаблицаТовары.ЕдиницаИзмерения,
	|	ВременнаяТаблицаТовары.СчетУчета,
	|	ЕСТЬNULL(ЗапасыОбороты.КоличествоРасход, 0) КАК КоличествоВДокументеРеализации,
	|	ВременнаяТаблицаУжеВозвращенныхТоваров.Количество КАК КоличествоУжеВозвращены,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ЗапасыОбороты.КоличествоРасход, 0) - ЕСТЬNULL(ВременнаяТаблицаУжеВозвращенныхТоваров.Количество, 0) > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Доступно,
	|	ВременнаяТаблицаТовары.ДокументРеализации,
	|	ВременнаяТаблицаТовары.Себестоимость,
	|	ВременнаяТаблицаТовары.Цена,
	|	ВременнаяТаблицаТовары.Всего,
	|	ВременнаяТаблицаТовары.Доход,
	|	ВременнаяТаблицаТовары.Итого,
	|	ВременнаяТаблицаТовары.СтавкаНДС,
	|	ВременнаяТаблицаТовары.СуммаНДС,
	|	ВременнаяТаблицаТовары.СуммаНСП,
	|	ВременнаяТаблицаТовары.СкидкаПроцент,
	|	ВременнаяТаблицаТовары.СуммаСкидки,
	|	ВременнаяТаблицаТовары.СчетДохода,
	|	ВременнаяТаблицаТовары.СчетСебестоимости,
	|	ВременнаяТаблицаТовары.СпособОценки,
	|	ВременнаяТаблицаТовары.ИндивидуальныйНомер,
	|	ВременнаяТаблицаТовары.Партия,
	|	ВременнаяТаблицаТовары.предСтатусМБП,
	|	ВременнаяТаблицаТовары.Сотрудник
	|ПОМЕСТИТЬ ВременнаяТаблицаПроверкаОстатка
	|ИЗ
	|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Обороты(, , Авто, ) КАК ЗапасыОбороты
	|		ПО ВременнаяТаблицаТовары.Номенклатура = ЗапасыОбороты.Номенклатура
	|			И ВременнаяТаблицаТовары.СчетУчета = ЗапасыОбороты.СчетУчета
	|			И ВременнаяТаблицаТовары.ДокументРеализации = ЗапасыОбороты.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаУжеВозвращенныхТоваров КАК ВременнаяТаблицаУжеВозвращенныхТоваров
	|		ПО ВременнаяТаблицаТовары.Номенклатура = ВременнаяТаблицаУжеВозвращенныхТоваров.Номенклатура
	|			И ВременнаяТаблицаТовары.СчетУчета = ВременнаяТаблицаУжеВозвращенныхТоваров.СчетУчета
	|			И ВременнаяТаблицаТовары.ДокументРеализации = ВременнаяТаблицаУжеВозвращенныхТоваров.ДокументРеализации
	|ГДЕ
	|	ЗапасыОбороты.Регистратор В
	|			(ВЫБРАТЬ
	|				СписокДокументовРеализации.Регистратор
	|			ИЗ
	|				СписокДокументовРеализации КАК СписокДокументовРеализации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаПроверкаОстатка.ДокументРеализации,
	|	МАКСИМУМ(ВременнаяТаблицаПроверкаОстатка.ДокументРеализации.СуммаДокумента) КАК СуммаДокумента,
	|	МАКСИМУМ(ВременнаяТаблицаПроверкаОстатка.Доступно) КАК Доступно
	|ИЗ
	|	ВременнаяТаблицаПроверкаОстатка КАК ВременнаяТаблицаПроверкаОстатка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаПроверкаОстатка.ДокументРеализации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаПроверкаОстатка.Номенклатура,
	|	ВременнаяТаблицаПроверкаОстатка.НомерСтроки,
	|	ВременнаяТаблицаПроверкаОстатка.ЕдиницаИзмерения,
	|	ВременнаяТаблицаПроверкаОстатка.ДоступноеКоличество,
	|	ВременнаяТаблицаПроверкаОстатка.СчетУчета,
	|	ВременнаяТаблицаПроверкаОстатка.КоличествоВДокументеРеализации,
	|	ВременнаяТаблицаПроверкаОстатка.КоличествоУжеВозвращены,
	|	ВременнаяТаблицаПроверкаОстатка.Доступно,
	|	ВременнаяТаблицаПроверкаОстатка.ДокументРеализации,
	|	ВременнаяТаблицаПроверкаОстатка.Себестоимость,
	|	ВременнаяТаблицаПроверкаОстатка.Цена,
	|	ВременнаяТаблицаПроверкаОстатка.Всего,
	|	ВременнаяТаблицаПроверкаОстатка.Доход,
	|	ВременнаяТаблицаПроверкаОстатка.Итого,
	|	ВременнаяТаблицаПроверкаОстатка.СтавкаНДС,
	|	ВременнаяТаблицаПроверкаОстатка.СуммаНДС,
	|	ВременнаяТаблицаПроверкаОстатка.СуммаНСП,
	|	ВременнаяТаблицаПроверкаОстатка.СкидкаПроцент,
	|	ВременнаяТаблицаПроверкаОстатка.СуммаСкидки,
	|	ВременнаяТаблицаПроверкаОстатка.СчетДохода,
	|	ВременнаяТаблицаПроверкаОстатка.СчетСебестоимости,
	|	ВременнаяТаблицаПроверкаОстатка.СпособОценки,
	|	ВременнаяТаблицаПроверкаОстатка.ИндивидуальныйНомер,
	|	ВременнаяТаблицаПроверкаОстатка.Партия,
	|	ВременнаяТаблицаПроверкаОстатка.предСтатусМБП,
	|	ВременнаяТаблицаПроверкаОстатка.Сотрудник
	|ИЗ
	|	ВременнаяТаблицаПроверкаОстатка КАК ВременнаяТаблицаПроверкаОстатка";	

	Возврат ТекстЗапроса;
		
КонецФункции // ()

// Выполняет контроль противоречий.
//
Процедура ВыполнитьПредварительныйКонтроль(Отказ)
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;	
	Запрос.Текст = ПолучитьЗапросВыполнитьПредварительныйКонтроль();		
		
	Запрос.УстановитьПараметр("Товары", 			Товары.Выгрузить());
	Запрос.УстановитьПараметр("ДокументОснование", 	ДокументОснование);
	Запрос.УстановитьПараметр("Ссылка", 			Ссылка);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("Склад", 				Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
		Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Количество возвращаемой номенклатуры ""%1"" в строке %2 указано больше на %3 %4, чем было реализовано.'"), 
										ВыборкаИзРезультатаЗапроса.Номенклатура,
										ВыборкаИзРезультатаЗапроса.НомерСтроки,
										-ВыборкаИзРезультатаЗапроса.Разница,
										ВыборкаИзРезультатаЗапроса.ЕдиницаИзмерения);
			
			БухгалтерскийУчетСервер.СообщитьОбОшибке(
			ЭтотОбъект,
			ТекстСообщения,
			"Товары",
			ВыборкаИзРезультатаЗапроса.НомерСтроки,
			"Количество",
			Отказ);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоРеализацияТоваровУслуг(ДанныеЗаполнения) Экспорт
	УПП = БухгалтерскийУчетСервер.ПолучитьДанныеУчетнойПолитикиОрганизаций(ТекущаяДата(), ДанныеЗаполнения.Организация);

	// Заполнение шапки
	Организация = ДанныеЗаполнения.Организация;
	ВалютаДокумента = ДанныеЗаполнения.ВалютаДокумента;
	ВидПлатежа = ДанныеЗаполнения.ВидПлатежа;
	ДоговорКонтрагента = ДанныеЗаполнения.ДоговорКонтрагента;
	Контрагент = ДанныеЗаполнения.Контрагент;
	Курс = ДанныеЗаполнения.Курс;
	СкидкаПроцент = ДанныеЗаполнения.СкидкаПроцент;
	Склад = ДанныеЗаполнения.Склад;
	ДокументОснование = ДанныеЗаполнения.Ссылка;
	СубконтоДоходов = ДанныеЗаполнения.СубконтоДоходов;
	СубконтоСписанияСебестоимости = ДанныеЗаполнения.СубконтоСписанияСебестоимости;
	СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
	СчетРасчетов = ДанныеЗаполнения.СчетРасчетов;
	
	Товары.Очистить();
	
	Запрос = Новый Запрос;	
 	Запрос.Текст = ПолучитьТекстЗапросаПодбора();

	Запрос.УстановитьПараметр("Контрагент", 		Контрагент);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);

	Запрос.УстановитьПараметр("ДокументРеализации", ДокументОснование);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаТовара = РезультатЗапроса[5].Выбрать();
	Пока ВыборкаТовара.Следующий() И ВыборкаТовара.ДоступноеКоличество > 0 Цикл
		НоваяСтрока = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТовара);
		НоваяСтрока.Количество = ВыборкаТовара.ДоступноеКоличество;		
	КонецЦикла;
	
	ПараметрыОбъекта = Новый Структура;
	ЗаполнитьПараметрыОбъекта(УПП, ПараметрыОбъекта);
	ДанныеСТЧ 	= Новый Структура("Номенклатура, 
									|Количество,
									|Цена, 
									|Всего,
									|Доход,												
									|Итого,
									|Себестоимость,
									|СтавкаНДС,											
									|СуммаНДС,
									|СтавкаНСП,
									|ЗначСтавкаНСП,											 
									|СуммаНСП,
									|СкидкаПроцент,
									|СуммаСкидки, 
									|СчетУчета, 
									|СчетДохода,
									|СчетСебестоимости,
									|СпособОценки");
	
	Для каждого СтрокаТабличнойЧасти Из Товары Цикл		
		ЗаполнитьДанныеСТЧ(УПП, ДанныеСТЧ, СтрокаТабличнойЧасти);
		ОбработкаТабличныхЧастейВызовСервера.РасчетСтрокиРеализации(ДанныеСТЧ, ПараметрыОбъекта);
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ДанныеСТЧ);
		ПересчетНезаполненногоПроцентаСкидки(СтрокаТабличнойЧасти);
	КонецЦикла;
		
	СуммаДокумента = Товары.Итог("Итого");	
		
КонецПроцедуры

Процедура ПересчетНезаполненногоПроцентаСкидки(СтрокаТабличнойЧасти)
	Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.СкидкаПроцент) 
		И ЗначениеЗаполнено(СтрокаТабличнойЧасти.Всего) Тогда
		СтрокаТабличнойЧасти.СкидкаПроцент = Окр(СтрокаТабличнойЧасти.СуммаСкидки / СтрокаТабличнойЧасти.Всего, 2);
	КонецЕсли;					
КонецПроцедуры 

Процедура ЗаполнитьПараметрыОбъекта(УПП, ПараметрыОбъекта)
	
	ПараметрыОбъекта.Вставить("Дата", Дата);
	ПараметрыОбъекта.Вставить("СкидкаПроцент", 0);
	ПараметрыОбъекта.Вставить("ВидСкидки", Перечисления.ВидыСкидок.ПроцентПоСтроке);
	ПараметрыОбъекта.Вставить("ДоговорКонтрагента", ДоговорКонтрагента);
	ПараметрыОбъекта.Вставить("Склад", Склад);
	ДанныеДоговора 						= БухгалтерскийУчетВызовСервераПовтИсп.ДанныеДоговора(ДоговорКонтрагента);
	ПараметрыОбъекта.Вставить("СтавкаНДС", ?(ЗначениеЗаполнено(ДанныеДоговора.СтавкаНДС), ДанныеДоговора.СтавкаНДС, УПП.СтавкаНДСПоУмолчанию));
	ПараметрыОбъекта.Вставить("ЗначСтавкаНДС", БухгалтерскийУчетСервер.ПолучитьСтавкуНДСПоДоговору(Дата, ДоговорКонтрагента));
	ПараметрыОбъекта.Вставить("ПлательщикНДС", УПП.ПлательщикНДС);
	ПараметрыОбъекта.Вставить("ПлательщикНСП", УПП.ПлательщикНСП);
	ПараметрыОбъекта.Вставить("ВозвратТовара", Истина);
			
КонецПроцедуры

Процедура ЗаполнитьДанныеСТЧ(УПП, ДанныеСТЧ, СтрокаТабличнойЧасти)
	
	ЗаполнитьЗначенияСвойств(ДанныеСТЧ, СтрокаТабличнойЧасти);		
	СтруктураСчетовУчета 	= БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСчетаУчетаНоменклатуры(Организация, СтрокаТабличнойЧасти.Номенклатура);
	ДанныеСТЧ.СтавкаНСП 	= ?(ЗначениеЗаполнено(СтруктураСчетовУчета.СтавкаНСП), СтруктураСчетовУчета.СтавкаНСП, УПП.СтавкаНСППоУмолчанию);
	ЗначСтавкаНСП 			= ПолучитьЗначениеСтавкиНСП(Дата, УПП.ПлательщикНДС, ДанныеСТЧ.СтавкаНСП);
	ДанныеСТЧ.ЗначСтавкаНСП = ЗначСтавкаНСП;	

КонецПроцедуры

Функция ПолучитьЗначениеСтавкиНСП(Дата, ПлательщикНДС, СтавкаНСП)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ПлательщикНДС
	|			ТОГДА СтавкиНСПСрезПоследних.СтавкаПлательщикНДС
	|		ИНАЧЕ СтавкиНСПСрезПоследних.СтавкаНеПлательщикНДС
	|	КОНЕЦ КАК Ставка
	|ИЗ
	|	РегистрСведений.СтавкиНСП.СрезПоследних(&Дата, СтавкаНСП = &СтавкаНСП) КАК СтавкиНСПСрезПоследних";	
	Запрос.УстановитьПараметр("Дата", 			Дата);	
	Запрос.УстановитьПараметр("СтавкаНСП", 		СтавкаНСП);	
	Запрос.УстановитьПараметр("ПлательщикНДС", 	ПлательщикНДС);	
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ставка;
	Иначе		
		Возврат 0;
	КонецЕсли;	

КонецФункции

#КонецОбласти	
		
#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("ДокументСсылка.РеализацияТоваровУслуг")] = "ЗаполнитьПоРеализацияТоваровУслуг";
	
	ЗаполнениеОбъектов.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения);
	
	ВалютаРегламентированногоУчета 	= ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	Если НЕ ЗначениеЗаполнено(ВалютаДокумента) 
		И ЗначениеЗаполнено(ДоговорКонтрагента)
		И ЗначениеЗаполнено(ДоговорКонтрагента.ВалютаРасчетов)Тогда
		ВалютаДокумента = ДоговорКонтрагента.ВалютаРасчетов;			
	Иначе	
		ВалютаДокумента = ВалютаРегламентированногоУчета;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Курс) Тогда
		Если ЗначениеЗаполнено(ВалютаДокумента) Тогда
			КурсСтруктура	= РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаДокумента, ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
			Курс 			= КурсСтруктура.Курс;
		Иначе
			Курс 			= 1;	
		КонецЕсли;
	КонецЕсли;
	КонтрСчетУчетаСкидок = ПланыСчетов.Хозрасчетный.ВозвратПроданныхТоваровИСкидки;
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	УстановитьДополнительныеСвойства(ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.ВозвратТоваровОтПокупателя.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	БухгалтерскийУчетСервер.ОтразитьЗапасы(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьМБПСклад(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьХозрасчетный(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьРеализация(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьНДС(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей.
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Предварительный контроль
	ВыполнитьПредварительныйКонтроль(Отказ);
	ПроверяемыеРеквизиты.Добавить("Товары");

КонецПроцедуры

#КонецОбласти

#КонецЕсли