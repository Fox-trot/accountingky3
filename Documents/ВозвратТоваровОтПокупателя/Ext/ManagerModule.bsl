#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс
 
 // СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла 
 
 // Устанавливает параметры загрузки.
//
Процедура УстановитьПараметрыЗагрузкиИзФайлаВТЧ(Параметры) Экспорт
	
КонецПроцедуры

// Производит сопоставление данных, загружаемых в табличную часть ПолноеИмяТабличнойЧасти,
// с данными в ИБ, и заполняет параметры АдресТаблицыСопоставления и СписокНеоднозначностей.
//
// Параметры:
//   АдресЗагружаемыхДанных    - Строка - Адрес временного хранилища с таблицей значений, в которой
//                                        находятся загруженные данные из файла. Состав колонок:
//     * Идентификатор - Число - Порядковый номер строки;
//     * остальные колонки соответствуют колонкам макета ЗагрузкаИзФайла.
//   АдресТаблицыСопоставления - Строка - Адрес временного хранилища с пустой таблицей значений,
//                                        являющейся копией табличной части документа, 
//                                        которую необходимо заполнить из таблицы АдресЗагружаемыхДанных.
//   СписокНеоднозначностей - ТаблицаЗначений - Список неоднозначных значений, для которых в ИБ имеется несколько
//                                              подходящих вариантов.
//     * Колонка       - Строка - Имя колонки, в которой была обнаружена неоднозначность;
//     * Идентификатор - Число  - Идентификатор строки, в которой была обнаружена неоднозначность.
//   ПолноеИмяТабличнойЧасти   - Строка - Полное имя табличной части, в которую загружаются данные.
//   ДополнительныеПараметры   - ЛюбойТип - Любые дополнительные сведения.
//
Процедура СопоставитьЗагружаемыеДанные(АдресЗагружаемыхДанных, АдресТаблицыСопоставления, СписокНеоднозначностей, ПолноеИмяТабличнойЧасти, ДополнительныеПараметры) Экспорт
	
	Товары = ПолучитьИзВременногоХранилища(АдресТаблицыСопоставления);
	ЗагружаемыеДанные = ПолучитьИзВременногоХранилища(АдресЗагружаемыхДанных);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДляСопоставления.Номенклатура,
		|	ДанныеДляСопоставления.Идентификатор
		|ПОМЕСТИТЬ ДанныеДляСопоставления
		|ИЗ
		|	&ДанныеДляСопоставления КАК ДанныеДляСопоставления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// Сопоставление по номенклатуре
		|ВЫБРАТЬ
		|	МАКСИМУМ(СправочникНоменклатура.Ссылка) КАК Ссылка,
		|	ДанныеДляСопоставления.Идентификатор,
		|	КОЛИЧЕСТВО(ДанныеДляСопоставления.Идентификатор) КАК Количество
		|ИЗ
		|	ДанныеДляСопоставления КАК ДанныеДляСопоставления
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО (СправочникНоменклатура.Наименование ПОДОБНО ДанныеДляСопоставления.Номенклатура)
		|ГДЕ
		|	НЕ СправочникНоменклатура.Ссылка ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДляСопоставления.Идентификатор";
	Запрос.УстановитьПараметр("ДанныеДляСопоставления", ЗагружаемыеДанные);
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	
	ТаблицаНоменклатура = РезультатыЗапросов[1].Выгрузить();
	ТаблицаНоменклатура.Индексы.Добавить("Идентификатор");
	
	Для Каждого СтрокаТаблицы Из ЗагружаемыеДанные Цикл
		
		СтрокаТабличнойЧасти = Товары.Добавить();
		СтрокаТабличнойЧасти.Идентификатор = СтрокаТаблицы.Идентификатор;
		СтрокаТабличнойЧасти.Количество = СтрокаТаблицы.Количество;
		СтрокаТабличнойЧасти.Сумма = СтрокаТаблицы.Сумма;
		СтрокаТабличнойЧасти.СуммаНДС = СтрокаТаблицы.СуммаНДС;
		СтрокаТабличнойЧасти.СуммаНСП = СтрокаТаблицы.СуммаНСП;
				
		СтрокаНоменклатура = ТаблицаНоменклатура.Найти(СтрокаТаблицы.Идентификатор, "Идентификатор");
		Если СтрокаНоменклатура <> Неопределено Тогда 
			Если СтрокаНоменклатура.Количество = 1 Тогда 
				СтрокаТабличнойЧасти.Номенклатура = СтрокаНоменклатура.Ссылка;
			ИначеЕсли СтрокаНоменклатура.Количество > 1 Тогда
				ЗаписьОНеоднозначности = СписокНеоднозначностей.Добавить();
				ЗаписьОНеоднозначности.Идентификатор = СтрокаТаблицы.Идентификатор; 
				ЗаписьОНеоднозначности.Колонка = "Номенклатура";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(Товары, АдресТаблицыСопоставления);
	
КонецПроцедуры

// Возвращает список подходящих объектов ИБ для неоднозначного значения ячейки.
// 
// Параметры:
//   ПолноеИмяТабличнойЧасти  - Строка - Полное имя табличной части, в которую загружаются данные.
//  ИмяКолонки                - Строка - Имя колонки, в который возникла неоднозначность.
//  СписокНеоднозначностей    - Массив - Массив для заполнения с неоднозначными данными.
//  ЗагружаемыеЗначенияСтрока - Строка - Загружаемые данные на основании которых возникла неоднозначность.
//  ДополнительныеПараметры   - ЛюбойТип - Любые дополнительные сведения.
//
Процедура ЗаполнитьСписокНеоднозначностей(ПолноеИмяТабличнойЧасти, СписокНеоднозначностей, ИмяКолонки, ЗагружаемыеЗначенияСтрока, ДополнительныеПараметры) Экспорт
	
	Если ИмяКолонки = "Номенклатура" Тогда

		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Номенклатура.Ссылка
			|ИЗ
			|	Справочник.Номенклатура КАК Номенклатура
			|ГДЕ
			|	Номенклатура.Наименование = &Наименование";
		Запрос.УстановитьПараметр("Наименование", ЗагружаемыеЗначенияСтрока.Номенклатура);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СписокНеоднозначностей.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла
 
#КонецОбласти

#Область ПроцедурыПроведенияДокумента

// Формирует таблицу значений, содержащую данные для проведения по регистру бухгалтерии Хозрасчетный.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаХозрасчетный(ДокументСсылка,СтруктураДополнительныеСвойства, Отказ)
	
	// Подготовка данных	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Регистратор,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Склад КАК Склад,
		|	ВременнаяТаблицаШапка.УказанДокументОтгрузки КАК УказанДокументОтгрузки,
		|	ВременнаяТаблицаШапка.ДатаДокументаРеализации КАК ДатаДокументаРеализации,
		|	ВременнаяТаблицаШапка.ДокументОснование КАК Сделка,
		|	&Содержание КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВременнаяТаблицаТовары.СчетУчета КАК СчетУчета
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МБП)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВременнаяТаблицаТовары.Номенклатура КАК Номенклатура
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МБП)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""Товары"" КАК ИмяСписка,
		|	&СинонимСписка КАК СинонимСписка,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаТовары.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаШапка.Склад КАК Склад,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.УказанДокументОтгрузки
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ВременнаяТаблицаШапка.Ссылка
		|	КОНЕЦ КАК Партия,
		|	ВременнаяТаблицаТовары.Себестоимость КАК Себестоимость,
		|	ВременнаяТаблицаТовары.Количество КАК Количество,
		|	ВременнаяТаблицаТовары.СчетСебестоимости КАК КорСчетСписания,
		|	ВременнаяТаблицаТовары.СтатьяРасхода КАК КорСубконто1,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто2,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
		|	ВременнаяТаблицаТовары.Себестоимость КАК СуммаСписания
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МБП)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВременнаяТаблицаТовары.СчетУчета КАК СчетУчета
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|ГДЕ
		|	ВременнаяТаблицаТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МБП)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВременнаяТаблицаТовары.Номенклатура КАК Номенклатура
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|ГДЕ
		|	ВременнаяТаблицаТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МБП)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""Товары"" КАК ИмяСписка,
		|	&СинонимСписка КАК СинонимСписка,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаТовары.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаШапка.Склад КАК Склад,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.УказанДокументОтгрузки
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ВременнаяТаблицаШапка.Ссылка
		|	КОНЕЦ КАК Партия,
		|	ВременнаяТаблицаТовары.Себестоимость КАК Себестоимость,
		|	-ВременнаяТаблицаТовары.Количество КАК Количество,
		|	ВременнаяТаблицаТовары.СчетСебестоимости КАК КорСчетСписания,
		|	ВременнаяТаблицаТовары.СтатьяРасхода КАК КорСубконто1,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто2,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
		|	ВременнаяТаблицаТовары.Себестоимость КАК СуммаСписания
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МБП)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	Запрос.УстановитьПараметр("Содержание", НСтр("ru = 'Возврат товаров'")); 
	Запрос.УстановитьПараметр("СинонимСписка", НСтр("ru = 'Товары'"));
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизиты = МассивРезультатов[0].Выгрузить();
	ТаблицаСчетаУчетаТоваров = МассивРезультатов[1].Выгрузить();
	ТаблицаСписокНоменклатуры = МассивРезультатов[2].Выгрузить();
	ТаблицаТовары = МассивРезультатов[3].Выгрузить();
	
	ТаблицаСчетаУчетаМБП = МассивРезультатов[4].Выгрузить();
	ТаблицаСписокНоменклатурыМБП = МассивРезультатов[5].Выгрузить();
	ТаблицаМБП = МассивРезультатов[6].Выгрузить();
	
	ТаблицаСписанныеТовары = УчетТоваров.ПодготовитьТаблицуВозвращенныеСписанныеТовары(ТаблицаТовары, ТаблицаСчетаУчетаТоваров, ТаблицаСписокНоменклатуры, ТаблицаРеквизиты, Отказ);
	ТаблицаСписанныеМБП = УчетМБП.ПодготовитьТаблицуВозвращенныеСписанныеМБП(ТаблицаМБП, ТаблицаСчетаУчетаМБП, ТаблицаСписокНоменклатурыМБП, ТаблицаРеквизиты, Отказ);
	
	// СТОРНО
	СтруктураПолейДляСторно = Новый Структура("Количество, Себестоимость, СуммаСписания");
	УчетТоваров.ПроставитьСторноТаблицы(ТаблицаСписанныеТовары, СтруктураПолейДляСторно, -1);
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРеквизиты", ТаблицаРеквизиты);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСписанныеТовары", ТаблицаСписанныеТовары);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСписанныеМБП", ТаблицаСписанныеМБП);
	
	// 1. Доход от реализации товаров
	// 2. НДС товары
	// 3. НСП товары
	// 4. Скидки товары	
	
	// 5. Доход от реализации услуг
	// 6. НДС услуги
	// 7. НСП услуги
	// 8. Скидки услуги
	
	// 9. Доход от реализации ОС
	// 10. НДС ОС
	// 11. НСП ОС
	// 12. Скидки ОС
	
	// 13. Оприходование ОС
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	1 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетов КАК СчетДт,
		|	ВременнаяТаблицаТовары.СчетДохода КАК СчетКт,
		|	ВременнаяТаблицаШапка.Контрагент КАК СубконтоДт1,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаТовары.СчетДохода = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыручкаОтРеализацииТоваровИУслуг)
		|			ТОГДА ВременнаяТаблицаТовары.Номенклатура
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,	
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаТовары.СуммаСкидки <> 0
		|			ТОГДА ВЫРАЗИТЬ((ВременнаяТаблицаТовары.ВсегоВВалютеРеглУчета - ВременнаяТаблицаТовары.СуммаСкидкиВВалютеРеглУчета - ВременнаяТаблицаТовары.СуммаНДСВВалютеРеглУчета - ВременнаяТаблицаТовары.СуммаНСПВВалютеРеглУчета + (ВременнаяТаблицаТовары.СуммаСкидкиВВалютеРеглУчета * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)))) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ ВременнаяТаблицаТовары.СуммаДоходаВВалютеРеглУчета
		|	КОНЕЦ КАК Сумма,		
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаДт,
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаКт,
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаТовары.СуммаСкидки <> 0
		|			ТОГДА ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Всего - ВременнаяТаблицаТовары.СуммаСкидки - ВременнаяТаблицаТовары.СуммаНДС - ВременнаяТаблицаТовары.СуммаНСП + (ВременнаяТаблицаТовары.СуммаСкидки * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)))) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ ВременнаяТаблицаТовары.СуммаДохода
		|	КОНЕЦ КАК ВалютнаяСуммаДт,
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаТовары.СуммаСкидки <> 0
		|			ТОГДА ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Всего - ВременнаяТаблицаТовары.СуммаСкидки - ВременнаяТаблицаТовары.СуммаНДС - ВременнаяТаблицаТовары.СуммаНСП + (ВременнаяТаблицаТовары.СуммаСкидки * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)))) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ ВременнаяТаблицаТовары.СуммаДохода
		|	КОНЕЦ КАК ВалютнаяСуммаКт,
		|	&СодержаниеТоварыДоход КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтавкиНДС КАК ВременнаяТаблицаСтавкиНДС
		|		ПО ВременнаяТаблицаШапка.СтавкаНДС = ВременнаяТаблицаСтавкиНДС.СтавкаНДС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтавкиНСП КАК ВременнаяТаблицаСтавкиНСП
		|		ПО ВременнаяТаблицаШапка.СтавкаНСП = ВременнаяТаблицаСтавкиНСП.СтавкаНСП
		|ГДЕ
		|	ВременнаяТаблицаТовары.Всего <> 0
		|   ИЛИ ВременнаяТаблицаТовары.Всего = ВременнаяТаблицаТовары.СуммаСкидки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	ВременнаяТаблицаШапка.СчетУчетаНДС,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	-ВременнаяТаблицаТовары.СуммаНДСВВалютеРеглУчета,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	-ВременнаяТаблицаТовары.СуммаНДС,
		|	-ВременнаяТаблицаТовары.СуммаНДС,
		|	&СодержаниеТоварыНДС
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.СуммаНДС = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	ВременнаяТаблицаШапка.СчетУчетаНСП,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	-ВременнаяТаблицаТовары.СуммаНСПВВалютеРеглУчета,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	-ВременнаяТаблицаТовары.СуммаНСП,
		|	-ВременнаяТаблицаТовары.СуммаНСП,
		|	&СодержаниеТоварыНСП
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.СуммаНСП = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	4,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетУчетаСкидок,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаТовары.ВсегоВВалютеРеглУчета = ВременнаяТаблицаТовары.СуммаСкидкиВВалютеРеглУчета
		|			ТОГДА ВременнаяТаблицаТовары.СуммаСкидкиВВалютеРеглУчета
		|		ИНАЧЕ ВЫРАЗИТЬ(ВременнаяТаблицаТовары.СуммаСкидкиВВалютеРеглУчета * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)) КАК ЧИСЛО(15, 2))
		|	КОНЕЦ,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаТовары.Всего = ВременнаяТаблицаТовары.СуммаСкидки
		|			ТОГДА ВременнаяТаблицаТовары.СуммаСкидки
		|		ИНАЧЕ ВЫРАЗИТЬ(ВременнаяТаблицаТовары.СуммаСкидки * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)) КАК ЧИСЛО(15, 2))
		|	КОНЕЦ,
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаТовары.Всего = ВременнаяТаблицаТовары.СуммаСкидки
		|			ТОГДА ВременнаяТаблицаТовары.СуммаСкидки
		|		ИНАЧЕ ВЫРАЗИТЬ(ВременнаяТаблицаТовары.СуммаСкидки * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)) КАК ЧИСЛО(15, 2))
		|	КОНЕЦ,
		|	&СодержаниеТоварыСкидка
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтавкиНДС КАК ВременнаяТаблицаСтавкиНДС
		|		ПО ВременнаяТаблицаШапка.СтавкаНДС = ВременнаяТаблицаСтавкиНДС.СтавкаНДС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтавкиНСП КАК ВременнаяТаблицаСтавкиНСП
		|		ПО ВременнаяТаблицаШапка.СтавкаНСП = ВременнаяТаблицаСтавкиНСП.СтавкаНСП
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.СуммаСкидки = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	5 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетов КАК СчетДт,
		|	ВременнаяТаблицаУслуги.СчетДохода КАК СчетКт,
		|	ВременнаяТаблицаШапка.Контрагент КАК СубконтоДт1,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.СчетДохода = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыручкаОтРеализацииТоваровИУслуг)
		|			ТОГДА ВременнаяТаблицаУслуги.Номенклатура
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.СуммаСкидки <> 0
		|			ТОГДА ВЫРАЗИТЬ((ВременнаяТаблицаУслуги.ВсегоВВалютеРеглУчета - ВременнаяТаблицаУслуги.СуммаСкидкиВВалютеРеглУчета - ВременнаяТаблицаУслуги.СуммаНДСВВалютеРеглУчета - ВременнаяТаблицаУслуги.СуммаНСПВВалютеРеглУчета + (ВременнаяТаблицаУслуги.СуммаСкидкиВВалютеРеглУчета * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)))) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ ВременнаяТаблицаУслуги.СуммаДоходаВВалютеРеглУчета
		|	КОНЕЦ,
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаДт,
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаКт,
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.СуммаСкидки <> 0
		|			ТОГДА ВЫРАЗИТЬ((ВременнаяТаблицаУслуги.Всего - ВременнаяТаблицаУслуги.СуммаСкидки - ВременнаяТаблицаУслуги.СуммаНДС - ВременнаяТаблицаУслуги.СуммаНСП + (ВременнаяТаблицаУслуги.СуммаСкидки * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)))) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ ВременнаяТаблицаУслуги.СуммаДохода
		|	КОНЕЦ,
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.СуммаСкидки <> 0
		|			ТОГДА ВЫРАЗИТЬ((ВременнаяТаблицаУслуги.Всего - ВременнаяТаблицаУслуги.СуммаСкидки - ВременнаяТаблицаУслуги.СуммаНДС - ВременнаяТаблицаУслуги.СуммаНСП + (ВременнаяТаблицаУслуги.СуммаСкидки * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)))) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ ВременнаяТаблицаУслуги.СуммаДохода
		|	КОНЕЦ,
		|	&СодержаниеУслугиДоход КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтавкиНДС КАК ВременнаяТаблицаСтавкиНДС
		|		ПО ВременнаяТаблицаШапка.СтавкаНДС = ВременнаяТаблицаСтавкиНДС.СтавкаНДС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтавкиНСП КАК ВременнаяТаблицаСтавкиНСП
		|		ПО ВременнаяТаблицаШапка.СтавкаНСПУслуги = ВременнаяТаблицаСтавкиНСП.СтавкаНСП
		|ГДЕ
		|	ВременнаяТаблицаУслуги.Всего <> 0
		|   ИЛИ ВременнаяТаблицаУслуги.Всего = ВременнаяТаблицаУслуги.СуммаСкидки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	6,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	ВременнаяТаблицаШапка.СчетУчетаНДС,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	-ВременнаяТаблицаУслуги.СуммаНДСВВалютеРеглУчета,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	-ВременнаяТаблицаУслуги.СуммаНДС,
		|	-ВременнаяТаблицаУслуги.СуммаНДС,
		|	&СодержаниеУслугиНДС
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаУслуги.СуммаНДС = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	7,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	ВременнаяТаблицаШапка.СчетУчетаНСП,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	-ВременнаяТаблицаУслуги.СуммаНСПВВалютеРеглУчета,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	-ВременнаяТаблицаУслуги.СуммаНСП,
		|	-ВременнаяТаблицаУслуги.СуммаНСП,
		|	&СодержаниеУслугиНСП
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаУслуги.СуммаНСП = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	8,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетУчетаСкидок,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.ВсегоВВалютеРеглУчета = ВременнаяТаблицаУслуги.СуммаСкидкиВВалютеРеглУчета
		|			ТОГДА ВременнаяТаблицаУслуги.СуммаСкидкиВВалютеРеглУчета
		|		ИНАЧЕ ВЫРАЗИТЬ(ВременнаяТаблицаУслуги.СуммаСкидкиВВалютеРеглУчета * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)) КАК ЧИСЛО(15, 2))
		|	КОНЕЦ,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.Всего = ВременнаяТаблицаУслуги.СуммаСкидки
		|			ТОГДА ВременнаяТаблицаУслуги.СуммаСкидки
		|		ИНАЧЕ ВЫРАЗИТЬ(ВременнаяТаблицаУслуги.СуммаСкидки * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)) КАК ЧИСЛО(15, 2))
		|	КОНЕЦ,
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.Всего = ВременнаяТаблицаУслуги.СуммаСкидки
		|			ТОГДА ВременнаяТаблицаУслуги.СуммаСкидки
		|		ИНАЧЕ ВЫРАЗИТЬ(ВременнаяТаблицаУслуги.СуммаСкидки * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)) КАК ЧИСЛО(15, 2))
		|	КОНЕЦ,
		|	&СодержаниеУслугиСкидка
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтавкиНДС КАК ВременнаяТаблицаСтавкиНДС
		|		ПО ВременнаяТаблицаШапка.СтавкаНДС = ВременнаяТаблицаСтавкиНДС.СтавкаНДС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтавкиНСП КАК ВременнаяТаблицаСтавкиНСП
		|		ПО ВременнаяТаблицаШапка.СтавкаНСПУслуги = ВременнаяТаблицаСтавкиНСП.СтавкаНСП
		|ГДЕ
		|	НЕ ВременнаяТаблицаУслуги.СуммаСкидки = 0		
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	9 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетов КАК СчетДт,
		|	ВременнаяТаблицаОС.СчетДохода КАК СчетКт,
		|	ВременнаяТаблицаШапка.Контрагент КАК СубконтоДт1,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,	
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаОС.СуммаСкидки <> 0
		|			ТОГДА ВЫРАЗИТЬ((ВременнаяТаблицаОС.ВсегоВВалютеРеглУчета - ВременнаяТаблицаОС.СуммаСкидкиВВалютеРеглУчета - ВременнаяТаблицаОС.СуммаНДСВВалютеРеглУчета - ВременнаяТаблицаОС.СуммаНСПВВалютеРеглУчета + (ВременнаяТаблицаОС.СуммаСкидкиВВалютеРеглУчета * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)))) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ ВременнаяТаблицаОС.СуммаДоходаВВалютеРеглУчета
		|	КОНЕЦ КАК Сумма,
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаДт,
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаКт,
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаОС.СуммаСкидки <> 0
		|			ТОГДА ВЫРАЗИТЬ((ВременнаяТаблицаОС.Всего - ВременнаяТаблицаОС.СуммаСкидки - ВременнаяТаблицаОС.СуммаНДС - ВременнаяТаблицаОС.СуммаНСП + (ВременнаяТаблицаОС.СуммаСкидки * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)))) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ ВременнаяТаблицаОС.СуммаДохода
		|	КОНЕЦ КАК ВалютнаяСуммаДт,
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаОС.СуммаСкидки <> 0
		|			ТОГДА ВЫРАЗИТЬ((ВременнаяТаблицаОС.Всего - ВременнаяТаблицаОС.СуммаСкидки - ВременнаяТаблицаОС.СуммаНДС - ВременнаяТаблицаОС.СуммаНСП + (ВременнаяТаблицаОС.СуммаСкидки * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)))) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ ВременнаяТаблицаОС.СуммаДохода
		|	КОНЕЦ КАК ВалютнаяСуммаКт,
		|	&СодержаниеОСДоход КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтавкиНДС КАК ВременнаяТаблицаСтавкиНДС
		|		ПО ВременнаяТаблицаШапка.СтавкаНДС = ВременнаяТаблицаСтавкиНДС.СтавкаНДС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтавкиНСП КАК ВременнаяТаблицаСтавкиНСП
		|		ПО ВременнаяТаблицаШапка.СтавкаНСП = ВременнаяТаблицаСтавкиНСП.СтавкаНСП
		|ГДЕ
		|	ВременнаяТаблицаОС.Всего <> 0
		|   ИЛИ ВременнаяТаблицаОС.Всего = ВременнаяТаблицаОС.СуммаСкидки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	10,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	ВременнаяТаблицаШапка.СчетУчетаНДС,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	-ВременнаяТаблицаОС.СуммаНДСВВалютеРеглУчета,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	-ВременнаяТаблицаОС.СуммаНДС,
		|	-ВременнаяТаблицаОС.СуммаНДС,
		|	&СодержаниеОСНДС
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаОС.СуммаНДС = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	11,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	ВременнаяТаблицаШапка.СчетУчетаНСП,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	-ВременнаяТаблицаОС.СуммаНСПВВалютеРеглУчета,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	-ВременнаяТаблицаОС.СуммаНСП,
		|	-ВременнаяТаблицаОС.СуммаНСП,
		|	&СодержаниеОСНСП
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаОС.СуммаНСП = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	12,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетУчетаСкидок,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	НЕОПРЕДЕЛЕНО,
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаОС.ВсегоВВалютеРеглУчета = ВременнаяТаблицаОС.СуммаСкидкиВВалютеРеглУчета
		|			ТОГДА ВременнаяТаблицаОС.СуммаСкидкиВВалютеРеглУчета
		|		ИНАЧЕ ВЫРАЗИТЬ(ВременнаяТаблицаОС.СуммаСкидкиВВалютеРеглУчета * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)) КАК ЧИСЛО(15, 2))
		|	КОНЕЦ,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаОС.Всего = ВременнаяТаблицаОС.СуммаСкидки
		|			ТОГДА ВременнаяТаблицаОС.СуммаСкидки
		|		ИНАЧЕ ВЫРАЗИТЬ(ВременнаяТаблицаОС.СуммаСкидки * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)) КАК ЧИСЛО(15, 2))
		|	КОНЕЦ,
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаОС.Всего = ВременнаяТаблицаОС.СуммаСкидки
		|			ТОГДА ВременнаяТаблицаОС.СуммаСкидки
		|		ИНАЧЕ ВЫРАЗИТЬ(ВременнаяТаблицаОС.СуммаСкидки * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)) КАК ЧИСЛО(15, 2))
		|	КОНЕЦ,
		|	&СодержаниеОССкидка
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтавкиНДС КАК ВременнаяТаблицаСтавкиНДС
		|		ПО ВременнаяТаблицаШапка.СтавкаНДС = ВременнаяТаблицаСтавкиНДС.СтавкаНДС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтавкиНСП КАК ВременнаяТаблицаСтавкиНСП
		|		ПО ВременнаяТаблицаШапка.СтавкаНСП = ВременнаяТаблицаСтавкиНСП.СтавкаНСП
		|ГДЕ
		|	НЕ ВременнаяТаблицаОС.СуммаСкидки = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	13 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаОС.СчетЗатрат КАК СчетДт,
		|	ВременнаяТаблицаОС.СчетУчета КАК СчетКт,
		|	ВременнаяТаблицаОС.СтатьяЗатрат КАК СубконтоДт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	ВременнаяТаблицаОС.ОсновноеСредство КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,		
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаОС.СуммаСкидки <> 0
		|			ТОГДА ВЫРАЗИТЬ((ВременнаяТаблицаОС.ВсегоВВалютеРеглУчета - ВременнаяТаблицаОС.СуммаСкидкиВВалютеРеглУчета - ВременнаяТаблицаОС.СуммаНДСВВалютеРеглУчета - ВременнаяТаблицаОС.СуммаНСПВВалютеРеглУчета + (ВременнаяТаблицаОС.СуммаСкидкиВВалютеРеглУчета * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)))) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ ВременнаяТаблицаОС.СуммаДоходаВВалютеРеглУчета
		|	КОНЕЦ КАК Сумма,		
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаДт,
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаКт,
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаОС.СуммаСкидки <> 0
		|			ТОГДА ВЫРАЗИТЬ((ВременнаяТаблицаОС.Всего - ВременнаяТаблицаОС.СуммаСкидки - ВременнаяТаблицаОС.СуммаНДС - ВременнаяТаблицаОС.СуммаНСП + (ВременнаяТаблицаОС.СуммаСкидки * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)))) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ ВременнаяТаблицаОС.СуммаДохода
		|	КОНЕЦ КАК ВалютнаяСуммаДт,
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаОС.СуммаСкидки <> 0
		|			ТОГДА ВЫРАЗИТЬ((ВременнаяТаблицаОС.Всего - ВременнаяТаблицаОС.СуммаСкидки - ВременнаяТаблицаОС.СуммаНДС - ВременнаяТаблицаОС.СуммаНСП + (ВременнаяТаблицаОС.СуммаСкидки * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)))) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ ВременнаяТаблицаОС.СуммаДохода
		|	КОНЕЦ КАК ВалютнаяСуммаКт,
		|	&СодержаниеОСОприходование КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтавкиНДС КАК ВременнаяТаблицаСтавкиНДС
		|		ПО ВременнаяТаблицаШапка.СтавкаНДС = ВременнаяТаблицаСтавкиНДС.СтавкаНДС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтавкиНСП КАК ВременнаяТаблицаСтавкиНСП
		|		ПО ВременнаяТаблицаШапка.СтавкаНСП = ВременнаяТаблицаСтавкиНСП.СтавкаНСП
		|ГДЕ
		|	ВременнаяТаблицаОС.Всего <> 0
		|   ИЛИ ВременнаяТаблицаОС.Всего = ВременнаяТаблицаОС.СуммаСкидки";		

	Запрос.УстановитьПараметр("СодержаниеТоварыДоход", 		НСтр("ru = 'Доход от реализации товаров (сторно)'")); 
	Запрос.УстановитьПараметр("СодержаниеТоварыНДС", 		НСтр("ru = 'НДС (товары) (сторно)'")); 
	Запрос.УстановитьПараметр("СодержаниеТоварыНСП", 		НСтр("ru = 'НСП (товары) (сторно)'")); 
	Запрос.УстановитьПараметр("СодержаниеТоварыСкидка", 	НСтр("ru = 'Скидка на товары (сторно)'"));
	
	Запрос.УстановитьПараметр("СодержаниеУслугиДоход", 		НСтр("ru = 'Доход от реализации услуг (сторно)'")); 
	Запрос.УстановитьПараметр("СодержаниеУслугиНДС", 		НСтр("ru = 'НДС (услуги) (сторно)'")); 
	Запрос.УстановитьПараметр("СодержаниеУслугиНСП", 		НСтр("ru = 'НСП (услуги) (сторно)'")); 
	Запрос.УстановитьПараметр("СодержаниеУслугиСкидка", 	НСтр("ru = 'Скидка на услуги (сторно)'"));	
	
	Запрос.УстановитьПараметр("СодержаниеОСДоход", 			НСтр("ru = 'Доход от реализации ОС (сторно)'")); 
	Запрос.УстановитьПараметр("СодержаниеОСНДС", 			НСтр("ru = 'НДС (ОС) (сторно)'")); 
	Запрос.УстановитьПараметр("СодержаниеОСНСП", 			НСтр("ru = 'НСП (ОС) (сторно)'")); 
	Запрос.УстановитьПараметр("СодержаниеОССкидка", 		НСтр("ru = 'Скидка на ОС (сторно)'"));
	
	Запрос.УстановитьПараметр("СодержаниеОСОприходование", 	НСтр("ru = 'Оприходование ОС (сторно)'"));
	РезультатЗапроса = Запрос.Выполнить();	
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаХозрасчетный", РезультатЗапроса.Выгрузить());	
		
КонецПроцедуры // СформироватьТаблицаХозрасчетный()

// Формирует таблицу значений, содержащую данные для проведения по регистру бухгалтерии Хозрасчетный.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаПродажи(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Ссылка КАК ДокументРеализации,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК Договор,
		|	ВременнаяТаблицаШапка.СтавкаНДС КАК СтавкаНДС,
		|	ВременнаяТаблицаШапка.СтавкаНСП КАК СтавкаНСП,
		|	ВременнаяТаблицаШапка.БезналичныйРасчет КАК БезналичныйРасчет,
		|	ВременнаяТаблицаШапка.БезвозмезднаяПоставка КАК БезвозмезднаяПоставка,
		|	ВременнаяТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаТовары.Количество * -1 КАК Количество,
		|	-(ВЫРАЗИТЬ(ВременнаяТаблицаТовары.ВсегоВВалютеРеглУчета - ВременнаяТаблицаТовары.СуммаНДСВВалютеРеглУчета - ВременнаяТаблицаТовары.СуммаНСПВВалютеРеглУчета КАК ЧИСЛО(15, 2))) КАК Сумма,
		|	-ВременнаяТаблицаТовары.СуммаНДСВВалютеРеглУчета КАК СуммаНДС,
		|	-ВременнаяТаблицаТовары.СуммаНСПВВалютеРеглУчета КАК СуммаНСП,
		|	-(ВЫРАЗИТЬ(ВременнаяТаблицаТовары.СуммаСкидкиВВалютеРеглУчета * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)) КАК ЧИСЛО(15, 2))) КАК СуммаСкидки,
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаТовары.ВсегоВВалютеРеглУчета = ВременнаяТаблицаТовары.СуммаСкидкиВВалютеРеглУчета
		|			ТОГДА 0
		|		КОГДА ВременнаяТаблицаТовары.СуммаСкидки <> 0
		|			ТОГДА ВЫРАЗИТЬ((ВременнаяТаблицаТовары.ВсегоВВалютеРеглУчета - ВременнаяТаблицаТовары.СуммаСкидкиВВалютеРеглУчета - ВременнаяТаблицаТовары.СуммаНДСВВалютеРеглУчета - ВременнаяТаблицаТовары.СуммаНСПВВалютеРеглУчета + ВременнаяТаблицаТовары.СуммаСкидкиВВалютеРеглУчета * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0))) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ ВременнаяТаблицаТовары.СуммаДоходаВВалютеРеглУчета
		|	КОНЕЦ КАК СуммаДохода,
		|	-ВременнаяТаблицаТовары.Себестоимость КАК Себестоимость
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтавкиНДС КАК ВременнаяТаблицаСтавкиНДС
		|		ПО ВременнаяТаблицаШапка.СтавкаНДС = ВременнаяТаблицаСтавкиНДС.СтавкаНДС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтавкиНСП КАК ВременнаяТаблицаСтавкиНСП
		|		ПО ВременнаяТаблицаШапка.СтавкаНСП = ВременнаяТаблицаСтавкиНСП.СтавкаНСП
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.Всего = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Ссылка,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.СтавкаНДС,
		|	ВременнаяТаблицаШапка.СтавкаНСП,
		|	ВременнаяТаблицаШапка.БезналичныйРасчет,
		|	ВременнаяТаблицаШапка.БезвозмезднаяПоставка,
		|	ВременнаяТаблицаУслуги.Номенклатура,
		|	ВременнаяТаблицаУслуги.Количество * -1,
		|	-(ВЫРАЗИТЬ(ВременнаяТаблицаУслуги.ВсегоВВалютеРеглУчета - ВременнаяТаблицаУслуги.СуммаНДСВВалютеРеглУчета - ВременнаяТаблицаУслуги.СуммаНСПВВалютеРеглУчета КАК ЧИСЛО(15, 2))),
		|	-ВременнаяТаблицаУслуги.СуммаНДСВВалютеРеглУчета,
		|	-ВременнаяТаблицаУслуги.СуммаНСПВВалютеРеглУчета,
		|	-(ВЫРАЗИТЬ(ВременнаяТаблицаУслуги.СуммаСкидкиВВалютеРеглУчета * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)) КАК ЧИСЛО(15, 2))),
		|	-ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.ВсегоВВалютеРеглУчета = ВременнаяТаблицаУслуги.СуммаСкидкиВВалютеРеглУчета
		|			ТОГДА 0
		|		КОГДА ВременнаяТаблицаУслуги.СуммаСкидки <> 0
		|			ТОГДА ВЫРАЗИТЬ((ВременнаяТаблицаУслуги.ВсегоВВалютеРеглУчета - ВременнаяТаблицаУслуги.СуммаСкидкиВВалютеРеглУчета - ВременнаяТаблицаУслуги.СуммаНДСВВалютеРеглУчета - ВременнаяТаблицаУслуги.СуммаНСПВВалютеРеглУчета + ВременнаяТаблицаУслуги.СуммаСкидкиВВалютеРеглУчета * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0))) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ ВременнаяТаблицаУслуги.СуммаДоходаВВалютеРеглУчета
		|	КОНЕЦ,
		|	0
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтавкиНДС КАК ВременнаяТаблицаСтавкиНДС
		|		ПО ВременнаяТаблицаШапка.СтавкаНДС = ВременнаяТаблицаСтавкиНДС.СтавкаНДС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтавкиНСП КАК ВременнаяТаблицаСтавкиНСП
		|		ПО ВременнаяТаблицаШапка.СтавкаНСПУслуги = ВременнаяТаблицаСтавкиНСП.СтавкаНСП
		|ГДЕ
		|	НЕ ВременнаяТаблицаУслуги.Всего = 0";
	РезультатЗапроса = Запрос.Выполнить();	
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПродажи", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаРеализацияТоваров(ДокументСсылка, СтруктураДополнительныеСвойства) 

// Формирует таблицу значений, содержащую данные для проведения по регистру бухгалтерии Хозрасчетный.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаПродажиОсновныхСредств(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Ссылка КАК ДокументРеализации,
		|	ВременнаяТаблицаШапка.Склад КАК Склад,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК Договор,
		|	ВременнаяТаблицаШапка.СтавкаНДС КАК СтавкаНДС,
		|	ВременнаяТаблицаШапка.СтавкаНСП КАК СтавкаНСП,
		|	ВременнаяТаблицаШапка.БезналичныйРасчет КАК БезналичныйРасчет,
		|	ВременнаяТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	-СУММА(ВЫРАЗИТЬ(ВременнаяТаблицаОС.ВсегоВВалютеРеглУчета - ВременнаяТаблицаОС.СуммаНДСВВалютеРеглУчета - ВременнаяТаблицаОС.СуммаНСП КАК ЧИСЛО(15, 2))) КАК Сумма,
		|	-СУММА(ВременнаяТаблицаОС.СуммаНДСВВалютеРеглУчета) КАК СуммаНДС,
		|	-СУММА(ВременнаяТаблицаОС.СуммаНСПВВалютеРеглУчета) КАК СуммаНСП,
		|	-СУММА(ВЫРАЗИТЬ(ВременнаяТаблицаОС.СуммаСкидкиВВалютеРеглУчета * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)) КАК ЧИСЛО(15, 2))) КАК СуммаСкидки,
		|	-СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаОС.ВсегоВВалютеРеглУчета = ВременнаяТаблицаОС.СуммаСкидкиВВалютеРеглУчета
		|				ТОГДА 0
		|			КОГДА ВременнаяТаблицаОС.СуммаСкидкиВВалютеРеглУчета <> 0
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаОС.ВсегоВВалютеРеглУчета - ВременнаяТаблицаОС.СуммаСкидкиВВалютеРеглУчета - ВременнаяТаблицаОС.СуммаНДСВВалютеРеглУчета - ВременнаяТаблицаОС.СуммаНСПВВалютеРеглУчета + ВременнаяТаблицаОС.СуммаСкидкиВВалютеРеглУчета * 100 / (100 + ЕСТЬNULL(ВременнаяТаблицаСтавкиНДС.ЗначениеСтавки, 0) + ЕСТЬNULL(ВременнаяТаблицаСтавкиНСП.ЗначениеСтавки, 0)) КАК ЧИСЛО(15, 2))
		|			ИНАЧЕ ВременнаяТаблицаОС.СуммаДоходаВВалютеРеглУчета
		|		КОНЕЦ) КАК СуммаДохода,
		|	СУММА(0) КАК Себестоимость
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтавкиНДС КАК ВременнаяТаблицаСтавкиНДС
		|		ПО ВременнаяТаблицаШапка.СтавкаНДС = ВременнаяТаблицаСтавкиНДС.СтавкаНДС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтавкиНСП КАК ВременнаяТаблицаСтавкиНСП
		|		ПО ВременнаяТаблицаШапка.СтавкаНСПОС = ВременнаяТаблицаСтавкиНСП.СтавкаНСП
		|ГДЕ
		|	НЕ ВременнаяТаблицаОС.ВсегоВВалютеРеглУчета = 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Ссылка,
		|	ВременнаяТаблицаШапка.Склад,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.СтавкаНДС,
		|	ВременнаяТаблицаШапка.СтавкаНСП,
		|	ВременнаяТаблицаШапка.БезналичныйРасчет,
		|	ВременнаяТаблицаОС.ОсновноеСредство";
	РезультатЗапроса = Запрос.Выполнить();	
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПродажиОсновныхСредств", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаРеализацияТоваров(ДокументСсылка, СтруктураДополнительныеСвойства) 

// Формирует таблицу значений, содержащую данные для проведения по регистру бухгалтерии Хозрасчетный.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаНДС(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =	
		"ВЫБРАТЬ
		|	1 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.СтавкаНДС КАК СтавкаНДС,
		|	-ВременнаяТаблицаТовары.СуммаНДСВВалютеРеглУчета КАК СуммаНДС,
		|	-ВременнаяТаблицаТовары.СуммаНСПВВалютеРеглУчета КАК СуммаНСП,
		|	-(ВЫРАЗИТЬ(ВременнаяТаблицаТовары.ВсегоВВалютеРеглУчета - ВременнаяТаблицаТовары.СуммаНДСВВалютеРеглУчета - ВременнаяТаблицаТовары.СуммаНСПВВалютеРеглУчета КАК ЧИСЛО(15, 2))) КАК СуммаБезНДС
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.Всего = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	1,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.СтавкаНДС,
		|	-ВременнаяТаблицаУслуги.СуммаНДСВВалютеРеглУчета,
		|	-ВременнаяТаблицаУслуги.СуммаНСПВВалютеРеглУчета,
		|	-(ВЫРАЗИТЬ(ВременнаяТаблицаУслуги.ВсегоВВалютеРеглУчета - ВременнаяТаблицаУслуги.СуммаНДСВВалютеРеглУчета - ВременнаяТаблицаУслуги.СуммаНСПВВалютеРеглУчета КАК ЧИСЛО(15, 2)))
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаУслуги.Всего = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.СтавкаНДС,
		|	-ВременнаяТаблицаОС.СуммаНДСВВалютеРеглУчета,
		|	-ВременнаяТаблицаОС.СуммаНСПВВалютеРеглУчета,
		|	-(ВЫРАЗИТЬ(ВременнаяТаблицаОС.ВсегоВВалютеРеглУчета - ВременнаяТаблицаОС.СуммаНДСВВалютеРеглУчета - ВременнаяТаблицаОС.СуммаНСПВВалютеРеглУчета КАК ЧИСЛО(15, 2)))
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаОС.Всего = 0";
	РезультатЗапроса = Запрос.Выполнить();
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаНДС", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру бухгалтерии Хозрасчетный.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаБланкиСчетовФактур(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СерияБланкаСФ,
		|	ВременнаяТаблицаШапка.НомерБланкаСФ,
		|	1 КАК Количество,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|ГДЕ
		|	НЕ ВременнаяТаблицаШапка.СерияБланкаСФ = """"
		|	И НЕ ВременнаяТаблицаШапка.НомерБланкаСФ = """"";		
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаБланкиСчетовФактур", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаСотрудники()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСчетаФактурыВыписанные(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;	
	Запрос.Текст =	
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Дата,
		|	ВременнаяТаблицаШапка.КорректировкаДатаСФ КАК ДатаПоставки,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Ссылка КАК Документ,
		|	ВременнаяТаблицаШапка.СерияБланкаСФ КАК СерияБланкаСФ,
		|	ВременнаяТаблицаШапка.НомерБланкаСФ КАК НомерБланкаСФ,
		|	ВременнаяТаблицаШапка.КорректировкаСерияБланкаСФ КАК КорСерияБланкаСФ,
		|	ВременнаяТаблицаШапка.КорректировкаНомерБланкаСФ КАК КорНомерБланкаСФ,
		|	ВременнаяТаблицаШапка.Контрагент.ПризнакСтраны КАК ПризнакСтраны,
		|	ВременнаяТаблицаШапка.ВидПоставкиНДС КАК ВидПоставкиНДС,
		|	ВременнаяТаблицаШапка.ДатаСФ КАК ДатаСФ,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.СтавкаНДС КАК СтавкаНДС,
		|	ИСТИНА КАК ВозвратТоваров,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаТовары.ВсегоВВалютеРеглУчета - ВременнаяТаблицаТовары.СуммаНДСВВалютеРеглУчета - ВременнаяТаблицаТовары.СуммаНСПВВалютеРеглУчета КАК ЧИСЛО(15, 2)) КАК СуммаБезНДС,
		|	ВременнаяТаблицаТовары.СуммаНДСВВалютеРеглУчета КАК СуммаНДС,
		|	ВременнаяТаблицаТовары.СуммаНСПВВалютеРеглУчета КАК СуммаНеоблагаемая
		|ПОМЕСТИТЬ ВременнаяТаблицаСтрокиТаблиц
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.Всего = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.КорректировкаДатаСФ,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Ссылка,
		|	ВременнаяТаблицаШапка.СерияБланкаСФ,
		|	ВременнаяТаблицаШапка.НомерБланкаСФ,
		|	ВременнаяТаблицаШапка.КорректировкаСерияБланкаСФ,
		|	ВременнаяТаблицаШапка.КорректировкаНомерБланкаСФ,
		|	ВременнаяТаблицаШапка.Контрагент.ПризнакСтраны,
		|	ВременнаяТаблицаШапка.ВидПоставкиНДС,
		|	ВременнаяТаблицаШапка.ДатаСФ,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.СтавкаНДС,
		|	ИСТИНА,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаУслуги.ВсегоВВалютеРеглУчета - ВременнаяТаблицаУслуги.СуммаНДСВВалютеРеглУчета - ВременнаяТаблицаУслуги.СуммаНСПВВалютеРеглУчета КАК ЧИСЛО(15, 2)),
		|	ВременнаяТаблицаУслуги.СуммаНДСВВалютеРеглУчета,
		|	ВременнаяТаблицаУслуги.СуммаНСПВВалютеРеглУчета
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаУслуги.Всего = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.КорректировкаДатаСФ,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Ссылка,
		|	ВременнаяТаблицаШапка.СерияБланкаСФ,
		|	ВременнаяТаблицаШапка.НомерБланкаСФ,
		|	ВременнаяТаблицаШапка.КорректировкаСерияБланкаСФ,
		|	ВременнаяТаблицаШапка.КорректировкаНомерБланкаСФ,
		|	ВременнаяТаблицаШапка.Контрагент.ПризнакСтраны,
		|	ВременнаяТаблицаШапка.ВидПоставкиНДС,
		|	ВременнаяТаблицаШапка.ДатаСФ,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.СтавкаНДС,
		|	ИСТИНА,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаОС.ВсегоВВалютеРеглУчета - ВременнаяТаблицаОС.СуммаНДСВВалютеРеглУчета - ВременнаяТаблицаОС.СуммаНСПВВалютеРеглУчета КАК ЧИСЛО(15, 2)),
		|	ВременнаяТаблицаОС.СуммаНДСВВалютеРеглУчета,
		|	ВременнаяТаблицаОС.СуммаНСПВВалютеРеглУчета
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаОС.Всего = 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаСтрокиТаблиц.Дата КАК Дата,
		|	ВременнаяТаблицаСтрокиТаблиц.ДатаПоставки КАК ДатаПоставки,
		|	ВременнаяТаблицаСтрокиТаблиц.Организация КАК Организация,
		|	ВременнаяТаблицаСтрокиТаблиц.Документ КАК Документ,
		|	ВременнаяТаблицаСтрокиТаблиц.СерияБланкаСФ КАК СерияБланкаСФ,
		|	ВременнаяТаблицаСтрокиТаблиц.НомерБланкаСФ КАК НомерБланкаСФ,
		|	ВременнаяТаблицаСтрокиТаблиц.КорСерияБланкаСФ КАК КорСерияБланкаСФ,
		|	ВременнаяТаблицаСтрокиТаблиц.КорНомерБланкаСФ КАК КорНомерБланкаСФ,
		|	ВременнаяТаблицаСтрокиТаблиц.ПризнакСтраны КАК ПризнакСтраны,
		|	ВременнаяТаблицаСтрокиТаблиц.ВидПоставкиНДС КАК ВидПоставкиНДС,
		|	ВременнаяТаблицаСтрокиТаблиц.ДатаСФ КАК ДатаСФ,
		|	ВременнаяТаблицаСтрокиТаблиц.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаСтрокиТаблиц.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ВременнаяТаблицаСтрокиТаблиц.СтавкаНДС КАК СтавкаНДС,
		|	ВременнаяТаблицаСтрокиТаблиц.ВозвратТоваров КАК ВозвратТоваров,
		|	-СУММА(ВременнаяТаблицаСтрокиТаблиц.СуммаБезНДС) КАК СуммаБезНДС,
		|	-СУММА(ВременнаяТаблицаСтрокиТаблиц.СуммаНДС) КАК СуммаНДС,
		|	-СУММА(ВременнаяТаблицаСтрокиТаблиц.СуммаНеоблагаемая) КАК СуммаНеоблагаемая
		|ИЗ
		|	ВременнаяТаблицаСтрокиТаблиц КАК ВременнаяТаблицаСтрокиТаблиц
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаСтрокиТаблиц.СтавкаНДС,
		|	ВременнаяТаблицаСтрокиТаблиц.Дата,
		|	ВременнаяТаблицаСтрокиТаблиц.НомерБланкаСФ,
		|	ВременнаяТаблицаСтрокиТаблиц.КорНомерБланкаСФ,
		|	ВременнаяТаблицаСтрокиТаблиц.СерияБланкаСФ,
		|	ВременнаяТаблицаСтрокиТаблиц.КорСерияБланкаСФ,
		|	ВременнаяТаблицаСтрокиТаблиц.Контрагент,
		|	ВременнаяТаблицаСтрокиТаблиц.ДоговорКонтрагента,
		|	ВременнаяТаблицаСтрокиТаблиц.ВозвратТоваров,
		|	ВременнаяТаблицаСтрокиТаблиц.ДатаПоставки,
		|	ВременнаяТаблицаСтрокиТаблиц.Организация,
		|	ВременнаяТаблицаСтрокиТаблиц.Документ,
		|	ВременнаяТаблицаСтрокиТаблиц.ПризнакСтраны,
		|	ВременнаяТаблицаСтрокиТаблиц.ДатаСФ,
		|	ВременнаяТаблицаСтрокиТаблиц.ВидПоставкиНДС";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСчетаФактурыВыписанные", РезультатЗапроса.Выгрузить());	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСостоянияОС(ДокументСсылка, СтруктураДополнительныеСвойства)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ТаблицаДокумента.ОсновноеСредство,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.Поступило) КАК Состояние
		|ИЗ
		|	ВременнаяТаблицаОС КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСостоянияОС", РезультатЗапроса.Выгрузить()); 
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСобытияОС(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ТаблицаДокумента.ОсновноеСредство КАК ОсновноеСредство,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Поступление) КАК Событие,
		|	ВременнаяТаблицаШапка.Номер КАК НомерДокумента,
		|	""Возврат ОС"" КАК НазваниеДокумента
		|ИЗ
		|	ВременнаяТаблицаОС КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСобытияОС", РезультатЗапроса.Выгрузить());
КонецПроцедуры     

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДвижениеОСНУ(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ПараметрыУчетаОССрезПоследних.ГруппаНУ КАК ГруппаНУ,
		|	ВременнаяТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	-ВременнаяТаблицаОС.ВсегоВВалютеРеглУчета - ВременнаяТаблицаОС.СуммаНДСВВалютеРеглУчета - ВременнаяТаблицаОС.СуммаНСПВВалютеРеглУчета КАК Выбытие,
		|	-ВЫРАЗИТЬ((ВременнаяТаблицаОС.ВсегоВВалютеРеглУчета - ВременнаяТаблицаОС.СуммаНДСВВалютеРеглУчета - ВременнаяТаблицаОС.СуммаНСПВВалютеРеглУчета) * (12 - МЕСЯЦ(ВременнаяТаблицаШапка.Дата) + 0.5) / 12 КАК ЧИСЛО(15, 2)) КАК ТекущееВыбытие
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|				&Период,
		|				Организация = &Организация
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							ВременнаяТаблицаОС.ОсновноеСредство
		|						ИЗ
		|							ВременнаяТаблицаОС КАК ВременнаяТаблицаОС)) КАК ПараметрыУчетаОССрезПоследних
		|		ПО ВременнаяТаблицаОС.ОсновноеСредство = ПараметрыУчетаОССрезПоследних.ОсновноеСредство
		|ГДЕ
		|	НЕ ПараметрыУчетаОССрезПоследних.ГруппаНУ = ЗНАЧЕНИЕ(Справочник.ГруппыНалоговогоУчетаОС.ПустаяСсылка)";		
	Запрос.УстановитьПараметр("Период", СтруктураДополнительныеСвойства.ДляПроведения.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвижениеОСНУ", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры 

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства, Отказ) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.Дата КАК Дата,
		|	ТаблицаДокумента.Номер КАК Номер,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.Склад КАК Склад,
		|	ТаблицаДокумента.Контрагент КАК Контрагент,
		|	ТаблицаДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ТаблицаДокумента.СчетРасчетов КАК СчетРасчетов,
		|	ТаблицаДокумента.ВалютаДокумента КАК ВалютаДокумента,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.КурсВозврата <> 0
		|			ТОГДА ТаблицаДокумента.КурсВозврата
		|		ИНАЧЕ ТаблицаДокумента.Курс
		|	КОНЕЦ КАК Курс,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.КурсВозврата <> 0
		|			ТОГДА 1
		|		ИНАЧЕ ТаблицаДокумента.Кратность
		|	КОНЕЦ КАК Кратность,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСКОплате) КАК СчетУчетаНДС,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НалогСПродаж) КАК СчетУчетаНСП,
		|	ТаблицаДокумента.ДокументОснование КАК ДокументОснование,
		|	ВЫБОР
		|		КОГДА НЕ ДанныеПервичныхДокументов.Документ ЕСТЬ NULL
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК УказанДокументОтгрузки,
		|	ДанныеПервичныхДокументов.Дата КАК ДатаДокументаРеализации,
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаДокумента.СтавкаНСП КАК СтавкаНСП,
		|	ТаблицаДокумента.СтавкаНСПУслуги КАК СтавкаНСПУслуги,
		|	ЗНАЧЕНИЕ(Справочник.СтавкиНСП.Прочее) КАК СтавкаНСПОС,
		|	ТаблицаДокумента.СуммаВключаетНалоги КАК СуммаВключаетНалоги,
		|	ТаблицаДокумента.СчетУчетаСкидок КАК СчетУчетаСкидок,
		|	ТаблицаДокумента.СерияБланкаСФ КАК СерияБланкаСФ,
		|	ТаблицаДокумента.НомерБланкаСФ КАК НомерБланкаСФ,
		|	ТаблицаДокумента.ДатаСФ КАК ДатаСФ,
		|	ТаблицаДокумента.ВидПоставкиНДС КАК ВидПоставкиНДС,
		|	ТаблицаДокумента.КорректировкаСерияБланкаСФ КАК КорректировкаСерияБланкаСФ,
		|	ТаблицаДокумента.КорректировкаНомерБланкаСФ КАК КорректировкаНомерБланкаСФ,
		|	ТаблицаДокумента.КорректировкаДатаСФ КАК КорректировкаДатаСФ,
		|	ТаблицаДокумента.БезналичныйРасчет КАК БезналичныйРасчет,
		|	ТаблицаДокумента.БезвозмезднаяПоставка КАК БезвозмезднаяПоставка
		|ПОМЕСТИТЬ ВременнаяТаблицаШапка
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО ТаблицаДокумента.ДокументОснование = ДанныеПервичныхДокументов.Документ
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.Количество КАК Количество,
		|	ТаблицаДокумента.Всего КАК Всего,
		|	ТаблицаДокумента.Сумма КАК Сумма,
		|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
		|	ТаблицаДокумента.СуммаНСП КАК СуммаНСП,
		|	ТаблицаДокумента.СуммаСкидки КАК СуммаСкидки,
		|	ТаблицаДокумента.Себестоимость КАК Себестоимость,
		|	ТаблицаДокумента.СчетУчета КАК СчетУчета,
		|	ТаблицаДокумента.СчетДохода КАК СчетДохода,
		|	ТаблицаДокумента.СчетСебестоимости КАК СчетСебестоимости,
		|	ТаблицаДокумента.СтатьяРасхода КАК СтатьяРасхода,
		|	ТаблицаДокумента.СуммаДохода КАК СуммаДохода,
		|	ТаблицаДокумента.ВсегоВВалютеРеглУчета КАК ВсегоВВалютеРеглУчета,
		|	ТаблицаДокумента.СуммаВВалютеРеглУчета КАК СуммаВВалютеРеглУчета,
		|	ТаблицаДокумента.СуммаНДСВВалютеРеглУчета КАК СуммаНДСВВалютеРеглУчета,
		|	ТаблицаДокумента.СуммаНСПВВалютеРеглУчета КАК СуммаНСПВВалютеРеглУчета,
		|	ТаблицаДокумента.СуммаСкидкиВВалютеРеглУчета КАК СуммаСкидкиВВалютеРеглУчета,
		|	ТаблицаДокумента.СуммаДоходаВВалютеРеглУчета КАК СуммаДоходаВВалютеРеглУчета
		|ПОМЕСТИТЬ ВременнаяТаблицаТовары
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВозвратТоваровОтПокупателяУслуги.НомерСтроки КАК НомерСтроки,
		|	ВозвратТоваровОтПокупателяУслуги.Номенклатура КАК Номенклатура,
		|	ВозвратТоваровОтПокупателяУслуги.Количество КАК Количество,
		|	ВозвратТоваровОтПокупателяУслуги.Всего КАК Всего,
		|	ВозвратТоваровОтПокупателяУслуги.Сумма КАК Сумма,
		|	ВозвратТоваровОтПокупателяУслуги.СуммаНДС КАК СуммаНДС,
		|	ВозвратТоваровОтПокупателяУслуги.СуммаНСП КАК СуммаНСП,
		|	ВозвратТоваровОтПокупателяУслуги.СуммаСкидки КАК СуммаСкидки,
		|	ВозвратТоваровОтПокупателяУслуги.СчетДохода КАК СчетДохода,
		|	ВозвратТоваровОтПокупателяУслуги.СуммаДохода КАК СуммаДохода,
		|	ВозвратТоваровОтПокупателяУслуги.СуммаВВалютеРеглУчета КАК СуммаВВалютеРеглУчета,
		|	ВозвратТоваровОтПокупателяУслуги.СуммаНДСВВалютеРеглУчета КАК СуммаНДСВВалютеРеглУчета,
		|	ВозвратТоваровОтПокупателяУслуги.СуммаНСПВВалютеРеглУчета КАК СуммаНСПВВалютеРеглУчета,
		|	ВозвратТоваровОтПокупателяУслуги.СуммаСкидкиВВалютеРеглУчета КАК СуммаСкидкиВВалютеРеглУчета,
		|	ВозвратТоваровОтПокупателяУслуги.СуммаДоходаВВалютеРеглУчета КАК СуммаДоходаВВалютеРеглУчета,
		|	ВозвратТоваровОтПокупателяУслуги.ВсегоВВалютеРеглУчета КАК ВсегоВВалютеРеглУчета
		|ПОМЕСТИТЬ ВременнаяТаблицаУслуги
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя.Услуги КАК ВозвратТоваровОтПокупателяУслуги
		|ГДЕ
		|	ВозвратТоваровОтПокупателяУслуги.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВозвратТоваровОтПокупателяОС.НомерСтроки КАК НомерСтроки,
		|	ВозвратТоваровОтПокупателяОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ВозвратТоваровОтПокупателяОС.Всего КАК Всего,
		|	ВозвратТоваровОтПокупателяОС.Сумма КАК Сумма,
		|	ВозвратТоваровОтПокупателяОС.СуммаНДС КАК СуммаНДС,
		|	ВозвратТоваровОтПокупателяОС.СуммаНСП КАК СуммаНСП,
		|	ВозвратТоваровОтПокупателяОС.СуммаСкидки КАК СуммаСкидки,
		|	ВозвратТоваровОтПокупателяОС.СчетДохода КАК СчетДохода,
		|	ВозвратТоваровОтПокупателяОС.СуммаДохода КАК СуммаДохода,
		|	ВозвратТоваровОтПокупателяОС.СуммаВВалютеРеглУчета КАК СуммаВВалютеРеглУчета,
		|	ВозвратТоваровОтПокупателяОС.СуммаНДСВВалютеРеглУчета КАК СуммаНДСВВалютеРеглУчета,
		|	ВозвратТоваровОтПокупателяОС.СуммаНСПВВалютеРеглУчета КАК СуммаНСПВВалютеРеглУчета,
		|	ВозвратТоваровОтПокупателяОС.СуммаСкидкиВВалютеРеглУчета КАК СуммаСкидкиВВалютеРеглУчета,
		|	ВозвратТоваровОтПокупателяОС.СуммаДоходаВВалютеРеглУчета КАК СуммаДоходаВВалютеРеглУчета,
		|	ВозвратТоваровОтПокупателяОС.ВсегоВВалютеРеглУчета КАК ВсегоВВалютеРеглУчета,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета КАК СчетУчета,
		|	ВозвратТоваровОтПокупателяОС.СчетЗатрат КАК СчетЗатрат,
		|	ВозвратТоваровОтПокупателяОС.СтатьяЗатрат КАК СтатьяЗатрат
		|ПОМЕСТИТЬ ВременнаяТаблицаОС
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя.ОС КАК ВозвратТоваровОтПокупателяОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыУчетаОС.СрезПоследних(&Период, Организация = &Организация) КАК ПараметрыУчетаОССрезПоследних
		|		ПО ВозвратТоваровОтПокупателяОС.ОсновноеСредство = ПараметрыУчетаОССрезПоследних.ОсновноеСредство
		|ГДЕ
		|	ВозвратТоваровОтПокупателяОС.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтавкиНДССрезПоследних.СтавкаНДС КАК СтавкаНДС,
		|	СтавкиНДССрезПоследних.Ставка КАК ЗначениеСтавки
		|ПОМЕСТИТЬ ВременнаяТаблицаСтавкиНДС
		|ИЗ
		|	РегистрСведений.СтавкиНДС.СрезПоследних(
		|			&Период,
		|			СтавкаНДС В
		|				(ВЫБРАТЬ
		|					ВременнаяТаблицаШапка.СтавкаНДС
		|				ИЗ
		|					ВременнаяТаблицаШапка)) КАК СтавкиНДССрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтавкиНСПСрезПоследних.СтавкаНСП КАК СтавкаНСП,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.БезналичныйРасчет
		|			ИЛИ НЕ &ПлательщикНСП
		|			ТОГДА 0
		|		ИНАЧЕ СтавкиНСПСрезПоследних.Ставка
		|	КОНЕЦ КАК ЗначениеСтавки
		|ПОМЕСТИТЬ ВременнаяТаблицаСтавкиНСП
		|ИЗ
		|	РегистрСведений.СтавкиНСП.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И (СтавкаНСП В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаШапка.СтавкаНСП
		|					ИЗ
		|						ВременнаяТаблицаШапка)
		|				ИЛИ СтавкаНСП В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаШапка.СтавкаНСПУслуги
		|					ИЗ
		|						ВременнаяТаблицаШапка)
		|				ИЛИ СтавкаНСП В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаШапка.СтавкаНСПОС
		|					ИЗ
		|						ВременнаяТаблицаШапка))) КАК СтавкиНСПСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)";
	Запрос.УстановитьПараметр("Ссылка", 		ДокументСсылка);
	Запрос.УстановитьПараметр("Период", 		СтруктураДополнительныеСвойства.ДляПроведения.Дата);
	Запрос.УстановитьПараметр("Организация", 	СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ПлательщикНСП", 	СтруктураДополнительныеСвойства.УчетнаяПолитика.ПлательщикНСП);
	РезультатЗапроса = Запрос.Выполнить();
	
	СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства, Отказ);
	СформироватьТаблицаПродажи(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаНДС(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаБланкиСчетовФактур(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСчетаФактурыВыписанные(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСостоянияОС(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСобытияОС(ДокументСсылка, СтруктураДополнительныеСвойства); 	
	СформироватьТаблицаДвижениеОСНУ(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаПродажиОсновныхСредств(ДокументСсылка, СтруктураДополнительныеСвойства);
КонецПроцедуры

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой ПечатьНакладной
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьНакладной(МассивОбъектов, ОбъектыПечати)
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВозвратТоваровОтПокупателя.Ссылка КАК Ссылка,
		|	ВозвратТоваровОтПокупателя.Номер КАК Номер,
		|	ВозвратТоваровОтПокупателя.Дата КАК Дата,
		|	ВозвратТоваровОтПокупателя.Организация КАК Организация,
		|	ВозвратТоваровОтПокупателя.Организация.НаименованиеПолное КАК ОрганизацияПредставление,
		|	ВозвратТоваровОтПокупателя.Склад КАК Склад,
		|	ПРЕДСТАВЛЕНИЕ(ВозвратТоваровОтПокупателя.Склад) КАК СкладПредставление,
		|	ВозвратТоваровОтПокупателя.Контрагент КАК Контрагент,
		|	ВозвратТоваровОтПокупателя.Контрагент.НаименованиеПолное КАК КонтрагентПредставление,
		|	ВозвратТоваровОтПокупателя.ВалютаДокумента КАК ВалютаДокумента,
		|	ВозвратТоваровОтПокупателя.Товары.(
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
		|		ПРЕДСТАВЛЕНИЕ(ВозвратТоваровОтПокупателя.Товары.Номенклатура.ЕдиницаИзмерения) КАК ЕИ,
		|		Количество КАК Количество,
		|		Цена КАК Цена,
		|		Сумма КАК Сумма,
		|		СуммаНДС КАК СуммаНДС,
		|		СуммаНСП КАК СуммаНСП,
		|		СуммаСкидки КАК СуммаСкидки,
		|		Всего КАК Всего
		|	) КАК Товары,
		|	ВозвратТоваровОтПокупателя.Услуги.(
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
		|		ПРЕДСТАВЛЕНИЕ(ВозвратТоваровОтПокупателя.Услуги.Номенклатура.ЕдиницаИзмерения) КАК ЕИ,
		|		Количество КАК Количество,
		|		Цена КАК Цена,
		|		Сумма КАК Сумма,
		|		СуммаНДС КАК СуммаНДС,
		|		СуммаНСП КАК СуммаНСП,
		|		СуммаСкидки КАК СуммаСкидки,
		|		Всего КАК Всего
		|	) КАК Услуги,
		|	ВозвратТоваровОтПокупателя.ОС.(
		|		НомерСтроки КАК НомерСтроки,
		|		ОсновноеСредство КАК ОсновноеСредство,
		|		ОсновноеСредство.НаименованиеПолное КАК НоменклатураПредставление,
		|		Сумма КАК Сумма,
		|		СуммаНДС КАК СуммаНДС,
		|		СуммаНСП КАК СуммаНСП,
		|		СуммаСкидки КАК СуммаСкидки,
		|		Всего КАК Всего
		|	) КАК ОС
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
		|ГДЕ
		|	ВозвратТоваровОтПокупателя.Ссылка В(&СписокДокументов)";		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ВозвратТоваровОтПокупателя_Накладная";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВозвратТоваровОтПокупателя.ПФ_MXL_Накладная");
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;
		
		ТекстЗаголовка = СформироватьЗаголовокДокумента(Шапка, НСтр("ru = 'Накладная на возврат от покупателя'"));
		ДанныеПечати.Вставить("ТекстЗаголовка", ТекстЗаголовка);
		ДанныеПечати.Вставить("ОрганизацияПредставление", Шапка.ОрганизацияПредставление);
		ДанныеПечати.Вставить("СкладПредставление", Шапка.СкладПредставление);
		ДанныеПечати.Вставить("ПолучательПредставление", Шапка.КонтрагентПредставление);

		ТаблицаТовары = Шапка.Товары.Выгрузить();
		ТаблицаУслуги = Шапка.Услуги.Выгрузить();
		ТаблицаОС = Шапка.ОС.Выгрузить();
		
		Всего = ТаблицаТовары.Итог("Всего") + ТаблицаУслуги.Итог("Всего") + ТаблицаОС.Итог("Всего");
		ВсегоНДС = ТаблицаТовары.Итог("СуммаНДС") + ТаблицаУслуги.Итог("СуммаНДС") + ТаблицаОС.Итог("СуммаНДС");
		ВсегоНСП = ТаблицаТовары.Итог("СуммаНСП") + ТаблицаУслуги.Итог("СуммаНСП") + ТаблицаОС.Итог("СуммаНСП");
		КоличествоНаименований = ТаблицаТовары.Количество() + ТаблицаУслуги.Количество() + ТаблицаОС.Количество();		
		
		ВсегоСкидка = ТаблицаТовары.Итог("СуммаСкидки") + ТаблицаУслуги.Итог("СуммаСкидки") + ТаблицаОС.Итог("СуммаСкидки");
		ЕстьСкидка = ВсегоСкидка <> 0;
		
		ДанныеПечати.Вставить("Всего", Всего);
		ДанныеПечати.Вставить("ВсегоНДС", ВсегоНДС);
		ДанныеПечати.Вставить("ВсегоНСП", ВсегоНСП);
		ДанныеПечати.Вставить("ВсегоСкидка", ВсегоСкидка);
		ДанныеПечати.Вставить("ИтоговаяСтрока", 
			СтрШаблон(НСтр("ru = 'Всего наименований %1, на сумму %2'"), 
			Формат(КоличествоНаименований, "ЧН=0; ЧГ=0"), Формат(ДанныеПечати.Всего, "ЧЦ=15; ЧДЦ=2")));
		ДанныеПечати.Вставить("СуммаПрописью", БухгалтерскийУчетСервер.СформироватьСуммуПрописью(ДанныеПечати.Всего, Шапка.ВалютаДокумента));

		// Области
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Заголовок");
		Если ЕстьСкидка Тогда 
			МассивОбластейМакета.Добавить("ШапкаТаблицыСоСкидкой");
			МассивОбластейМакета.Добавить("СтрокаСоСкидкой");
		Иначе 
			МассивОбластейМакета.Добавить("ШапкаТаблицы");
			МассивОбластейМакета.Добавить("Строка");
		КонецЕсли;	
		МассивОбластейМакета.Добавить("Подвал");
		МассивОбластейМакета.Добавить("Итоги");
		МассивОбластейМакета.Добавить("ИтогиНДС");
		МассивОбластейМакета.Добавить("ИтогиНСП");
		Если ЕстьСкидка Тогда 
			МассивОбластейМакета.Добавить("ИтогиСкидка");
		КонецЕсли;	
		МассивОбластейМакета.Добавить("СуммаПрописью");
		МассивОбластейМакета.Добавить("Подписи");
	
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ИмяОбласти <> "Строка" И ИмяОбласти <> "СтрокаСоСкидкой" Тогда
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			ИначеЕсли ИмяОбласти = "Строка" ИЛИ ИмяОбласти = "СтрокаСоСкидкой" Тогда 
				Для Каждого СтрокаТаблицы Из ТаблицаТовары Цикл
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
				Для Каждого СтрокаТаблицы Из ТаблицаУслуги Цикл
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;	
				Для Каждого СтрокаТаблицы Из ТаблицаОС Цикл
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;				
			КонецЕсли;	
		КонецЦикла;
		
		БухгалтерскиеОтчеты.ВыводПодписиРуководителей(ТабличныйДокумент, Шапка);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой Счет-фактура
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьСчетФактура(МассивОбъектов, ОбъектыПечати, КоличествоСтрокСчетаФактуры, СчетФактураВВалюте = Ложь)
	Перем Ошибки, ПервыйДокумент, НомерСтрокиНачало;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ВозвратТоваровОтПокупателя_СчетФактура";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьСчетФактура.ПФ_MXL_СчетФактура");
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВозвратТоваровОтПокупателя.Ссылка КАК Ссылка,
		|	ВозвратТоваровОтПокупателя.Номер КАК Номер,
		|	ВозвратТоваровОтПокупателя.Дата КАК Дата,
		|	ВЫБОР
		|		КОГДА ВозвратТоваровОтПокупателя.КурсВозврата <> 0
		|			ТОГДА ВозвратТоваровОтПокупателя.КурсВозврата
		|		ИНАЧЕ ВозвратТоваровОтПокупателя.Курс
		|	КОНЕЦ КАК Курс,
		|	ВЫБОР
		|		КОГДА ВозвратТоваровОтПокупателя.КурсВозврата <> 0
		|			ТОГДА 1
		|		ИНАЧЕ ВозвратТоваровОтПокупателя.Кратность
		|	КОНЕЦ КАК Кратность,
		|	ВозвратТоваровОтПокупателя.СуммаВключаетНалоги КАК СуммаВключаетНалоги,
		|	ВозвратТоваровОтПокупателя.ВалютаДокумента КАК ВалютаДокумента,
		|	ВозвратТоваровОтПокупателя.ПечатьВРегламентированнойВалюте КАК ПечатьВРегламентированнойВалюте,
		|	ВозвратТоваровОтПокупателя.ПечататьКурсИСуммуВРегламентированнойВалюте КАК ПечататьКурсИСуммуВРегламентированнойВалюте,
		|	ВозвратТоваровОтПокупателя.ВыводитьКомментарийВНаименование КАК ВыводитьКомментарийВНаименование,
		|	ВозвратТоваровОтПокупателя.Комментарий КАК Комментарий,
		|	ВозвратТоваровОтПокупателя.ПричиныКорректировки КАК ПричиныКорректировки,
		|	ВозвратТоваровОтПокупателя.ВидПоставкиНДС.Код КАК ВидПоставкиНДС,
		|	ВозвратТоваровОтПокупателя.Организация КАК Организация,
		|	ВозвратТоваровОтПокупателя.Организация.НаименованиеПолное КАК ОрганизацияПредставление,
		|	ВозвратТоваровОтПокупателя.Организация.ИНН КАК ИННОрганизации,
		|	ВозвратТоваровОтПокупателя.Организация.ГНС КАК ГНСОрганизации,
		|	ВозвратТоваровОтПокупателя.Организация.ГНС.Код КАК КодГНСОрганизации,
		|	ВозвратТоваровОтПокупателя.Организация.ФайлЛоготип КАК ФайлЛоготип,
		|	ВозвратТоваровОтПокупателя.ЭкспортнаяПоставка КАК ЭкспортнаяПоставка,
		|	ВозвратТоваровОтПокупателя.Организация.ОсновнойБанковскийСчет КАК БанковскийСчет,
		|	ВозвратТоваровОтПокупателя.Организация.ОсновнойБанковскийСчет.Наименование КАК НаименованиерБанковскогоСчетаОрганизации,
		|	ВозвратТоваровОтПокупателя.Организация.ОсновнойБанковскийСчет.НомерСчета КАК НомерБанковскогоСчетаОрганизации,
		|	ВозвратТоваровОтПокупателя.Организация.ОсновнойБанковскийСчет.Банк.Наименование КАК НаименованиеБанкаОрганизации,
		|	ВозвратТоваровОтПокупателя.Организация.ОсновнойБанковскийСчет.Банк.Код КАК БИКБанкаОрганизации,
		|	ВЫБОР
		|		КОГДА &ПечататьСчетаФактурыСГоловнымКонтрагентом
		|				И НЕ ВозвратТоваровОтПокупателя.Контрагент.ГоловнойКонтрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ВозвратТоваровОтПокупателя.Контрагент.ГоловнойКонтрагент
		|		ИНАЧЕ ВозвратТоваровОтПокупателя.Контрагент
		|	КОНЕЦ КАК Контрагент,
		|	ВозвратТоваровОтПокупателя.СерияБланкаСФ КАК СерияБланкаСФ,
		|	ВозвратТоваровОтПокупателя.НомерБланкаСФ КАК НомерБланкаСФ,
		|	ВозвратТоваровОтПокупателя.ДатаСФ КАК ДатаСФ,
		|	ВозвратТоваровОтПокупателя.КорректировкаСерияБланкаСФ КАК КорректировкаСерияБланкаСФ,
		|	ВозвратТоваровОтПокупателя.КорректировкаНомерБланкаСФ КАК КорректировкаНомерБланкаСФ,
		|	ВозвратТоваровОтПокупателя.КорректировкаДатаСФ КАК КорректировкаДатаСФ,
		|	ВозвратТоваровОтПокупателя.БезналичныйРасчет КАК БезналичныйРасчет,
		|	ВозвратТоваровОтПокупателя.СтавкаНДС КАК СтавкаНДС,
		|	ВозвратТоваровОтПокупателя.СтавкаНСП КАК СтавкаНСП,
		|	ВозвратТоваровОтПокупателя.СтавкаНСПУслуги КАК СтавкаНСПУслуги,
		|	ВозвратТоваровОтПокупателя.БезвозмезднаяПоставка КАК БезвозмезднаяПоставка
		|ПОМЕСТИТЬ ВременнаяТаблицаШапка
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
		|ГДЕ
		|	ВозвратТоваровОтПокупателя.Ссылка В(&СписокДокументов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Ссылка,
		|	ВременнаяТаблицаШапка.СуммаВключаетНалоги КАК СуммаВключаетНалоги,
		|	ВременнаяТаблицаШапка.Курс КАК Курс,
		|	ВременнаяТаблицаШапка.Кратность КАК Кратность
		|ПОМЕСТИТЬ ВременнаяТаблицаДокументыДляПересчета
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|ГДЕ
		|	(ВременнаяТаблицаШапка.ПечатьВРегламентированнойВалюте
		|			ИЛИ ВременнаяТаблицаШапка.ПечататьКурсИСуммуВРегламентированнойВалюте
		|			ИЛИ &СчетФактураВВалюте)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Ссылка,
		|	ВременнаяТаблицаШапка.СуммаВключаетНалоги КАК СуммаВключаетНалоги
		|ПОМЕСТИТЬ ВременнаяТаблицаДокументыСИсходнымиСуммами
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|ГДЕ
		|	(НЕ ВременнаяТаблицаШапка.ПечатьВРегламентированнойВалюте
		|			ИЛИ &СчетФактураВВалюте)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТовары.Ссылка КАК Ссылка,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
		|	ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
		|	ТаблицаТовары.Количество КАК Количество,
		|	ТаблицаТовары.Цена КАК Цена,
		|	ТаблицаТовары.Сумма КАК Сумма,
		|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
		|	ТаблицаТовары.СуммаНСП КАК СуммаНСП,
		|	ТаблицаТовары.Всего КАК Всего,
		|	ТаблицаТовары.СуммаДохода КАК СуммаДохода,
		|	ТаблицаТовары.СуммаСкидки КАК СуммаСкидки,
		|	ТаблицаТовары.СуммаВВалютеРеглУчета КАК СуммаВВалютеРеглУчета,
		|	ТаблицаТовары.СуммаНДСВВалютеРеглУчета КАК СуммаНДСВВалютеРеглУчета,
		|	ТаблицаТовары.СуммаНСПВВалютеРеглУчета КАК СуммаНСПВВалютеРеглУчета,
		|	ТаблицаТовары.ВсегоВВалютеРеглУчета КАК ВсегоВВалютеРеглУчета,
		|	ТаблицаТовары.СуммаДоходаВВалютеРеглУчета КАК СуммаДоходаВВалютеРеглУчета,
		|	ТаблицаТовары.СуммаСкидкиВВалютеРеглУчета КАК СуммаСкидкиВВалютеРеглУчета,
		|	ТаблицаТовары.Номенклатура.КодТНВЭД КАК КодТНВЭД,
		|	""Товары"" КАК НаименованиеТабличнойЧасти
		|ПОМЕСТИТЬ ВременнаяТаблицаСтроки
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.Ссылка В(&СписокДокументов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаУслуги.Ссылка,
		|	ТаблицаУслуги.Номенклатура,
		|	ТаблицаУслуги.Номенклатура.НаименованиеПолное,
		|	ТаблицаУслуги.Номенклатура.ЕдиницаИзмерения.Наименование,
		|	ТаблицаУслуги.Количество,
		|	ТаблицаУслуги.Цена,
		|	ТаблицаУслуги.Сумма,
		|	ТаблицаУслуги.СуммаНДС,
		|	ТаблицаУслуги.СуммаНСП,
		|	ТаблицаУслуги.Всего,
		|	ТаблицаУслуги.СуммаДохода,
		|	ТаблицаУслуги.СуммаСкидки,
		|	ТаблицаУслуги.СуммаВВалютеРеглУчета,
		|	ТаблицаУслуги.СуммаНДСВВалютеРеглУчета,
		|	ТаблицаУслуги.СуммаНСПВВалютеРеглУчета,
		|	ТаблицаУслуги.ВсегоВВалютеРеглУчета,
		|	ТаблицаУслуги.СуммаДоходаВВалютеРеглУчета,
		|	ТаблицаУслуги.СуммаСкидкиВВалютеРеглУчета,
		|	ТаблицаУслуги.Номенклатура.КодТНВЭД,
		|	""Услуги""
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя.Услуги КАК ТаблицаУслуги
		|ГДЕ
		|	ТаблицаУслуги.Ссылка В(&СписокДокументов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаОС.Ссылка,
		|	ТаблицаОС.ОсновноеСредство,
		|	ТаблицаОС.ОсновноеСредство.НаименованиеПолное,
		|	NULL,
		|	0,
		|	ТаблицаОС.Всего,
		|	ТаблицаОС.Сумма,
		|	ТаблицаОС.СуммаНДС,
		|	ТаблицаОС.СуммаНСП,
		|	ТаблицаОС.Всего,
		|	ТаблицаОС.СуммаДохода,
		|	ТаблицаОС.СуммаСкидки,
		|	ТаблицаОС.СуммаВВалютеРеглУчета,
		|	ТаблицаОС.СуммаНДСВВалютеРеглУчета,
		|	ТаблицаОС.СуммаНСПВВалютеРеглУчета,
		|	ТаблицаОС.ВсегоВВалютеРеглУчета,
		|	ТаблицаОС.СуммаДоходаВВалютеРеглУчета,
		|	ТаблицаОС.СуммаСкидкиВВалютеРеглУчета,
		|	"""",
		|	""ОС""
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя.ОС КАК ТаблицаОС
		|ГДЕ
		|	ТаблицаОС.Ссылка В(&СписокДокументов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаСтроки.Ссылка КАК Ссылка,
		|	ВременнаяТаблицаСтроки.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаСтроки.НоменклатураПредставление КАК НоменклатураПредставление,
		|	ВременнаяТаблицаСтроки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	-ВременнаяТаблицаСтроки.Количество КАК Количество,
		|	ВременнаяТаблицаСтроки.Цена КАК Цена,
		|	-ВременнаяТаблицаСтроки.СуммаНДС КАК СуммаНДС,
		|	-ВременнаяТаблицаСтроки.СуммаНСП КАК СуммаНСП,
		|	-ВременнаяТаблицаСтроки.Сумма КАК Сумма,
		|	-ВременнаяТаблицаСтроки.Всего КАК Всего,
		|	-ВременнаяТаблицаСтроки.СуммаДохода КАК Стоимость,
		|	-ВременнаяТаблицаСтроки.СуммаСкидки КАК СуммаСкидки,
		|	ВременнаяТаблицаСтроки.КодТНВЭД КАК КодТНВЭД,
		|	ВременнаяТаблицаСтроки.НаименованиеТабличнойЧасти КАК НаименованиеТабличнойЧасти
		|ИЗ
		|	ВременнаяТаблицаСтроки КАК ВременнаяТаблицаСтроки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыСИсходнымиСуммами КАК ВременнаяТаблицаДокументыСИсходнымиСуммами
		|		ПО ВременнаяТаблицаСтроки.Ссылка = ВременнаяТаблицаДокументыСИсходнымиСуммами.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаСтроки.Ссылка КАК Ссылка,
		|	ВременнаяТаблицаДокументыДляПересчета.Курс КАК Курс,
		|	ВременнаяТаблицаДокументыДляПересчета.Кратность КАК Кратность,
		|	ВременнаяТаблицаСтроки.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаСтроки.НоменклатураПредставление КАК НоменклатураПредставление,
		|	ВременнаяТаблицаСтроки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	-ВременнаяТаблицаСтроки.Количество КАК Количество,
		|	(ВЫРАЗИТЬ(ВременнаяТаблицаСтроки.Цена * ВременнаяТаблицаДокументыДляПересчета.Курс / ВременнаяТаблицаДокументыДляПересчета.Кратность КАК ЧИСЛО(15, 2))) КАК Цена,
		|	-ВременнаяТаблицаСтроки.СуммаНДСВВалютеРеглУчета КАК СуммаНДС,
		|	-ВременнаяТаблицаСтроки.СуммаНСПВВалютеРеглУчета КАК СуммаНСП,
		|	-ВременнаяТаблицаСтроки.Сумма КАК Сумма,
		|	-ВременнаяТаблицаСтроки.ВсегоВВалютеРеглУчета КАК Всего,
		|	-ВременнаяТаблицаСтроки.СуммаДоходаВВалютеРеглУчета КАК Стоимость,
		|	-ВременнаяТаблицаСтроки.СуммаСкидкиВВалютеРеглУчета КАК СуммаСкидки,
		|	ВременнаяТаблицаСтроки.КодТНВЭД КАК КодТНВЭД,
		|	ВременнаяТаблицаСтроки.НаименованиеТабличнойЧасти КАК НаименованиеТабличнойЧасти
		|ИЗ
		|	ВременнаяТаблицаСтроки КАК ВременнаяТаблицаСтроки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыДляПересчета КАК ВременнаяТаблицаДокументыДляПересчета
		|		ПО ВременнаяТаблицаСтроки.Ссылка = ВременнаяТаблицаДокументыДляПересчета.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Ссылка,
		|	ВременнаяТаблицаШапка.Номер КАК Номер,
		|	ВременнаяТаблицаШапка.Дата КАК Дата,
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаДокумента,
		|	ВременнаяТаблицаШапка.Курс КАК Курс,
		|	ВременнаяТаблицаШапка.Кратность КАК Кратность,
		|	ВременнаяТаблицаШапка.ЭкспортнаяПоставка КАК ЭкспортнаяПоставка,
		|	ВременнаяТаблицаШапка.СуммаВключаетНалоги КАК СуммаВключаетНалоги,
		|	ВременнаяТаблицаШапка.ПечатьВРегламентированнойВалюте КАК ПечатьВРегламентированнойВалюте,
		|	ВременнаяТаблицаШапка.ПечататьКурсИСуммуВРегламентированнойВалюте КАК ПечататьКурсИСуммуВРегламентированнойВалюте,
		|	ВременнаяТаблицаШапка.ВыводитьКомментарийВНаименование КАК ВыводитьКомментарийВНаименование,
		|	ВременнаяТаблицаШапка.Комментарий КАК Комментарий,
		|	ВременнаяТаблицаШапка.ПричиныКорректировки КАК ПричиныКорректировки,
		|	ВременнаяТаблицаШапка.ВидПоставкиНДС КАК ВидПоставкиНДС,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.ОрганизацияПредставление КАК ОрганизацияПредставление,
		|	ВременнаяТаблицаШапка.ИННОрганизации КАК ИННОрганизации,
		|	ВременнаяТаблицаШапка.ГНСОрганизации КАК ГНСОрганизации,
		|	ВременнаяТаблицаШапка.КодГНСОрганизации КАК КодГНСОрганизации,
		|	ВременнаяТаблицаШапка.ФайлЛоготип КАК ФайлЛоготип,
		|	ВременнаяТаблицаШапка.НомерБанковскогоСчетаОрганизации КАК НомерБанковскогоСчетаОрганизации,
		|	ВременнаяТаблицаШапка.БИКБанкаОрганизации КАК БикБанкаОрганизации,
		|	ВременнаяТаблицаШапка.НаименованиеБанкаОрганизации КАК НаименованиеБанкаОрганизации,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаШапка.НомерБланкаСФ КАК НомерБланкаСФ,
		|	ВременнаяТаблицаШапка.СерияБланкаСФ КАК СерияБланкаСФ,
		|	ВременнаяТаблицаШапка.ДатаСФ КАК ДатаСФ,
		|	ВременнаяТаблицаШапка.КорректировкаСерияБланкаСФ КАК КорректировкаСерияБланкаСФ,
		|	ВременнаяТаблицаШапка.КорректировкаНомерБланкаСФ КАК КорректировкаНомерБланкаСФ,
		|	ВременнаяТаблицаШапка.КорректировкаДатаСФ КАК КорректировкаДатаСФ,
		|	ВременнаяТаблицаШапка.БезналичныйРасчет КАК БезналичныйРасчет,
		|	ВременнаяТаблицаШапка.СтавкаНДС КАК СтавкаНДС,
		|	ВременнаяТаблицаШапка.СтавкаНСП КАК СтавкаНСП,
		|	ВременнаяТаблицаШапка.СтавкаНСПУслуги КАК СтавкаНСПУслуги,
		|	ВременнаяТаблицаШапка.БезвозмезднаяПоставка КАК БезвозмезднаяПоставка
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ПечататьСчетаФактурыСГоловнымКонтрагентом", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьЗначениеКонстанты("ПечататьСчетаФактурыСГоловнымКонтрагентом"));
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("СчетФактураВВалюте", СчетФактураВВалюте);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Шапка = РезультатЗапроса[6].Выбрать();
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ДанныеПечати = Новый Структура;
		ДанныеПечати.Вставить("НомерОтчета", ?(КоличествоСтрокСчетаФактуры = 20,"001","002"));
		ДанныеПечати.Вставить("НомерПриложения", ?(КоличествоСтрокСчетаФактуры = 20,"2","3"));
		ДанныеПечати.Вставить("НомерБланкаСФ", Шапка.НомерБланкаСФ);
		ДанныеПечати.Вставить("СерияБланкаСФ", Шапка.СерияБланкаСФ);
		ДанныеПечати.Вставить("ТипПоставки", ?(Шапка.ЭкспортнаяПоставка, "Экспорт", "Внутренняя"));
		ДанныеПечати.Вставить("ВидПлатежа", ?(Шапка.БезналичныйРасчет, "Безналичный", "Наличный"));
		ДанныеПечати.Вставить("ПричинаКорректировки", Шапка.ПричиныКорректировки);
		ДанныеПечати.Вставить("Курс", Формат(Шапка.Курс, "ЧЦ=15; ЧДЦ=4"));
		
		Если Шапка.БезвозмезднаяПоставка Тогда
			ДанныеПечати.Вставить("ВидПлатежа", НСтр("ru = 'Безвозмездная поставка'"));
		Иначе	
			ДанныеПечати.Вставить("ВидПлатежа", ?(Шапка.БезналичныйРасчет, "Безналичная", "Наличная"));
		КонецЕсли;
		
		ДанныеПечати.Вставить("ВидПоставки", Шапка.ВидПоставкиНДС);
		
		ДанныеПечати.Вставить("ТекстЗаголовка", НСтр("ru = 'СЧЕТ-ФАКТУРА НДС'"));
		ДанныеПечати.Вставить("ДатаПоставки", Формат(Шапка.Дата,"ДЛФ=DD"));
		ДанныеПечати.Вставить("БанкПоставщика", Шапка.НаименованиеБанкаОрганизации);		
		
		ДанныеПечати.Вставить("ФайлЛоготип", Шапка.ФайлЛоготип);

		ДанныеПечати.Вставить("СерияБланкаСФКор", Шапка.КорректировкаСерияБланкаСФ);
		ДанныеПечати.Вставить("НомерБланкаСФКор", Шапка.КорректировкаНомерБланкаСФ);
		
		ПредставлениеПоставщика = "";
		Организация = Шапка.Организация;
		ИНН = Шапка.ИННОрганизации;
	    ГНС = Шапка.ГНСОрганизации;
	    КодГНС = Шапка.КодГНСОрганизации;
		
		ПредставлениеПоставщика = Шапка.ОрганизацияПредставление;
		
		ДатаСФ = Формат(Шапка.ДатаСФ, "ДЛФ=D");
		ДанныеПечати.Вставить("Дата1", Сред(ДатаСФ,1,1));
		ДанныеПечати.Вставить("Дата2", Сред(ДатаСФ,2,1));
		ДанныеПечати.Вставить("Дата3", Сред(ДатаСФ,4,1));
		ДанныеПечати.Вставить("Дата4", Сред(ДатаСФ,5,1));
		ДанныеПечати.Вставить("Дата5", Сред(ДатаСФ,7,1));
		ДанныеПечати.Вставить("Дата6", Сред(ДатаСФ,8,1));
		ДанныеПечати.Вставить("Дата7", Сред(ДатаСФ,9,1));
		ДанныеПечати.Вставить("Дата8", Сред(ДатаСФ,10,1));
		
		ДатаСФКор = Формат(Шапка.КорректировкаДатаСФ, "ДЛФ=D");
		ДанныеПечати.Вставить("ДатаСФКор1", Сред(ДатаСФКор,1,1));
		ДанныеПечати.Вставить("ДатаСФКор2", Сред(ДатаСФКор,2,1));
		ДанныеПечати.Вставить("ДатаСФКор3", Сред(ДатаСФКор,4,1));
		ДанныеПечати.Вставить("ДатаСФКор4", Сред(ДатаСФКор,5,1));
		ДанныеПечати.Вставить("ДатаСФКор5", Сред(ДатаСФКор,7,1));
		ДанныеПечати.Вставить("ДатаСФКор6", Сред(ДатаСФКор,8,1));
		ДанныеПечати.Вставить("ДатаСФКор7", Сред(ДатаСФКор,9,1));
		ДанныеПечати.Вставить("ДатаСФКор8", Сред(ДатаСФКор,10,1));
		
		ДанныеПечати.Вставить("ИННПост1", Сред(ИНН,1,1));
		ДанныеПечати.Вставить("ИННПост2", Сред(ИНН,2,1));
		ДанныеПечати.Вставить("ИННПост3", Сред(ИНН,3,1));
		ДанныеПечати.Вставить("ИННПост4", Сред(ИНН,4,1));
		ДанныеПечати.Вставить("ИННПост5", Сред(ИНН,5,1));
		ДанныеПечати.Вставить("ИННПост6", Сред(ИНН,6,1));
		ДанныеПечати.Вставить("ИННПост7", Сред(ИНН,7,1));
		ДанныеПечати.Вставить("ИННПост8", Сред(ИНН,8,1));
		ДанныеПечати.Вставить("ИННПост9", Сред(ИНН,9,1));
		ДанныеПечати.Вставить("ИННПост10", Сред(ИНН,10,1));
		ДанныеПечати.Вставить("ИННПост11", Сред(ИНН,11,1));
		ДанныеПечати.Вставить("ИННПост12", Сред(ИНН,12,1));
		ДанныеПечати.Вставить("ИННПост13", Сред(ИНН,13,1));
		ДанныеПечати.Вставить("ИННПост14", Сред(ИНН,14,1));

        БИК = Шапка.БикБанкаОрганизации;
		ДанныеПечати.Вставить("КодБанкаПоставщика1", Сред(БИК,1,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика2", Сред(БИК,2,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика3", Сред(БИК,3,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика4", Сред(БИК,4,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика5", Сред(БИК,5,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика6", Сред(БИК,6,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика7", Сред(БИК,7,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика8", Сред(БИК,8,1));
		ДанныеПечати.Вставить("КодБанкаПоставщика9", Сред(БИК,9,1));		
		
		НомерСчета = Шапка.НомерБанковскогоСчетаОрганизации;
		ДанныеПечати.Вставить("СчетПоставщика1", Сред(НомерСчета,1,1));		
		ДанныеПечати.Вставить("СчетПоставщика2", Сред(НомерСчета,2,1));		
		ДанныеПечати.Вставить("СчетПоставщика3", Сред(НомерСчета,3,1));		
		ДанныеПечати.Вставить("СчетПоставщика4", Сред(НомерСчета,4,1));		
		ДанныеПечати.Вставить("СчетПоставщика5", Сред(НомерСчета,5,1));		
		ДанныеПечати.Вставить("СчетПоставщика6", Сред(НомерСчета,6,1));		
		ДанныеПечати.Вставить("СчетПоставщика7", Сред(НомерСчета,7,1));		
		ДанныеПечати.Вставить("СчетПоставщика8", Сред(НомерСчета,8,1));		
		ДанныеПечати.Вставить("СчетПоставщика9", Сред(НомерСчета,9,1));		
		ДанныеПечати.Вставить("СчетПоставщика10", Сред(НомерСчета,10,1));		
		ДанныеПечати.Вставить("СчетПоставщика11", Сред(НомерСчета,11,1));		
		ДанныеПечати.Вставить("СчетПоставщика12", Сред(НомерСчета,12,1));		
		ДанныеПечати.Вставить("СчетПоставщика13", Сред(НомерСчета,13,1));		
		ДанныеПечати.Вставить("СчетПоставщика14", Сред(НомерСчета,14,1));		
		ДанныеПечати.Вставить("СчетПоставщика15", Сред(НомерСчета,15,1));		
		ДанныеПечати.Вставить("СчетПоставщика16", Сред(НомерСчета,16,1));		
		
		ДанныеПечати.Вставить("ГНСПоставщика1", Сред(КодГНС,1,1));		
		ДанныеПечати.Вставить("ГНСПоставщика2", Сред(КодГНС,2,1));		
		ДанныеПечати.Вставить("ГНСПоставщика3", Сред(КодГНС,3,1));		

		ДанныеПечати.Вставить("НаименованиеГНСПоставщика", ГНС);		
		ДанныеПечати.Вставить("ПредставлениеПоставщика", ПредставлениеПоставщика);		
		
		АдресПоставщика = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, 
													Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации, 
													Шапка.Дата); 
		ДанныеПечати.Вставить("АдресПоставщика", АдресПоставщика);		

		// Данные по контрагенту
		СведенияОКонтрагенте = БухгалтерскийУчетСервер.ПолучитьСведенияОКонтрагенте(Шапка.Контрагент);
		
		ВыводДопИнформацииПоКонтрагенту = БухгалтерскийУчетСервер.ПолучитьПризнакПатентаПоКонтрагенту(Шапка.Контрагент) 
											ИЛИ (Шапка.Контрагент.СтранаРезидентства = Справочники.СтраныМира.Киргизия 
											ИЛИ Шапка.Контрагент.СтранаРезидентства.УчастникЕАЭС);
		
		Если ВыводДопИнформацииПоКонтрагенту Тогда
			Если Шапка.Контрагент.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС Тогда
				ДанныеПечати.Вставить("НаименованиеГНСПокупателя", Шапка.Контрагент.СтранаРезидентства.Наименование);
				КодГНСКонтрагента = Шапка.Контрагент.СтранаРезидентства.Код;
				ДанныеПечати.Вставить("ГНСПокупателя1", Сред(КодГНСКонтрагента,1,1));		
				ДанныеПечати.Вставить("ГНСПокупателя2", Сред(КодГНСКонтрагента,2,1));		
				ДанныеПечати.Вставить("ГНСПокупателя3", Сред(КодГНСКонтрагента,3,1));	
			Иначе
				ДанныеПечати.Вставить("НаименованиеГНСПокупателя", СведенияОКонтрагенте.ГНСНаименование);
				КодГНСКонтрагента = СведенияОКонтрагенте.ГНСКод;
				ДанныеПечати.Вставить("ГНСПокупателя1", Сред(КодГНСКонтрагента,1,1));		
				ДанныеПечати.Вставить("ГНСПокупателя2", Сред(КодГНСКонтрагента,2,1));		
				ДанныеПечати.Вставить("ГНСПокупателя3", Сред(КодГНСКонтрагента,3,1));	
			КонецЕсли;
		Иначе
			ДанныеПечати.Вставить("НаименованиеГНСПокупателя", "отсутствует");
		КонецЕсли;
		
		ДанныеПечати.Вставить("ПредставлениеПокупателя", СведенияОКонтрагенте.НаименованиеПолное);
		ДанныеПечати.Вставить("АдресПокупателя", СведенияОКонтрагенте.АдрЮР);		
		
		ИННКонтрагента = СведенияОКонтрагенте.ИНН;
		ДанныеПечати.Вставить("ИННПокупателя1", Сред(ИННКонтрагента,1,1));		
		ДанныеПечати.Вставить("ИННПокупателя2", Сред(ИННКонтрагента,2,1));		
		ДанныеПечати.Вставить("ИННПокупателя3", Сред(ИННКонтрагента,3,1));		
		ДанныеПечати.Вставить("ИННПокупателя4", Сред(ИННКонтрагента,4,1));		
		ДанныеПечати.Вставить("ИННПокупателя5", Сред(ИННКонтрагента,5,1));		
		ДанныеПечати.Вставить("ИННПокупателя6", Сред(ИННКонтрагента,6,1));		
		ДанныеПечати.Вставить("ИННПокупателя7", Сред(ИННКонтрагента,7,1));		
		ДанныеПечати.Вставить("ИННПокупателя8", Сред(ИННКонтрагента,8,1));		
		ДанныеПечати.Вставить("ИННПокупателя9", Сред(ИННКонтрагента,9,1));		
		ДанныеПечати.Вставить("ИННПокупателя10", Сред(ИННКонтрагента,10,1));		
		ДанныеПечати.Вставить("ИННПокупателя11", Сред(ИННКонтрагента,11,1));		
		ДанныеПечати.Вставить("ИННПокупателя12", Сред(ИННКонтрагента,12,1));		
		ДанныеПечати.Вставить("ИННПокупателя13", Сред(ИННКонтрагента,13,1));		
		ДанныеПечати.Вставить("ИННПокупателя14", Сред(ИННКонтрагента,14,1));		
		
		Если ЗначениеЗаполнено(СведенияОКонтрагенте.НомерСчета) И ВыводДопИнформацииПоКонтрагенту Тогда
			НомерСчетаКонтрагента = СведенияОКонтрагенте.НомерСчета;
			ДанныеПечати.Вставить("СчетПокупателя1", Сред(НомерСчетаКонтрагента,1,1));		
			ДанныеПечати.Вставить("СчетПокупателя2", Сред(НомерСчетаКонтрагента,2,1));		
			ДанныеПечати.Вставить("СчетПокупателя3", Сред(НомерСчетаКонтрагента,3,1));		
			ДанныеПечати.Вставить("СчетПокупателя4", Сред(НомерСчетаКонтрагента,4,1));		
			ДанныеПечати.Вставить("СчетПокупателя5", Сред(НомерСчетаКонтрагента,5,1));		
			ДанныеПечати.Вставить("СчетПокупателя6", Сред(НомерСчетаКонтрагента,6,1));		
			ДанныеПечати.Вставить("СчетПокупателя7", Сред(НомерСчетаКонтрагента,7,1));		
			ДанныеПечати.Вставить("СчетПокупателя8", Сред(НомерСчетаКонтрагента,8,1));		
			ДанныеПечати.Вставить("СчетПокупателя9", Сред(НомерСчетаКонтрагента,9,1));		
			ДанныеПечати.Вставить("СчетПокупателя10", Сред(НомерСчетаКонтрагента,10,1));		
			ДанныеПечати.Вставить("СчетПокупателя11", Сред(НомерСчетаКонтрагента,11,1));		
			ДанныеПечати.Вставить("СчетПокупателя12", Сред(НомерСчетаКонтрагента,12,1));		
			ДанныеПечати.Вставить("СчетПокупателя13", Сред(НомерСчетаКонтрагента,13,1));		
			ДанныеПечати.Вставить("СчетПокупателя14", Сред(НомерСчетаКонтрагента,14,1));
			ДанныеПечати.Вставить("СчетПокупателя15", Сред(НомерСчетаКонтрагента,15,1));		
			ДанныеПечати.Вставить("СчетПокупателя16", Сред(НомерСчетаКонтрагента,16,1));
			
			БикБанкаКонтрагента = СведенияОКонтрагенте.БИКБанка;
			ДанныеПечати.Вставить("КодБанкаПокупателя1", Сред(БикБанкаКонтрагента,1,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя2", Сред(БикБанкаКонтрагента,2,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя3", Сред(БикБанкаКонтрагента,3,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя4", Сред(БикБанкаКонтрагента,4,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя5", Сред(БикБанкаКонтрагента,5,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя6", Сред(БикБанкаКонтрагента,6,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя7", Сред(БикБанкаКонтрагента,7,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя8", Сред(БикБанкаКонтрагента,8,1));		
			ДанныеПечати.Вставить("КодБанкаПокупателя9", Сред(БикБанкаКонтрагента,9,1));		
			
			ДанныеПечати.Вставить("БанкПокупателя", СведенияОКонтрагенте.Банк);
		Иначе 	
			// Отсутствует
			ДанныеПечати.Вставить("СчетПокупателя1","о");
			ДанныеПечати.Вставить("СчетПокупателя2","т");
			ДанныеПечати.Вставить("СчетПокупателя3","с");
			ДанныеПечати.Вставить("СчетПокупателя4","у");
			ДанныеПечати.Вставить("СчетПокупателя5","т");
			ДанныеПечати.Вставить("СчетПокупателя6","с");
			ДанныеПечати.Вставить("СчетПокупателя7","т");
			ДанныеПечати.Вставить("СчетПокупателя8","в");
			ДанныеПечати.Вставить("СчетПокупателя9","у");
			ДанныеПечати.Вставить("СчетПокупателя10","е");
			ДанныеПечати.Вставить("СчетПокупателя11","т");	

			ДанныеПечати.Вставить("БанкПокупателя", "отсутствует");
		КонецЕсли;	
		
		ПараметрыОтбора = Новый Структура("Ссылка", Шапка.Ссылка);
		
		ТаблицаИсходныеДанные 		= РезультатЗапроса[4].Выгрузить();
		ТаблицаПересчитанныеДанные 	= РезультатЗапроса[5].Выгрузить();
		ТаблицаИсходныеДанные.Индексы.Добавить("Ссылка");
		ТаблицаПересчитанныеДанные.Индексы.Добавить("Ссылка");
		
		ПересчитаннаяТаблица = Неопределено;
		ИсходнаяТаблица = Неопределено;
		
		Если Шапка.ПечатьВРегламентированнойВалюте ИЛИ Шапка.ПечататьКурсИСуммуВРегламентированнойВалюте ИЛИ СчетФактураВВалюте Тогда
			ПересчитаннаяТаблица = ТаблицаПересчитанныеДанные.Скопировать(ПараметрыОтбора);
			ПересчитаннаяТаблица.Индексы.Добавить("Ссылка");
			ПересчитаннаяТаблица.Индексы.Добавить("Номенклатура");
			ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
		КонецЕсли;	
		
		Если НЕ Шапка.ПечатьВРегламентированнойВалюте Тогда
			ИсходнаяТаблица = ТаблицаИсходныеДанные.Скопировать(ПараметрыОтбора);
			ИсходнаяТаблица.Индексы.Добавить("Ссылка");
			ИсходнаяТаблица.Индексы.Добавить("Номенклатура");
		КонецЕсли;
		
		КоличествоСтрок = 0;
		ВсегоСуммаСкидкиИсходная = 0;
		ВсегоСуммаСкидкиПересчитанная = 0;
		
		// Итоги по исходным суммам
		Если ИсходнаяТаблица <> Неопределено Тогда		
			ВсегоСтоимостьИсходная = ИсходнаяТаблица.Итог("Стоимость");
			ВсегоИсходная = ИсходнаяТаблица.Итог("Всего");
			ВсегоНДСИсходная = ИсходнаяТаблица.Итог("СуммаНДС");
			ВсегоНСПИсходная = ИсходнаяТаблица.Итог("СуммаНСП");
			ВсегоСуммаСкидкиИсходная = ИсходнаяТаблица.Итог("СуммаСкидки");
			КоличествоСтрок = ИсходнаяТаблица.Количество();
			
			// Если пересчитанных сумм нет, то итоговая строка будет одна,
			// поэтому используется строка итогов, которая находится в области "Подвал" и 
			// названия параметров задаются соответственно этой области. 
			// Если пересчитанные суммы есть, то итоговых строки будет две 
			// (с исходными суммами и с пересчитанными), поэтому будет задействована область
			// "ИсходныйИтог" и параметры соответственно именуем как они указаны в данной области.
			Если ПересчитаннаяТаблица = Неопределено Тогда
				ДанныеПечати.Вставить("ВсегоСтоимость", ?(СчетФактураВВалюте, ВсегоСтоимостьИсходная, 0));
				ДанныеПечати.Вставить("Всего", 			?(СчетФактураВВалюте, ВсегоИсходная, 0));
				ДанныеПечати.Вставить("ВсегоНДС", 		?(СчетФактураВВалюте, ВсегоНДСИсходная, 0));
				ДанныеПечати.Вставить("ВсегоНСП", 		?(СчетФактураВВалюте, ВсегоНСПИсходная, 0));
				
				Если Шапка.ПечатьВРегламентированнойВалюте Тогда 
					ДанныеПечати.Вставить("Валюта", " (" + ВалютаРегламентированногоУчета + ")");
				Иначе
					ДанныеПечати.Вставить("Валюта", " (" + Шапка.ВалютаДокумента + ")");
				КонецЕсли;
				
				Если ВсегоСуммаСкидкиИсходная <> 0 Тогда
					ДанныеПечати.Вставить("СуммаСкидкиБезНалогов", 	0);
					ДанныеПечати.Вставить("СуммаСкидки", 			0);
					ДанныеПечати.Вставить("НДССкидки",				0);
					ДанныеПечати.Вставить("НСПСкидки", 				0);	
				КонецЕсли;
				
			Иначе
				ДанныеПечати.Вставить("ВсегоСтоимостьИсходная", ?(СчетФактураВВалюте, ВсегоСтоимостьИсходная, 0));
				ДанныеПечати.Вставить("ВсегоИсходная", 			?(СчетФактураВВалюте, ВсегоИсходная, 0));
				ДанныеПечати.Вставить("ВсегоНДСИсходная", 		?(СчетФактураВВалюте, ВсегоНДСИсходная, 0));
				ДанныеПечати.Вставить("ВсегоНСПИсходная", 		?(СчетФактураВВалюте, ВсегоНСПИсходная, 0));
				
				ДанныеПечати.Вставить("ВалютаИсходная", " (" + Шапка.ВалютаДокумента + ")");
				
				Если ВсегоСуммаСкидкиИсходная <> 0 Тогда
					ДанныеПечати.Вставить("СуммаСкидкиБезНалоговИсходная", 	0);
					ДанныеПечати.Вставить("СуммаСкидкиИсходная", 			0);
					ДанныеПечати.Вставить("НДССкидкиИсходная",				0);
					ДанныеПечати.Вставить("НСПСкидкиИсходная", 				0);	
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		// Итоги по пересчитанным суммам
		Если ПересчитаннаяТаблица <> Неопределено Тогда
			ВсегоСтоимостьПересчитанная = ПересчитаннаяТаблица.Итог("Стоимость");
			ВсегоПересчитанная = ПересчитаннаяТаблица.Итог("Всего");
			ВсегоНДСПересчитанная = ПересчитаннаяТаблица.Итог("СуммаНДС");
			ВсегоНСППересчитанная = ПересчитаннаяТаблица.Итог("СуммаНСП");
			ВсегоСуммаСкидкиПересчитанная = ПересчитаннаяТаблица.Итог("СуммаСкидки");
			КоличествоСтрок = КоличествоСтрок + ПересчитаннаяТаблица.Количество();
			
			ДанныеПечати.Вставить("ВсегоСтоимость", ?(СчетФактураВВалюте, ВсегоСтоимостьПересчитанная, 0));
			ДанныеПечати.Вставить("Всего", 			?(СчетФактураВВалюте, ВсегоПересчитанная, 0));
			ДанныеПечати.Вставить("ВсегоНДС", 		?(СчетФактураВВалюте, ВсегоНДСПересчитанная, 0));
			ДанныеПечати.Вставить("ВсегоНСП", 		?(СчетФактураВВалюте, ВсегоНСППересчитанная, 0));
			
			ДанныеПечати.Вставить("Валюта", " (" + ВалютаРегламентированногоУчета + ")");
			
			Если ВсегоСуммаСкидкиПересчитанная <> 0 Тогда
				ДанныеПечати.Вставить("СуммаСкидкиБезНалогов", 	0);
				ДанныеПечати.Вставить("СуммаСкидки", 			0);
				ДанныеПечати.Вставить("НДССкидки",				0);
				ДанныеПечати.Вставить("НСПСкидки", 				0);	
			КонецЕсли;
		КонецЕсли;
		
		Если ВсегоСуммаСкидкиИсходная = 0 И ВсегоСуммаСкидкиПересчитанная = 0 Тогда
			ЕстьСкидка = Ложь;
		Иначе	
			ЕстьСкидка = Истина;
		КонецЕсли;
		
		ДанныеУчетнойПолитики = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьДанныеУчетнойПолитикиОрганизаций(Шапка.Дата, Шапка.Организация);
		
		// Ставки
		Если Шапка.БезналичныйРасчет Тогда 
			ЗначениеСтавкиНСП = "0";
			ЗначениеСтавкиНСПУслуги = "0";
			ЗначениеСтавкиНСПОС = "0";
		Иначе 
			ЗначениеСтавкиНСП = ?(ДанныеУчетнойПолитики.ПлательщикНСП, 
								УчетНДСВызовСервера.ПолучитьСтавкуНСП(Шапка.Дата, Шапка.Организация, Шапка.СтавкаНСП), 
								Справочники.СтавкиНСП.ПустаяСсылка());
								
			ЗначениеСтавкиНСПУслуги = ?(ДанныеУчетнойПолитики.ПлательщикНСП, 
										УчетНДСВызовСервера.ПолучитьСтавкуНСП(Шапка.Дата, Шапка.Организация, Шапка.СтавкаНСПУслуги), 
										Справочники.СтавкиНСП.ПустаяСсылка());
			
			ЗначениеСтавкиНСПОС = ?(ДанныеУчетнойПолитики.ПлательщикНСП, 
										УчетНДСВызовСервера.ПолучитьСтавкуНСП(Шапка.Дата, Шапка.Организация, Справочники.СтавкиНСП.Прочее), 
										Справочники.СтавкиНСП.ПустаяСсылка());
		КонецЕсли;
		
		ЗначениеСтавкиНДС = УчетНДСВызовСервера.ПолучитьСтавкуНДС(Шапка.Дата, Шапка.СтавкаНДС);
		ДанныеПечати.Вставить("СтавкаНДС", ?(ЗначениеЗаполнено(ЗначениеСтавкиНДС), Строка(ЗначениеСтавкиНДС) + "%",""));
		ДанныеПечати.Вставить("СтавкаНСП", ?(ЗначениеЗаполнено(ЗначениеСтавкиНСП), Строка(ЗначениеСтавкиНСП) + "%",""));
		ДанныеПечати.Вставить("СтавкаНСПУслуги", ?(ЗначениеЗаполнено(ЗначениеСтавкиНСПУслуги), Строка(ЗначениеСтавкиНСПУслуги) + "%",""));
		ДанныеПечати.Вставить("СтавкаНСП_ОС", ?(ЗначениеЗаполнено(ЗначениеСтавкиНСПОС), Строка(ЗначениеСтавкиНСПОС) + "%",""));
		
		// Информация подвала
		ТекстОКоличестве = СтрШаблон("%1 %2", КоличествоСтрокСчетаФактуры, ?(КоличествоСтрокСчетаФактуры = 20,"(двадцати)","(семи)"));
		ДанныеПечати.Вставить("РазрешенноеКоличествоСтрок", ТекстОКоличестве);
		ДанныеПечати.Вставить("НомерОтчета", ?(КоличествоСтрокСчетаФактуры = 20,"001","002"));
		
		// Области
		МассивОбластейМакета = Новый Массив;
		
		Если СчетФактураВВалюте Тогда
			МассивОбластейМакета.Добавить("ЗаголовокСФВВалюте");
		Иначе
			МассивОбластейМакета.Добавить("Заголовок");
		КонецЕсли;
		
		МассивОбластейМакета.Добавить("Шапка");
		
		Если СчетФактураВВалюте Тогда
			МассивОбластейМакета.Добавить("ШапкаТаблицыВВалюте");
			МассивОбластейМакета.Добавить("СтрокаСФВВалюте");
		Иначе
			МассивОбластейМакета.Добавить("ШапкаТаблицы");
			МассивОбластейМакета.Добавить("Строка");
		КонецЕсли;
		
		Если ДанныеПечати.Свойство("ВалютаИсходная") Тогда
			
			Если НЕ СчетФактураВВалюте И ЕстьСкидка Тогда
				МассивОбластейМакета.Добавить("СтрокаСкидкиИсходная");
				МассивОбластейМакета.Добавить("СтрокаСкидкиПересчитанная");
			КонецЕсли;
			
			МассивОбластейМакета.Добавить("ИсходныйИтог");
			
		Иначе
			Если НЕ СчетФактураВВалюте И ЕстьСкидка Тогда
				МассивОбластейМакета.Добавить("СтрокаСкидкиПересчитанная");
			КонецЕсли;	
		КонецЕсли;
		
		МассивОбластейМакета.Добавить("ПодвалСФаксимиле");
		
		ДанныеПечатиСтроки = Новый Структура();
		ДанныеПечатиСтроки.Вставить("КодТовара1", "0");
		ДанныеПечатиСтроки.Вставить("КодТовара2", "0");
		ДанныеПечатиСтроки.Вставить("КодТовара3", "0");
		ДанныеПечатиСтроки.Вставить("КодТовара4", "0");
		
		ДанныеПечатиПустаяСтрока = Новый Структура();
		ДанныеПечатиПустаяСтрока.Вставить("КодТовара1", 				"");
		ДанныеПечатиПустаяСтрока.Вставить("КодТовара2", 				"");
		ДанныеПечатиПустаяСтрока.Вставить("КодТовара3", 				"");
		ДанныеПечатиПустаяСтрока.Вставить("КодТовара4", 				"");
		ДанныеПечатиПустаяСтрока.Вставить("Количество", 				"Х");
		ДанныеПечатиПустаяСтрока.Вставить("СтавкаНДС", 					"Х");
		ДанныеПечатиПустаяСтрока.Вставить("СтавкаНСП", 					"Х");
		ДанныеПечатиПустаяСтрока.Вставить("Стоимость", 					"Х");	
		ДанныеПечатиПустаяСтрока.Вставить("СуммаНДС", 					"Х");
		ДанныеПечатиПустаяСтрока.Вставить("СуммаНСП", 					"Х");
		ДанныеПечатиПустаяСтрока.Вставить("НоменклатураПредставление", 	"Х");
		ДанныеПечатиПустаяСтрока.Вставить("ЕдиницаИзмерения",			"Х");
		ДанныеПечатиПустаяСтрока.Вставить("Цена", 						"Х");
		ДанныеПечатиПустаяСтрока.Вставить("Всего", 						"Х");
		
		Если СчетФактураВВалюте Тогда
			ДанныеПечатиПустаяСтрока.Вставить("НоменклатураПредставление", 	"Х");
			ДанныеПечатиПустаяСтрока.Вставить("ЦенаВРеглВалюте", 			"Х");
			ДанныеПечатиПустаяСтрока.Вставить("СтоимостьВРеглВалюте", 		"Х");
			ДанныеПечатиПустаяСтрока.Вставить("СуммаНДСВРеглВалюте", 		"Х");
			ДанныеПечатиПустаяСтрока.Вставить("СуммаНСПВРеглВалюте", 		"Х");
			ДанныеПечатиПустаяСтрока.Вставить("ВсегоВРеглВалюте", 			"Х");
		КонецЕсли;
		
		ДанныеДокумента = Новый Структура();
		ДанныеДокумента.Вставить("СуммаВключаетНалоги", Шапка.СуммаВключаетНалоги);
		ДанныеДокумента.Вставить("Дата", 				Шапка.Дата);
		ДанныеДокумента.Вставить("Организация", 		Шапка.Организация);
		ДанныеДокумента.Вставить("СтавкаНДС", 			Шапка.СтавкаНДС);
		ДанныеДокумента.Вставить("СтавкаНСП", 			Неопределено);
		ДанныеДокумента.Вставить("БезналичныйРасчет", 	Шапка.БезналичныйРасчет);
		
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			
			Если ИмяОбласти <> "Строка" И ИмяОбласти <> "СтрокаСФВВалюте" Тогда
				ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			Иначе
				СтруктураНоменклатура = Новый Структура();
				СтруктураНоменклатура.Вставить("НоменклатураПредставление", "");	
				
				Если (ИсходнаяТаблица <> Неопределено И ПересчитаннаяТаблица <> Неопределено)
					ИЛИ ИсходнаяТаблица <> Неопределено Тогда
					
					ОбластьМакетаДопСтрока = Неопределено;
					
					// Заготовка необходимых структур
					Если ПересчитаннаяТаблица <> Неопределено Тогда
						ОбластьМакетаДопСтрока = Макет.ПолучитьОбласть("ПересчитаннаяСтрока");
						СтруктураОтбора = Новый Структура();
						СтруктураОтбора.Вставить("Ссылка", );
						СтруктураОтбора.Вставить("Номенклатура", );
					КонецЕсли;
						
					Для Каждого СтрокаТаблицы Из ИсходнаяТаблица Цикл
						КодТНВЭД = ?(ЗначениеЗаполнено(СтрокаТаблицы.КодТНВЭД), СтрокаТаблицы.КодТНВЭД, "0000");
						ДанныеПечатиСтроки.КодТовара1 = Сред(КодТНВЭД,1,1);
						ДанныеПечатиСтроки.КодТовара2 = Сред(КодТНВЭД,2,1);
						ДанныеПечатиСтроки.КодТовара3 = Сред(КодТНВЭД,3,1);
						ДанныеПечатиСтроки.КодТовара4 = Сред(КодТНВЭД,4,1);
						
						Если ОбластьМакетаДопСтрока = Неопределено Тогда
							ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
							ОбластьМакета.Параметры.Заполнить(ДанныеПечатиСтроки);
							
							Если СтрокаТаблицы.НаименованиеТабличнойЧасти = "Товары" Тогда
								ДанныеДокумента.СтавкаНСП = Шапка.СтавкаНСП;
								
							ИначеЕсли СтрокаТаблицы.НаименованиеТабличнойЧасти = "Услуги" Тогда
								ДанныеДокумента.СтавкаНСП = Шапка.СтавкаНСПУслуги;	
								
							Иначе
								ДанныеДокумента.СтавкаНСП = Справочники.СтавкиНСП.Прочее;
							КонецЕсли;	
							
							РассчитатьСуммыСчетФактуры(СтрокаТаблицы, ДанныеДокумента, ДанныеПечати, ДанныеУчетнойПолитики,, НЕ ЕстьСкидка);
							ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
							
							Если Шапка.ВыводитьКомментарийВНаименование Тогда
								СтруктураНоменклатура.НоменклатураПредставление = СтрШаблон(НСтр("ru = '%1, %2'"),
									СтрокаТаблицы.Номенклатура,
									Шапка.Комментарий);
									
								ОбластьМакета.Параметры.Заполнить(СтруктураНоменклатура);
							КонецЕсли;
							
							// Заполнение ставки НСП
							СтруктураСтавкиНСП = Новый Структура();
							
							Если СтрокаТаблицы.НаименованиеТабличнойЧасти = "Товары" Тогда
								СтруктураСтавкиНСП.Вставить("СтавкаНСП", ДанныеПечати.СтавкаНСП);
								
							ИначеЕсли СтрокаТаблицы.НаименованиеТабличнойЧасти = "Услуги" Тогда	
								СтруктураСтавкиНСП.Вставить("СтавкаНСП", ДанныеПечати.СтавкаНСПУслуги);
								
							Иначе
								СтруктураСтавкиНСП.Вставить("СтавкаНСП", ДанныеПечати.СтавкаНСП_ОС);
							КонецЕсли;	
							
							ОбластьМакета.Параметры.Заполнить(СтруктураСтавкиНСП);
							ТабличныйДокумент.Вывести(ОбластьМакета);
								
						// Вывод основной строки с исходной суммой (к номенклатуре добавляется курс),
						// а затем вывод дополнительной строки с пересчитанными суммами.
						Иначе
							Если Шапка.ВыводитьКомментарийВНаименование Тогда
								Если СчетФактураВВалюте Тогда
									СтруктураНоменклатура.НоменклатураПредставление = СтрШаблон(НСтр("ru = '%1, %2'"),
										СтрокаТаблицы.НоменклатураПредставление,
										Шапка.Комментарий);
								Иначе	
									СтруктураНоменклатура.НоменклатураПредставление = СтрШаблон(НСтр("ru = '%1, %2, курс %3'"),
										СтрокаТаблицы.НоменклатураПредставление,
										Шапка.Комментарий,
										Шапка.Курс);
								КонецЕсли;
							Иначе
								Если СчетФактураВВалюте Тогда
									СтруктураНоменклатура.НоменклатураПредставление = СтрокаТаблицы.НоменклатураПредставление;
								Иначе	
									СтруктураНоменклатура.НоменклатураПредставление = СтрШаблон(НСтр("ru = '%1, курс %2'"),
										СтрокаТаблицы.НоменклатураПредставление,
										Шапка.Курс);
								КонецЕсли;
							КонецЕсли;	
														
							ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
							ОбластьМакета.Параметры.Заполнить(ДанныеПечатиСтроки);
							
							Если НЕ СчетФактураВВалюте Тогда		
								Если СтрокаТаблицы.НаименованиеТабличнойЧасти = "Товары" Тогда
									ДанныеДокумента.СтавкаНСП = Шапка.СтавкаНСП;
									
								ИначеЕсли СтрокаТаблицы.НаименованиеТабличнойЧасти = "Услуги" Тогда
									ДанныеДокумента.СтавкаНСП = Шапка.СтавкаНСПУслуги;	
									
								Иначе
									ДанныеДокумента.СтавкаНСП = Справочники.СтавкиНСП.Прочее;
								КонецЕсли;
							
								РассчитатьСуммыСчетФактуры(СтрокаТаблицы, ДанныеДокумента, ДанныеПечати, ДанныеУчетнойПолитики, Истина, НЕ ЕстьСкидка);
							КонецЕсли;	
								
							ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
							ОбластьМакета.Параметры.Заполнить(СтруктураНоменклатура);
							
							Если СчетФактураВВалюте Тогда
								СтруктураЦены = Новый Структура();
								СтруктураЦены.Вставить("Цена", Строка(Формат(СтрокаТаблицы.Цена, "ЧДЦ=2; ЧВН=")) + " (" + Шапка.ВалютаДокумента + ")");
								ОбластьМакета.Параметры.Заполнить(СтруктураЦены);
							КонецЕсли;
							
							// Заполнение ставки НСП
							СтруктураСтавкиНСП = Новый Структура();
							
							Если СтрокаТаблицы.НаименованиеТабличнойЧасти = "Товары" Тогда
								СтруктураСтавкиНСП.Вставить("СтавкаНСП", ДанныеПечати.СтавкаНСП);
								
							ИначеЕсли СтрокаТаблицы.НаименованиеТабличнойЧасти = "Услуги" Тогда	
								СтруктураСтавкиНСП.Вставить("СтавкаНСП", ДанныеПечати.СтавкаНСПУслуги);
								
							Иначе
								СтруктураСтавкиНСП.Вставить("СтавкаНСП", ДанныеПечати.СтавкаНСП_ОС);
							КонецЕсли;
							
							ОбластьМакета.Параметры.Заполнить(СтруктураСтавкиНСП);
							
							Если НЕ СчетФактураВВалюте Тогда
								ТабличныйДокумент.Вывести(ОбластьМакета);
							КонецЕсли;
							
							ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаТаблицы);
							
							Строки = ПересчитаннаяТаблица.НайтиСтроки(СтруктураОтбора);
							Если Строки.Количество() > 0 Тогда
								Данные = Строки[0];
								
								Если СчетФактураВВалюте Тогда
									СтруктураСуммВРеглВалюте = Новый Структура();
									СтруктураСуммВРеглВалюте.Вставить("ЦенаВРеглВалюте", 		Строка(Формат(Данные.Цена, "ЧДЦ=2; ЧВН=")) + " (" + ВалютаРегламентированногоУчета + ")");
									СтруктураСуммВРеглВалюте.Вставить("СтоимостьВРеглВалюте", 	Данные.Стоимость);
									СтруктураСуммВРеглВалюте.Вставить("СуммаНДСВРеглВалюте", 	Данные.СуммаНДС);
									СтруктураСуммВРеглВалюте.Вставить("СуммаНСПВРеглВалюте", 	Данные.СуммаНСП);
									СтруктураСуммВРеглВалюте.Вставить("ВсегоВРеглВалюте", 		Данные.Всего);
									ОбластьМакета.Параметры.Заполнить(СтруктураСуммВРеглВалюте);
								Иначе
									КодТНВЭД = ?(ЗначениеЗаполнено(Данные.КодТНВЭД), Данные.КодТНВЭД, "0000");
									ДанныеПечатиСтроки.КодТовара1 = Сред(КодТНВЭД,1,1);
									ДанныеПечатиСтроки.КодТовара2 = Сред(КодТНВЭД,2,1);
									ДанныеПечатиСтроки.КодТовара3 = Сред(КодТНВЭД,3,1);
									ДанныеПечатиСтроки.КодТовара4 = Сред(КодТНВЭД,4,1);
									
									Если СтрокаТаблицы.НаименованиеТабличнойЧасти = "Товары" Тогда
										ДанныеДокумента.СтавкаНСП = Шапка.СтавкаНСП;
										
									ИначеЕсли СтрокаТаблицы.НаименованиеТабличнойЧасти = "Услуги" Тогда
										ДанныеДокумента.СтавкаНСП = Шапка.СтавкаНСПУслуги;	
										
									Иначе
										ДанныеДокумента.СтавкаНСП = Справочники.СтавкиНСП.Прочее;
									КонецЕсли;
									
									РассчитатьСуммыСчетФактуры(Данные, ДанныеДокумента, ДанныеПечати, ДанныеУчетнойПолитики,, НЕ ЕстьСкидка);
									
									ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
									ОбластьМакета.Параметры.Заполнить(Данные);
									ОбластьМакета.Параметры.Заполнить(ДанныеПечатиСтроки);
									
									Если Шапка.ВыводитьКомментарийВНаименование Тогда
										СтруктураНоменклатура.НоменклатураПредставление = СтрШаблон(НСтр("ru = '%1, %2'"),
											Данные.Номенклатура,
											Шапка.Комментарий);
											
										ОбластьМакета.Параметры.Заполнить(СтруктураНоменклатура);
									КонецЕсли;
								
									// Заполнение ставки НСП
									СтруктураСтавкиНСП = Новый Структура();
							
									Если СтрокаТаблицы.НаименованиеТабличнойЧасти = "Товары" Тогда
										СтруктураСтавкиНСП.Вставить("СтавкаНСП", ДанныеПечати.СтавкаНСП);
										
									ИначеЕсли СтрокаТаблицы.НаименованиеТабличнойЧасти = "Услуги" Тогда	
										СтруктураСтавкиНСП.Вставить("СтавкаНСП", ДанныеПечати.СтавкаНСПУслуги);
										
									Иначе
										СтруктураСтавкиНСП.Вставить("СтавкаНСП", ДанныеПечати.СтавкаНСП_ОС);
									КонецЕсли;
							
									ОбластьМакета.Параметры.Заполнить(СтруктураСтавкиНСП);
								КонецЕсли;	
								
								ТабличныйДокумент.Вывести(ОбластьМакета);
							КонецЕсли;
						КонецЕсли;	
					КонецЦикла;
					
				Иначе
					Для Каждого СтрокаТаблицы Из ПересчитаннаяТаблица Цикл 
						КодТНВЭД = ?(ЗначениеЗаполнено(СтрокаТаблицы.КодТНВЭД), СтрокаТаблицы.КодТНВЭД, "0000");
						ДанныеПечатиСтроки.КодТовара1 = Сред(КодТНВЭД,1,1);
						ДанныеПечатиСтроки.КодТовара2 = Сред(КодТНВЭД,2,1);
						ДанныеПечатиСтроки.КодТовара3 = Сред(КодТНВЭД,3,1);
						ДанныеПечатиСтроки.КодТовара4 = Сред(КодТНВЭД,4,1);
						
						ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
						ОбластьМакета.Параметры.Заполнить(ДанныеПечатиСтроки);
						
						
						Если СтрокаТаблицы.НаименованиеТабличнойЧасти = "Товары" Тогда
							ДанныеДокумента.СтавкаНСП = Шапка.СтавкаНСП;
							
						ИначеЕсли СтрокаТаблицы.НаименованиеТабличнойЧасти = "Услуги" Тогда
							ДанныеДокумента.СтавкаНСП = Шапка.СтавкаНСПУслуги;	
							
						Иначе
							ДанныеДокумента.СтавкаНСП = Справочники.СтавкиНСП.Прочее;
						КонецЕсли;
						
						РассчитатьСуммыСчетФактуры(СтрокаТаблицы, ДанныеДокумента, ДанныеПечати, ДанныеУчетнойПолитики,, НЕ ЕстьСкидка);
						ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
						
						Если Шапка.ВыводитьКомментарийВНаименование Тогда
							СтруктураНоменклатура.НоменклатураПредставление = СтрШаблон(НСтр("ru = '%1, %2'"),
								СтрокаТаблицы.Номенклатура,
								Шапка.Комментарий);
								
							ОбластьМакета.Параметры.Заполнить(СтруктураНоменклатура);
						КонецЕсли;
						
						// Заполнение ставки НСП
						СтруктураСтавкиНСП = Новый Структура();
							
						Если СтрокаТаблицы.НаименованиеТабличнойЧасти = "Товары" Тогда
							СтруктураСтавкиНСП.Вставить("СтавкаНСП", ДанныеПечати.СтавкаНСП);
							
						ИначеЕсли СтрокаТаблицы.НаименованиеТабличнойЧасти = "Услуги" Тогда	
							СтруктураСтавкиНСП.Вставить("СтавкаНСП", ДанныеПечати.СтавкаНСПУслуги);
							
						Иначе
							СтруктураСтавкиНСП.Вставить("СтавкаНСП", ДанныеПечати.СтавкаНСП_ОС);
						КонецЕсли;
									
						ОбластьМакета.Параметры.Заполнить(СтруктураСтавкиНСП);
						ТабличныйДокумент.Вывести(ОбластьМакета);
						
					КонецЦикла;
				КонецЕсли;
						
				// Добавление пустых строк
				Если КоличествоСтрокСчетаФактуры > КоличествоСтрок Тогда 
					Для Счетчик = 1 По КоличествоСтрокСчетаФактуры - КоличествоСтрок Цикл
						ОбластьМакета.Параметры.Заполнить(ДанныеПечатиПустаяСтрока);
						ТабличныйДокумент.Вывести(ОбластьМакета);		
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
		
КонецФункции

// Функция формирует табличный документ с печатной формой Счет-фактура
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьСчетФактураБезНДС(МассивОбъектов, ОбъектыПечати)
	Перем Ошибки, ПервыйДокумент, НомерСтрокиНачало;

	ТабличныйДокумент = Новый ТабличныйДокумент;	
	ТабличныйДокумент.КлючПараметровПечати = "ВозвратТоваровОтПокупателя_СчетФактураБезНДС";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьСчетФактура.ПФ_MXL_СчетФактураБезНДС");
	                        
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВозвратТоваровОтПокупателя.Ссылка КАК Ссылка,
		|	ВозвратТоваровОтПокупателя.Номер КАК Номер,
		|	ВозвратТоваровОтПокупателя.Дата КАК Дата,
		|	ВозвратТоваровОтПокупателя.Организация КАК Организация,
		|	ВозвратТоваровОтПокупателя.Организация.НаименованиеПолное КАК ОрганизацияПредставление,
		|	ВозвратТоваровОтПокупателя.Организация.ФайлЛоготип КАК ФайлЛоготип,
		|	ВЫБОР
		|		КОГДА &ПечататьСчетаФактурыСГоловнымКонтрагентом
		|				И НЕ ВозвратТоваровОтПокупателя.Контрагент.ГоловнойКонтрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ВозвратТоваровОтПокупателя.Контрагент.ГоловнойКонтрагент.НаименованиеПолное
		|		ИНАЧЕ ВозвратТоваровОтПокупателя.Контрагент.НаименованиеПолное
		|	КОНЕЦ КАК КонтрагентПредставление,
		|	ВозвратТоваровОтПокупателя.Организация.ИНН КАК ИНН,
		|	ВозвратТоваровОтПокупателя.Организация.ОсновнойБанковскийСчет.Наименование КАК РасчетныйСчетПредставление,
		|	ВозвратТоваровОтПокупателя.Организация.ОсновнойБанковскийСчет.Банк.Наименование КАК БанкПредставление,
		|	ВозвратТоваровОтПокупателя.Организация.ОсновнойБанковскийСчет.Банк.Код КАК БИКБанка,
		|	ВозвратТоваровОтПокупателя.СтавкаНДС КАК СтавкаНДС,
		|	ВозвратТоваровОтПокупателя.СтавкаНСП КАК СтавкаНСП,
		|	ВозвратТоваровОтПокупателя.СтавкаНСПУслуги КАК СтавкаНСПУслуги,
		|	ВозвратТоваровОтПокупателя.ЭкспортнаяПоставка КАК ЭкспортнаяПоставка,
		|	ВозвратТоваровОтПокупателя.ВалютаДокумента КАК ВалютаДокумента,
		|	ВозвратТоваровОтПокупателя.Товары.(
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
		|		-Количество КАК Количество,
		|		Цена КАК Цена,
		|		-СуммаДохода КАК Сумма,
		|		-СуммаНДС КАК СуммаНДС,
		|		-СуммаНСП КАК СуммаНСП,
		|		-Всего КАК Всего
		|	) КАК Товары,
		|	ВозвратТоваровОтПокупателя.Услуги.(
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
		|		-Количество КАК Количество,
		|		Цена КАК Цена,
		|		-СуммаНДС КАК СуммаНДС,
		|		-СуммаНСП КАК СуммаНСП,
		|		-СуммаДохода КАК Сумма,
		|		-Всего КАК Всего
		|	) КАК Услуги,
		|	ВозвратТоваровОтПокупателя.ОС.(
		|		НомерСтроки КАК НомерСтроки,
		|		ОсновноеСредство КАК Номенклатура,
		|		ОсновноеСредство.НаименованиеПолное КАК НоменклатураПредставление,
		|		0 КАК Количество,
		|		СуммаДохода КАК Цена,
		|		-СуммаНДС КАК СуммаНДС,
		|		-СуммаНСП КАК СуммаНСП,
		|		-СуммаДохода КАК Сумма,
		|		-Всего КАК Всего
		|	) КАК ОС		
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
		|ГДЕ
		|	ВозвратТоваровОтПокупателя.Ссылка В(&СписокДокументов)";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ПечататьСчетаФактурыСГоловнымКонтрагентом", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьЗначениеКонстанты("ПечататьСчетаФактурыСГоловнымКонтрагентом"));
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ДанныеПечати = Новый Структура;
		
		ТекстЗаголовка = СформироватьЗаголовокДокумента(Шапка, НСтр("ru = 'Счет-фактура'"));
		ДанныеПечати.Вставить("ТекстЗаголовка", ТекстЗаголовка);
		ДанныеПечати.Вставить("Дата", Шапка.Дата);
		ДанныеПечати.Вставить("ОрганизацияПредставление", Шапка.ОрганизацияПредставление);
		ДанныеПечати.Вставить("ФайлЛоготип", Шапка.ФайлЛоготип);
		ДанныеПечати.Вставить("ПолучательПредставление", Шапка.КонтрагентПредставление);
		ДанныеПечати.Вставить("Адрес", УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
			Шапка.Организация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации, Шапка.Дата));
			
		ДанныеПечати.Вставить("ИНН", Шапка.ИНН);
		ДанныеПечати.Вставить("БанкПредставление", Шапка.БанкПредставление);
		ДанныеПечати.Вставить("РасчетныйСчетПредставление", Шапка.РасчетныйСчетПредставление);
		ДанныеПечати.Вставить("БИКБанка", Шапка.БИКБанка);
		
		ДанныеПечати.Вставить("ТипПоставки", ?(Шапка.ЭкспортнаяПоставка, НСтр("ru = 'Экспорт'"), НСтр("ru = 'Внутренняя'")));
		
		ДанныеУчетнойПолитики = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьДанныеУчетнойПолитикиОрганизаций(Шапка.Дата, Шапка.Организация);
		
		ДанныеПечати.Вставить("ЗначениеСтавкиНДС", УчетНДСВызовСервера.ПолучитьСтавкуНДС(Шапка.Дата, Шапка.СтавкаНДС));
		ДанныеПечати.Вставить("ЗначениеСтавкиНСП", ?(ДанныеУчетнойПолитики.ПлательщикНСП,
								УчетНДСВызовСервера.ПолучитьСтавкуНСП(Шапка.Дата, Шапка.Организация, Шапка.СтавкаНСП), 0));
		ДанныеПечати.Вставить("ЗначениеСтавкиНСПУслуги", ?(ДанныеУчетнойПолитики.ПлательщикНСП,
								УчетНДСВызовСервера.ПолучитьСтавкуНСП(Шапка.Дата, Шапка.Организация, Шапка.СтавкаНСПУслуги), 0));
		
		ТаблицаТовары = Шапка.Товары.Выгрузить();
		ТаблицаУслуги = Шапка.Услуги.Выгрузить();
		ТаблицаОС = Шапка.ОС.Выгрузить();
		
		Всего = ТаблицаТовары.Итог("Всего") + ТаблицаУслуги.Итог("Всего") + ТаблицаОС.Итог("Всего");
		Сумма = ТаблицаТовары.Итог("Сумма") + ТаблицаУслуги.Итог("Сумма") + ТаблицаОС.Итог("Сумма");
		ВсегоНДС = ТаблицаТовары.Итог("СуммаНДС") + ТаблицаУслуги.Итог("СуммаНДС") + ТаблицаОС.Итог("СуммаНДС");
		ВсегоНСП = ТаблицаТовары.Итог("СуммаНСП") + ТаблицаУслуги.Итог("СуммаНСП") + ТаблицаОС.Итог("СуммаНСП");
		КоличествоНаименований = ТаблицаТовары.Количество() + ТаблицаУслуги.Количество() + ТаблицаОС.Количество();		
		
		// Подвал.
		ДанныеПечати.Вставить("Всего", Всего);
		ДанныеПечати.Вставить("Сумма", Сумма);
		ДанныеПечати.Вставить("ВсегоНДС", ВсегоНДС);
		ДанныеПечати.Вставить("ВсегоНСП", ВсегоНСП);
		ДанныеПечати.Вставить("ИтоговаяСтрока", 
			СтрШаблон(НСтр("ru = 'Всего наименований %1, на сумму %2'"), 
			Формат(КоличествоНаименований, "ЧН=0; ЧГ=0"), Формат(ДанныеПечати.Всего, "ЧЦ=15; ЧДЦ=2")));
		ДанныеПечати.Вставить("СуммаПрописью", БухгалтерскийУчетСервер.СформироватьСуммуПрописью(ДанныеПечати.Всего, Шапка.ВалютаДокумента));
		
		// Подписи.
		РасшифровкаПодписиРуководителя = "";
		РасшифровкаПодписиГлавногоБухгалтера = "";
		ОтветственныеЛица = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизацийРуководители(Шапка.Организация, Шапка.Дата);
		БухгалтерскийУчетСервер.ФамилияИнициалыПоНаименованию(РасшифровкаПодписиРуководителя, ОтветственныеЛица.Руководитель);
		БухгалтерскийУчетСервер.ФамилияИнициалыПоНаименованию(РасшифровкаПодписиГлавногоБухгалтера, ОтветственныеЛица.ГлавныйБухгалтер);
		
		ДанныеПечати.Вставить("РасшифровкаПодписиРуководителя", РасшифровкаПодписиРуководителя);
		ДанныеПечати.Вставить("РасшифровкаПодписиГлавногоБухгалтера", РасшифровкаПодписиГлавногоБухгалтера);
		
		// Области.
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Заголовок");
		МассивОбластейМакета.Добавить("ШапкаТаблицы");
		МассивОбластейМакета.Добавить("СтрокаТаблицы");
		МассивОбластейМакета.Добавить("Подвал");
		МассивОбластейМакета.Добавить("СуммаПрописью");
		МассивОбластейМакета.Добавить("ПодписиСФаксимиле");
		
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			
			Если ИмяОбласти = "ЗаголовокСЛоготипом" Тогда
				Логотип = Новый Соответствие; // Ключ - имя картинки в области, Значение - имя реквизита
				Логотип.Вставить("Логотип", "ФайлЛоготип");
				ЗаполнитьЛоготипФаксимилеВОбластиМакета(ОбластьМакета, ДанныеПечати, Логотип, Ошибки);
			КонецЕсли;	

			Если ИмяОбласти <> "СтрокаТаблицы" Тогда
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);                              
			ИначеЕсли ИмяОбласти = "СтрокаТаблицы" Тогда 
				Для Каждого СтрокаТаблицы Из ТаблицаТовары Цикл
					ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
				
				СтруктураСтавкиНСПУслуги = Новый Структура("ЗначениеСтавкиНСП", ДанныеПечати.ЗначениеСтавкиНСПУслуги);
				Для Каждого СтрокаТаблицы Из ТаблицаУслуги Цикл
					ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ОбластьМакета.Параметры.Заполнить(СтруктураСтавкиНСПУслуги);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
				
				Для Каждого СтрокаТаблицы Из ТаблицаОС Цикл
					ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
				
			КонецЕсли;
		КонецЦикла;
 			
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
		
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

	// Проверяем, нужно ли для макета формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"Накладная", НСтр("ru = 'Накладная'"), ПечатьНакладной(МассивОбъектов, ОбъектыПечати),,
			"Документ.ВозвратТоваровПоставщику.ПФ_MXL_Накладная");
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактура001") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"СчетФактура001", НСтр("ru = 'Счет-фактура НДС 001'"), ПечатьСчетФактура(МассивОбъектов, ОбъектыПечати, 20));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактура002") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"СчетФактура002", НСтр("ru = 'Счет-фактура НДС 002'"), ПечатьСчетФактура(МассивОбъектов, ОбъектыПечати, 7));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактураВВалюте") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"СчетФактураВВалюте", НСтр("ru = 'Счет-фактура в валюте'"), ПечатьСчетФактура(МассивОбъектов, ОбъектыПечати, 1, Истина));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактураБезНДС") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"СчетФактураБезНДС", НСтр("ru = 'Счет-фактура без бланка НДС'"), ПечатьСчетФактураБезНДС(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
		
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru = 'Накладная'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактура001";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура НДС 001'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 2;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактура002";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура НДС 002'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 3;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактураВВалюте";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура в валюте'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 4;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактураБезНДС";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура без бланка НДС'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 5;
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "РеестрВозвратТоваровОтПокупателя";
	КомандаПечати.Представление  = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Реестр документов ""Возврат товаров от покупателя""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает заголовок документа для печатной формы.
//
// Параметры:
//  Шапка - любая структура с полями:
//           Номер         - Строка или Число - номер документа;
//           Дата          - Дата - дата документа;
//           Представление - Строка - (необязательный) платформенное представление ссылки на документ.
//                                    Если параметр НазваниеДокумента не задан, то название документа будет вычисляться
//                                    из этого параметра.
//  НазваниеДокумента - Строка - название документа (например, "Счет на оплату").
//
// Возвращаемое значение:
//  Строка - заголовок документа.
//
Функция СформироватьЗаголовокДокумента(Шапка, Знач НазваниеДокумента = "")
	
	ДанныеДокумента = Новый Структура("Номер,Дата,Представление");
	ЗаполнитьЗначенияСвойств(ДанныеДокумента, Шапка);
	
	// Если название документа не передано, получим название по представлению документа.
	Если ПустаяСтрока(НазваниеДокумента) И ЗначениеЗаполнено(ДанныеДокумента.Представление) Тогда
		ПоложениеНомера = СтрНайти(ДанныеДокумента.Представление, ДанныеДокумента.Номер);
		Если ПоложениеНомера > 0 Тогда
			НазваниеДокумента = СокрЛП(Лев(ДанныеДокумента.Представление, ПоложениеНомера - 1));
		КонецЕсли;
	КонецЕсли;

	НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокумента.Номер);
	Возврат СтрШаблон(НСтр("ru = '%1 № %2 от %3'"),
		НазваниеДокумента, НомерНаПечать, Формат(ДанныеДокумента.Дата, "ДЛФ=DD"));
	
КонецФункции

Процедура ЗаполнитьЛоготипФаксимилеВОбластиМакета(ОбластьМакета, ДанныеОбъекта, ПодписиИФаксимиле, Ошибки)
	
	Для каждого ЭлементСоответствия Из ПодписиИФаксимиле Цикл
		
		ПлашкаПодписи = ПолучитьПлашкуПодписиБезопасно(ОбластьМакета, ЭлементСоответствия.Ключ, , Ошибки);
		Если ПлашкаПодписи = Неопределено Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеОбъекта[ЭлементСоответствия.Значение]) Тогда
			                 
			ДвоичныеДанные = РаботаСФайлами.ДвоичныеДанныеФайла(ДанныеОбъекта[ЭлементСоответствия.Значение]);
			Если ЗначениеЗаполнено(ДвоичныеДанные) Тогда
				
				ПлашкаПодписи.Картинка = Новый Картинка(ДвоичныеДанные);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьПлашкуПодписиБезопасно(ОбластьМакета, ИмяПлашки, ПредставлениеПодписи, Ошибки)
	
	ПлашкаПодписи = ОбластьМакета.Области.Найти(ИмяПлашки);
	Если ПлашкаПодписи = Неопределено Тогда
		
		ТекстСообщения = НСтр("ru ='ВНИМАНИЕ! Нет места для картинки %1. Возможно используется пользовательский макет.'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, ?(ПустаяСтрока(ПредставлениеПодписи), ИмяПлашки, ПредставлениеПодписи));
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Неопределено, ТекстСообщения, Неопределено);
		
	КонецЕсли;
	
	ПлашкаПодписи.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
	
	Возврат ПлашкаПодписи;
	
КонецФункции

Процедура РассчитатьСуммыСчетФактуры(СтрокаТаблицы, ДанныеДокумента, ДанныеПечати, ДанныеУчетнойПолитики, ИсходныеСуммы = Ложь, ТолькоРасчетИтогов = Ложь)

	СтавкаНДС = ?(ДанныеУчетнойПолитики.ПлательщикНДС, 
					ДанныеДокумента.СтавкаНДС, 
					Справочники.СтавкиНДС.ПустаяСсылка());
					
	СтавкаНСП = ?(ДанныеУчетнойПолитики.ПлательщикНСП, 
					ДанныеДокумента.СтавкаНСП, 
					Справочники.СтавкиНСП.ПустаяСсылка());
	
	Если ТолькоРасчетИтогов Тогда
		
		Если ИсходныеСуммы Тогда
			ДанныеПечати.ВсегоИсходная 			= ДанныеПечати.ВсегоИсходная + СтрокаТаблицы.Всего;
			ДанныеПечати.ВсегоНДСИсходная 		= ДанныеПечати.ВсегоНДСИсходная + СтрокаТаблицы.СуммаНДС;
			ДанныеПечати.ВсегоНСПИсходная 		= ДанныеПечати.ВсегоНСПИсходная + СтрокаТаблицы.СуммаНСП;
			ДанныеПечати.ВсегоСтоимостьИсходная = ДанныеПечати.ВсегоСтоимостьИсходная + СтрокаТаблицы.Стоимость;
			
		Иначе	
		    ДанныеПечати.Всего 			= ДанныеПечати.Всего + СтрокаТаблицы.Всего;
			ДанныеПечати.ВсегоНДС 		= ДанныеПечати.ВсегоНДС + СтрокаТаблицы.СуммаНДС;
			ДанныеПечати.ВсегоНСП 		= ДанныеПечати.ВсегоНСП + СтрокаТаблицы.СуммаНСП;
			ДанныеПечати.ВсегоСтоимость = ДанныеПечати.ВсегоСтоимость + СтрокаТаблицы.Стоимость;
		КонецЕсли;	
			
	Иначе	
		СтруктураНачальныхСумм = Новый Структура();
		СтруктураНачальныхСумм.Вставить("Всего", 	СтрокаТаблицы.Всего);
		СтруктураНачальныхСумм.Вставить("Доход", 	СтрокаТаблицы.Стоимость);
		СтруктураНачальныхСумм.Вставить("Скидка", 	СтрокаТаблицы.СуммаСкидки);
		СтруктураНачальныхСумм.Вставить("НДС", 		СтрокаТаблицы.СуммаНДС);
		СтруктураНачальныхСумм.Вставить("НСП", 		СтрокаТаблицы.СуммаНСП);
		
		СтруктураСтроки = Новый Структура();
		СтруктураСтроки.Вставить("Цена", 		СтрокаТаблицы.Цена);
		СтруктураСтроки.Вставить("Количество", 	СтрокаТаблицы.Количество);
		СтруктураСтроки.Вставить("Сумма", 		СтрокаТаблицы.Сумма);
		СтруктураСтроки.Вставить("СуммаНДС", 	СтрокаТаблицы.СуммаНДС);
		СтруктураСтроки.Вставить("СуммаНСП", 	СтрокаТаблицы.СуммаНСП);
		СтруктураСтроки.Вставить("Всего", 		СтрокаТаблицы.Всего + СтрокаТаблицы.СуммаСкидки);
		СтруктураСтроки.Вставить("СуммаДохода", СтрокаТаблицы.Стоимость);
		СтруктураСтроки.Вставить("СуммаСкидки", 0);
		СтруктураСтроки.Вставить("СтавкаНДС", 	СтавкаНДС);
		СтруктураСтроки.Вставить("СтавкаНСП", 	СтавкаНСП);
		
		Если ДанныеДокумента.СуммаВключаетНалоги Тогда
		
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммыНалоговСтрокиТабличнойЧасти(
				СтруктураСтроки, 
				ДанныеДокумента.Дата, 
				ДанныеДокумента.Организация, 
				Истина, 
				СтавкаНДС,
				СтавкаНСП, 
				ДанныеДокумента.БезналичныйРасчет);
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьВсегоСтрокиТабличнойЧасти(СтруктураСтроки, Истина);
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьДоходСтрокиТабличнойЧасти(СтруктураСтроки, Истина);
			
		Иначе
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьДоходСтрокиТабличнойЧасти(СтруктураСтроки, Ложь);
			
			СтруктураДопПараметров = Новый Структура();
			СтруктураДопПараметров.Вставить("Период", 			 ДанныеДокумента.Дата);
			СтруктураДопПараметров.Вставить("Организация", 		 ДанныеДокумента.Организация);
			СтруктураДопПараметров.Вставить("БезналичныйРасчет", ДанныеДокумента.БезналичныйРасчет);
			СтруктураДопПараметров.Вставить("СтавкаНДС", 		 СтавкаНДС);
			СтруктураДопПараметров.Вставить("СтавкаНСП", 		 СтавкаНСП);
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуСтрокиТабличнойЧасти(СтруктураСтроки,, СтруктураДопПараметров);
			
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьЦенуСтрокиТабличнойЧасти(СтруктураСтроки,,,Истина);
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммыНалоговСтрокиТабличнойЧасти(
				СтруктураСтроки, 
				ДанныеДокумента.Дата,
				ДанныеДокумента.Организация,  
				Истина,
				СтавкаНДС,
				СтавкаНСП, 
				ДанныеДокумента.БезналичныйРасчет);
				
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьВсегоСтрокиТабличнойЧасти(СтруктураСтроки, Истина);
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтруктураСтроки);
		СтрокаТаблицы.Стоимость = СтруктураСтроки.СуммаДохода;
		
		Если ИсходныеСуммы Тогда	
			ДанныеПечати.СуммаСкидкиИсходная 			= ДанныеПечати.СуммаСкидкиИсходная + СтруктураНачальныхСумм.Скидка;	
			ДанныеПечати.НДССкидкиИсходная 		 		= ДанныеПечати.НДССкидкиИсходная + (СтрокаТаблицы.СуммаНДС - СтруктураНачальныхСумм.НДС);
			ДанныеПечати.НСПСкидкиИсходная 		 		= ДанныеПечати.НСПСкидкиИсходная + (СтрокаТаблицы.СуммаНСП - СтруктураНачальныхСумм.НСП);
			ДанныеПечати.СуммаСкидкиБезНалоговИсходная 	= ДанныеПечати.СуммаСкидкиИсходная - ДанныеПечати.НДССкидкиИсходная - ДанныеПечати.НСПСкидкиИсходная;
			
			ДанныеПечати.ВсегоИсходная 			= ДанныеПечати.ВсегоИсходная + (СтрокаТаблицы.Всего - СтруктураНачальныхСумм.Скидка);
			ДанныеПечати.ВсегоНДСИсходная 		= ДанныеПечати.ВсегоНДСИсходная + СтруктураНачальныхСумм.НДС;
			ДанныеПечати.ВсегоНСПИсходная 		= ДанныеПечати.ВсегоНСПИсходная + СтруктураНачальныхСумм.НСП;
			ДанныеПечати.ВсегоСтоимостьИсходная = ДанныеПечати.ВсегоИсходная - ДанныеПечати.ВсегоНДСИсходная - ДанныеПечати.ВсегоНСПИсходная;
			
		Иначе	
			ДанныеПечати.СуммаСкидки 			= ДанныеПечати.СуммаСкидки + СтруктураНачальныхСумм.Скидка;	
			ДанныеПечати.НДССкидки 		 		= ДанныеПечати.НДССкидки + (СтрокаТаблицы.СуммаНДС - СтруктураНачальныхСумм.НДС);
			ДанныеПечати.НСПСкидки 		 		= ДанныеПечати.НСПСкидки + (СтрокаТаблицы.СуммаНСП - СтруктураНачальныхСумм.НСП);
			ДанныеПечати.СуммаСкидкиБезНалогов 	= ДанныеПечати.СуммаСкидки - ДанныеПечати.НДССкидки - ДанныеПечати.НСПСкидки;
			
			ДанныеПечати.Всего 			= ДанныеПечати.Всего + (СтрокаТаблицы.Всего - СтруктураНачальныхСумм.Скидка);
			ДанныеПечати.ВсегоНДС 		= ДанныеПечати.ВсегоНДС + СтруктураНачальныхСумм.НДС;
			ДанныеПечати.ВсегоНСП 		= ДанныеПечати.ВсегоНСП + СтруктураНачальныхСумм.НСП;
			ДанныеПечати.ВсегоСтоимость = ДанныеПечати.Всего - ДанныеПечати.ВсегоНДС - ДанныеПечати.ВсегоНСП;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецЕсли
