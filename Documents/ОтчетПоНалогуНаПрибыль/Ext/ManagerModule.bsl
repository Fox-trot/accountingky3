#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Заполнение заголовка печатных форм
//
Процедура ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьШапка, ИмяМакета)

	Организация 	= СтруктураПараметров.Организация;
	НачалоПериода 	= СтруктураПараметров.НачалоПериода;
	КонецПериода 	= СтруктураПараметров.КонецПериода;		
	
	КонтактныеДанные = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСведенияОбОрганизации(Организация, КонецПериода);

	ОКПО              				= КонтактныеДанные.ОКПО;
	ИНН 							= КонтактныеДанные.ИНН;
	ГНСНаименование                 = КонтактныеДанные.ГНСНаименование;
	КодГНС 							= КонтактныеДанные.ГНСКод;
	ОрганизацияНаменованиеПолное    = КонтактныеДанные.НаименованиеПолное;
	Индекс  						= КонтактныеДанные.Индекс;
	Город  							= КонтактныеДанные.Город;
	Улица							= КонтактныеДанные.Улица; 
	Телефон							= КонтактныеДанные.Тел;
	ЭлектроннаяПочта 				= КонтактныеДанные.Email; 
	
	ДанныеПечати = Новый Структура();
	ДанныеПечати.Вставить("Организация", 	ОрганизацияНаменованиеПолное);
	ДанныеПечати.Вставить("Налоговая", 		ГНСНаименование);
	ДанныеПечати.Вставить("АдресГород", 	Город);
	ДанныеПечати.Вставить("АдресУлица", 	Улица);
	ДанныеПечати.Вставить("Телефон", 		Телефон);
	
	ОбластьШапка.Параметры.Заполнить(ДанныеПечати);
	
	Если ЗначениеЗаполнено(ОКПО) Тогда 
		ОбластьШапка.Параметры.ОКПО1 = Сред(ОКПО,1,1);
		ОбластьШапка.Параметры.ОКПО2 = Сред(ОКПО,2,1);
		ОбластьШапка.Параметры.ОКПО3 = Сред(ОКПО,3,1);
		ОбластьШапка.Параметры.ОКПО4 = Сред(ОКПО,4,1);
		ОбластьШапка.Параметры.ОКПО5 = Сред(ОКПО,5,1);
		ОбластьШапка.Параметры.ОКПО6 = Сред(ОКПО,6,1);
		ОбластьШапка.Параметры.ОКПО7 = Сред(ОКПО,7,1);
		ОбластьШапка.Параметры.ОКПО8 = Сред(ОКПО,8,1);
	КонецЕсли;
	
	ОбластьШапка.Параметры.ИНН1 = Сред(ИНН, 1, 1);
	ОбластьШапка.Параметры.ИНН2 = Сред(ИНН, 2, 1);
	ОбластьШапка.Параметры.ИНН3 = Сред(ИНН, 3, 1);                           
	ОбластьШапка.Параметры.ИНН4 = Сред(ИНН, 4, 1);
	ОбластьШапка.Параметры.ИНН5 = Сред(ИНН, 5, 1);
	ОбластьШапка.Параметры.ИНН6 = Сред(ИНН, 6, 1);
	ОбластьШапка.Параметры.ИНН7 = Сред(ИНН, 7, 1);
	ОбластьШапка.Параметры.ИНН8 = Сред(ИНН, 8, 1);
	ОбластьШапка.Параметры.ИНН9 = Сред(ИНН, 9, 1);
	ОбластьШапка.Параметры.ИНН10 = Сред(ИНН, 10, 1);
	ОбластьШапка.Параметры.ИНН11 = Сред(ИНН, 11, 1);
	ОбластьШапка.Параметры.ИНН12 = Сред(ИНН, 12, 1);
	ОбластьШапка.Параметры.ИНН13 = Сред(ИНН, 13, 1);
	ОбластьШапка.Параметры.ИНН14 = Сред(ИНН, 14, 1);         
	
	ОбластьШапка.Параметры.ГНС1 = Сред(КодГНС, 1, 1);
	ОбластьШапка.Параметры.ГНС2 = Сред(КодГНС, 2, 1);
	ОбластьШапка.Параметры.ГНС3 = Сред(КодГНС, 3, 1);
	
	ОбластьШапка.Параметры.ДатаН1 = Сред(НачалоПериода, 1, 1);	
	ОбластьШапка.Параметры.ДатаН2 = Сред(НачалоПериода, 2, 1);	
	ОбластьШапка.Параметры.ДатаН3 = Сред(НачалоПериода, 4, 1);	
	ОбластьШапка.Параметры.ДатаН4 = Сред(НачалоПериода, 5, 1);	
	ОбластьШапка.Параметры.ДатаН5 = Сред(НачалоПериода, 7, 1);	
	ОбластьШапка.Параметры.ДатаН6 = Сред(НачалоПериода, 8, 1);	
	ОбластьШапка.Параметры.ДатаН7 = Сред(НачалоПериода, 9, 1);	
	ОбластьШапка.Параметры.ДатаН8 = Сред(НачалоПериода, 10, 1);	
	
	ОбластьШапка.Параметры.ДатаК1 = Сред(КонецПериода, 1, 1);	
	ОбластьШапка.Параметры.ДатаК2 = Сред(КонецПериода, 2, 1);	
	ОбластьШапка.Параметры.ДатаК3 = Сред(КонецПериода, 4, 1);	
	ОбластьШапка.Параметры.ДатаК4 = Сред(КонецПериода, 5, 1);	
	ОбластьШапка.Параметры.ДатаК5 = Сред(КонецПериода, 7, 1);	
	ОбластьШапка.Параметры.ДатаК6 = Сред(КонецПериода, 8, 1);	
	ОбластьШапка.Параметры.ДатаК7 = Сред(КонецПериода, 9, 1);	
	ОбластьШапка.Параметры.ДатаК8 = Сред(КонецПериода, 10, 1);
		
	Если ИмяМакета = "ОсновнаяФорма" Тогда
		Если ЗначениеЗаполнено(Индекс) Тогда
			ОбластьШапка.Параметры.ИНД1 = Сред(Индекс, 1, 1);	
			ОбластьШапка.Параметры.ИНД2 = Сред(Индекс, 2, 1);	
			ОбластьШапка.Параметры.ИНД3 = Сред(Индекс, 4, 1);	
			ОбластьШапка.Параметры.ИНД4 = Сред(Индекс, 5, 1);	
			ОбластьШапка.Параметры.ИНД5 = Сред(Индекс, 7, 1);	
			ОбластьШапка.Параметры.ИНД6 = Сред(Индекс, 8, 1);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой НП
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьОсновнойФормы(МассивОбъектов, ОбъектыПечати)	
	Запрос = Новый Запрос;		
	Запрос.Текст =	
		"ВЫБРАТЬ
		|	ОтчетПоНалогуНаПрибыль.Ссылка КАК Ссылка,
		|	ОтчетПоНалогуНаПрибыль.Организация КАК Организация,
		|	ОтчетПоНалогуНаПрибыль.Дата КАК Дата,
		|	ОтчетПоНалогуНаПрибыль.Декларация.(
		|		Строка КАК Строка,
		|		Значение КАК Значение
		|	) КАК Декларация
		|ИЗ
		|	Документ.ОтчетПоНалогуНаПрибыль КАК ОтчетПоНалогуНаПрибыль
		|ГДЕ
		|	ОтчетПоНалогуНаПрибыль.Ссылка В(&МассивОбъектов)
		|	И (ОтчетПоНалогуНаПрибыль.Декларация.Строка = ""176""
		|			ИЛИ ОтчетПоНалогуНаПрибыль.Декларация.Строка = ""263""
		|			ИЛИ ОтчетПоНалогуНаПрибыль.Декларация.Строка = ""460"")";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоНалогуНаПрибыль_ОсновнаяФорма";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоНалогуНаПрибыль.ПФ_MXL_ЕНД_ОсновнаяФорма_STI_101");
	ИмяМакета = "ОсновнаяФорма";

	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ТабличныйДокумент.Вывести(ОбластьМакета);
	
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));
		
		ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьМакета, ИмяМакета);	
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Ячейки");
		
		СтавкаНП = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьДанныеУчетнойПолитикиОрганизаций(Шапка.Дата, Шапка.Организация).СтавкаНалогаНаПрибыль;
		
		Выборка = Шапка.Декларация.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.Строка = "176" Тогда
				ОбластьМакета.Параметры.Яч050 = Выборка.Значение;
			ИначеЕсли Выборка.Строка = "263" Тогда
				ОбластьМакета.Параметры.Яч051 = Выборка.Значение;							
			ИначеЕсли Выборка.Строка = "460" Тогда
				ОбластьМакета.Параметры.Яч053 = Выборка.Значение;				
			КонецЕсли;				
		КонецЦикла;
		
		ОбластьМакета.Параметры.Яч052 = ОбластьМакета.Параметры.Яч050 - ОбластьМакета.Параметры.Яч051;
		Если ОбластьМакета.Параметры.Яч052 < 0 Тогда
			ОбластьМакета.Параметры.ЗнакЯч052 = "-";		
		КонецЕсли;
		
		ОбластьМакета.Параметры.Яч054 = ОбластьМакета.Параметры.Яч052 - ОбластьМакета.Параметры.Яч053;
		Если ОбластьМакета.Параметры.Яч054 <= 0 Тогда
			ОбластьМакета.Параметры.ЗнакЯч054 = "-";
			ОбластьМакета.Параметры.Яч055 = "0";
			ОбластьМакета.Параметры.Яч056 = "0";
			ОбластьМакета.Параметры.Яч057 = "0";
			ОбластьМакета.Параметры.Яч058 = "0";
			ОбластьМакета.Параметры.Яч059 = "0";
			ОбластьМакета.Параметры.Яч060 = "0";
			ОбластьМакета.Параметры.Яч061 = "0";
			ОбластьМакета.Параметры.Яч062 = "0";
			ОбластьМакета.Параметры.Яч063 = "0";
			ОбластьМакета.Параметры.Яч064 = "0";
			ОбластьМакета.Параметры.Яч065 = "0";	
		Иначе
		
			// Заполняются вручную
			ОбластьМакета.Параметры.Яч055 = 0;
			ОбластьМакета.Параметры.Яч056 = 0;
			
			ОбластьМакета.Параметры.Яч057 = ОбластьМакета.Параметры.Яч054 - ОбластьМакета.Параметры.Яч055 - ОбластьМакета.Параметры.Яч056;
			Если ОбластьМакета.Параметры.Яч057 < 0 Тогда
				ОбластьМакета.Параметры.Яч058 = ОбластьМакета.Параметры.Яч057;	
			КонецЕсли;
			
			Если ОбластьМакета.Параметры.ЗнакЯч052 = "-" Тогда
				ОбластьМакета.Параметры.ЗнакЯч057 = "-";
				ОбластьМакета.Параметры.Яч057	  = ОбластьМакета.Параметры.Яч052;
			КонецЕсли;
			
			ОбластьМакета.Параметры.Яч059 = СтавкаНП;
			
			ОбластьМакета.Параметры.Яч060 = Окр(ОбластьМакета.Параметры.Яч057 * ОбластьМакета.Параметры.Яч059 / 100, 2);
			
			ОбластьМакета.Параметры.Яч061 = 0;
			ОбластьМакета.Параметры.Яч062 = 0;
			
			ОбластьМакета.Параметры.Яч063 = ОбластьМакета.Параметры.Яч060 - ОбластьМакета.Параметры.Яч061 - ОбластьМакета.Параметры.Яч062;
			Если ОбластьМакета.Параметры.Яч063 < 0 Тогда
				ОбластьМакета.Параметры.Яч063 = -ОбластьМакета.Параметры.Яч063;
				ОбластьМакета.Параметры.ЗнакЯч063 = "-";
				ОбластьМакета.Параметры.Яч064 = ОбластьМакета.Параметры.Яч063;
			Иначе
				ОбластьМакета.Параметры.Яч065 = ОбластьМакета.Параметры.Яч063;
			КонецЕсли;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;	
КонецФункции

// Функция формирует табличный документ с печатной формой Приложение1ПоНП
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриложения1(МассивОбъектов, ОбъектыПечати)	
	Запрос = Новый Запрос;		
	Запрос.Текст =	
		"ВЫБРАТЬ
		|	ОтчетПоНалогуНаПрибыль.Ссылка КАК Ссылка,
		|	ОтчетПоНалогуНаПрибыль.Организация КАК Организация,
		|	ОтчетПоНалогуНаПрибыль.Дата КАК Дата,
		|	ОтчетПоНалогуНаПрибыль.Декларация.(
		|		""Яч"" + Строка КАК Строка,
		|		Значение КАК Значение
		|	) КАК Декларация
		|ИЗ
		|	Документ.ОтчетПоНалогуНаПрибыль КАК ОтчетПоНалогуНаПрибыль
		|ГДЕ
		|	ОтчетПоНалогуНаПрибыль.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоНалогуНаПрибыль_Приложение1";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоНалогуНаПрибыль.ПФ_MXL_ЕНД_Приложение1");
	ИмяМакета = "Приложение1";

	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));
		
		ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьМакета, ИмяМакета);	
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Ячейки");
		
		ТЗСтрокДекларации = Шапка.Декларация.Выгрузить();
		ТЗСтрокДекларации.Свернуть("Строка", "Значение");
		ДанныеПечати = Новый Структура();
		Для Каждого СтрокаТЗ Из ТЗСтрокДекларации Цикл
			Ключ = СтрокаТЗ.Строка;
			ДанныеПечати.Вставить(Ключ, СтрокаТЗ.Значение);			
		КонецЦикла;	
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой Приложение2ПоНП
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриложения2(МассивОбъектов, ОбъектыПечати)	
	Запрос = Новый Запрос;		
	Запрос.Текст =	
		"ВЫБРАТЬ
		|	ОтчетПоНалогуНаПрибыль.Ссылка КАК Ссылка,
		|	ОтчетПоНалогуНаПрибыль.Организация КАК Организация,
		|	ОтчетПоНалогуНаПрибыль.Дата КАК Дата,
		|	ОтчетПоНалогуНаПрибыль.Декларация.(
		|		""Яч"" + Строка КАК Строка,
		|		Значение КАК Значение
		|	) КАК Декларация
		|ИЗ
		|	Документ.ОтчетПоНалогуНаПрибыль КАК ОтчетПоНалогуНаПрибыль
		|ГДЕ
		|	ОтчетПоНалогуНаПрибыль.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоНалогуНаПрибыль_Приложение2";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоНалогуНаПрибыль.ПФ_MXL_ЕНД_Приложение2");
	ИмяМакета = "Приложение2";

	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));
		
		ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьМакета, ИмяМакета);	
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Ячейки");
		
		ТЗСтрокДекларации = Шапка.Декларация.Выгрузить();
		ТЗСтрокДекларации.Свернуть("Строка", "Значение");
		ДанныеПечати = Новый Структура();
		Для Каждого СтрокаТЗ Из ТЗСтрокДекларации Цикл
			Ключ = СтрокаТЗ.Строка;
			ДанныеПечати.Вставить(Ключ, СтрокаТЗ.Значение);			
		КонецЦикла;	
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОсновнаяФормаОтчета") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ОсновнаяФормаОтчета", 
		НСтр("ru = 'Основная форма'"), 
		ПечатьОсновнойФормы(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоНалогуНаПрибыль.ПФ_MXL_ЕНД_ОсновнаяФорма_STI_101");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение1") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"Приложение1", 
		НСтр("ru = 'Приложение 1'"), 
		ПечатьПриложения1(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоНалогуНаПрибыль.ПФ_MXL_ЕНД_Приложение1");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение2") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"Приложение2", 
		НСтр("ru = 'Приложение 2'"), 
		ПечатьПриложения2(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоНалогуНаПрибыль.ПФ_MXL_ЕНД_Приложение2");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОсновнаяФормаОтчета";
	КомандаПечати.Представление = НСтр("ru = 'Основная форма'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение1";
	КомандаПечати.Представление = НСтр("ru = 'Приложение 1'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Порядок = 2;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение2";
	КомандаПечати.Представление = НСтр("ru = 'Приложение 2'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Порядок = 3;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли