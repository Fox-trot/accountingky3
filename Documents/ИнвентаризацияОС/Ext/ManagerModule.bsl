#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой ИнвентаризационнаяОписьИНВ1
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатнаяФормаИнвентаризационнаяОписьИНВ1(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ИнвентаризацияОС_ИнвентаризационнаяОписьИНВ1";
	
	Макет =  УправлениеПечатью.МакетПечатнойФормы("Документ.ИнвентаризацияОС.ПФ_MXL_ИнвентаризационнаяОписьИНВ1");		
	
	///////////////////////////////////////////////////////////////////////////////		
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ИнвентаризацияОС.Ссылка КАК Ссылка,
		|	ИнвентаризацияОС.Номер КАК Номер,
		|	ИнвентаризацияОС.Дата КАК ДатаДокумента,
		|	ИнвентаризацияОС.Организация КАК Организация,
		|	ИнвентаризацияОС.МОЛ КАК МОЛ,
		|	ИнвентаризацияОС.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
		|	ИнвентаризацияОС.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
		|	ИнвентаризацияОС.ДокументОснованиеДата КАК ДокументОснованиеДата,
		|	ИнвентаризацияОС.ДокументОснованиеНомер КАК ДокументОснованиеНомер,
		|	ИнвентаризацияОС.Организация.НаименованиеПолное,
		|	ИнвентаризацияОС.Организация.КодПоОКПО КАК ОКПО,
		|	ИнвентаризацияОС.Подразделение,
		|	ИнвентаризацияОС.Подразделение.Наименование,
		|	ИнвентаризацияОС.ДокументОснованиеВид,
		|	ИнвентаризацияОС.ОтветственныйЗаИнвентаризацию,
		|	ИнвентаризацияОС.ОС.(
		|		НомерСтроки,
		|		ОсновноеСредство,
		|		НаличиеПоДаннымУчета,
		|		СтоимостьПоДаннымУчета,
		|		НаличиеФактическое,
		|		СтоимостьФактическая,
		|		НакопленнаяАмортизация,
		|		ПервоначальнаяСтоимость,
		|		СрокСлужбы КАК СПС,
		|		ОстаточныйСрокСлужбы,
		|		МОЛ,
		|		Подразделение,
		|		ИзлишекСумма,
		|		ИзлишекКоличество,
		|		НедостачаСумма,
		|		НедостачаКоличество,
		|		ИнвентарныйНомер,
		|		ОсновноеСредство.ДатаВыпуска КАК ДатаВвода,
		|		ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер,
		|		ОсновноеСредство.НомерПаспорта КАК НомерПаспорта,
		|		ОсновноеСредство.Наименование КАК Наименование
		|	),
		|	ИнвентаризацияОС.Комиссия.(
		|		Председатель,
		|		ФизЛицо.Наименование КАК ФизЛицоНаим,
		|		ФизЛицо КАК ФизЛицо
		|	),
		|	ИнвентаризацияОС.МОЛ.Представление КАК МОЛПредставление
		|ИЗ
		|	Документ.ИнвентаризацияОС КАК ИнвентаризацияОС
		|ГДЕ
		|	ИнвентаризацияОС.Ссылка В(&СписокДокументов)";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	ВыборкаДляПечати = Запрос.Выполнить();
	/////////////////////////////////////////////////////////////////////////////
	
	Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли; 
	
	ВыборкаЗаголовок = ВыборкаДляПечати.Выбрать();
	Пока ВыборкаЗаголовок.Следующий() Цикл
		
		//Выводим ШапкаВерх
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаВерх");
		
		ОбластьМакета.Параметры.Организация = ВыборкаЗаголовок.ОрганизацияНаименованиеПолное;
		
		ОбластьМакета.Параметры.Подразделение          		= ВыборкаЗаголовок.ПодразделениеНаименование;
		ОбластьМакета.Параметры.ДокументОснованиеВид  		= ВыборкаЗаголовок.ДокументОснованиеВид;
		ОбластьМакета.Параметры.ДокументОснованиеНомер 		= ВыборкаЗаголовок.ДокументОснованиеНомер;
		ОбластьМакета.Параметры.ДокументОснованиеДата  		= ВыборкаЗаголовок.ДокументОснованиеДата;
		ОбластьМакета.Параметры.ОКПО          				= ВыборкаЗаголовок.ОКПО;
		ОбластьМакета.Параметры.ДатаНачалаИнвентаризации    = ВыборкаЗаголовок.ДатаНачалаИнвентаризации;
		ОбластьМакета.Параметры.ДатаОкончанияИнвентаризации = ВыборкаЗаголовок.ДатаОкончанияИнвентаризации;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		//Выводим ШапкаОпись
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаОпись");
		
		ОбластьМакета.Параметры.ДокументНомер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаЗаголовок.Номер);
		ОбластьМакета.Параметры.ДокументДата  = ВыборкаЗаголовок.ДатаДокумента;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		//Выводим ШапкаМОЛ
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаМОЛ");
		ФИО = "";
		БухгалтерскийУчетСервер.ФамилияИнициалыПоНаименованию(Фио,ВыборкаЗаголовок.МОЛ.Наименование);
		ОбластьМакета.Параметры.РасшифровкаПодписи = Фио ;
		СтруктураМОЛ = ПроведениеРасчетовПоЗарплатеСервер.СведенияОСотруднике(ВыборкаЗаголовок.ДатаДокумента, ВыборкаЗаголовок.Организация, ВыборкаЗаголовок.МОЛ);
		ОбластьМакета.Параметры.Должность = СтруктураМОЛ.Должность;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		//Выводим ШапкаТаблицы	
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		
		ВыборкаСтрок  = Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаИтогСтроки = Макет.ПолучитьОбласть("ИтогиСтроки");
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(ВыборкаСтрок);
		СтрокаСПодвалом.Добавить(ОбластьМакетаИтогСтроки); 
		
		
		ИтСуммаБУ				    = 0;
		ИтКоличествоБУ 				= 0;
		ИтСуммаФакт				    = 0;
		ИтКоличествоФакт            = 0;
		ИтПорядковыхНомеровПрописью = 0;
		НомерСтроки                 = 0;
		ИтСуммаБУОбщ 	  	= 0;
		ИтКоличествоБУОбщ 	= 0;
		ИтСуммаФактОбщ 	  	= 0;
		ИтКоличествоФактОбщ = 0;
		ИтНомерСтрокиОбщ    = 0;
		
		//Выводим строки
		ВыборкаТЧ  = ВыборкаЗаголовок.ОС.Выбрать();
		Пока ВыборкаТЧ.Следующий() Цикл 		
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			ВыборкаСтрок.Параметры.НомерСтроки  	 	 = НомерСтроки + 1;
			ВыборкаСтрок.Параметры.Наименование 	 	 = ВыборкаТЧ.Наименование;
			ВыборкаСтрок.Параметры.ДатаВыпуска  	 	 = ВыборкаТЧ.ДатаВвода;
			ВыборкаСтрок.Параметры.ИнветарныйНомер 	 	 = ВыборкаТЧ.ИнвентарныйНомер;
			ВыборкаСтрок.Параметры.ЗаводскойНомер 	 	 = ВыборкаТЧ.ЗаводскойНомер;
			ВыборкаСтрок.Параметры.НомерПаспорта 	 	 = ВыборкаТЧ.НомерПаспорта;
			Выборка = Новый Структура();
			Выборка.Вставить("ОсновноеСредство", ВыборкаТЧ.ОсновноеСредство);
			
			ВыборкаРегистра  = РегистрыСведений.СобытияОС.СрезПоследних(ВыборкаЗаголовок.ДатаДокумента,Выборка);
			Для Каждого Строка Из ВыборкаРегистра Цикл 
				Если ТипЗнч(Строка.Регистратор) = Тип("ДокументСсылка.ВводНачальныхОстатков") Тогда 
					НаименованиеДокумента = ?(Не ЗначениеЗаполнено(Строка.НазваниеДокумента),"Ввод начальных остатков ОС", Строка.названиеДокумента);
					ДатаДокумента1 = ?(Не ЗначениеЗаполнено(Строка.Период), Строка.Регистратор.Дата,Строка.Период);	
					НомерДокумента = ?(Не ЗначениеЗаполнено(Строка.НомерДокумента), ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Строка.Регистратор.Номер),Строка.НомерДокумента);
				ИначеЕсли ТипЗнч(Строка.Регистратор) = Тип("ДокументСсылка.ПринятиеКУчетуОС") Тогда
					НаименованиеДокумента = "Принятие к учету ОС"; 
					ДатаДокумента1 = Строка.Период;
					НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Строка.Регистратор.Номер);
				ИначеЕсли ТипЗнч(Строка.Регистратор) = Тип("ДокументСсылка.ПередачаОС") Тогда 
					НаименованиеДокумента = "Передача ОС"; 	
					ДатаДокумента1 = Строка.Период;
					НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Строка.Регистратор.Номер);
				КонецЕсли;	
			КонецЦикла;			
			
			ВыборкаСтрок.Параметры.ДокументАренды		 = НаименованиеДокумента;		
			ВыборкаСтрок.Параметры.ДатаДокументАренды	 = ДатаДокумента1;		
			ВыборкаСтрок.Параметры.НомерДокументАренды	 = НомерДокумента;	
			
			ВыборкаСтрок.Параметры.КоличествоФакт		 = Число(ВыборкаТЧ.НаличиеФактическое);
			ВыборкаСтрок.Параметры.СуммаФакт		 	 = ВыборкаТЧ.СтоимостьФактическая;
			ВыборкаСтрок.Параметры.КоличествоБУ 	 	 = Число(ВыборкаТЧ.НаличиеПоДаннымУчета);
			ВыборкаСтрок.Параметры.СуммаБУ			 	 = ВыборкаТЧ.СтоимостьПоДаннымУчета;
			
			Если Не ТабличныйДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда 
				// Строка с итогом не вмещается. 
				ОбластьМакетаПоСтранице = Макет.ПолучитьОбласть("ИтогиСтрокиПоСтранице");
				ОбластьМакетаПоСтранице.Параметры.ИтСуммаБУ        = ИтСуммаБУ;
				ОбластьМакетаПоСтранице.Параметры.ИтКоличествоБУ   = ИтКоличествоБУ;
				ОбластьМакетаПоСтранице.Параметры.ИтСуммаФакт  	   = ИтСуммаФакт;
				ОбластьМакетаПоСтранице.Параметры.ИтКоличествоФакт = ИтКоличествоФакт; 
				
				// установим итог по странице 
				ТабличныйДокумент.Вывести(ОбластьМакетаПоСтранице); // выведем итог по странице 
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц(); // начнем новую страницу 
				ИтСуммаБУОбщ 	  	= ИтСуммаБУ  	 + ИтСуммаБУОбщ;
				ИтКоличествоБУОбщ 	= ИтКоличествоБУ + ИтКоличествоБУОбщ;
				ИтСуммаФактОбщ 	  	= ИтСуммаФакт 	 + ИтСуммаФактОбщ;
				ИтКоличествоФактОбщ = ИтКоличествоФакт + ИтКоличествоФактОбщ;
				
				ИтСуммаБУ				    = 0;
				ИтКоличествоБУ 				= 0;
				ИтСуммаФакт				    = 0;
				ИтКоличествоФакт            = 0;
				ИтПорядковыхНомеровПрописью = 0; // сбросим текущую сумму по странице 	
			КонецЕсли; 
			
			НомерСтроки		 = ВыборкаСтрок.Параметры.НомерСтроки;
			ИтСуммаБУ 		 = ИтСуммаБУ        + ВыборкаТЧ.СтоимостьПоДаннымУчета;
			ИтКоличествоБУ   = ИтКоличествоБУ   + Число(ВыборкаТЧ.НаличиеПоДаннымУчета);
			ИтСуммаФакт 	 = ИтСуммаФакт      + ВыборкаТЧ.СтоимостьФактическая;
			ИтКоличествоФакт = ИтКоличествоФакт + Число(ВыборкаТЧ.НаличиеФактическое);
			ТабличныйДокумент.Вывести(ВыборкаСтрок); // выведем очередную строку 
			
		КонецЦикла; 
		
		// установим итог по странице 
		ОбластьМакетаПоСтранице = Макет.ПолучитьОбласть("ИтогиСтрокиПоСтранице");
		ОбластьМакетаПоСтранице.Параметры.ИтСуммаБУ 	 = ИтСуммаБУ;
		ОбластьМакетаПоСтранице.Параметры.ИтКоличествоБУ = ИтКоличествоБУ;
		ОбластьМакетаПоСтранице.Параметры.ИтСуммаФакт 	 = ИтСуммаФакт;
		ОбластьМакетаПоСтранице.Параметры.ИтКоличествоФакт = ИтКоличествоФакт; 
		ТабличныйДокумент.Вывести(ОбластьМакетаПоСтранице); // выведем итог по странице 
		
		// установим итог по документу
		ОбластьМакетаИтогСтроки.Параметры.ИтСуммаБУ 	   = ИтСуммаБУ      + ИтСуммаБУОбщ;
		ОбластьМакетаИтогСтроки.Параметры.ИтКоличествоБУ   = ИтКоличествоБУ + ИтКоличествоБУОбщ;
		ОбластьМакетаИтогСтроки.Параметры.ИтСуммаФакт 	   = ИтСуммаФакт    + ИтСуммаФактОбщ;
		ОбластьМакетаИтогСтроки.Параметры.ИтКоличествоФакт = ИтКоличествоФакт + ИтКоличествоФактОбщ;  
		
		ТабличныйДокумент.Вывести(ОбластьМакетаИтогСтроки); 
		
		ОбластьМакетаИтПрописью = Макет.ПолучитьОбласть("ИтогиПрописью");
		ОбластьМакетаКомиссия = Макет.ПолучитьОбласть("Комиссия");
		
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(ОбластьМакетаИтПрописью);
		СтрокаСПодвалом.Добавить(ОбластьМакетаКомиссия); 
		
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогиПрописью");
		
		ОбластьМакета.Параметры.ФактПорядковыхНомеровПрописью = БухгалтерскийУчетСервер.КоличествоПрописью(НомерСтроки);
		ОбластьМакета.Параметры.ФактКоличествоПрописью        = БухгалтерскийУчетСервер.КоличествоПрописью(ОбластьМакетаИтогСтроки.Параметры.ИтКоличествоФакт);
		ОбластьМакета.Параметры.ФактСуммаПрописью             = БухгалтерскийУчетСервер.СформироватьСуммуПрописью(ОбластьМакетаИтогСтроки.Параметры.ИтСуммаФакт);
		Если Не ТабличныйДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		//Выводим подпись
		ВыборкаСтрокКомиссия = ВыборкаЗаголовок.Комиссия.Выбрать();
		ПервыйРядовойЧленКомиссиии = Истина;	
		
		Пока ВыборкаСтрокКомиссия.Следующий() Цикл
			Если ВыборкаСтрокКомиссия.Председатель Тогда
				ЗаголовокРазделаКомиссии = "Председатель комиссии";
			ИначеЕсли ПервыйРядовойЧленКомиссиии Тогда
				ЗаголовокРазделаКомиссии = "Члены комиссии";
				ПервыйРядовойЧленКомиссиии = Ложь;				
			Иначе
				ЗаголовокРазделаКомиссии = "";
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Комиссия");
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокКомиссия);
			ФИО = "";
			БухгалтерскийУчетСервер.ФамилияИнициалыПоНаименованию(Фио,ВыборкаСтрокКомиссия.ФизЛицоНаим);
			ОбластьМакета.Параметры.РасшифровкаПодписи = Фио ;
			
			ОбластьМакета.Параметры.ЗаголовокРазделаКомиссии = ЗаголовокРазделаКомиссии;
			//ОбластьМакета.Параметры.Должность=ДолжностьСотрудника(ВыборкаЗаголовок.Организация,ВыборкаСтрокКомиссия.ФизЛицо, ВыборкаЗаголовок.ДатаДокумента);
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		
		//Выводим ПодвалВерх
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалВерх");
		ОбластьМакета.Параметры.Первый = "1";
		ОбластьМакета.Параметры.Последний = НомерСтроки;
		ФИО = "";
		БухгалтерскийУчетСервер.ФамилияИнициалыПоНаименованию(Фио,ВыборкаЗаголовок.МОЛ.Наименование);
		ОбластьМакета.Параметры.РасшифровкаПодписи = Фио ;
		СтруктураМОЛ = ПроведениеРасчетовПоЗарплатеСервер.СведенияОСотруднике(ВыборкаЗаголовок.ДатаДокумента, ВыборкаЗаголовок.Организация, ВыборкаЗаголовок.МОЛ);
		ОбластьМакета.Параметры.Должность = СтруктураМОЛ.Должность;
		ОбластьМакета.Параметры.ДокументДата  = Формат(ВыборкаЗаголовок.ДатаДокумента,"ДЛФ=DD");
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		//Выводим ЗаголовокНиз
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалНиз");
		ФИО = "";
		БухгалтерскийУчетСервер.ФамилияИнициалыПоНаименованию(Фио,ВыборкаЗаголовок.ОтветственныйЗаИнвентаризацию.Наименование);
		ОбластьМакета.Параметры.РасшифровкаПодписи = Фио ;
		СтруктураМОЛ = ПроведениеРасчетовПоЗарплатеСервер.СведенияОСотруднике(ВыборкаЗаголовок.ДатаДокумента, ВыборкаЗаголовок.Организация, ВыборкаЗаголовок.ОтветственныйЗаИнвентаризацию);
		ОбластьМакета.Параметры.Должность = СтруктураМОЛ.Должность;
		ОбластьМакета.Параметры.ДокументДата  = Формат(ВыборкаЗаголовок.ДатаДокумента,"ДЛФ=DD");
		
		ТабличныйДокумент.Вывести(ОбластьМакета);		
	КонецЦикла;     		
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаЗаголовок.Ссылка);
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы= ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабличныйДокумент;
	                                                                               
КонецФункции

// Функция формирует табличный документ с печатной формой ИнвентаризационнаяОписьИНВ18
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатнаяФормаИнвентаризационнаяОписьИНВ18(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ИнвентаризацияОС_ИнвентаризационнаяОписьИНВ18";
	
	Макет =  УправлениеПечатью.МакетПечатнойФормы("Документ.ИнвентаризацияОС.ПФ_MXL_ИнвентаризационнаяОписьИНВ18");		
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ИнвентаризацияОС.Ссылка КАК Ссылка,
		|	ИнвентаризацияОС.Номер КАК Номер,
		|	ИнвентаризацияОС.Дата КАК ДатаДокумента,
		|	ИнвентаризацияОС.Организация КАК Организация,
		|	ИнвентаризацияОС.МОЛ КАК МОЛ,
		|	ИнвентаризацияОС.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
		|	ИнвентаризацияОС.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
		|	ИнвентаризацияОС.ДокументОснованиеДата КАК ДокументОснованиеДата,
		|	ИнвентаризацияОС.ДокументОснованиеНомер КАК ДокументОснованиеНомер,
		|	ИнвентаризацияОС.Организация.НаименованиеПолное,
		|	ИнвентаризацияОС.Организация.КодПоОКПО КАК ОКПО,
		|	ИнвентаризацияОС.Подразделение,
		|	ИнвентаризацияОС.Подразделение.Наименование,
		|	ИнвентаризацияОС.ДокументОснованиеВид,
		|	ИнвентаризацияОС.ОтветственныйЗаИнвентаризацию,
		|	ИнвентаризацияОС.ОС.(
		|		НомерСтроки,
		|		ОсновноеСредство,
		|		НаличиеПоДаннымУчета,
		|		СтоимостьПоДаннымУчета,
		|		НаличиеФактическое,
		|		СтоимостьФактическая,
		|		НакопленнаяАмортизация,
		|		ПервоначальнаяСтоимость,
		|		СрокСлужбы КАК СПС,
		|		ОстаточныйСрокСлужбы,
		|		МОЛ,
		|		Подразделение,
		|		ИзлишекСумма,
		|		ИзлишекКоличество,
		|		НедостачаСумма,
		|		НедостачаКоличество,
		|		ИнвентарныйНомер,
		|		ОсновноеСредство.ДатаВыпуска КАК ДатаВвода,
		|		ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер,
		|		ОсновноеСредство.НомерПаспорта КАК НомерПаспорта,
		|		ОсновноеСредство.Наименование КАК Наименование
		|	),
		|	ЕСТЬNULL(ПроверкаИзлНедостачаОС.ПроверкаОС, ЛОЖЬ) КАК ПроверкаОС
		|ИЗ
		|	Документ.ИнвентаризацияОС КАК ИнвентаризацияОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВЫБОР
		|				КОГДА СУММА(ИнвентаризацияОСОС.ИзлишекСумма) > 0
		|						ИЛИ СУММА(ИнвентаризацияОСОС.ИзлишекКоличество) > 0
		|						ИЛИ СУММА(ИнвентаризацияОСОС.НедостачаСумма) > 0
		|						ИЛИ СУММА(ИнвентаризацияОСОС.НедостачаКоличество) > 0
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ КАК ПроверкаОС,
		|			ИнвентаризацияОСОС.Ссылка КАК Ссылка
		|		ИЗ
		|			Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ИнвентаризацияОСОС.Ссылка) КАК ПроверкаИзлНедостачаОС
		|		ПО ИнвентаризацияОС.Ссылка = ПроверкаИзлНедостачаОС.Ссылка
		|ГДЕ
		|	ИнвентаризацияОС.Ссылка В(&СписокДокументов)";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	ВыборкаЗаголовок = Запрос.Выполнить().Выбрать();
	
	Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли; 
	
	Пока ВыборкаЗаголовок.Следующий()  Цикл
		Если Не ВыборкаЗаголовок.ПроверкаОС Тогда
			Прервать;
		КонецЕсли;
		
		//Выводим ШапкаВерх
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаВерх");
		
		ОбластьМакета.Параметры.Организация = ВыборкаЗаголовок.ОрганизацияНаименованиеПолное;
		
		ОбластьМакета.Параметры.Подразделение          = ВыборкаЗаголовок.ПодразделениеОрганизацииНаименование;
		ОбластьМакета.Параметры.ДокументОснованиеВид   = ВыборкаЗаголовок.ДокументОснованиеВид;
		ОбластьМакета.Параметры.ДокументОснованиеНомер = ВыборкаЗаголовок.ДокументОснованиеНомер;
		ОбластьМакета.Параметры.ДокОснованиеДата  = ВыборкаЗаголовок.ДокументОснованиеДата;
		//Колонка код	
		ОбластьМакета.Параметры.ОКПО          = ВыборкаЗаголовок.ОКПО;
		ОбластьМакета.Параметры.ДатаНачалаИнвентаризации    = ВыборкаЗаголовок.ДатаНачалаИнвентаризации;
		ОбластьМакета.Параметры.ДатаОкончанияИнвентаризации = ВыборкаЗаголовок.ДатаОкончанияИнвентаризации;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		//Выводим ШапкаОпись
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаСличВедомость");
		
		ОбластьМакета.Параметры.ДокументНомер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаЗаголовок.Номер);
		ОбластьМакета.Параметры.ДокументДата  = ВыборкаЗаголовок.ДатаДокумента;
		ОбластьМакета.Параметры.ДокументДата1  = ВыборкаЗаголовок.ДатаДокумента;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		//Выводим ШапкаМОЛ
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаМОЛ");
		
		ФИО = "";
		БухгалтерскийУчетСервер.ФамилияИнициалыПоНаименованию(Фио,ВыборкаЗаголовок.МОЛ.Наименование);
		ОбластьМакета.Параметры.РасшифровкаПодписи = ФИО;
		СтруктураМОЛ = ПроведениеРасчетовПоЗарплатеСервер.СведенияОСотруднике(ВыборкаЗаголовок.ДатаДокумента, ВыборкаЗаголовок.Организация, ВыборкаЗаголовок.МОЛ);
		ОбластьМакета.Параметры.Должность = СтруктураМОЛ.Должность;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		//Выводим ШапкаТаблицы	
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ВыборкаСтрок  = Макет.ПолучитьОбласть("Строка");		
		
		ИТКоличествоИзлишки	= 0;
		ИТСуммаИзлишки	    = 0;
		ИТКоличествоНедостача = 0;
		ИТСуммаНедостача      = 0;
		ИтПорядковыхНомеровПрописью = 0;
		НомерСтроки                 = 0;
		
		//Выводим строки
		ВыборкаТЧ  = ВыборкаЗаголовок.ОС.Выбрать();
		Пока ВыборкаТЧ.Следующий() Цикл 
			Если ВыборкаТЧ.ИзлишекКоличество	= 0
				И ВыборкаТЧ.ИзлишекСумма   	    = 0 
				И ВыборкаТЧ.НедостачаКоличество = 0 
				И ВыборкаТЧ.НедостачаСумма		= 0 Тогда  
				
				Продолжить;	
			КонецЕсли;
			
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			ВыборкаСтрок.Параметры.НомерСтроки  	 	 = НомерСтроки + 1;
			ВыборкаСтрок.Параметры.Наименование 	 	 = ВыборкаТЧ.Наименование;
			ВыборкаСтрок.Параметры.ДатаВыпуска  	 	 = ВыборкаТЧ.ДатаВвода;
			ВыборкаСтрок.Параметры.ИнветарныйНомер 	 	 = ВыборкаТЧ.ИнвентарныйНомер;
			ВыборкаСтрок.Параметры.ЗаводскойНомер 	 	 = ВыборкаТЧ.ЗаводскойНомер;
			ВыборкаСтрок.Параметры.НомерПаспорта 	 	 = ВыборкаТЧ.НомерПаспорта;
			
			ВыборкаСтрок.Параметры.КоличествоИзлишки	 = Число(ВыборкаТЧ.ИзлишекКоличество);
			ВыборкаСтрок.Параметры.СуммаИзлишки		 	 = ВыборкаТЧ.ИзлишекСумма;
			ВыборкаСтрок.Параметры.КоличествоНедостача 	 = Число(ВыборкаТЧ.НедостачаКоличество);
			ВыборкаСтрок.Параметры.СуммаНедостача 	 	 = ВыборкаТЧ.НедостачаСумма;
			
			НомерСтроки		 = ВыборкаСтрок.Параметры.НомерСтроки;
			ИТКоличествоИзлишки	  = ИТКоличествоИзлишки + Число(ВыборкаТЧ.ИзлишекКоличество);
			ИТСуммаИзлишки	      = ИТСуммаИзлишки      + ВыборкаТЧ.ИзлишекСумма;
			ИТКоличествоНедостача = ИТКоличествоНедостача + Число(ВыборкаТЧ.НедостачаКоличество);
			ИТСуммаНедостача      = ИТСуммаНедостача      + ВыборкаТЧ.НедостачаСумма;
			
			ТабличныйДокумент.Вывести(ВыборкаСтрок);
			
		КонецЦикла;
		
		ВыборкаСтрок  = Макет.ПолучитьОбласть("Строка");	
		
		//Выводим итог
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогиСтрок");
		ОбластьМакета.Параметры.ИТКоличествоИзлишки   = ИТКоличествоИзлишки;
		ОбластьМакета.Параметры.ИТКоличествоНедостача = ИТКоличествоНедостача;
		ОбластьМакета.Параметры.ИТСуммаИзлишки		  = ИТСуммаИзлишки;
		ОбластьМакета.Параметры.ИТСуммаНедостача	  = ИТСуммаНедостача; 
		ТабличныйДокумент.Вывести(ОбластьМакета); 
		
		//Выводим подпись бухгалтера
		ОбластьМакета = Макет.ПолучитьОбласть("ПодписьГлБухгалтера");
		Руководители = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизаций(ВыборкаЗаголовок.Организация,ВыборкаЗаголовок.ДатаДокумента);
		Бухгалтер    = Руководители.ГлавныйБухгалтер;
		ОбластьМакета.Параметры.РасшифровкаПодписи = Бухгалтер;
		
		ТабличныйДокумент.Вывести(ОбластьМакета); 
		
		//Выводим ЗаголовокНиз
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалНиз");
		
		ФИО = "";
		БухгалтерскийУчетСервер.ФамилияИнициалыПоНаименованию(Фио,ВыборкаЗаголовок.ОтветственныйЗаИнвентаризацию.Наименование);
		ОбластьМакета.Параметры.РасшифровкаПодписи = ФИО;
		СтруктураМОЛ  = ПроведениеРасчетовПоЗарплатеСервер.СведенияОСотруднике(ВыборкаЗаголовок.ДатаДокумента, ВыборкаЗаголовок.Организация, ВыборкаЗаголовок.ОтветственныйЗаИнвентаризацию);
		ОбластьМакета.Параметры.Должность     = СтруктураМОЛ.Должность;
		ОбластьМакета.Параметры.ДокументДата  = Формат(ВыборкаЗаголовок.ДатаДокумента,"ДЛФ=DD");
		
		
		ТабличныйДокумент.Вывести(ОбластьМакета);		
	КонецЦикла;     		
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаЗаголовок.Ссылка);
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы= ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
	// печать Инвентаризационная опись ИНВ-1
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИнвентаризационнаяОписьИНВ1");
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ИнвентаризационнаяОписьИНВ1",
		НСтр("ru = 'Инвентаризационная опись ИНВ-1'"),
		ПечатнаяФормаИнвентаризационнаяОписьИНВ1(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ИнвентаризацияОС.ПФ_MXL_ИнвентаризационнаяОписьИНВ1");
	КонецЕсли; 
	
	// печать Инвентаризационная опись ИНВ-18
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИнвентаризационнаяОписьИНВ18");
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ИнвентаризационнаяОписьИНВ18",
		НСтр("ru = 'Инвентаризационная опись ИНВ-18'"),
		ПечатнаяФормаИнвентаризационнаяОписьИНВ18(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ИнвентаризацияОС.ПФ_MXL_ИнвентаризационнаяОписьИНВ18");
	КонецЕсли; 
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
		
	// Инвентаризационная Инвентаризационная опись ИНВ-1 
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИнвентаризационнаяОписьИНВ1";
	КомандаПечати.Представление = НСтр("ru = 'Инвентаризационная опись ИНВ-1'");
	
	// Инвентаризационная Инвентаризационная опись ИНВ-18 
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИнвентаризационнаяОписьИНВ18";
	КомандаПечати.Представление = НСтр("ru = 'Инвентаризационная опись ИНВ-18'");
	
КонецПроцедуры

#КонецОбласти
	
#КонецЕсли
