#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыПроведенияДокумента

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаНачисления(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	// Определение минимальной и максимальной даты.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	МИНИМУМ(ТаблицаДокумента.ДатаНачала) КАК ДатаНачала,
		|	МАКСИМУМ(ТаблицаДокумента.ДатаОкончания) КАК ДатаОкончания
		|ИЗ
		|	ВременнаяТаблицаНачисления КАК ТаблицаДокумента";
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ДатаНачала = Выборка.ДатаНачала;
	ДатаОкончания = Выборка.ДатаОкончания;
	
	// Распределение по периодам действия(месяц).
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДанныеПроизводственногоКалендаря.Дата КАК Дата,
		|	ДанныеПроизводственногоКалендаря.ГрафикРаботы КАК ГрафикРаботы,
		|	ДанныеПроизводственногоКалендаря.ЗначениеДней КАК ЗначениеДней
		|ПОМЕСТИТЬ ВременнаяТаблицаКалендарь
		|ИЗ
		|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
		|ГДЕ
		|	ДанныеПроизводственногоКалендаря.ГрафикРаботы В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				ВременнаяТаблицаНачисления.ГрафикРаботы
		|			ИЗ
		|				ВременнаяТаблицаНачисления КАК ВременнаяТаблицаНачисления)
		|	И ДанныеПроизводственногоКалендаря.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ДанныеПроизводственногоКалендаря.Год МЕЖДУ &ГодНачалоПериода И &ГодКонецПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ТаблицаДокумента.ПериодРегистрации) КАК ПериодРегистрации,
		|	МИНИМУМ(ТаблицаДокумента.Организация) КАК Организация,
		|	ТаблицаДокумента.ФизЛицо КАК ФизЛицо,
		|	МИНИМУМ(ТаблицаДокумента.ВидРасчета) КАК ВидРасчета,
		|	МИНИМУМ(ТаблицаДокумента.ГрафикРаботы) КАК ГрафикРаботы,
		|	МИНИМУМ(ВременнаяТаблицаКалендарь.Дата) КАК ПериодДействияНачало,
		|	МАКСИМУМ(КОНЕЦПЕРИОДА(ВременнаяТаблицаКалендарь.Дата, ДЕНЬ)) КАК ПериодДействияКонец,
		|	СУММА(ВременнаяТаблицаКалендарь.ЗначениеДней) КАК ОтработаноДней,
		|	НАЧАЛОПЕРИОДА(ВременнаяТаблицаКалендарь.Дата, МЕСЯЦ) КАК ПериодДействия
		|ИЗ
		|	ВременнаяТаблицаНачисления КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКалендарь КАК ВременнаяТаблицаКалендарь
		|		ПО ТаблицаДокумента.ГрафикРаботы = ВременнаяТаблицаКалендарь.ГрафикРаботы
		|			И (ВременнаяТаблицаКалендарь.Дата МЕЖДУ ТаблицаДокумента.ДатаНачала И ТаблицаДокумента.ДатаОкончания)
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ВременнаяТаблицаКалендарь.Дата, МЕСЯЦ),
		|	ТаблицаДокумента.ФизЛицо";
		
		
		//|ВЫБРАТЬ
		//|	ТаблицаДокумента.ПериодРегистрации КАК ПериодРегистрации,
		//|	ТаблицаДокумента.Организация КАК Организация,
		//|	ТаблицаДокумента.ФизЛицо КАК ФизЛицо,
		//|	ТаблицаДокумента.ВидРасчета КАК ВидРасчета,
		//|	ТаблицаДокумента.ГрафикРаботы КАК ГрафикРаботы,
		//|	ВременнаяТаблицаКалендарь.Дата КАК ПериодДействияНачало,
		//|	КОНЕЦПЕРИОДА(ВременнаяТаблицаКалендарь.Дата, ДЕНЬ) КАК ПериодДействияКонец,
		//|	ВременнаяТаблицаКалендарь.ЗначениеДней КАК ОтработаноДней,
		//|	НАЧАЛОПЕРИОДА(ВременнаяТаблицаКалендарь.Дата, МЕСЯЦ) КАК ПериодДействия
		//|ИЗ
		//|	ВременнаяТаблицаНачисления КАК ТаблицаДокумента
		//|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКалендарь КАК ВременнаяТаблицаКалендарь
		//|		ПО ТаблицаДокумента.ГрафикРаботы = ВременнаяТаблицаКалендарь.ГрафикРаботы
		//|			И (ВременнаяТаблицаКалендарь.Дата МЕЖДУ ТаблицаДокумента.ДатаНачала И ТаблицаДокумента.ДатаОкончания)
		//|ИТОГИ
		//|	МИНИМУМ(ПериодРегистрации),
		//|	МИНИМУМ(Организация),
		//|	МИНИМУМ(ФизЛицо),
		//|	МИНИМУМ(ВидРасчета),
		//|	МИНИМУМ(ГрафикРаботы),
		//|	МИНИМУМ(ПериодДействияНачало),
		//|	МАКСИМУМ(ПериодДействияКонец),
		//|	СУММА(ОтработаноДней)
		//|ПО
		//|	ПериодДействия";
	Запрос.УстановитьПараметр("ГодНачалоПериода", Год(ДатаНачала));
	Запрос.УстановитьПараметр("ГодКонецПериода", Год(ДатаОкончания));
	Запрос.УстановитьПараметр("НачалоПериода", ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", ДатаОкончания);

	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаНачисления = РезультатЗапроса.Выгрузить();
	ТаблицаНачисления.Очистить();
	
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл 
		НоваяСтрокаТаблицы = ТаблицаНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, Выборка);
	КонецЦикла;	
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаНачисления", ТаблицаНачисления);
КонецПроцедуры // СформироватьТаблицаПлановыеНачисленияИУдержания()

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
		|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
		|	ТаблицаДокумента.ФизЛицо,
		|	ТаблицаДокумента.ВидОтсутствия КАК ВидРасчета,
		|	ТаблицаДокумента.ДатаНачала,
		|	ТаблицаДокумента.ДатаОкончания,
		|	ТаблицаДокумента.Дней,
		|	ТаблицаДокумента.ГрафикРаботы
		|ПОМЕСТИТЬ ВременнаяТаблицаНачисления
		|ИЗ
		|	Документ.Неявка.Сотрудники КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Выполнить();
	
	СформироватьТаблицаНачисления(ДокументСсылка, СтруктураДополнительныеСвойства);
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецЕсли
