#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыПроведенияДокумента

// Формирует таблицу значений, содержащую данные для проведения по регистру бухгалтерии Хозрасчетный.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаХозрасчетный(СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Регистратор,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	&ВалютаРегламентированногоУчета КАК ВалютаВзаиморасчетов
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаТоварыУслугиПатентника.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаТоварыУслугиПатентника.СчетУчета КАК СчетУчета,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт1 ССЫЛКА Справочник.Склады
		|	    	ТОГДА ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт1
		|		КОГДА ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт2 ССЫЛКА Справочник.Склады
		|	    	ТОГДА ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт2
		|       ИНАЧЕ
		|           ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт3
		|   КОНЕЦ КАК Склад,
		|	ВременнаяТаблицаТоварыУслугиПатентника.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаТоварыУслугиПатентника.Сумма КАК Сумма,
		|	ВременнаяТаблицаТоварыУслугиПатентника.Сумма КАК СуммаВзаиморасчетов,
		|	ВременнаяТаблицаТоварыУслугиПатентника.Количество КАК Количество,
		|	ВременнаяТаблицаШапка.СчетУчета КАК КорСчет,
		|	ВременнаяТаблицаШапка.ФизЛицо КАК КорСубконто1,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто2,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
		|	&СодержаниеТовары КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТоварыУслугиПатентника КАК ВременнаяТаблицаТоварыУслугиПатентника
		|		ПО (ИСТИНА)
		|ГДЕ
		|	(ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт1 ССЫЛКА Справочник.Номенклатура
		|	ИЛИ ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт2 ССЫЛКА Справочник.Номенклатура
		|	ИЛИ ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт3 ССЫЛКА Справочник.Номенклатура)
		|	И НЕ ВременнаяТаблицаТоварыУслугиПатентника.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МБП)
		|   
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаТоварыУслугиПатентника.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаТоварыУслугиПатентника.СчетУчета КАК СчетУчета,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт1 ССЫЛКА Справочник.Склады
		|       	  ИЛИ ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт1 ССЫЛКА Справочник.ФизическиеЛица
		|	    	ТОГДА ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт1
		|		КОГДА ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт2 ССЫЛКА Справочник.Склады
		|             ИЛИ ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт2 ССЫЛКА Справочник.ФизическиеЛица
		|	    	ТОГДА ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт2
		|       ИНАЧЕ
		|           ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт3
		|   КОНЕЦ КАК Местонахождение,
		|	ВременнаяТаблицаТоварыУслугиПатентника.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаТоварыУслугиПатентника.Сумма КАК Сумма,
		|	ВременнаяТаблицаТоварыУслугиПатентника.Сумма КАК СуммаВзаиморасчетов,
		|	ВременнаяТаблицаТоварыУслугиПатентника.Количество КАК Количество,
		|	ВременнаяТаблицаШапка.СчетУчета КАК КорСчет,
		|	ВременнаяТаблицаШапка.ФизЛицо КАК КорСубконто1,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто2,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
		|	&СодержаниеТовары КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТоварыУслугиПатентника КАК ВременнаяТаблицаТоварыУслугиПатентника
		|		ПО (ИСТИНА)
		|ГДЕ
		|	(ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт1 ССЫЛКА Справочник.Номенклатура
		|	ИЛИ ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт2 ССЫЛКА Справочник.Номенклатура
		|	ИЛИ ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт3 ССЫЛКА Справочник.Номенклатура)
		|	И ВременнаяТаблицаТоварыУслугиПатентника.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МБП)
		|   
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", СтруктураДополнительныеСвойства.ДляПроведения.ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("СодержаниеТовары", НСтр("ru = 'Поступление товаров'")); 
	Запрос.УстановитьПараметр("СодержаниеМБП", НСтр("ru = 'Поступление МБП'"));  
	МассивРезультатов = Запрос.ВыполнитьПакет();

	ТаблицаРеквизиты = МассивРезультатов[0].Выгрузить();
	ТаблицаТовары = МассивРезультатов[1].Выгрузить();
	ТаблицаМБП = МассивРезультатов[2].Выгрузить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРеквизиты", ТаблицаРеквизиты);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаТовары", ТаблицаТовары);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаМБП", ТаблицаМБП);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		// Подготовка данных:
		// 1. Оплата поставщикам; 
		// 2. Прочее;
		// 3. Выплата заработной платы (вариант, когда галочка "ПоВедомости" не включена);
		// 4. Выплата заработной платы (вариант, когда галочка "ПоВедомости" включена);
		// 5. Обмен валют (с 1520 одной валюты на 1520 другой валюты); 
		// 6. Обмен валют (курсовые разницы);
		// 7. Товары и услуги.
		"ВЫБРАТЬ
		|	1 КАК Порядок,
		|	ТаблицаОплатаПоставщикам.СчетРасчетов КАК СчетДт,
		|	ТаблицаШапка.СчетУчета КАК СчетКт,
		|	ТаблицаОплатаПоставщикам.Контрагент КАК СубконтоДт1,
		|	ТаблицаОплатаПоставщикам.ДоговорКонтрагента КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	ТаблицаШапка.ФизЛицо КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ТаблицаШапка.Дата КАК Период,
		|	ТаблицаШапка.Организация,
		|	""Оплата поставщикам(аванс)"" КАК Содержание,
		|	ВЫБОР
		|		КОГДА ТаблицаОплатаПоставщикам.Валюта = &ВалютаРегламентированногоУчета
		|			ТОГДА ТаблицаОплатаПоставщикам.Сумма
		|		ИНАЧЕ ТаблицаОплатаПоставщикам.Сумма * ТаблицаОплатаПоставщикам.Курс
		|	КОНЕЦ КАК Сумма,
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ТаблицаОплатаПоставщикам.СчетРасчетов КАК ПланСчетов.Хозрасчетный).Валютный
		|			ТОГДА ТаблицаОплатаПоставщикам.Валюта
		|		ИНАЧЕ &ВалютаРегламентированногоУчета
		|	КОНЕЦ КАК ВалютаДт,
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ТаблицаОплатаПоставщикам.СчетРасчетов КАК ПланСчетов.Хозрасчетный).Валютный
		|			ТОГДА ТаблицаОплатаПоставщикам.Валюта
		|		ИНАЧЕ &ВалютаРегламентированногоУчета
		|	КОНЕЦ КАК ВалютаКт,
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ТаблицаОплатаПоставщикам.СчетРасчетов КАК ПланСчетов.Хозрасчетный).Валютный
		|			ТОГДА ТаблицаОплатаПоставщикам.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВалютнаяСуммаДт,
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ТаблицаОплатаПоставщикам.СчетРасчетов КАК ПланСчетов.Хозрасчетный).Валютный
		|			ТОГДА ТаблицаОплатаПоставщикам.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВалютнаяСуммаКт,
		|	0 КАК Количество,
		|	0 КАК КоличествоДт,
		|	0 КАК КоличествоКт
		|ИЗ
		|	ВременнаяТаблицаОплатаПоставщикам КАК ТаблицаОплатаПоставщикам
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ТаблицаОплатаПоставщикам.Сумма <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2,
		|	ТаблицаПрочее.СчетУчета,
		|	ТаблицаШапка.СчетУчета,
		|	ТаблицаПрочее.СубконтоДт1,
		|	ТаблицаПрочее.СубконтоДт2,
		|	ТаблицаПрочее.СубконтоДт3,
		|	ТаблицаШапка.ФизЛицо,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ТаблицаШапка.Дата,
		|	ТаблицаШапка.Организация,
		|	""Поступления по прочим операциям"",
		|	ТаблицаПрочее.Сумма,
		|	&ВалютаРегламентированногоУчета,
		|	&ВалютаРегламентированногоУчета,
		|	ВЫБОР
		|		КОГДА ТаблицаПрочее.СчетУчета.Валютный
		|			ТОГДА ТаблицаПрочее.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ТаблицаШапка.СчетУчета.Валютный
		|			ТОГДА ТаблицаПрочее.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	ВременнаяТаблицаПрочее КАК ТаблицаПрочее
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ТаблицаПрочее.Сумма <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НачисленнаяЗаработнаяПлата),
		|	ТаблицаШапка.СчетУчета,
		|	ТаблицаЗПСотрудникам.ФизЛицо,
		|	NULL,
		|	NULL,
		|	ТаблицаШапка.ФизЛицо,
		|	NULL,
		|	NULL,
		|	ТаблицаШапка.Дата,
		|	ТаблицаШапка.Организация,
		|	""Выплата ЗП сотрудникам"",
		|	ТаблицаЗПСотрудникам.Сумма,
		|	&ВалютаРегламентированногоУчета,
		|	&ВалютаРегламентированногоУчета,
		|	ТаблицаЗПСотрудникам.Сумма,
		|	ТаблицаЗПСотрудникам.Сумма,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	ВременнаяТаблицаЗП КАК ТаблицаЗПСотрудникам
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ТаблицаШапка.ПоВедомости
		|	И ТаблицаЗПСотрудникам.Сумма <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	4,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НачисленнаяЗаработнаяПлата),
		|	ТаблицаШапка.СчетУчета,
		|	ВедомостьНаВыплатуЗарплатыЗарплата.ФизЛицо,
		|	NULL,
		|	NULL,
		|	ТаблицаШапка.ФизЛицо,
		|	NULL,
		|	NULL,
		|	ТаблицаШапка.Дата,
		|	ТаблицаШапка.Организация,
		|	""Выплата ЗП по ведомости"",
		|	ВедомостьНаВыплатуЗарплатыЗарплата.СуммаПоКассе,
		|	&ВалютаРегламентированногоУчета,
		|	&ВалютаРегламентированногоУчета,
		|	ВедомостьНаВыплатуЗарплатыЗарплата.СуммаПоКассе,
		|	ВедомостьНаВыплатуЗарплатыЗарплата.СуммаПоКассе,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	ВременнаяТаблицаЗП КАК ТаблицаЗПСотрудникам
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВедомостьЗП.Зарплата КАК ВедомостьНаВыплатуЗарплатыЗарплата
		|		ПО ТаблицаЗПСотрудникам.Ведомость = ВедомостьНаВыплатуЗарплатыЗарплата.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ТаблицаШапка.ПоВедомости
		|	И ВедомостьНаВыплатуЗарплатыЗарплата.СуммаПоКассе <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	5,
		|	ТаблицаШапка.СчетУчета,
		|	ТаблицаШапка.СчетУчета,
		|	ТаблицаШапка.ФизЛицо,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ТаблицаШапка.ФизЛицо,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ТаблицаШапка.Дата,
		|	ТаблицаШапка.Организация,
		|	""Обмен валют подотчетником"",
		|	ВЫБОР
		|		КОГДА ТаблицаОбменВалют.ВалютаПосле = &ВалютаРегламентированногоУчета
		|			ТОГДА ТаблицаОбменВалют.СуммаПосле
		|		КОГДА ТаблицаОбменВалют.ВалютаДо = &ВалютаРегламентированногоУчета
		|			ТОГДА ТаблицаОбменВалют.СуммаДо
		|		ИНАЧЕ ТаблицаОбменВалют.СуммаПосле * ТаблицаОбменВалют.КурсНБКР
		|	КОНЕЦ,
		|	ТаблицаОбменВалют.ВалютаПосле,
		|	ТаблицаОбменВалют.ВалютаДо,
		|	ТаблицаОбменВалют.СуммаПосле,
		|	ТаблицаОбменВалют.СуммаДо,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	ВременнаяТаблицаОбменВалют КАК ТаблицаОбменВалют
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ТаблицаОбменВалют.ВалютаПосле = &ВалютаРегламентированногоУчета
		|				ТОГДА ТаблицаОбменВалют.СуммаПосле
		|			КОГДА ТаблицаОбменВалют.ВалютаДо = &ВалютаРегламентированногоУчета
		|				ТОГДА ТаблицаОбменВалют.СуммаДо
		|			ИНАЧЕ ТаблицаОбменВалют.СуммаПосле * ТаблицаОбменВалют.КурсНБКР
		|		КОНЕЦ <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	6,
		|	ВЫБОР
		|		КОГДА ТаблицаОбменВалют.ПризнакДтКт = ""Дт""
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|						ТОГДА ТаблицаШапка.СчетУчета
		|					ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.УбыткиОтОперационныхКурсовыхРазниц)
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|					ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.УбыткиОтОперационныхКурсовыхРазниц)
		|				ИНАЧЕ ТаблицаШапка.СчетУчета
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ТаблицаОбменВалют.ПризнакДтКт = ""Дт""
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|						ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыОтОперационныхКурсовыхРазниц)
		|					ИНАЧЕ ТаблицаШапка.СчетУчета
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|					ТОГДА ТаблицаШапка.СчетУчета
		|				ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыОтОперационныхКурсовыхРазниц)
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ТаблицаОбменВалют.ПризнакДтКт = ""Дт""
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|						ТОГДА ТаблицаШапка.ФизЛицо
		|					ИНАЧЕ НЕОПРЕДЕЛЕНО
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|					ТОГДА НЕОПРЕДЕЛЕНО
		|				ИНАЧЕ ТаблицаШапка.ФизЛицо
		|			КОНЕЦ
		|	КОНЕЦ,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВЫБОР
		|		КОГДА ТаблицаОбменВалют.ПризнакДтКт = ""Дт""
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|					ТОГДА НЕОПРЕДЕЛЕНО
		|					ИНАЧЕ ТаблицаШапка.ФизЛицо
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|					ТОГДА ТаблицаШапка.ФизЛицо
		|					ИНАЧЕ НЕОПРЕДЕЛЕНО
		|			КОНЕЦ
		|	КОНЕЦ,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ТаблицаШапка.Дата,
		|	ТаблицаШапка.Организация,
		|	""Операционная курсовая разница"",
		|	ВЫБОР
		|		КОГДА ТаблицаОбменВалют.ПризнакДтКт = ""Дт""
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|						ТОГДА -ТаблицаОбменВалют.СуммаОКР
		|					ИНАЧЕ ТаблицаОбменВалют.СуммаОКР
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|					ТОГДА -ТаблицаОбменВалют.СуммаОКР
		|				ИНАЧЕ ТаблицаОбменВалют.СуммаОКР
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ТаблицаОбменВалют.ПризнакДтКт = ""Дт""
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|						ТОГДА ТаблицаОбменВалют.ВалютаДо
		|					ИНАЧЕ NULL
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|					ТОГДА NULL
		|				ИНАЧЕ ТаблицаОбменВалют.ВалютаПосле
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ТаблицаОбменВалют.ПризнакДтКт = ""Дт""
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|						ТОГДА NULL
		|					ИНАЧЕ ТаблицаОбменВалют.ВалютаДо
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|					ТОГДА ТаблицаОбменВалют.ВалютаПосле
		|				ИНАЧЕ NULL
		|			КОНЕЦ
		|	КОНЕЦ,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	ВременнаяТаблицаОбменВалют КАК ТаблицаОбменВалют
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ТаблицаОбменВалют.ПризнакДтКт = ""Дт""
		|				ТОГДА ВЫБОР
		|						КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|							ТОГДА -ТаблицаОбменВалют.СуммаОКР
		|						ИНАЧЕ ТаблицаОбменВалют.СуммаОКР
		|					КОНЕЦ
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|						ТОГДА -ТаблицаОбменВалют.СуммаОКР
		|					ИНАЧЕ ТаблицаОбменВалют.СуммаОКР
		|				КОНЕЦ
		|		КОНЕЦ <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	7,
		|	ТаблицаТоварыУслугиПатентника.СчетУчета,
		|	ТаблицаШапка.СчетУчета,
		|	ТаблицаТоварыУслугиПатентника.СубконтоДт1,
		|	ТаблицаТоварыУслугиПатентника.СубконтоДт2,
		|	ТаблицаТоварыУслугиПатентника.СубконтоДт3,
		|	ТаблицаШапка.ФизЛицо,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ТаблицаШапка.Дата,
		|	ТаблицаШапка.Организация,
		|	""Расходы (патенты)"",
		|	ТаблицаТоварыУслугиПатентника.Сумма,
		|	&ВалютаРегламентированногоУчета,
		|	&ВалютаРегламентированногоУчета,
		|	ВЫБОР
		|		КОГДА ТаблицаТоварыУслугиПатентника.СчетУчета.Валютный
		|			ТОГДА ТаблицаТоварыУслугиПатентника.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ТаблицаШапка.СчетУчета.Валютный
		|			ТОГДА ТаблицаТоварыУслугиПатентника.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	ВременнаяТаблицаТоварыУслугиПатентника КАК ТаблицаТоварыУслугиПатентника
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	(НЕ ТаблицаТоварыУслугиПатентника.СубконтоДт1 ССЫЛКА Справочник.Номенклатура
		|	И НЕ ТаблицаТоварыУслугиПатентника.СубконтоДт2 ССЫЛКА Справочник.Номенклатура
		|	И НЕ ТаблицаТоварыУслугиПатентника.СубконтоДт3 ССЫЛКА Справочник.Номенклатура)
		|	И ТаблицаТоварыУслугиПатентника.Сумма <> 0";
	
		
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", СтруктураДополнительныеСвойства.ДляПроведения.ВалютаРегламентированногоУчета);			
	РезультатЗапроса = Запрос.Выполнить();	
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаХозрасчетный", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДенежныеСредства()

// Формирует таблицу значений, содержащую данные для проведения по регистру "АвансыПодотчетника".
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаАвансыПодотчетника(СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Документ,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.ФизЛицо КАК ФизЛицо,
		|	ВременнаяТаблицаДвижениеДенежныхСредств.Валюта КАК Валюта,
		|	ВременнаяТаблицаДвижениеДенежныхСредств.ОстатокНаКонец КАК Сумма
		|ИЗ
		|	ВременнаяТаблицаДвижениеДенежныхСредств КАК ВременнаяТаблицаДвижениеДенежныхСредств
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)";	
	РезультатЗапроса = Запрос.Выполнить();	
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаАвансыПодотчетника", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	АвансовыйОтчет.Ссылка,
		|	АвансовыйОтчет.Организация,
		|	АвансовыйОтчет.Дата,
		|	АвансовыйОтчет.Организация,
		|	АвансовыйОтчет.ФизЛицо,
		|	АвансовыйОтчет.СчетУчета,
		|	АвансовыйОтчет.ПоВедомости
		|ПОМЕСТИТЬ ВременнаяТаблицаШапка
		|ИЗ
		|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
		|ГДЕ
		|	АвансовыйОтчет.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АвансовыйОтчетДвижениеДенежныхСредств.Валюта,
		|	АвансовыйОтчетДвижениеДенежныхСредств.ОстатокНаКонец
		|ПОМЕСТИТЬ ВременнаяТаблицаДвижениеДенежныхСредств
		|ИЗ
		|	Документ.АвансовыйОтчет.ДвижениеДенежныхСредств КАК АвансовыйОтчетДвижениеДенежныхСредств
		|ГДЕ
		|	АвансовыйОтчетДвижениеДенежныхСредств.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АвансовыйОтчетОплатаПоставщикам.Контрагент,
		|	АвансовыйОтчетОплатаПоставщикам.ДоговорКонтрагента,
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка,
		|	АвансовыйОтчетОплатаПоставщикам.Сумма,
		|	АвансовыйОтчетОплатаПоставщикам.Валюта,
		|	АвансовыйОтчетОплатаПоставщикам.Курс,
		|	АвансовыйОтчетОплатаПоставщикам.СчетРасчетов
		|ПОМЕСТИТЬ ВременнаяТаблицаОплатаПоставщикам
		|ИЗ
		|	Документ.АвансовыйОтчет.ОплатаПоставщикам КАК АвансовыйОтчетОплатаПоставщикам
		|ГДЕ
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АвансовыйОтчетПрочее.СчетУчета,
		|	АвансовыйОтчетПрочее.СубконтоДт1,
		|	АвансовыйОтчетПрочее.СубконтоДт2,
		|	АвансовыйОтчетПрочее.СубконтоДт3,
		|	АвансовыйОтчетПрочее.Сумма,
		|	АвансовыйОтчетПрочее.Ссылка
		|ПОМЕСТИТЬ ВременнаяТаблицаПрочее
		|ИЗ
		|	Документ.АвансовыйОтчет.Прочее КАК АвансовыйОтчетПрочее
		|ГДЕ
		|	АвансовыйОтчетПрочее.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АвансовыйОтчетВыплатаЗаработнойПлаты.Ссылка,
		|	АвансовыйОтчетВыплатаЗаработнойПлаты.Ведомость,
		|	АвансовыйОтчетВыплатаЗаработнойПлаты.Сумма,
		|	АвансовыйОтчетВыплатаЗаработнойПлаты.ФизЛицо
		|ПОМЕСТИТЬ ВременнаяТаблицаЗП
		|ИЗ
		|	Документ.АвансовыйОтчет.ВыплатаЗаработнойПлаты КАК АвансовыйОтчетВыплатаЗаработнойПлаты
		|ГДЕ
		|	АвансовыйОтчетВыплатаЗаработнойПлаты.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АвансовыйОтчетОбменВалют.Ссылка,
		|	АвансовыйОтчетОбменВалют.СуммаДо,
		|	АвансовыйОтчетОбменВалют.ВалютаДо,
		|	АвансовыйОтчетОбменВалют.СуммаПосле,
		|	АвансовыйОтчетОбменВалют.ВалютаПосле,
		|	АвансовыйОтчетОбменВалют.КурсОтчета,
		|	КурсВалюты.Курс КАК КурсНБКР,
		|	ВЫБОР
		|		КОГДА АвансовыйОтчетОбменВалют.ВалютаДо <> &ВалютаРегламентированногоУчета
		|			ТОГДА ""Дт""
		|		КОГДА АвансовыйОтчетОбменВалют.ВалютаДо = &ВалютаРегламентированногоУчета
		|				И АвансовыйОтчетОбменВалют.ВалютаДо <> АвансовыйОтчетОбменВалют.ВалютаПосле
		|			ТОГДА ""Кт""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ПризнакДтКт,
		|	ВЫБОР
		|		КОГДА АвансовыйОтчетОбменВалют.ВалютаДо <> &ВалютаРегламентированногоУчета
		|			ТОГДА АвансовыйОтчетОбменВалют.СуммаДо * КурсВалюты.Курс - ВЫБОР
		|					КОГДА АвансовыйОтчетОбменВалют.ВалютаПосле = &ВалютаРегламентированногоУчета
		|						ТОГДА АвансовыйОтчетОбменВалют.СуммаПосле
		|					КОГДА АвансовыйОтчетОбменВалют.ВалютаДо = &ВалютаРегламентированногоУчета
		|						ТОГДА АвансовыйОтчетОбменВалют.СуммаДо
		|					ИНАЧЕ АвансовыйОтчетОбменВалют.СуммаПосле * КурсВалютыОтчета.Курс
		|				КОНЕЦ
		|		КОГДА АвансовыйОтчетОбменВалют.ВалютаДо = &ВалютаРегламентированногоУчета
		|				И АвансовыйОтчетОбменВалют.ВалютаДо <> АвансовыйОтчетОбменВалют.ВалютаПосле
		|			ТОГДА АвансовыйОтчетОбменВалют.СуммаПосле * КурсВалютыОтчета.Курс - ВЫБОР
		|					КОГДА АвансовыйОтчетОбменВалют.ВалютаПосле = &ВалютаРегламентированногоУчета
		|						ТОГДА АвансовыйОтчетОбменВалют.СуммаПосле
		|					КОГДА АвансовыйОтчетОбменВалют.ВалютаДо = &ВалютаРегламентированногоУчета
		|						ТОГДА АвансовыйОтчетОбменВалют.СуммаДо
		|					ИНАЧЕ АвансовыйОтчетОбменВалют.СуммаПосле * КурсВалютыОтчета.Курс
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаОКР
		|ПОМЕСТИТЬ ВременнаяТаблицаОбменВалют
		|ИЗ
		|	Документ.АвансовыйОтчет.ОбменВалют КАК АвансовыйОтчетОбменВалют
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсВалюты
		|		ПО АвансовыйОтчетОбменВалют.ВалютаДо = КурсВалюты.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсВалютыОтчета
		|		ПО АвансовыйОтчетОбменВалют.ВалютаПосле = КурсВалютыОтчета.Валюта
		|ГДЕ
		|	АвансовыйОтчетОбменВалют.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АвансовыйОтчетТоварыУслуги.Ссылка,
		|	АвансовыйОтчетТоварыУслуги.НомерСтроки,
		|	АвансовыйОтчетТоварыУслуги.Номенклатура,
		|	АвансовыйОтчетТоварыУслуги.Количество,
		|	АвансовыйОтчетТоварыУслуги.Сумма,
		|	АвансовыйОтчетТоварыУслуги.СчетУчета,
		|	АвансовыйОтчетТоварыУслуги.СубконтоДт1,
		|	АвансовыйОтчетТоварыУслуги.СубконтоДт2,
		|	АвансовыйОтчетТоварыУслуги.СубконтоДт3
		|ПОМЕСТИТЬ ВременнаяТаблицаТоварыУслугиПатентника
		|ИЗ
		|	Документ.АвансовыйОтчет.ТоварыУслуги КАК АвансовыйОтчетТоварыУслуги
		|ГДЕ
		|	АвансовыйОтчетТоварыУслуги.Ссылка = &Ссылка";
		
	Запрос.УстановитьПараметр("Ссылка", 	ДокументСсылка);
	Запрос.УстановитьПараметр("Дата", 		ДокументСсылка.Дата);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", СтруктураДополнительныеСвойства.ДляПроведения.ВалютаРегламентированногоУчета);

	Запрос.Выполнить();
	
	СформироватьТаблицаХозрасчетный(СтруктураДополнительныеСвойства);
	СформироватьТаблицаАвансыПодотчетника(СтруктураДополнительныеСвойства);
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает название месяца по его номеру 
Функция МесяцПрописью(Дата, ВРодительномПадеже = Ложь)
	НомерМесяца = Месяц(Дата);
	Если НомерМесяца = 1 Тогда
		Возврат ?(ВРодительномПадеже, "января", "Январь");
	ИначеЕсли НомерМесяца = 2 Тогда
		Возврат ?(ВРодительномПадеже, "февраля", "Февраль");
	ИначеЕсли НомерМесяца = 3 Тогда
		Возврат ?(ВРодительномПадеже, "марта", "Март");
	ИначеЕсли НомерМесяца = 4 Тогда
		Возврат ?(ВРодительномПадеже, "апреля", "Апрель");
	ИначеЕсли НомерМесяца = 5 Тогда
		Возврат ?(ВРодительномПадеже, "мая", "Май");
	ИначеЕсли НомерМесяца = 6 Тогда
		Возврат ?(ВРодительномПадеже, "июня", "Июнь");
	ИначеЕсли НомерМесяца = 7 Тогда
		Возврат ?(ВРодительномПадеже, "июля", "Июль");
	ИначеЕсли НомерМесяца = 8 Тогда
		Возврат ?(ВРодительномПадеже, "августа", "Август");
	ИначеЕсли НомерМесяца = 9 Тогда
		Возврат ?(ВРодительномПадеже, "сентября", "Сентябрь");
	ИначеЕсли НомерМесяца = 10 Тогда
		Возврат ?(ВРодительномПадеже, "октября", "Октябрь");
	ИначеЕсли НомерМесяца = 11 Тогда
		Возврат ?(ВРодительномПадеже, "ноября", "Ноябрь");
	ИначеЕсли НомерМесяца = 12 Тогда
		Возврат ?(ВРодительномПадеже, "декабря", "Декабрь");
	КонецЕсли;		
КонецФункции

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

Функция ДанныеТабличныхЧастей(ШапкаДокумента)
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("СчетРасчета",	ШапкаДокумента.СчетРасчетовСПодотчетнымЛицом);
	Запрос.УстановитьПараметр("Сотрудник",  	ШапкаДокумента.ПодотчетноеЛицо);
	Запрос.УстановитьПараметр("Организация",	ШапкаДокумента.Организация);
	Запрос.УстановитьПараметр("ДатаИтогов", 	ШапкаДокумента.Ссылка.МоментВремени());
	Запрос.УстановитьПараметр("Ссылка",			ШапкаДокумента.Ссылка);
	Запрос.УстановитьПараметр("ДатаКонОстатков",ШапкаДокумента.Ссылка.Дата+1);  
	Запрос.УстановитьПараметр("ВалРег",      	ВалютаРегламентированногоУчета);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(АвансовыйОтчетОплатаПоставщикам.Сумма * АвансовыйОтчетОплатаПоставщикам.Курс) КАК СуммаВсего
	|ПОМЕСТИТЬ ВременнаяТаблицаТабличныеЧасти
	|ИЗ
	|	Документ.АвансовыйОтчет.ОплатаПоставщикам КАК АвансовыйОтчетОплатаПоставщикам
	|ГДЕ
	|	АвансовыйОтчетОплатаПоставщикам.Ссылка.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(АвансовыйОтчетТоварыУслуги.Сумма)
	|ИЗ
	|	Документ.АвансовыйОтчет.ТоварыУслуги КАК АвансовыйОтчетТоварыУслуги
	|ГДЕ
	|	АвансовыйОтчетТоварыУслуги.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(АвансовыйОтчетПрочее.Сумма)
	|ИЗ
	|	Документ.АвансовыйОтчет.Прочее КАК АвансовыйОтчетПрочее
	|ГДЕ
	|	АвансовыйОтчетПрочее.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(АвансовыйОтчетВыплатаЗаработнойПлаты.Сумма)
	|ИЗ
	|	Документ.АвансовыйОтчет.ВыплатаЗаработнойПлаты КАК АвансовыйОтчетВыплатаЗаработнойПлаты
	|ГДЕ
	|	АвансовыйОтчетВыплатаЗаработнойПлаты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОстатки.СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(0) КАК Выдано,
	|	СУММА(0) КАК Расход,
	|	СУММА(0) КАК Приход,
	|	СУММА(0) КАК КонОстаток,
	|	СУММА(0) КАК СуммаВсего
	|ПОМЕСТИТЬ ВременнаяТаблицаСвод
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаИтогов,
	|			Счет = &СчетРасчета,
	|			,
	|			Организация = &Организация
	|				И Субконто1 = &Сотрудник) КАК ХозрасчетныйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(АвансовыйОтчетОбменВалют.СуммаДо),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0)
	|ИЗ
	|	Документ.АвансовыйОтчет.ОбменВалют КАК АвансовыйОтчетОбменВалют
	|ГДЕ
	|	АвансовыйОтчетОбменВалют.Ссылка.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(АвансовыйОтчетОбменВалют.СуммаПосле),
	|	СУММА(0),
	|	СУММА(0)
	|ИЗ
	|	Документ.АвансовыйОтчет.ОбменВалют КАК АвансовыйОтчетОбменВалют
	|ГДЕ
	|	АвансовыйОтчетОбменВалют.Ссылка.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(ХозрасчетныйОстатки.СуммаОстаток),
	|	СУММА(0)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаКонОстатков,
	|			Счет = &СчетРасчета,
	|			,
	|			Организация = &Организация
	|				И Субконто1 = &Сотрудник) КАК ХозрасчетныйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(ВременнаяТаблицаТабличныеЧасти.СуммаВсего)
	|ИЗ
	|	ВременнаяТаблицаТабличныеЧасти КАК ВременнаяТаблицаТабличныеЧасти
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВременнаяТаблицаСвод.СуммаОстаток) КАК НачОстаток,
	|	СУММА(ВременнаяТаблицаСвод.Выдано) КАК Выдано,
	|	СУММА(ВременнаяТаблицаСвод.Расход) КАК Расход,
	|	СУММА(ВременнаяТаблицаСвод.Приход) КАК Приход,
	|	СУММА(ВременнаяТаблицаСвод.КонОстаток) КАК КонОстаток,
	|	СУММА(ВременнаяТаблицаСвод.СуммаВсего) КАК Израсходовано
	|ИЗ
	|	ВременнаяТаблицаСвод КАК ВременнаяТаблицаСвод";
	Результат = Запрос.Выполнить();
	Возврат Результат;

КонецФункции // ПолучитьДанныеТабЧастей()

Функция ПечатьАвансовогоОтчета(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);

	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ПерваяСсылкаТовары 		= Истина;
	ПерваяСсылкаПроводки 	= Истина;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати = "АвансовыйОтчет_АвансовыйОтчет";	
	
	СтрокаПрописи = ВалютаРегламентированногоУчета.ПараметрыПрописи;
	СтрокаСом = "";
	СтрокаТн  = "";
	Поз1 = Найти(СтрокаПрописи, ",");  
	Если Поз1 <> 0 Тогда 
		СтрокаСом 	= Лев(СтрокаПрописи,Поз1-1);
		СтрокаПрописи = Сред(СтрокаПрописи,Поз1+1);
		Поз2 = Найти(СтрокаПрописи, ",");  
		Если Поз2 <> 0 Тогда 
			СтрокаПрописи = Сред(СтрокаПрописи,Поз2+1);
			Поз3 = Найти(СтрокаПрописи, ",");  
			Если Поз2 <> 0 Тогда 
				СтрокаПрописи = Сред(СтрокаПрописи,Поз3+1);
				Поз4 = Найти(СтрокаПрописи, ",");  
				Если Поз4 <> 0 Тогда 
					СтрокаПрописи = СокрЛП(Сред(СтрокаПрописи,Поз4+1));
					Поз5 = Найти(СтрокаПрописи, ",");  
					Если Поз4 <> 0 Тогда 
						СтрокаТн = Лев(СтрокаПрописи,Поз5-1);					
					КонецЕсли;	
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	АвансовыйОтчет.Номер КАК Номер,
		|	АвансовыйОтчет.Дата КАК ДатаДокумента,
		|	АвансовыйОтчет.ФизЛицо КАК ПодотчетноеЛицо,
		|	АвансовыйОтчет.ФизЛицо.Представление КАК ПредставлениеПодотчетногоЛица,
		|	АвансовыйОтчет.Организация.Ссылка КАК Организация,
		|	АвансовыйОтчет.СчетУчета КАК СчетРасчетовСПодотчетнымЛицом,
		|	АвансовыйОтчет.СуммаДокумента КАК СуммаДокумента,
		|	АвансовыйОтчет.Ссылка КАК Ссылка,
		|	АвансовыйОтчет.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное
		|ИЗ
		|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
		|ГДЕ
		|	АвансовыйОтчет.Ссылка В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйДвиженияССубконто.Регистратор КАК Ссылка,
		|	ХозрасчетныйДвиженияССубконто.СчетДт КАК СчетДт,
		|	ХозрасчетныйДвиженияССубконто.СчетКт КАК СчетКт,
		|	ХозрасчетныйДвиженияССубконто.Сумма КАК Сумма,
		|	ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаДт КАК ВалютнаяСуммаДт,
		|	ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаКт КАК ВалютнаяСуммаКт,
		|	ХозрасчетныйДвиженияССубконто.СубконтоДт1 КАК СубконтоДт,
		|	ХозрасчетныйДвиженияССубконто.СубконтоКт1 КАК СубконтоКт,
		|	ХозрасчетныйДвиженияССубконто.ВалютаДт КАК ВалютаДт,
		|	ХозрасчетныйДвиженияССубконто.ВалютаКт КАК ВалютаКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(, , Регистратор В (&МассивОбъектов), , ) КАК ХозрасчетныйДвиженияССубконто
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	ХозрасчетныйДвиженияССубконто.НомерСтроки
		|ИТОГИ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	1 КАК Поле1,
		|	АвансовыйОтчетОплатаПоставщикам.НомерСтроки КАК НомерСтроки,
		|	АвансовыйОтчетОплатаПоставщикам.НомерВходящегоДокумента КАК ДокументНомер,
		|	АвансовыйОтчетОплатаПоставщикам.ДатаВходящегоДокумента КАК ДокументДата,
		|	"" Оплата поставщику:"" + (ВЫРАЗИТЬ(АвансовыйОтчетОплатаПоставщикам.Контрагент.НаименованиеПолное КАК СТРОКА(50))) КАК НаименованиеРасхода,
		|	СУММА(АвансовыйОтчетОплатаПоставщикам.Сумма * АвансовыйОтчетОплатаПоставщикам.Курс) КАК ПоОтчету,
		|	АвансовыйОтчетОплатаПоставщикам.Сумма КАК ПоОтчетуВВалюте,
		|	АвансовыйОтчетОплатаПоставщикам.СчетРасчетов КАК СчетЗатрат,
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка.СчетУчета КАК СчетРасчетов,
		|	АвансовыйОтчетОплатаПоставщикам.Валюта КАК Валюта,
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.АвансовыйОтчет.ОплатаПоставщикам КАК АвансовыйОтчетОплатаПоставщикам
		|ГДЕ
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	АвансовыйОтчетОплатаПоставщикам.НомерВходящегоДокумента,
		|	АвансовыйОтчетОплатаПоставщикам.ДатаВходящегоДокумента,
		|	ВЫРАЗИТЬ(АвансовыйОтчетОплатаПоставщикам.Содержание КАК СТРОКА(1000)),
		|	АвансовыйОтчетОплатаПоставщикам.СчетРасчетов,
		|	АвансовыйОтчетОплатаПоставщикам.НомерСтроки,
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка.СчетУчета,
		|	АвансовыйОтчетОплатаПоставщикам.Валюта,
		|	"" Оплата поставщику:"" + (ВЫРАЗИТЬ(АвансовыйОтчетОплатаПоставщикам.Контрагент.НаименованиеПолное КАК СТРОКА(50))),
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка,
		|	АвансовыйОтчетОплатаПоставщикам.Сумма
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2,
		|	АвансовыйОтчетТоварыУслуги.НомерСтроки,
		|	"""",
		|	"""",
		|	АвансовыйОтчетТоварыУслуги.Номенклатура.Наименование,
		|	СУММА(АвансовыйОтчетТоварыУслуги.Сумма),
		|	АвансовыйОтчетТоварыУслуги.Сумма,
		|	АвансовыйОтчетТоварыУслуги.СчетУчета,
		|	АвансовыйОтчетТоварыУслуги.Ссылка.СчетУчета,
		|	МАКСИМУМ(&ВалютаРегламентированногоУчета),
		|	АвансовыйОтчетТоварыУслуги.Ссылка
		|ИЗ
		|	Документ.АвансовыйОтчет.ТоварыУслуги КАК АвансовыйОтчетТоварыУслуги
		|ГДЕ
		|	АвансовыйОтчетТоварыУслуги.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	АвансовыйОтчетТоварыУслуги.СчетУчета,
		|	АвансовыйОтчетТоварыУслуги.Номенклатура.Наименование,
		|	АвансовыйОтчетТоварыУслуги.Ссылка.СчетУчета,
		|	АвансовыйОтчетТоварыУслуги.НомерСтроки,
		|	АвансовыйОтчетТоварыУслуги.Ссылка,
		|	АвансовыйОтчетТоварыУслуги.Сумма
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	АвансовыйОтчетПрочее.НомерСтроки,
		|	АвансовыйОтчетПрочее.НомерВходящегоДокумента,
		|	АвансовыйОтчетПрочее.ДатаВходящегоДокумента,
		|	ВЫРАЗИТЬ(АвансовыйОтчетПрочее.ВидДокВходящий КАК СТРОКА(50)),
		|	СУММА(АвансовыйОтчетПрочее.Сумма),
		|	АвансовыйОтчетПрочее.Сумма,
		|	АвансовыйОтчетПрочее.СчетУчета,
		|	АвансовыйОтчетПрочее.Ссылка.СчетУчета,
		|	&ВалютаРегламентированногоУчета,
		|	АвансовыйОтчетПрочее.Ссылка
		|ИЗ
		|	Документ.АвансовыйОтчет.Прочее КАК АвансовыйОтчетПрочее
		|ГДЕ
		|	АвансовыйОтчетПрочее.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	АвансовыйОтчетПрочее.НомерВходящегоДокумента,
		|	АвансовыйОтчетПрочее.ДатаВходящегоДокумента,
		|	ВЫРАЗИТЬ(АвансовыйОтчетПрочее.ВидДокВходящий КАК СТРОКА(50)),
		|	АвансовыйОтчетПрочее.СчетУчета,
		|	АвансовыйОтчетПрочее.НомерСтроки,
		|	АвансовыйОтчетПрочее.Ссылка.СчетУчета,
		|	АвансовыйОтчетПрочее.Ссылка,
		|	АвансовыйОтчетПрочее.Сумма
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	4,
		|	NULL,
		|	NULL,
		|	NULL,
		|	""Выплачено расходными ордерами"",
		|	СУММА(ВыплатаЗарплатыЗарплата.СуммаПоКассе),
		|	СУММА(ВыплатаЗарплатыЗарплата.СуммаПоКассе),
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НачисленнаяЗаработнаяПлата),
		|	АвансовыйОтчет.Ссылка.СчетУчета,
		|	&ВалютаРегламентированногоУчета,
		|	АвансовыйОтчет.Ссылка
		|ИЗ
		|	Документ.ВедомостьЗП.Зарплата КАК ВыплатаЗарплатыЗарплата
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.ВыплатаЗаработнойПлаты КАК АвансовыйОтчет
		|		ПО ВыплатаЗарплатыЗарплата.Ссылка = АвансовыйОтчет.Ведомость
		|ГДЕ
		|	АвансовыйОтчет.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	АвансовыйОтчет.Ссылка.СчетУчета,
		|	АвансовыйОтчет.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|ИТОГИ
		|	МАКСИМУМ(Валюта)
		|ПО
		|	Ссылка";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивОбъектов", 					МассивОбъектов);		
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", 	ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("Дата", 								МассивОбъектов[0].Дата);
	Запрос.УстановитьПараметр("Организация", 						МассивОбъектов[0].Организация);
	
	РезультатПакет =  Запрос.ВыполнитьПакет();	
	
	Шапка = РезультатПакет[0].Выбрать();
	Пока Шапка.Следующий() Цикл
	
		Ссылка = Шапка.Ссылка;	
		
		Макет         =  ПолучитьМакет("АвансовыйОтчет");
		
		ОбластьМакета =  Макет.ПолучитьОбласть("Титул1");
		
		//******* ТИТУЛЬНЫЙ ЛИСТ*******
		КурсоваяРазница = 0;
		
		ДанныеПодотчетногоЛица = БухгалтерскийУчетСервер.ДанныеФизЛица(Шапка.Организация, Шапка.ПодотчетноеЛицо, Шапка.ДатаДокумента);
		
		ПодотчетноеЛицо = ДанныеПодотчетногоЛица.Представление;
		ТабельныйНомер =  Шапка.ПодотчетноеЛицо.Код; 
		Подразделение =   ДанныеПодотчетногоЛица.Подразделение;
		Должность =       ДанныеПодотчетногоЛица.Должность;
		
		// Выводим титульный лист авансового отчета
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеПодотчетногоЛица = ПодотчетноеЛицо;
		КопияПодотчетноеЛицо = ПодотчетноеЛицо;
		
		ОбластьМакета.Параметры.ТабельныйНомер = ТабельныйНомер;
		ОбластьМакета.Параметры.ПредставлениеПодразделения = Подразделение;
		ОбластьМакета.Параметры.ДолжностьПодотчетногоЛицаПредставление = Должность;
		ОбластьМакета.Параметры.НомерДокумента  = Шапка.Номер; 
		
		ПредставлениеОрганизации = Шапка.ОрганизацияНаименованиеПолное;
		
		Руководители = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизаций(Шапка.Организация, Шапка.ДатаДокумента);
		
		Руководитель = Руководители.Руководитель;
		Бухгалтер    = Руководители.ГлавныйБухгалтер;
		
		
		ОбластьМакета.Параметры.ПредставлениеОрганизации           = СокрЛП(ПредставлениеОрганизации);
		ОбластьМакета.Параметры.РуководительПредставление          = Руководитель;
		
		//******Получаем данные таб части авансов******
		
		// функция получает данные документа		
		СтрокаСуммы = "";
		Результат = ДанныеТабличныхЧастей(Шапка);
		ВыборкаТабличныхЧастей = Результат.Выбрать();
		Пока ВыборкаТабличныхЧастей.Следующий() Цикл
			Если ВыборкаТабличныхЧастей.Израсходовано <> 0 тогда 
				СтрокаСуммы   = СтрокаСуммы + Строка(ВыборкаТабличныхЧастей.Израсходовано) + " " + ВалютаРегламентированногоУчета + "; ";
			КонецЕсли;
		КонецЦикла;
		ВыборкаТабличныхЧастей.Сбросить();
		
		ОбластьМакета.Параметры.СуммаОтчетаЧислом = СтрокаСуммы;
		ТабДокумент.Вывести(ОбластьМакета);
		ОбластьСтроки = Макет.ПолучитьОбласть("ШапкаСтроки");
		ТабДокумент.Вывести(ОбластьСтроки);
		ОбластьСтроки = Макет.ПолучитьОбласть("Строки");
		
		Пока ВыборкаТабличныхЧастей.Следующий() Цикл
			Если ЗначениеЗаполнено(ВыборкаТабличныхЧастей.Выдано) 
				ИЛИ ЗначениеЗаполнено(ВыборкаТабличныхЧастей.Приход) 
				ИЛИ ЗначениеЗаполнено(ВыборкаТабличныхЧастей.Израсходовано) Тогда
				ОбластьСтроки.Параметры.НачОстаток             =  ВыборкаТабличныхЧастей.НачОстаток;
				ОбластьСтроки.Параметры.Израсходовано          =  ВыборкаТабличныхЧастей.Израсходовано;
				ОбластьСтроки.Параметры.СуммаОбмена            =  ?(ВыборкаТабличныхЧастей.Расход <> 0,
					"-" + Формат(ВыборкаТабличныхЧастей.Расход,"ЧЦ=15; ЧДЦ=2; ЧН=") + Символы.ПС, "") 
						+ ?(ВыборкаТабличныхЧастей.Приход <> 0, "+" 
						+ Формат(ВыборкаТабличныхЧастей.Приход,"ЧЦ=15; ЧДЦ=2; ЧН="),
					"");
				ОбластьСтроки.Параметры.Итого                  =  ВыборкаТабличныхЧастей.НачОстаток 
					- ?(ВыборкаТабличныхЧастей.Расход <> 0, ВыборкаТабличныхЧастей.Расход, 0) + ?(ВыборкаТабличныхЧастей.Приход <> 0, ВыборкаТабличныхЧастей.Приход,0);
				ОбластьСтроки.Параметры.КонечныйОстаток 	   =  ВыборкаТабличныхЧастей.КонОстаток;
				ТабДокумент.Вывести(ОбластьСтроки);
			КонецЕсли;
		КонецЦикла;
		
		// выводим в отчет таблицу документов
		Если Ссылка.ТаблицаДокументов.Количество()<>0 Тогда
			
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТабДокументов");
			ТабДокумент.Вывести(ОбластьМакета);
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокиТабДокументов");
			
			Для каждого СТЧ из Ссылка.ТаблицаДокументов Цикл
				ОбластьМакета.Параметры.Документ  = СТЧ.ДокументОплаты;
				ОбластьМакета.Параметры.Валюта    = СТЧ.Валюта;
				ОбластьМакета.Параметры.СуммаДокумента  = Формат(СТЧ.СуммаДокумента,"ЧЦ=15; ЧДЦ=2");
				ОбластьМакета.Параметры.Остаток   = Формат(СТЧ.Остаток,"ЧЦ=15; ЧДЦ=2") ;
				ТабДокумент.Вывести(ОбластьМакета);
			КонецЦикла;
		КонецЕсли;
		
		//	Выводим таблицу обмена если она заполнена			
		Если Ссылка.ОбменВалют.Количество()<>0 Тогда
			
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаОбмен");
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокиОбмен");
			
			Для каждого СТЧ из Ссылка.ОбменВалют Цикл
				ОбластьМакета.Параметры.ВалютаПрихода  = Формат(СТЧ.ВалютаДо,"ЧЦ=15; ЧДЦ=2");
				ОбластьМакета.Параметры.СуммаПрихода   = Формат(СТЧ.СуммаПосле,"ЧЦ=15; ЧДЦ=2");
				ОбластьМакета.Параметры.ВалютаРасхода  = Формат(СТЧ.ВалютаПосле,"ЧЦ=15; ЧДЦ=2");
				ОбластьМакета.Параметры.СуммаРасхода   = Формат(СТЧ.СуммаДо,"ЧЦ=15; ЧДЦ=2") ;
				ОбластьМакета.Параметры.Курс   = СТЧ.КурсОтчета ;
				
				ТабДокумент.Вывести(ОбластьМакета);
			КонецЦикла;
		КонецЕсли;
		
		// выводим таблицу бухгалетерских провордок 
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаБухЗапись");
		
		ТабДокумент.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокиБухЗапись");
				
		Если ПерваяСсылкаПроводки Тогда
			ВыборкаПоСсылкеПроводки = РезультатПакет[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		    ПерваяСсылкаПроводки 	= Ложь;
		КонецЕсли;

		Если ВыборкаПоСсылкеПроводки.Следующий() Тогда
			
			ВыборкаПроводок = ВыборкаПоСсылкеПроводки.Выбрать();
			
			Счетчик = 0;
			
			Пока ВыборкаПроводок.Следующий() Цикл
				
				ОбластьМакета.Параметры.СубСчетДебет1  =  ВыборкаПроводок.СчетДт;
				ОбластьМакета.Параметры.СубСчетКредит1 =  ВыборкаПроводок.СчетКт;
				Если ТипЗнч(ВыборкаПроводок.СубконтоДт) = ТипЗнч(Справочники.Контрагенты.ПустаяСсылка()) Тогда 
					ОбластьМакета.Параметры.СубконтоДт 	   =  ВыборкаПроводок.СубконтоДт.НаименованиеПолное;
				Иначе
					ОбластьМакета.Параметры.СубконтоДт 	   =  ВыборкаПроводок.СубконтоДт;
				КонецЕсли;
				Если ТипЗнч(ВыборкаПроводок.СубконтоКт) = ТипЗнч(Справочники.Контрагенты.ПустаяСсылка()) Тогда 
					ОбластьМакета.Параметры.СубконтоКт 	   =  ВыборкаПроводок.СубконтоКт.НаименованиеПолное;
				Иначе
					ОбластьМакета.Параметры.СубконтоКт 	   =  ВыборкаПроводок.СубконтоКт;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(ВыборкаПроводок.ВалютаКт) ИЛИ ВыборкаПроводок.ВалютаКт = ВалютаРегламентированногоУчета Тогда  
					ОбластьМакета.Параметры.Валюта         =  ВалютаРегламентированногоУчета;
					ОбластьМакета.Параметры.Сумма 		   =  ВыборкаПроводок.Сумма;
				Иначе
					ОбластьМакета.Параметры.Валюта         =  ВыборкаПроводок.ВалютаКт;
					ОбластьМакета.Параметры.Сумма 		   =  ВыборкаПроводок.ВалютнаяСуммаКт;
				КонецЕсли;
				
				ТабДокумент.Вывести(ОбластьМакета);
			КонецЦикла;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Титул2");
			ОбластьМакета.Параметры.ГлавныйБухгалтер    = Бухгалтер;
			ОбластьМакета.Параметры.ДатаДокументаДень   = "" + Строка(День(Шапка.ДатаДокумента)) + "";
			ОбластьМакета.Параметры.ДатаДокументаМесяц  = МесяцПрописью(Шапка.ДатаДокумента, Истина);
			ОбластьМакета.Параметры.ДатаДокументаГод    = Строка(Формат(Год(Шапка.ДатаДокумента), "ЧГ=0")) + "г.";
			ОбластьМакета.Параметры.НомерДокумента    	= Шапка.Номер;
			ОбластьМакета.Параметры.ПредставлениеПодотчетногоЛицаВРодПадеже = ПодотчетноеЛицо;
			ОбластьМакета.Параметры.ПредставлениеГлавногоБухгалтера    = Бухгалтер;
			
			ИзрасходованоЦелая       = 1;
			
			ТабДокумент.Вывести(ОбластьМакета);
			//ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Если ПерваяСсылкаТовары Тогда
			ВыборкаПоСсылке 	= РезультатПакет[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		    ПерваяСсылкаТовары 	= Ложь;
		КонецЕсли;
		
		Если ВыборкаПоСсылке.Следующий() Тогда
			
			Товар = ВыборкаПоСсылке.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
				
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка"); 
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим табличные части
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			НомерСтроки   = 0;
			
			ИтогоПоОтчету        = 0;
			ИтогоПоОтчетуВВалюте = 0;
			
			// ТЧ.Товары и услуги
			Пока Товар.Следующий() Цикл
				
				ОбластьМакета.Параметры.Заполнить(Товар);
				НомерСтроки = НомерСтроки + 1;
				ОбластьМакета.Параметры.НомерСтроки         = НомерСтроки;
				ОбластьМакета.Параметры.ДокументДата        = Товар.ДокументДата;
				ОбластьМакета.Параметры.ДебетСубСчета 		= Товар.СчетЗатрат.Код;
				ОбластьМакета.Параметры.КредитСубСчета 		= ?(Товар.СчетРасчетов <> Null, Товар.СчетРасчетов.Код, "");
				ОбластьМакета.Параметры.НаименованиеРасхода = СокрЛП(Товар.НаименованиеРасхода) ;
				Сумма = Товар.ПоОтчетуВВалюте; 
				ОбластьМакета.Параметры.ПоОтчету = Сумма ;
				ИтогоПоОтчету = ИтогоПоОтчету + Сумма;
				ТабДокумент.Вывести(ОбластьМакета);   
			КонецЦикла;
			
			// ТЧ.ОПЛАТА: КОНЕЦ ДОКУМЕНТОВ ОПЛАТЫ
			Для Каждого СТЧ Из Ссылка.ОплатаПоставщикам Цикл
				Если ТипЗнч(СТЧ.ВидДокВходящий) <> Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
					Продолжить;
				КонецЕсли;				
				
				// Обход товаров поступления ТМЗ и услуг
				Для Каждого СТЧТ Из СТЧ.ВидДокВходящий.Товары Цикл
					
					ОбластьМакета.Параметры.Заполнить(Товар);
					НомерСтроки = НомерСтроки + 1;
					ОбластьМакета.Параметры.НомерСтроки         = НомерСтроки;
					ОбластьМакета.Параметры.ДокументДата        = СТЧ.ВидДокВходящий.Дата;
					ОбластьМакета.Параметры.НаименованиеРасхода = СокрЛП(СТЧТ.Номенклатура.Наименование);
					ОбластьМакета.Параметры.ДебетСубСчета 		= СТЧТ.СчетУчета;
					
					Сумма = СТЧТ.Сумма
					+ ?(СТЧ.ВидДокВходящий.СуммаВключаетНДС, 0, СТЧТ.СуммаНДС);
					
					ОбластьМакета.Параметры.ПоОтчету = Сумма;
					ОбластьМакета.Параметры.ПоУчету  = Сумма;
					
					ИтогоПоОтчету = ИтогоПоОтчету + Сумма;
					ТабДокумент.Вывести(ОбластьМакета);
				КонецЦикла;			
				
				// Обход услуг поступления ТМЗ и услуг
				Для Каждого СТЧТ Из СТЧ.ВидДокВходящий.Услуги Цикл
					
					ОбластьМакета.Параметры.Заполнить(Товар);
					НомерСтроки = НомерСтроки + 1;
					ОбластьМакета.Параметры.НомерСтроки         = НомерСтроки;
					ОбластьМакета.Параметры.ДокументДата        = СТЧ.ВидДокВходящий.Дата;
					ОбластьМакета.Параметры.НаименованиеРасхода = СокрЛП(СТЧТ.Номенклатура.Наименование);
					ОбластьМакета.Параметры.ДебетСубСчета 		= СТЧТ.СчетЗатратБУ;
					
					Сумма = СТЧТ.Сумма
					+ ?(СТЧ.ВидДокВходящий.СуммаВключаетНДС, 0, СТЧТ.СуммаНДС);
					
					ОбластьМакета.Параметры.ПоОтчету = Сумма;
					ОбластьМакета.Параметры.ПоУчету  = Сумма;
					
					ИтогоПоОтчету = ИтогоПоОтчету + Сумма;
					ТабДокумент.Вывести(ОбластьМакета);
				КонецЦикла;			
				
			КонецЦикла; // КОНЕЦ ДОКУМЕНТОВ ОПЛАТЫ
					
		КонецЕсли;
		
		ТЗ = РезультатПакет[2].Выгрузить();
		
		ТЗ.Свернуть("Валюта");
		Если НЕ ТЗ.Количество() > 1 Тогда
			ОбластьИтоги 					= Макет.ПолучитьОбласть("Итоги");                     		
			ОбластьИтоги.Параметры.Итого 	= ИтогоПоОтчету;	
			ТабДокумент.Вывести(ОбластьИтоги);
		КонецЕсли;  
		
		// Выводим подвал авансовго отчета
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеПодотчетногоЛица 	= ПодотчетноеЛицо;
		ТабДокумент.Вывести(ОбластьМакета);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
	
	Возврат ТабДокумент;
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	// Проверяем, нужно ли для макета ПКО формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АвансовыйОтчет") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"АвансовыйОтчет", НСтр("ru = 'Печать Авансового отчета'"), ПечатьАвансовогоОтчета(МассивОбъектов, ОбъектыПечати),,
			"Документ.АвансовыйОтчет.АвансовыйОтчет");
	КонецЕсли;
		
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АвансовыйОтчет";
	КомандаПечати.Представление = НСтр("ru = 'Печать Авансового отчета'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
