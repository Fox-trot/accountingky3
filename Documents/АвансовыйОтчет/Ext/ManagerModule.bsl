#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыПроведенияДокумента

// Формирует таблицу значений, содержащую данные для проведения по регистру бухгалтерии Хозрасчетный.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаХозрасчетный(СтруктураДополнительныеСвойства)
	
	// Подготовка таблиц по учету ТМЗ.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Регистратор,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	&ВалютаРегламентированногоУчета КАК ВалютаВзаиморасчетов
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаТоварыУслугиПатентника.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаТоварыУслугиПатентника.СчетУчета КАК СчетУчета,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт1 ССЫЛКА Справочник.Склады
		|			ТОГДА ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт1
		|		КОГДА ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт2 ССЫЛКА Справочник.Склады
		|			ТОГДА ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт2
		|		ИНАЧЕ ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт3
		|	КОНЕЦ КАК Склад,
		|	ВременнаяТаблицаТоварыУслугиПатентника.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаТоварыУслугиПатентника.Сумма КАК Сумма,
		|	ВременнаяТаблицаТоварыУслугиПатентника.Сумма КАК СуммаВзаиморасчетов,
		|	ВременнаяТаблицаТоварыУслугиПатентника.Количество КАК Количество,
		|	ВременнаяТаблицаШапка.СчетУчета КАК КорСчет,
		|	ВременнаяТаблицаШапка.ФизЛицо КАК КорСубконто1,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто2,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
		|	0 КАК СуммаАкциза,
		|	&СодержаниеПатенты КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТоварыУслугиПатентника КАК ВременнаяТаблицаТоварыУслугиПатентника
		|		ПО (ИСТИНА)
		|ГДЕ
		|	(ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт1 ССЫЛКА Справочник.Номенклатура
		|			ИЛИ ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт2 ССЫЛКА Справочник.Номенклатура
		|			ИЛИ ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт3 ССЫЛКА Справочник.Номенклатура)
		|	И НЕ ВременнаяТаблицаТоварыУслугиПатентника.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МБП)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаТоварыУслугиПатентника.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаТоварыУслугиПатентника.СчетУчета КАК СчетУчета,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт1 ССЫЛКА Справочник.Склады
		|				ИЛИ ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт1 ССЫЛКА Справочник.ФизическиеЛица
		|			ТОГДА ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт1
		|		КОГДА ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт2 ССЫЛКА Справочник.Склады
		|				ИЛИ ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт2 ССЫЛКА Справочник.ФизическиеЛица
		|			ТОГДА ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт2
		|		ИНАЧЕ ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт3
		|	КОНЕЦ КАК Местонахождение,
		|	ВременнаяТаблицаТоварыУслугиПатентника.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаТоварыУслугиПатентника.Сумма КАК Сумма,
		|	ВременнаяТаблицаТоварыУслугиПатентника.Сумма КАК СуммаВзаиморасчетов,
		|	ВременнаяТаблицаТоварыУслугиПатентника.Количество КАК Количество,
		|	ВременнаяТаблицаШапка.СчетУчета КАК КорСчет,
		|	ВременнаяТаблицаШапка.ФизЛицо КАК КорСубконто1,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто2,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
		|	0 КАК СуммаАкциза,
		|	&СодержаниеПатенты КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТоварыУслугиПатентника КАК ВременнаяТаблицаТоварыУслугиПатентника
		|		ПО (ИСТИНА)
		|ГДЕ
		|	(ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт1 ССЫЛКА Справочник.Номенклатура
		|			ИЛИ ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт2 ССЫЛКА Справочник.Номенклатура
		|			ИЛИ ВременнаяТаблицаТоварыУслугиПатентника.СубконтоДт3 ССЫЛКА Справочник.Номенклатура)
		|	И ВременнаяТаблицаТоварыУслугиПатентника.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МБП)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", СтруктураДополнительныеСвойства.ДляПроведения.ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("СодержаниеПатенты", НСтр("ru = 'Закупка по патенту'"));   
	МассивРезультатов = Запрос.ВыполнитьПакет();

	ТаблицаРеквизиты = МассивРезультатов[0].Выгрузить();
	ТаблицаТовары = МассивРезультатов[1].Выгрузить();
	ТаблицаМБП = МассивРезультатов[2].Выгрузить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРеквизиты", ТаблицаРеквизиты);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаТовары", ТаблицаТовары);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаМБП", ТаблицаМБП);
	
	// 1. Оплата контрагенту (аванс).
	// 2. Прочее (оплата услуг без НДС).
	// 3. Выплата заработной платы (флаг "ПоВедомости" сброшен).
	// 4. Выплата заработной платы (флаг "ПоВедомости" взведен).
	// 5. Обмен валют (с 1520 одной валюты на 1520 другой валюты); 
	// 6. Обмен валют (курсовые разницы);
	// 7. Товары и услуги.

	// Оплата контрагенту (аванс).
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	1 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаОплатаПоставщикам.СчетРасчетов КАК СчетДт,
		|	ВременнаяТаблицаШапка.СчетУчета КАК СчетКт,
		|	ВременнаяТаблицаОплатаПоставщикам.Контрагент КАК СубконтоДт1,
		|	ВременнаяТаблицаОплатаПоставщикам.ДоговорКонтрагента КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	ВременнаяТаблицаШапка.ФизЛицо КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОплатаПоставщикам.Валюта = &ВалютаРегламентированногоУчета
		|			ТОГДА ВременнаяТаблицаОплатаПоставщикам.Сумма
		|		ИНАЧЕ ВременнаяТаблицаОплатаПоставщикам.Сумма * ВременнаяТаблицаОплатаПоставщикам.Курс
		|	КОНЕЦ КАК Сумма,
		|	ВременнаяТаблицаОплатаПоставщикам.Валюта КАК ВалютаДт,
		|	ВременнаяТаблицаОплатаПоставщикам.Валюта КАК ВалютаКт,
		|	ВременнаяТаблицаОплатаПоставщикам.Сумма КАК ВалютнаяСуммаДт,
		|	ВременнаяТаблицаОплатаПоставщикам.Сумма КАК ВалютнаяСуммаКт,
		|	&СодержаниеОплатаКонтрагентуАванс КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОплатаПоставщикам КАК ВременнаяТаблицаОплатаПоставщикам
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаОплатаПоставщикам.Сумма = 0";
	ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
	
	// Прочее (оплата услуг без НДС).
	ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	2 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаПрочее.СчетУчета КАК СчетДт,
		|	ВременнаяТаблицаШапка.СчетУчета КАК СчетКт,
		|	ВременнаяТаблицаПрочее.СубконтоДт1 КАК СубконтоДт1,
		|	ВременнаяТаблицаПрочее.СубконтоДт2 КАК СубконтоДт2,
		|	ВременнаяТаблицаПрочее.СубконтоДт3 КАК СубконтоДт3,
		|	ВременнаяТаблицаШапка.ФизЛицо КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаПрочее.Сумма * ВременнаяТаблицаПрочее.Курс / ВременнаяТаблицаПрочее.Кратность КАК ЧИСЛО(15, 2)) КАК Сумма,
		|	ВременнаяТаблицаПрочее.Валюта КАК ВалютаДт,
		|	ВременнаяТаблицаПрочее.Валюта КАК ВалютаКт,
		|	ВременнаяТаблицаПрочее.Сумма КАК ВалютнаяСуммаДт,
		|	ВременнаяТаблицаПрочее.Сумма КАК ВалютнаяСуммаКт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаПрочее.Содержание = """"
		|			ТОГДА &СодержаниеОплатаУслугБезНДС
		|		ИНАЧЕ ВременнаяТаблицаПрочее.Содержание
		|	КОНЕЦ КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаПрочее КАК ВременнаяТаблицаПрочее
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаПрочее.Сумма = 0";
	ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
	
	// Выплата заработной платы (флаг "ПоВедомости" сброшен).
	ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	3 КАК Порядок,
		|	ТаблицаШапка.Дата КАК Период,
		|	ТаблицаШапка.Организация КАК Организация,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НачисленнаяЗаработнаяПлата) КАК СчетДт,
		|	ТаблицаШапка.СчетУчета КАК СчетКт,
		|	ТаблицаЗПСотрудникам.ФизЛицо КАК СубконтоДт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	ТаблицаШапка.ФизЛицо КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ТаблицаЗПСотрудникам.Сумма КАК Сумма,
		|	&ВалютаРегламентированногоУчета КАК ВалютаДт,
		|	&ВалютаРегламентированногоУчета КАК ВалютаКт,
		|	ТаблицаЗПСотрудникам.Сумма КАК ВалютнаяСуммаДт,
		|	ТаблицаЗПСотрудникам.Сумма КАК ВалютнаяСуммаКт,
		|	&СодержаниеВыплатаЗПСотрудникам КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаВыплатаЗаработнойПлаты КАК ТаблицаЗПСотрудникам
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ТаблицаШапка.ПоВедомости
		|	И НЕ ТаблицаЗПСотрудникам.Сумма = 0";
	ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
	
	// Выплата заработной платы (флаг "ПоВедомости" взведен).
	ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	4 КАК Порядок,
		|	ТаблицаШапка.Дата КАК Период,
		|	ТаблицаШапка.Организация КАК Организация,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НачисленнаяЗаработнаяПлата) КАК СчетДт,
		|	ТаблицаШапка.СчетУчета КАК СчетКт,
		|	ВедомостьНаВыплатуЗарплатыЗарплата.ФизЛицо КАК СубконтоДт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	ТаблицаШапка.ФизЛицо КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ВедомостьНаВыплатуЗарплатыЗарплата.СуммаПоКассе КАК Сумма,
		|	&ВалютаРегламентированногоУчета КАК ВалютаДт,
		|	&ВалютаРегламентированногоУчета КАК ВалютаКт,
		|	ВедомостьНаВыплатуЗарплатыЗарплата.СуммаПоКассе КАК ВалютнаяСуммаДт,
		|	ВедомостьНаВыплатуЗарплатыЗарплата.СуммаПоКассе КАК ВалютнаяСуммаКт,
		|	&СодержаниеВыплатаЗППоВедомости КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаВыплатаЗаработнойПлаты КАК ТаблицаЗПСотрудникам
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВедомостьЗаработнойПлаты.Зарплата КАК ВедомостьНаВыплатуЗарплатыЗарплата
		|		ПО ТаблицаЗПСотрудникам.Ведомость = ВедомостьНаВыплатуЗарплатыЗарплата.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ТаблицаШапка.ПоВедомости
		|	И НЕ ВедомостьНаВыплатуЗарплатыЗарплата.СуммаПоКассе = 0";
	ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
	
	// Обмен валют (с 1520 одной валюты на 1520 другой валюты). 
	ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	5 КАК Порядок,
		|	ТаблицаШапка.Дата КАК Период,
		|	ТаблицаШапка.Организация КАК Организация,
		|	ТаблицаШапка.СчетУчета КАК СчетДт,
		|	ТаблицаШапка.СчетУчета КАК СчетКт,
		|	ТаблицаШапка.ФизЛицо КАК СубконтоДт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	ТаблицаШапка.ФизЛицо КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ВЫБОР
		|		КОГДА ТаблицаОбменВалют.ВалютаПосле = &ВалютаРегламентированногоУчета
		|			ТОГДА ТаблицаОбменВалют.СуммаПосле
		|		КОГДА ТаблицаОбменВалют.ВалютаДо = &ВалютаРегламентированногоУчета
		|			ТОГДА ТаблицаОбменВалют.СуммаДо
		|		ИНАЧЕ ТаблицаОбменВалют.СуммаДо * ТаблицаОбменВалют.КурсНБКРВалютаДо
		|	КОНЕЦ КАК Сумма,
		|	ТаблицаОбменВалют.ВалютаПосле КАК ВалютаДт,
		|	ТаблицаОбменВалют.ВалютаДо КАК ВалютаКт,
		|	ТаблицаОбменВалют.СуммаПосле КАК ВалютнаяСуммаДт,
		|	ТаблицаОбменВалют.СуммаДо КАК ВалютнаяСуммаКт,
		|	&СодержаниеОбменВалютПодотчетником КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаОбменВалют КАК ТаблицаОбменВалют
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВЫБОР
		|				КОГДА ТаблицаОбменВалют.ВалютаПосле = &ВалютаРегламентированногоУчета
		|					ТОГДА ТаблицаОбменВалют.СуммаПосле
		|				КОГДА ТаблицаОбменВалют.ВалютаДо = &ВалютаРегламентированногоУчета
		|					ТОГДА ТаблицаОбменВалют.СуммаДо
		|				ИНАЧЕ ТаблицаОбменВалют.СуммаДо * ТаблицаОбменВалют.КурсНБКРВалютаДо
		|			КОНЕЦ = 0";
	ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
	
	// Обмен валют (курсовые разницы).
	ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	6 КАК Порядок,
		|	ТаблицаШапка.Дата КАК Период,
		|	ТаблицаШапка.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА ТаблицаОбменВалют.ПризнакДтКт = ""Дт""
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|						ТОГДА ТаблицаШапка.СчетУчета
		|					ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.УбыткиОтОперационныхКурсовыхРазниц)
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|					ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.УбыткиОтОперационныхКурсовыхРазниц)
		|				ИНАЧЕ ТаблицаШапка.СчетУчета
		|			КОНЕЦ
		|	КОНЕЦ КАК СчетДт,
		|	ВЫБОР
		|		КОГДА ТаблицаОбменВалют.ПризнакДтКт = ""Дт""
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|						ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыОтОперационныхКурсовыхРазниц)
		|					ИНАЧЕ ТаблицаШапка.СчетУчета
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|					ТОГДА ТаблицаШапка.СчетУчета
		|				ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыОтОперационныхКурсовыхРазниц)
		|			КОНЕЦ
		|	КОНЕЦ КАК СчетКт,
		|	ВЫБОР
		|		КОГДА ТаблицаОбменВалют.ПризнакДтКт = ""Дт""
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|						ТОГДА ТаблицаШапка.ФизЛицо
		|					ИНАЧЕ НЕОПРЕДЕЛЕНО
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|					ТОГДА НЕОПРЕДЕЛЕНО
		|				ИНАЧЕ ТаблицаШапка.ФизЛицо
		|			КОНЕЦ
		|	КОНЕЦ КАК СубконтоДт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	ВЫБОР
		|		КОГДА ТаблицаОбменВалют.ПризнакДтКт = ""Дт""
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|						ТОГДА НЕОПРЕДЕЛЕНО
		|					ИНАЧЕ ТаблицаШапка.ФизЛицо
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|					ТОГДА ТаблицаШапка.ФизЛицо
		|				ИНАЧЕ НЕОПРЕДЕЛЕНО
		|			КОНЕЦ
		|	КОНЕЦ КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ВЫБОР
		|		КОГДА ТаблицаОбменВалют.ПризнакДтКт = ""Дт""
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|						ТОГДА -ТаблицаОбменВалют.СуммаОКР
		|					ИНАЧЕ ТаблицаОбменВалют.СуммаОКР
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|					ТОГДА -ТаблицаОбменВалют.СуммаОКР
		|				ИНАЧЕ ТаблицаОбменВалют.СуммаОКР
		|			КОНЕЦ
		|	КОНЕЦ КАК Сумма,
		|	ВЫБОР
		|		КОГДА ТаблицаОбменВалют.ПризнакДтКт = ""Дт""
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|						ТОГДА ТаблицаОбменВалют.ВалютаДо
		|					ИНАЧЕ NULL
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|					ТОГДА NULL
		|				ИНАЧЕ ТаблицаОбменВалют.ВалютаПосле
		|			КОНЕЦ
		|	КОНЕЦ КАК ВалютаДт,
		|	ВЫБОР
		|		КОГДА ТаблицаОбменВалют.ПризнакДтКт = ""Дт""
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|						ТОГДА NULL
		|					ИНАЧЕ ТаблицаОбменВалют.ВалютаДо
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|					ТОГДА ТаблицаОбменВалют.ВалютаПосле
		|				ИНАЧЕ NULL
		|			КОНЕЦ
		|	КОНЕЦ КАК ВалютаКт,
		|	0 КАК ВалютнаяСуммаДт,
		|	0 КАК ВалютнаяСуммаКт,
		|	&СодержаниеОперационнаяКурсоваяРазница КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаОбменВалют КАК ТаблицаОбменВалют
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ТаблицаШапка
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаСОсобымПорядкомПереоценки КАК СчетаУчетаСОсобымПорядкомПереоценки
		|		ПО (ТаблицаШапка.СчетУчета = СчетаУчетаСОсобымПорядкомПереоценки.СчетУчета)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ТаблицаОбменВалют.ПризнакДтКт = ""Дт""
		|				ТОГДА ВЫБОР
		|						КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|							ТОГДА -ТаблицаОбменВалют.СуммаОКР
		|						ИНАЧЕ ТаблицаОбменВалют.СуммаОКР
		|					КОНЕЦ
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ТаблицаОбменВалют.СуммаОКР < 0
		|						ТОГДА -ТаблицаОбменВалют.СуммаОКР
		|					ИНАЧЕ ТаблицаОбменВалют.СуммаОКР
		|				КОНЕЦ
		|		КОНЕЦ <> 0
		|	И НЕ ЕСТЬNULL(СчетаУчетаСОсобымПорядкомПереоценки.НеСчитатьОКР, ЛОЖЬ) = ИСТИНА";
	ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
	
	// Товары и услуги.
	ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	7 КАК Порядок,
		|	ТаблицаШапка.Дата КАК Период,
		|	ТаблицаШапка.Организация КАК Организация,
		|	ТаблицаТоварыУслугиПатентника.СчетУчета КАК СчетДт,
		|	ТаблицаШапка.СчетУчета КАК СчетКт,
		|	ТаблицаТоварыУслугиПатентника.СубконтоДт1 КАК СубконтоДт1,
		|	ТаблицаТоварыУслугиПатентника.СубконтоДт2 КАК СубконтоДт2,
		|	ТаблицаТоварыУслугиПатентника.СубконтоДт3 КАК СубконтоДт3,
		|	ТаблицаШапка.ФизЛицо КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ТаблицаТоварыУслугиПатентника.Сумма КАК Сумма,
		|	&ВалютаРегламентированногоУчета КАК ВалютаДт,
		|	&ВалютаРегламентированногоУчета КАК ВалютаКт,
		|	ВЫБОР
		|		КОГДА ТаблицаТоварыУслугиПатентника.СчетУчета.Валютный
		|			ТОГДА ТаблицаТоварыУслугиПатентника.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВалютнаяСуммаДт,
		|	ВЫБОР
		|		КОГДА ТаблицаШапка.СчетУчета.Валютный
		|			ТОГДА ТаблицаТоварыУслугиПатентника.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВалютнаяСуммаКт,
		|	&СодержаниеЗакупкаПоПатенту КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаТоварыУслугиПатентника КАК ТаблицаТоварыУслугиПатентника
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ТаблицаТоварыУслугиПатентника.Сумма = 0
		|	И НЕ ТаблицаТоварыУслугиПатентника.СубконтоДт1 ССЫЛКА Справочник.Номенклатура
		|	И НЕ ТаблицаТоварыУслугиПатентника.СубконтоДт2 ССЫЛКА Справочник.Номенклатура
		|	И НЕ ТаблицаТоварыУслугиПатентника.СубконтоДт3 ССЫЛКА Справочник.Номенклатура";
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("СодержаниеОплатаКонтрагентуАванс", НСтр("ru = 'Оплата контрагенту(аванс)'"));
	Запрос.УстановитьПараметр("СодержаниеОплатаУслугБезНДС", НСтр("ru = 'Оплата услуг без НДС'"));
	Запрос.УстановитьПараметр("СодержаниеВыплатаЗПСотрудникам", НСтр("ru = 'Выплата ЗП сотрудникам'"));
	Запрос.УстановитьПараметр("СодержаниеВыплатаЗППоВедомости", НСтр("ru = 'Выплата ЗП по ведомости'"));
	Запрос.УстановитьПараметр("СодержаниеОбменВалютПодотчетником", НСтр("ru = 'Обмен валют подотчетником'"));
	Запрос.УстановитьПараметр("СодержаниеОперационнаяКурсоваяРазница", НСтр("ru = 'Операционная курсовая разница'"));
	Запрос.УстановитьПараметр("СодержаниеЗакупкаПоПатенту", НСтр("ru = 'Закупка по патенту'"));
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", СтруктураДополнительныеСвойства.ДляПроведения.ВалютаРегламентированногоУчета);			
	РезультатЗапроса = Запрос.Выполнить();	
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаХозрасчетный", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДенежныеСредства()

// Формирует таблицу значений, содержащую данные для проведения по регистру "АвансыПодотчетника".
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаАвансыПодотчетника(СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Документ,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.ФизЛицо КАК ФизЛицо,
		|	ВременнаяТаблицаДвижениеДенежныхСредств.Валюта КАК Валюта,
		|	ВременнаяТаблицаДвижениеДенежныхСредств.ОстатокНаКонец КАК Сумма
		|ИЗ
		|	ВременнаяТаблицаДвижениеДенежныхСредств КАК ВременнаяТаблицаДвижениеДенежныхСредств
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)";	
	РезультатЗапроса = Запрос.Выполнить();	
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаАвансыПодотчетника", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСведенияОПоступлении(СтруктураДополнительныеСвойства) 
	                   
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Ссылка КАК ДокументСсылка,
		|	ВременнаяТаблицаВладельцыПатентов.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаВладельцыПатентов.Паспорт КАК Патентник,
		|	ВременнаяТаблицаШапка.Дата КАК ДатаПоставки,
		|	ВременнаяТаблицаШапка.Дата КАК ДатаСФ,
		|	СУММА(ВременнаяТаблицаТоварыУслугиПатентника.Сумма) КАК Сумма
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаВладельцыПатентов КАК ВременнаяТаблицаВладельцыПатентов
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТоварыУслугиПатентника КАК ВременнаяТаблицаТоварыУслугиПатентника
		|			ПО ВременнаяТаблицаВладельцыПатентов.КлючСвязи = ВременнаяТаблицаТоварыУслугиПатентника.КлючСвязи
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаТоварыУслугиПатентника.Сумма = 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Ссылка,
		|	ВременнаяТаблицаВладельцыПатентов.Контрагент,
		|	ВременнаяТаблицаВладельцыПатентов.Паспорт,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Дата";	
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСведенияОПоступлении", Запрос.Выполнить().Выгрузить());		
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРеестрПриобретенныхМатериальныхРесурсов(СтруктураДополнительныеСвойства) 
	                   
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВладельцыПатентов.ДатаДокумента КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.ПустаяСсылка) КАК ЗачетНДС,
		|	ВладельцыПатентов.Контрагент КАК Контрагент,
		|	""ДПБУ"" КАК СерияБланкаСФ,
		|	ВладельцыПатентов.НомерДокумента КАК НомерБланкаСФ,
		|	СУММА(ТоварыУслугиПатентника.Сумма) КАК Сумма
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаВладельцыПатентов КАК ВладельцыПатентов
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаТоварыУслугиПатентника КАК ТоварыУслугиПатентника
		|		ПО (ВладельцыПатентов.КлючСвязи = ТоварыУслугиПатентника.КлючСвязи)
		|ГДЕ
		|	&ПлательщикНДС
		|	И НЕ ТоварыУслугиПатентника.Сумма = 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаШапка.Организация,
		|	ВладельцыПатентов.Контрагент,
		|	ВладельцыПатентов.ВидДокумента,
		|	ВладельцыПатентов.НомерДокумента,
		|	ВладельцыПатентов.ДатаДокумента";	
	Запрос.УстановитьПараметр("ПлательщикНДС", СтруктураДополнительныеСвойства.УчетнаяПолитика.ПлательщикНДС);
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРеестрПриобретенныхМатериальныхРесурсов", Запрос.Выполнить().Выгрузить());		
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаКорректировкиНУ(СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаШапка.Дата КАК Период,
		|	ТаблицаШапка.Организация КАК Организация,
		|	ТаблицаПрочее.СчетУчета КАК Счет,
		|	ТаблицаПрочее.Сумма КАК Сумма,
		|	ТаблицаПрочее.ВидУчетаНУ КАК ВидУчета
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаПрочее КАК ТаблицаПрочее
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ТаблицаПрочее.СчетУчета.Временный
		|	И ТаблицаПрочее.ВидУчетаНУ <> ЗНАЧЕНИЕ(Перечисление.ВидыУчета.ПустаяСсылка)";

	Запрос.УстановитьПараметр("ТаблицаХозрасчетный", СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаХозрасчетный);
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаКорректировкиНУ", РезультатЗапроса.Выгрузить());
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРеестрЗакупок(СтруктураДополнительныеСвойства) 
	                   
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВладельцыПатентов.Контрагент КАК Контрагент,
		|	ВладельцыПатентов.ПризнакСтраны КАК ПризнакСтраны,
		|	ТоварыУслугиПатентника.Номенклатура КАК Номенклатура,
		|	ТоварыУслугиПатентника.Количество КАК Количество,
		|	ТоварыУслугиПатентника.Сумма КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаДанныеРеестраЗакупок
		|ИЗ
		|	ВременнаяТаблицаВладельцыПатентов КАК ВладельцыПатентов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаТоварыУслугиПатентника КАК ТоварыУслугиПатентника
		|		ПО ВладельцыПатентов.КлючСвязи = ТоварыУслугиПатентника.КлючСвязи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаДанныеРеестраЗакупок.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаДанныеРеестраЗакупок.ПризнакСтраны КАК ПризнакСтраны,
		|	ВременнаяТаблицаДанныеРеестраЗакупок.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаДанныеРеестраЗакупок.Количество КАК Количество,
		|	ВременнаяТаблицаДанныеРеестраЗакупок.Сумма КАК Сумма
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДанныеРеестраЗакупок КАК ВременнаяТаблицаДанныеРеестраЗакупок
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаДанныеРеестраЗакупок.ПризнакСтраны <> ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)";	
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРеестрЗакупок", Запрос.Выполнить().Выгрузить());		
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаВыплаченнаяЗарплата(ДокументСсылка, СтруктураДополнительныеСвойства)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВедомостьЗаработнойПлатыЗарплата.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
		|	ВедомостьЗаработнойПлатыЗарплата.ФизЛицо КАК ФизЛицо,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыВыплатыЗарплаты.ЧерезКассу) КАК ВидВыплаты,
		|	ВедомостьЗаработнойПлатыЗарплата.СуммаПоКассе КАК Сумма
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВедомостьЗаработнойПлаты.Зарплата КАК ВедомостьЗаработнойПлатыЗарплата
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаШапка.ПоВедомости
		|	И ВедомостьЗаработнойПлатыЗарплата.Ссылка В
		|			(ВЫБРАТЬ
		|				ВременнаяТаблицаВыплатаЗаработнойПлаты.Ведомость
		|			ИЗ
		|				ВременнаяТаблицаВыплатаЗаработнойПлаты КАК ВременнаяТаблицаВыплатаЗаработнойПлаты)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	НАЧАЛОПЕРИОДА(ВременнаяТаблицаШапка.Дата, МЕСЯЦ),
		|	ВременнаяТаблицаВыплатаЗаработнойПлаты.ФизЛицо,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыВыплатыЗарплаты.ЧерезКассу),
		|	ВременнаяТаблицаВыплатаЗаработнойПлаты.Сумма
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаВыплатаЗаработнойПлаты КАК ВременнаяТаблицаВыплатаЗаработнойПлаты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаШапка.ПоВедомости";
	РезультатЗапроса = Запрос.Выполнить();
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаВыплаченнаяЗарплата", РезультатЗапроса.Выгрузить());
КонецПроцедуры // СформироватьТаблицаВыплаченнаяЗарплата()

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	АвансовыйОтчет.Ссылка КАК Ссылка,
		|	АвансовыйОтчет.Организация КАК Организация,
		|	АвансовыйОтчет.Дата КАК Дата,
		|	АвансовыйОтчет.ФизЛицо КАК ФизЛицо,
		|	АвансовыйОтчет.СчетУчета КАК СчетУчета,
		|	АвансовыйОтчет.ПоВедомости КАК ПоВедомости
		|ПОМЕСТИТЬ ВременнаяТаблицаШапка
		|ИЗ
		|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
		|ГДЕ
		|	АвансовыйОтчет.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АвансовыйОтчетДвижениеДенежныхСредств.Валюта КАК Валюта,
		|	АвансовыйОтчетДвижениеДенежныхСредств.ОстатокНаКонец КАК ОстатокНаКонец
		|ПОМЕСТИТЬ ВременнаяТаблицаДвижениеДенежныхСредств
		|ИЗ
		|	Документ.АвансовыйОтчет.ДвижениеДенежныхСредств КАК АвансовыйОтчетДвижениеДенежныхСредств
		|ГДЕ
		|	АвансовыйОтчетДвижениеДенежныхСредств.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АвансовыйОтчетОплатаПоставщикам.Контрагент КАК Контрагент,
		|	АвансовыйОтчетОплатаПоставщикам.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка КАК Ссылка,
		|	АвансовыйОтчетОплатаПоставщикам.Сумма КАК Сумма,
		|	АвансовыйОтчетОплатаПоставщикам.Валюта КАК Валюта,
		|	АвансовыйОтчетОплатаПоставщикам.Курс КАК Курс,
		|	АвансовыйОтчетОплатаПоставщикам.СчетРасчетов КАК СчетРасчетов
		|ПОМЕСТИТЬ ВременнаяТаблицаОплатаПоставщикам
		|ИЗ
		|	Документ.АвансовыйОтчет.ОплатаПоставщикам КАК АвансовыйОтчетОплатаПоставщикам
		|ГДЕ
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АвансовыйОтчетПрочее.СчетУчета КАК СчетУчета,
		|	АвансовыйОтчетПрочее.СубконтоДт1 КАК СубконтоДт1,
		|	АвансовыйОтчетПрочее.СубконтоДт2 КАК СубконтоДт2,
		|	АвансовыйОтчетПрочее.СубконтоДт3 КАК СубконтоДт3,
		|	АвансовыйОтчетПрочее.Сумма КАК Сумма,
		|	АвансовыйОтчетПрочее.Ссылка КАК Ссылка,
		|	АвансовыйОтчетПрочее.Содержание КАК Содержание,
		|	АвансовыйОтчетПрочее.ВидУчетаНУ КАК ВидУчетаНУ,
		|	АвансовыйОтчетПрочее.Валюта КАК Валюта,
		|	АвансовыйОтчетПрочее.Курс КАК Курс,
		|	АвансовыйОтчетПрочее.Кратность КАК Кратность
		|ПОМЕСТИТЬ ВременнаяТаблицаПрочее
		|ИЗ
		|	Документ.АвансовыйОтчет.Прочее КАК АвансовыйОтчетПрочее
		|ГДЕ
		|	АвансовыйОтчетПрочее.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АвансовыйОтчетВыплатаЗаработнойПлаты.Ссылка КАК Ссылка,
		|	АвансовыйОтчетВыплатаЗаработнойПлаты.Ведомость КАК Ведомость,
		|	АвансовыйОтчетВыплатаЗаработнойПлаты.Сумма КАК Сумма,
		|	АвансовыйОтчетВыплатаЗаработнойПлаты.ФизЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ВременнаяТаблицаВыплатаЗаработнойПлаты
		|ИЗ
		|	Документ.АвансовыйОтчет.ВыплатаЗаработнойПлаты КАК АвансовыйОтчетВыплатаЗаработнойПлаты
		|ГДЕ
		|	АвансовыйОтчетВыплатаЗаработнойПлаты.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АвансовыйОтчетОбменВалют.Ссылка КАК Ссылка,
		|	АвансовыйОтчетОбменВалют.СуммаДо КАК СуммаДо,
		|	АвансовыйОтчетОбменВалют.ВалютаДо КАК ВалютаДо,
		|	АвансовыйОтчетОбменВалют.СуммаПосле КАК СуммаПосле,
		|	АвансовыйОтчетОбменВалют.ВалютаПосле КАК ВалютаПосле,
		|	АвансовыйОтчетОбменВалют.КурсОтчета КАК КурсОтчета,
		|	КурсВалютыОтчета.Курс КАК КурсНБКРВалютаПосле,
		|	КурсВалюты.Курс КАК КурсНБКРВалютаДо,
		|	ВЫБОР
		|		КОГДА АвансовыйОтчетОбменВалют.ВалютаДо <> &ВалютаРегламентированногоУчета
		|			ТОГДА ""Дт""
		|		КОГДА АвансовыйОтчетОбменВалют.ВалютаДо = &ВалютаРегламентированногоУчета
		|				И АвансовыйОтчетОбменВалют.ВалютаДо <> АвансовыйОтчетОбменВалют.ВалютаПосле
		|			ТОГДА ""Кт""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ПризнакДтКт,
		|	ВЫБОР
		|		КОГДА АвансовыйОтчетОбменВалют.ВалютаДо <> &ВалютаРегламентированногоУчета
		|			ТОГДА АвансовыйОтчетОбменВалют.СуммаДо * КурсВалюты.Курс - ВЫБОР
		|					КОГДА АвансовыйОтчетОбменВалют.ВалютаПосле = &ВалютаРегламентированногоУчета
		|						ТОГДА АвансовыйОтчетОбменВалют.СуммаПосле
		|					КОГДА АвансовыйОтчетОбменВалют.ВалютаДо = &ВалютаРегламентированногоУчета
		|						ТОГДА АвансовыйОтчетОбменВалют.СуммаДо
		|					ИНАЧЕ АвансовыйОтчетОбменВалют.СуммаПосле * КурсВалютыОтчета.Курс
		|				КОНЕЦ
		|		КОГДА АвансовыйОтчетОбменВалют.ВалютаДо = &ВалютаРегламентированногоУчета
		|				И АвансовыйОтчетОбменВалют.ВалютаДо <> АвансовыйОтчетОбменВалют.ВалютаПосле
		|			ТОГДА АвансовыйОтчетОбменВалют.СуммаПосле * КурсВалютыОтчета.Курс - ВЫБОР
		|					КОГДА АвансовыйОтчетОбменВалют.ВалютаПосле = &ВалютаРегламентированногоУчета
		|						ТОГДА АвансовыйОтчетОбменВалют.СуммаПосле
		|					КОГДА АвансовыйОтчетОбменВалют.ВалютаДо = &ВалютаРегламентированногоУчета
		|						ТОГДА АвансовыйОтчетОбменВалют.СуммаДо
		|					ИНАЧЕ АвансовыйОтчетОбменВалют.СуммаПосле * КурсВалютыОтчета.Курс
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаОКР
		|ПОМЕСТИТЬ ВременнаяТаблицаОбменВалют
		|ИЗ
		|	Документ.АвансовыйОтчет.ОбменВалют КАК АвансовыйОтчетОбменВалют
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсВалюты
		|		ПО АвансовыйОтчетОбменВалют.ВалютаДо = КурсВалюты.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсВалютыОтчета
		|		ПО АвансовыйОтчетОбменВалют.ВалютаПосле = КурсВалютыОтчета.Валюта
		|ГДЕ
		|	АвансовыйОтчетОбменВалют.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АвансовыйОтчетТоварыУслуги.Ссылка КАК Ссылка,
		|	АвансовыйОтчетТоварыУслуги.НомерСтроки КАК НомерСтроки,
		|	АвансовыйОтчетТоварыУслуги.Номенклатура КАК Номенклатура,
		|	АвансовыйОтчетТоварыУслуги.Количество КАК Количество,
		|	АвансовыйОтчетТоварыУслуги.Сумма КАК Сумма,
		|	АвансовыйОтчетТоварыУслуги.СчетУчета КАК СчетУчета,
		|	АвансовыйОтчетТоварыУслуги.СубконтоДт1 КАК СубконтоДт1,
		|	АвансовыйОтчетТоварыУслуги.СубконтоДт2 КАК СубконтоДт2,
		|	АвансовыйОтчетТоварыУслуги.СубконтоДт3 КАК СубконтоДт3,
		|	АвансовыйОтчетТоварыУслуги.КлючСвязи КАК КлючСвязи
		|ПОМЕСТИТЬ ВременнаяТаблицаТоварыУслугиПатентника
		|ИЗ
		|	Документ.АвансовыйОтчет.ТоварыУслуги КАК АвансовыйОтчетТоварыУслуги
		|ГДЕ
		|	АвансовыйОтчетТоварыУслуги.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АвансовыйОтчетВладельцыПатентов.Контрагент КАК Контрагент,
		|	АвансовыйОтчетВладельцыПатентов.Контрагент.ПризнакСтраны КАК ПризнакСтраны,
		|	АвансовыйОтчетВладельцыПатентов.ВидДокумента КАК ВидДокумента,
		|	АвансовыйОтчетВладельцыПатентов.НомерДокумента КАК НомерДокумента,
		|	АвансовыйОтчетВладельцыПатентов.ДатаДокумента КАК ДатаДокумента,
		|	АвансовыйОтчетВладельцыПатентов.Паспорт КАК Паспорт,
		|	АвансовыйОтчетВладельцыПатентов.КлючСвязи КАК КлючСвязи
		|ПОМЕСТИТЬ ВременнаяТаблицаВладельцыПатентов
		|ИЗ
		|	Документ.АвансовыйОтчет.ВладельцыПатентов КАК АвансовыйОтчетВладельцыПатентов
		|ГДЕ
		|	АвансовыйОтчетВладельцыПатентов.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Дата", ДокументСсылка.Дата);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", СтруктураДополнительныеСвойства.ДляПроведения.ВалютаРегламентированногоУчета);
	Запрос.Выполнить();
	
	СформироватьТаблицаХозрасчетный(СтруктураДополнительныеСвойства);
	СформироватьТаблицаАвансыПодотчетника(СтруктураДополнительныеСвойства);
	СформироватьТаблицаСведенияОПоступлении(СтруктураДополнительныеСвойства);
	СформироватьТаблицаРеестрПриобретенныхМатериальныхРесурсов(СтруктураДополнительныеСвойства);
	СформироватьТаблицаВыплаченнаяЗарплата(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаРеестрЗакупок(СтруктураДополнительныеСвойства);
	СформироватьТаблицаКорректировкиНУ(СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает название месяца по его номеру 
Функция МесяцПрописью(Дата, ВРодительномПадеже = Ложь)
	НомерМесяца = Месяц(Дата);
	Если НомерМесяца = 1 Тогда
		Возврат ?(ВРодительномПадеже, "января", "Январь");
	ИначеЕсли НомерМесяца = 2 Тогда
		Возврат ?(ВРодительномПадеже, "февраля", "Февраль");
	ИначеЕсли НомерМесяца = 3 Тогда
		Возврат ?(ВРодительномПадеже, "марта", "Март");
	ИначеЕсли НомерМесяца = 4 Тогда
		Возврат ?(ВРодительномПадеже, "апреля", "Апрель");
	ИначеЕсли НомерМесяца = 5 Тогда
		Возврат ?(ВРодительномПадеже, "мая", "Май");
	ИначеЕсли НомерМесяца = 6 Тогда
		Возврат ?(ВРодительномПадеже, "июня", "Июнь");
	ИначеЕсли НомерМесяца = 7 Тогда
		Возврат ?(ВРодительномПадеже, "июля", "Июль");
	ИначеЕсли НомерМесяца = 8 Тогда
		Возврат ?(ВРодительномПадеже, "августа", "Август");
	ИначеЕсли НомерМесяца = 9 Тогда
		Возврат ?(ВРодительномПадеже, "сентября", "Сентябрь");
	ИначеЕсли НомерМесяца = 10 Тогда
		Возврат ?(ВРодительномПадеже, "октября", "Октябрь");
	ИначеЕсли НомерМесяца = 11 Тогда
		Возврат ?(ВРодительномПадеже, "ноября", "Ноябрь");
	ИначеЕсли НомерМесяца = 12 Тогда
		Возврат ?(ВРодительномПадеже, "декабря", "Декабрь");
	КонецЕсли;		
КонецФункции

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

Функция ДанныеТабличныхЧастей(ШапкаДокумента)
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("СчетРасчета",	ШапкаДокумента.СчетРасчетовСПодотчетнымЛицом);
	Запрос.УстановитьПараметр("ПарныйСчет",		ШапкаДокумента.СчетРасчетовСПодотчетнымЛицом.ПарныйСчет);
	Запрос.УстановитьПараметр("Сотрудник",  	ШапкаДокумента.ПодотчетноеЛицо);
	Запрос.УстановитьПараметр("Организация",	ШапкаДокумента.Организация);
	Запрос.УстановитьПараметр("ДатаИтогов", 	ШапкаДокумента.Ссылка.МоментВремени());
	Запрос.УстановитьПараметр("Ссылка",			ШапкаДокумента.Ссылка);
	Запрос.УстановитьПараметр("ДатаКонОстатков",ШапкаДокумента.Ссылка.Дата+1);  
	Запрос.УстановитьПараметр("ВалРег",      	ВалютаРегламентированногоУчета);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АвансовыйОтчетОплатаПоставщикам.Валюта КАК Валюта,
	|	СУММА(АвансовыйОтчетОплатаПоставщикам.Сумма) КАК ВалютнаяСуммаВсего,
	|	СУММА(АвансовыйОтчетОплатаПоставщикам.Сумма * АвансовыйОтчетОплатаПоставщикам.Курс / АвансовыйОтчетОплатаПоставщикам.Кратность) КАК СуммаВсего
	|ПОМЕСТИТЬ ВременнаяТаблицаТабличныеЧасти
	|ИЗ
	|	Документ.АвансовыйОтчет.ОплатаПоставщикам КАК АвансовыйОтчетОплатаПоставщикам
	|ГДЕ
	|	АвансовыйОтчетОплатаПоставщикам.Ссылка.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансовыйОтчетОплатаПоставщикам.Валюта
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ВалРег,
	|	СУММА(АвансовыйОтчетТоварыУслуги.Сумма),
	|	СУММА(АвансовыйОтчетТоварыУслуги.Сумма)
	|ИЗ
	|	Документ.АвансовыйОтчет.ТоварыУслуги КАК АвансовыйОтчетТоварыУслуги
	|ГДЕ
	|	АвансовыйОтчетТоварыУслуги.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АвансовыйОтчетПрочее.Валюта,
	|	СУММА(АвансовыйОтчетПрочее.Сумма),
	|	СУММА(АвансовыйОтчетПрочее.Сумма * АвансовыйОтчетПрочее.Курс / АвансовыйОтчетПрочее.Кратность)
	|ИЗ
	|	Документ.АвансовыйОтчет.Прочее КАК АвансовыйОтчетПрочее
	|ГДЕ
	|	АвансовыйОтчетПрочее.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансовыйОтчетПрочее.Валюта
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ВалРег,
	|	СУММА(АвансовыйОтчетВыплатаЗаработнойПлаты.Сумма),
	|	СУММА(АвансовыйОтчетВыплатаЗаработнойПлаты.Сумма)
	|ИЗ
	|	Документ.АвансовыйОтчет.ВыплатаЗаработнойПлаты КАК АвансовыйОтчетВыплатаЗаработнойПлаты
	|ГДЕ
	|	АвансовыйОтчетВыплатаЗаработнойПлаты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Валюта КАК Валюта,
	|	СУММА(ХозрасчетныйОстатки.ВалютнаяСуммаОстаток) КАК СуммаОстаток,
	|	СУММА(0) КАК Выдано,
	|	СУММА(0) КАК Расход,
	|	СУММА(0) КАК Приход,
	|	СУММА(0) КАК КонОстаток,
	|	СУММА(0) КАК СуммаВсего,
	|	СУММА(0) КАК ВалютнаяСуммаВсего
	|ПОМЕСТИТЬ ВременнаяТаблицаСвод
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаИтогов,
	|			Счет = &СчетРасчета
	|				ИЛИ Счет = &ПарныйСчет,
	|			,
	|			Организация = &Организация
	|				И Субконто1 = &Сотрудник) КАК ХозрасчетныйОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстатки.Валюта
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АвансовыйОтчетОбменВалют.ВалютаДо,
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(АвансовыйОтчетОбменВалют.СуммаДо),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0)
	|ИЗ
	|	Документ.АвансовыйОтчет.ОбменВалют КАК АвансовыйОтчетОбменВалют
	|ГДЕ
	|	АвансовыйОтчетОбменВалют.Ссылка.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансовыйОтчетОбменВалют.ВалютаДо
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АвансовыйОтчетОбменВалют.ВалютаПосле,
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(АвансовыйОтчетОбменВалют.СуммаПосле),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0)
	|ИЗ
	|	Документ.АвансовыйОтчет.ОбменВалют КАК АвансовыйОтчетОбменВалют
	|ГДЕ
	|	АвансовыйОтчетОбменВалют.Ссылка.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансовыйОтчетОбменВалют.ВалютаПосле
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Валюта,
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(ХозрасчетныйОстатки.ВалютнаяСуммаОстаток),
	|	СУММА(0),
	|	СУММА(0)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаКонОстатков,
	|			Счет = &СчетРасчета ИЛИ Счет = &ПарныйСчет,
	|			,
	|			Организация = &Организация
	|				И Субконто1 = &Сотрудник) КАК ХозрасчетныйОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстатки.Валюта
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаТабличныеЧасти.Валюта,
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(ВременнаяТаблицаТабличныеЧасти.СуммаВсего),
	|	СУММА(ВременнаяТаблицаТабличныеЧасти.ВалютнаяСуммаВсего)
	|ИЗ
	|	ВременнаяТаблицаТабличныеЧасти КАК ВременнаяТаблицаТабличныеЧасти
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаТабличныеЧасти.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаСвод.Валюта КАК Валюта,
	|	СУММА(ВременнаяТаблицаСвод.СуммаОстаток) КАК НачОстаток,
	|	СУММА(ВременнаяТаблицаСвод.Выдано) КАК Выдано,
	|	СУММА(ВременнаяТаблицаСвод.Расход) КАК Расход,
	|	СУММА(ВременнаяТаблицаСвод.Приход) КАК Приход,
	|	СУММА(ВременнаяТаблицаСвод.КонОстаток) КАК КонОстаток,
	|	СУММА(ВременнаяТаблицаСвод.СуммаВсего) КАК Израсходовано,
	|	СУММА(ВременнаяТаблицаСвод.ВалютнаяСуммаВсего) КАК ИзрасходованоВВалюте
	|ИЗ
	|	ВременнаяТаблицаСвод КАК ВременнаяТаблицаСвод
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаСвод.Валюта";
	Результат = Запрос.Выполнить();
	Возврат Результат;

КонецФункции // ПолучитьДанныеТабЧастей()

Функция ПечатьАвансовогоОтчета(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);

	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ПерваяСсылкаТовары 		= Истина;
	ПерваяСсылкаПроводки 	= Истина;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати = "АвансовыйОтчет_АвансовыйОтчет";	
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	АвансовыйОтчет.Номер КАК Номер,
		|	АвансовыйОтчет.Дата КАК ДатаДокумента,
		|	АвансовыйОтчет.ФизЛицо КАК ПодотчетноеЛицо,
		|	АвансовыйОтчет.ФизЛицо.Представление КАК ПредставлениеПодотчетногоЛица,
		|	АвансовыйОтчет.Организация.Ссылка КАК Организация,
		|	АвансовыйОтчет.СчетУчета КАК СчетРасчетовСПодотчетнымЛицом,
		|	АвансовыйОтчет.СуммаДокумента КАК СуммаДокумента,
		|	АвансовыйОтчет.Ссылка КАК Ссылка,
		|	АвансовыйОтчет.Назначение КАК НазначениеАванса,
		|	АвансовыйОтчет.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	АвансовыйОтчет.Документов КАК Документов,
		|	АвансовыйОтчет.Листов КАК Листов
		|ИЗ
		|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
		|ГДЕ
		|	АвансовыйОтчет.Ссылка В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйДвиженияССубконто.Регистратор КАК Ссылка,
		|	ХозрасчетныйДвиженияССубконто.СчетДт КАК СчетДт,
		|	ХозрасчетныйДвиженияССубконто.СчетКт КАК СчетКт,
		|	ХозрасчетныйДвиженияССубконто.Сумма КАК Сумма,
		|	ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаДт КАК ВалютнаяСуммаДт,
		|	ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаКт КАК ВалютнаяСуммаКт,
		|	ХозрасчетныйДвиженияССубконто.СубконтоДт1 КАК СубконтоДт,
		|	ХозрасчетныйДвиженияССубконто.СубконтоКт1 КАК СубконтоКт,
		|	ХозрасчетныйДвиженияССубконто.ВалютаДт КАК ВалютаДт,
		|	ХозрасчетныйДвиженияССубконто.ВалютаКт КАК ВалютаКт,
		|	ХозрасчетныйДвиженияССубконто.Содержание КАК Содержание
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(, , Регистратор В (&МассивОбъектов), , ) КАК ХозрасчетныйДвиженияССубконто
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	ХозрасчетныйДвиженияССубконто.НомерСтроки
		|ИТОГИ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	1 КАК Поле1,
		|	АвансовыйОтчетОплатаПоставщикам.НомерСтроки КАК НомерСтроки,
		|	АвансовыйОтчетОплатаПоставщикам.НомерВходящегоДокумента КАК ДокументНомер,
		|	АвансовыйОтчетОплатаПоставщикам.ДатаВходящегоДокумента КАК ДокументДата,
		|	&ОплатаПоставщику + (ВЫРАЗИТЬ(АвансовыйОтчетОплатаПоставщикам.Контрагент.НаименованиеПолное КАК СТРОКА(50))) КАК НаименованиеРасхода,
		|	СУММА(АвансовыйОтчетОплатаПоставщикам.Сумма * АвансовыйОтчетОплатаПоставщикам.Курс) КАК ПоОтчету,
		|	АвансовыйОтчетОплатаПоставщикам.Сумма КАК ПоОтчетуВВалюте,
		|	АвансовыйОтчетОплатаПоставщикам.СчетРасчетов КАК СчетЗатрат,
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка.СчетУчета КАК СчетРасчетов,
		|	АвансовыйОтчетОплатаПоставщикам.Валюта КАК Валюта,
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка КАК Ссылка,
		|	АвансовыйОтчетОплатаПоставщикам.Содержание КАК Содержание,
		|	NULL КАК КлючСвязи
		|ИЗ
		|	Документ.АвансовыйОтчет.ОплатаПоставщикам КАК АвансовыйОтчетОплатаПоставщикам
		|ГДЕ
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	АвансовыйОтчетОплатаПоставщикам.НомерВходящегоДокумента,
		|	АвансовыйОтчетОплатаПоставщикам.ДатаВходящегоДокумента,
		|	ВЫРАЗИТЬ(АвансовыйОтчетОплатаПоставщикам.Содержание КАК СТРОКА(1000)),
		|	АвансовыйОтчетОплатаПоставщикам.СчетРасчетов,
		|	АвансовыйОтчетОплатаПоставщикам.НомерСтроки,
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка.СчетУчета,
		|	АвансовыйОтчетОплатаПоставщикам.Валюта,
		|	&ОплатаПоставщику + (ВЫРАЗИТЬ(АвансовыйОтчетОплатаПоставщикам.Контрагент.НаименованиеПолное КАК СТРОКА(50))),
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка,
		|	АвансовыйОтчетОплатаПоставщикам.Сумма,
		|	АвансовыйОтчетОплатаПоставщикам.Содержание
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2,
		|	АвансовыйОтчетТоварыУслуги.НомерСтроки,
		|	АвансовыйОтчетВладельцыПатентов.НомерДокумента,
		|	АвансовыйОтчетВладельцыПатентов.ДатаДокумента,
		|	АвансовыйОтчетТоварыУслуги.Номенклатура.Наименование,
		|	СУММА(АвансовыйОтчетТоварыУслуги.Сумма),
		|	АвансовыйОтчетТоварыУслуги.Сумма,
		|	АвансовыйОтчетТоварыУслуги.СчетУчета,
		|	АвансовыйОтчетТоварыУслуги.Ссылка.СчетУчета,
		|	МАКСИМУМ(&ВалютаРегламентированногоУчета),
		|	АвансовыйОтчетТоварыУслуги.Ссылка,
		|	NULL,
		|	АвансовыйОтчетТоварыУслуги.КлючСвязи
		|ИЗ
		|	Документ.АвансовыйОтчет.ТоварыУслуги КАК АвансовыйОтчетТоварыУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.ВладельцыПатентов КАК АвансовыйОтчетВладельцыПатентов
		|		ПО АвансовыйОтчетТоварыУслуги.Ссылка = АвансовыйОтчетВладельцыПатентов.Ссылка
		|			И АвансовыйОтчетТоварыУслуги.КлючСвязи = АвансовыйОтчетВладельцыПатентов.КлючСвязи
		|ГДЕ
		|	АвансовыйОтчетТоварыУслуги.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	АвансовыйОтчетТоварыУслуги.СчетУчета,
		|	АвансовыйОтчетТоварыУслуги.Номенклатура.Наименование,
		|	АвансовыйОтчетТоварыУслуги.Ссылка.СчетУчета,
		|	АвансовыйОтчетТоварыУслуги.НомерСтроки,
		|	АвансовыйОтчетТоварыУслуги.Ссылка,
		|	АвансовыйОтчетТоварыУслуги.Сумма,
		|	АвансовыйОтчетТоварыУслуги.КлючСвязи,
		|	АвансовыйОтчетВладельцыПатентов.ДатаДокумента,
		|	АвансовыйОтчетВладельцыПатентов.НомерДокумента
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	АвансовыйОтчетПрочее.НомерСтроки,
		|	АвансовыйОтчетПрочее.НомерВходящегоДокумента,
		|	АвансовыйОтчетПрочее.ДатаВходящегоДокумента,
		|	ВЫРАЗИТЬ(АвансовыйОтчетПрочее.ВидДокВходящий КАК СТРОКА(50)),
		|	СУММА(АвансовыйОтчетПрочее.Сумма),
		|	АвансовыйОтчетПрочее.Сумма,
		|	АвансовыйОтчетПрочее.СчетУчета,
		|	АвансовыйОтчетПрочее.Ссылка.СчетУчета,
		|	&ВалютаРегламентированногоУчета,
		|	АвансовыйОтчетПрочее.Ссылка,
		|	АвансовыйОтчетПрочее.Содержание,
		|	NULL
		|ИЗ
		|	Документ.АвансовыйОтчет.Прочее КАК АвансовыйОтчетПрочее
		|ГДЕ
		|	АвансовыйОтчетПрочее.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	АвансовыйОтчетПрочее.НомерВходящегоДокумента,
		|	АвансовыйОтчетПрочее.ДатаВходящегоДокумента,
		|	ВЫРАЗИТЬ(АвансовыйОтчетПрочее.ВидДокВходящий КАК СТРОКА(50)),
		|	АвансовыйОтчетПрочее.СчетУчета,
		|	АвансовыйОтчетПрочее.НомерСтроки,
		|	АвансовыйОтчетПрочее.Ссылка.СчетУчета,
		|	АвансовыйОтчетПрочее.Ссылка,
		|	АвансовыйОтчетПрочее.Сумма,
		|	АвансовыйОтчетПрочее.Содержание
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	4,
		|	NULL,
		|	NULL,
		|	NULL,
		|	&ВыплаченоРКО,
		|	СУММА(ВыплатаЗарплатыЗарплата.СуммаПоКассе),
		|	СУММА(ВыплатаЗарплатыЗарплата.СуммаПоКассе),
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НачисленнаяЗаработнаяПлата),
		|	АвансовыйОтчет.Ссылка.СчетУчета,
		|	&ВалютаРегламентированногоУчета,
		|	АвансовыйОтчет.Ссылка,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ВедомостьЗаработнойПлаты.Зарплата КАК ВыплатаЗарплатыЗарплата
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.ВыплатаЗаработнойПлаты КАК АвансовыйОтчет
		|		ПО ВыплатаЗарплатыЗарплата.Ссылка = АвансовыйОтчет.Ведомость
		|ГДЕ
		|	АвансовыйОтчет.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	АвансовыйОтчет.Ссылка.СчетУчета,
		|	АвансовыйОтчет.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|ИТОГИ
		|	МАКСИМУМ(Валюта)
		|ПО
		|	Ссылка";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивОбъектов", 					МассивОбъектов);		
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", 	ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("Дата", 								МассивОбъектов[0].Дата);
	Запрос.УстановитьПараметр("Организация", 						МассивОбъектов[0].Организация);
	Запрос.УстановитьПараметр("ОплатаПоставщику", 					НСтр("ru = 'Оплата поставщику:'"));
	Запрос.УстановитьПараметр("ВыплаченоРКО", 						НСтр("ru = 'Выплачено расходными ордерами'"));
	
	РезультатПакет = Запрос.ВыполнитьПакет();	
	
	Шапка = РезультатПакет[0].Выбрать();
	Пока Шапка.Следующий() Цикл
	
		Ссылка = Шапка.Ссылка;	
		
		Макет         = ПолучитьМакет("АвансовыйОтчет");
		
		ОбластьМакета = Макет.ПолучитьОбласть("Титул1");
		
		//******* ТИТУЛЬНЫЙ ЛИСТ*******
		КурсоваяРазница = 0;
		
		СведенияОФизЛице = БухгалтерскийУчетСервер.ПолучитьСведенияОФизЛице(Шапка.Организация, Шапка.ПодотчетноеЛицо, Шапка.ДатаДокумента); 
		
		ПодотчетноеЛицо = СведенияОФизЛице.ФИО;
		ТабельныйНомер = Шапка.ПодотчетноеЛицо.Код; 
		Подразделение = СведенияОФизЛице.Подразделение;
		Должность =     СведенияОФизЛице.Должность;
		
		// Выводим титульный лист авансового отчета
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеПодотчетногоЛица = ПодотчетноеЛицо;
		КопияПодотчетноеЛицо = ПодотчетноеЛицо;
		
		ОбластьМакета.Параметры.ТабельныйНомер = ТабельныйНомер;
		ОбластьМакета.Параметры.ПредставлениеПодразделения = Подразделение;
		ОбластьМакета.Параметры.ДолжностьПодотчетногоЛицаПредставление = Должность;
		ОбластьМакета.Параметры.НомерДокумента  = Шапка.Номер; 
		
		ПредставлениеОрганизации = Шапка.ОрганизацияНаименованиеПолное;
		
		Руководители = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизаций(Шапка.Организация, Шапка.ДатаДокумента);
		
		Руководитель = Руководители.Руководитель;
		Бухгалтер    = Руководители.ГлавныйБухгалтер;
		
		
		ОбластьМакета.Параметры.ПредставлениеОрганизации           = СокрЛП(ПредставлениеОрганизации);
		ОбластьМакета.Параметры.РуководительПредставление          = Руководитель;
		
		// Получение данных табличной части авансов.
		
		// функция получает данные документа		
		СуммаОтчета = 0;
		Результат = ДанныеТабличныхЧастей(Шапка);
		ВыборкаТабличныхЧастей = Результат.Выбрать();
		Пока ВыборкаТабличныхЧастей.Следующий() Цикл
			Если ВыборкаТабличныхЧастей.Израсходовано <> 0
				И ВыборкаТабличныхЧастей.Израсходовано <> NULL Тогда 
				СуммаОтчета = СуммаОтчета + ВыборкаТабличныхЧастей.Израсходовано;
			КонецЕсли;
		КонецЦикла;
		ВыборкаТабличныхЧастей.Сбросить();
		                                           
		ОбластьМакета.Параметры.СуммаОтчетаЧислом = СтрШаблон("%1 %2", СуммаОтчета, ВалютаРегламентированногоУчета);
		ТабДокумент.Вывести(ОбластьМакета);
		ОбластьСтроки = Макет.ПолучитьОбласть("ШапкаСтроки");
		ТабДокумент.Вывести(ОбластьСтроки);
		ОбластьСтроки = Макет.ПолучитьОбласть("Строки");
		
		Пока ВыборкаТабличныхЧастей.Следующий() Цикл
			Если ЗначениеЗаполнено(ВыборкаТабличныхЧастей.Выдано) 
				ИЛИ ЗначениеЗаполнено(ВыборкаТабличныхЧастей.Приход) 
				ИЛИ ЗначениеЗаполнено(ВыборкаТабличныхЧастей.ИзрасходованоВВалюте) 
				ИЛИ ЗначениеЗаполнено(ВыборкаТабличныхЧастей.НачОстаток) Тогда
				ОбластьСтроки.Параметры.Валюта 			= ВыборкаТабличныхЧастей.Валюта;
				ОбластьСтроки.Параметры.НачОстаток 		= ВыборкаТабличныхЧастей.НачОстаток;
				ОбластьСтроки.Параметры.Израсходовано 	= ВыборкаТабличныхЧастей.ИзрасходованоВВалюте;
				
				ОбластьСтроки.Параметры.СуммаОбмена 	= ?(ВыборкаТабличныхЧастей.Расход <> 0,
					"-" + Формат(ВыборкаТабличныхЧастей.Расход,"ЧЦ=15; ЧДЦ=2; ЧН=") + Символы.ПС, "") 
						+ ?(ВыборкаТабличныхЧастей.Приход <> 0, "+" 
						+ Формат(ВыборкаТабличныхЧастей.Приход,"ЧЦ=15; ЧДЦ=2; ЧН="), "");
						
				ОбластьСтроки.Параметры.Итого 			= ВыборкаТабличныхЧастей.НачОстаток 
					- ?(ВыборкаТабличныхЧастей.Расход <> 0, ВыборкаТабличныхЧастей.Расход, 0) 
					+ ?(ВыборкаТабличныхЧастей.Приход <> 0, ВыборкаТабличныхЧастей.Приход,0);
						
				ОбластьСтроки.Параметры.КонечныйОстаток = ВыборкаТабличныхЧастей.КонОстаток;
				ТабДокумент.Вывести(ОбластьСтроки);
			КонецЕсли;
		КонецЦикла;
		
		// выводим в отчет таблицу документов
		Если Ссылка.ТаблицаДокументов.Количество()<>0 Тогда
			
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТабДокументов");
			ТабДокумент.Вывести(ОбластьМакета);
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокиТабДокументов");
			
			Для каждого СТЧ Из Ссылка.ТаблицаДокументов Цикл
				ОбластьМакета.Параметры.Документ  = СТЧ.ДокументОплаты;
				ОбластьМакета.Параметры.Валюта    = СТЧ.Валюта;
				ОбластьМакета.Параметры.СуммаДокумента  = Формат(СТЧ.СуммаДокумента,"ЧЦ=15; ЧДЦ=2");
				ОбластьМакета.Параметры.Остаток   = Формат(СТЧ.Остаток,"ЧЦ=15; ЧДЦ=2") ;
				ТабДокумент.Вывести(ОбластьМакета);
			КонецЦикла;
		КонецЕсли;
		
		//	Выводим таблицу обмена если она заполнена			
		Если Ссылка.ОбменВалют.Количество()<>0 Тогда
			
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаОбмен");
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокиОбмен");
			
			Для каждого СТЧ Из Ссылка.ОбменВалют Цикл
				ОбластьМакета.Параметры.ВалютаПрихода  = Формат(СТЧ.ВалютаДо,"ЧЦ=15; ЧДЦ=2");
				ОбластьМакета.Параметры.СуммаПрихода   = Формат(СТЧ.СуммаПосле,"ЧЦ=15; ЧДЦ=2");
				ОбластьМакета.Параметры.ВалютаРасхода  = Формат(СТЧ.ВалютаПосле,"ЧЦ=15; ЧДЦ=2");
				ОбластьМакета.Параметры.СуммаРасхода   = Формат(СТЧ.СуммаДо,"ЧЦ=15; ЧДЦ=2") ;
				ОбластьМакета.Параметры.Курс   = СТЧ.КурсОтчета ;
				
				ТабДокумент.Вывести(ОбластьМакета);
			КонецЦикла;
		КонецЕсли;
		
		// Вывод таблицы бухгалтерских проводок.
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаБухЗапись");
		
		ТабДокумент.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокиБухЗапись");
				
		Если ПерваяСсылкаПроводки Тогда
			ВыборкаПоСсылкеПроводки = РезультатПакет[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		    ПерваяСсылкаПроводки 	= Ложь;
		КонецЕсли;

		Если ВыборкаПоСсылкеПроводки.Следующий() Тогда
			
			ВыборкаПроводок = ВыборкаПоСсылкеПроводки.Выбрать();
			
			Счетчик = 0;
			
			Пока ВыборкаПроводок.Следующий() Цикл
				
				Если ВыборкаПроводок.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами 
					И ВыборкаПроводок.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами 
					И ВыборкаПроводок.Содержание = НСтр("ru = 'Обмен валют подотчетником'") Тогда

					ОбластьМакета.Параметры.КорСчетДебет1   = ВыборкаПроводок.СчетДт;
					ОбластьМакета.Параметры.КорСчетКредит1  = "";
					
					Если ТипЗнч(ВыборкаПроводок.СубконтоДт) = ТипЗнч(Справочники.Контрагенты.ПустаяСсылка()) Тогда 
						ОбластьМакета.Параметры.СубконтоДт 	= ВыборкаПроводок.СубконтоДт.НаименованиеПолное;
					Иначе
						ОбластьМакета.Параметры.СубконтоДт 	= ВыборкаПроводок.СубконтоДт;
					КонецЕсли;
					
					ОбластьМакета.Параметры.СубконтоКт  = "";
					ОбластьМакета.Параметры.Валюта      = ВыборкаПроводок.ВалютаДт;
					ОбластьМакета.Параметры.Сумма 		= ВыборкаПроводок.ВалютнаяСуммаДт;
					
					ТабДокумент.Вывести(ОбластьМакета);
					
					ОбластьМакета.Параметры.КорСчетДебет1   = "";
					ОбластьМакета.Параметры.КорСчетКредит1  = ВыборкаПроводок.СчетКт;
					
					Если ТипЗнч(ВыборкаПроводок.СубконтоКт) = ТипЗнч(Справочники.Контрагенты.ПустаяСсылка()) Тогда 
						ОбластьМакета.Параметры.СубконтоКт 	= ВыборкаПроводок.СубконтоКт.НаименованиеПолное;
					Иначе
						ОбластьМакета.Параметры.СубконтоКт 	= ВыборкаПроводок.СубконтоКт;
					КонецЕсли;
					
					ОбластьМакета.Параметры.СубконтоДт  = "";
					ОбластьМакета.Параметры.Валюта      = ВыборкаПроводок.ВалютаКт;
					ОбластьМакета.Параметры.Сумма 		= ВыборкаПроводок.ВалютнаяСуммаКт;
					
					ТабДокумент.Вывести(ОбластьМакета);
					
				Иначе	
					ОбластьМакета.Параметры.КорСчетДебет1   = ВыборкаПроводок.СчетДт;
					ОбластьМакета.Параметры.КорСчетКредит1  = ВыборкаПроводок.СчетКт;
					
					Если ТипЗнч(ВыборкаПроводок.СубконтоДт) = ТипЗнч(Справочники.Контрагенты.ПустаяСсылка()) Тогда 
						ОбластьМакета.Параметры.СубконтоДт 	= ВыборкаПроводок.СубконтоДт.НаименованиеПолное;
					Иначе
						ОбластьМакета.Параметры.СубконтоДт 	= ВыборкаПроводок.СубконтоДт;
					КонецЕсли;
					
										
					Если ТипЗнч(ВыборкаПроводок.СубконтоКт) = ТипЗнч(Справочники.Контрагенты.ПустаяСсылка()) Тогда 
						ОбластьМакета.Параметры.СубконтоКт 	= ВыборкаПроводок.СубконтоКт.НаименованиеПолное;
					Иначе
						ОбластьМакета.Параметры.СубконтоКт 	= ВыборкаПроводок.СубконтоКт;
					КонецЕсли;	
					
					Если НЕ ЗначениеЗаполнено(ВыборкаПроводок.ВалютаКт) ИЛИ ВыборкаПроводок.ВалютаКт = ВалютаРегламентированногоУчета
						ИЛИ ВыборкаПроводок.СчетДт = ПланыСчетов.Хозрасчетный.УбыткиОтОперационныхКурсовыхРазниц Тогда
						ОбластьМакета.Параметры.Валюта      = ВалютаРегламентированногоУчета;
						ОбластьМакета.Параметры.Сумма 		= ВыборкаПроводок.Сумма;
					Иначе
						ОбластьМакета.Параметры.Валюта      = ВыборкаПроводок.ВалютаКт;
						ОбластьМакета.Параметры.Сумма 		= ВыборкаПроводок.ВалютнаяСуммаКт;
					КонецЕсли;
					
					ТабДокумент.Вывести(ОбластьМакета);
				КонецЕсли;
			КонецЦикла;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Титул2");
			ОбластьМакета.Параметры.ГлавныйБухгалтер    = Бухгалтер;
			ОбластьМакета.Параметры.ДатаДокументаДень   = "" + Строка(День(Шапка.ДатаДокумента)) + "";
			ОбластьМакета.Параметры.ДатаДокументаМесяц  = МесяцПрописью(Шапка.ДатаДокумента, Истина);
			ОбластьМакета.Параметры.ДатаДокументаГод    = Строка(Формат(Год(Шапка.ДатаДокумента), "ЧГ=0")) + "г.";
			ОбластьМакета.Параметры.НомерДокумента    	= Шапка.Номер;
			ОбластьМакета.Параметры.СуммаОтчетаПрописью = БухгалтерскийУчетСервер.СформироватьСуммуПрописью(СуммаОтчета, ВалютаРегламентированногоУчета);
			ОбластьМакета.Параметры.ПредставлениеПодотчетногоЛицаВРодПадеже = ПодотчетноеЛицо;
			ОбластьМакета.Параметры.ПредставлениеГлавногоБухгалтера    = Бухгалтер;
			ОбластьМакета.Параметры.КоличествоДокументовВПриложении = Шапка.Документов;
			ОбластьМакета.Параметры.КоличествоЛистовВПриложении = Шапка.Листов;
			
			ИзрасходованоЦелая       = 1;
			
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		Если ПерваяСсылкаТовары Тогда
			ВыборкаПоСсылке 	= РезультатПакет[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		    ПерваяСсылкаТовары 	= Ложь;
		КонецЕсли;
		
		Если ВыборкаПоСсылке.Следующий() Тогда
			
			Товар = ВыборкаПоСсылке.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
				
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим табличные части
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			НомерСтроки   = 0;
			
			ИтогоПоОтчету        = 0;
			ИтогоПоОтчетуВВалюте = 0;
			
			// ТЧ.Товары и услуги
			Пока Товар.Следующий() Цикл
				ОбластьМакета.Параметры.Заполнить(Товар);
				НомерСтроки = НомерСтроки + 1;
				ОбластьМакета.Параметры.НомерСтроки         = НомерСтроки;
				ОбластьМакета.Параметры.ДокументДата        = Формат(Товар.ДокументДата, "ДЛФ=D");
				ОбластьМакета.Параметры.ДебетКорСчета 		= Товар.СчетЗатрат.Код;
				ОбластьМакета.Параметры.КредитКорСчета 		= ?(Товар.СчетРасчетов <> Null, Товар.СчетРасчетов.Код, "");
				ОбластьМакета.Параметры.НаименованиеРасхода = СокрЛП(Товар.НаименованиеРасхода) + " " + СокрЛП(Товар.Содержание);
				Сумма = Товар.ПоОтчетуВВалюте; 
				ОбластьМакета.Параметры.ПоОтчету = Сумма ;
				ИтогоПоОтчету = ИтогоПоОтчету + Сумма;
				ТабДокумент.Вывести(ОбластьМакета);   
			КонецЦикла;
		КонецЕсли;
		
		ТЗ = РезультатПакет[2].Выгрузить();
		
		ТЗ.Свернуть("Валюта");
		Если НЕ ТЗ.Количество() > 1 Тогда
			ОбластьИтоги 					= Макет.ПолучитьОбласть("Итоги");                     		
			ОбластьИтоги.Параметры.Итого 	= ИтогоПоОтчету;	
			ТабДокумент.Вывести(ОбластьИтоги);
		КонецЕсли;  
		
		// Вывод подвала.
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеПодотчетногоЛица 	= ПодотчетноеЛицо;
		ТабДокумент.Вывести(ОбластьМакета);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
	
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьАвансовогоОтчетаУпрощенный(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);

	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ПерваяСсылкаТовары 		= Истина;
	ПерваяСсылкаПроводки 	= Истина;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати = "АвансовыйОтчет_АвансовыйОтчет";	
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	АвансовыйОтчет.Номер КАК Номер,
		|	АвансовыйОтчет.Дата КАК ДатаДокумента,
		|	АвансовыйОтчет.ФизЛицо КАК ПодотчетноеЛицо,
		|	АвансовыйОтчет.ФизЛицо.Представление КАК ПредставлениеПодотчетногоЛица,
		|	АвансовыйОтчет.Организация.Ссылка КАК Организация,
		|	АвансовыйОтчет.СчетУчета КАК СчетРасчетовСПодотчетнымЛицом,
		|	АвансовыйОтчет.СуммаДокумента КАК СуммаДокумента,
		|	АвансовыйОтчет.Ссылка КАК Ссылка,
		|	АвансовыйОтчет.Назначение КАК НазначениеАванса,
		|	АвансовыйОтчет.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	АвансовыйОтчет.Документов КАК Документов,
		|	АвансовыйОтчет.Листов КАК Листов
		|ИЗ
		|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
		|ГДЕ
		|	АвансовыйОтчет.Ссылка В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйДвиженияССубконто.Регистратор КАК Ссылка,
		|	ХозрасчетныйДвиженияССубконто.СчетДт КАК СчетДт,
		|	ХозрасчетныйДвиженияССубконто.СчетКт КАК СчетКт,
		|	ХозрасчетныйДвиженияССубконто.Сумма КАК Сумма,
		|	ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаДт КАК ВалютнаяСуммаДт,
		|	ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаКт КАК ВалютнаяСуммаКт,
		|	ХозрасчетныйДвиженияССубконто.СубконтоДт1 КАК СубконтоДт,
		|	ХозрасчетныйДвиженияССубконто.СубконтоКт1 КАК СубконтоКт,
		|	ХозрасчетныйДвиженияССубконто.ВалютаДт КАК ВалютаДт,
		|	ХозрасчетныйДвиженияССубконто.ВалютаКт КАК ВалютаКт,
		|	ХозрасчетныйДвиженияССубконто.Содержание КАК Содержание
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(, , Регистратор В (&МассивОбъектов), , ) КАК ХозрасчетныйДвиженияССубконто
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	ХозрасчетныйДвиженияССубконто.НомерСтроки
		|ИТОГИ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	1 КАК Поле1,
		|	АвансовыйОтчетОплатаПоставщикам.НомерСтроки КАК НомерСтроки,
		|	АвансовыйОтчетОплатаПоставщикам.НомерВходящегоДокумента КАК ДокументНомер,
		|	АвансовыйОтчетОплатаПоставщикам.ДатаВходящегоДокумента КАК ДокументДата,
		|	&ОплатаПоставщику + (ВЫРАЗИТЬ(АвансовыйОтчетОплатаПоставщикам.Контрагент.НаименованиеПолное КАК СТРОКА(50))) КАК НаименованиеРасхода,
		|	СУММА(АвансовыйОтчетОплатаПоставщикам.Сумма * АвансовыйОтчетОплатаПоставщикам.Курс) КАК ПоОтчету,
		|	АвансовыйОтчетОплатаПоставщикам.Сумма КАК ПоОтчетуВВалюте,
		|	АвансовыйОтчетОплатаПоставщикам.СчетРасчетов КАК СчетЗатрат,
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка.СчетУчета КАК СчетРасчетов,
		|	АвансовыйОтчетОплатаПоставщикам.Валюта КАК Валюта,
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка КАК Ссылка,
		|	АвансовыйОтчетОплатаПоставщикам.Содержание КАК Содержание,
		|	NULL КАК КлючСвязи
		|ИЗ
		|	Документ.АвансовыйОтчет.ОплатаПоставщикам КАК АвансовыйОтчетОплатаПоставщикам
		|ГДЕ
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	АвансовыйОтчетОплатаПоставщикам.НомерВходящегоДокумента,
		|	АвансовыйОтчетОплатаПоставщикам.ДатаВходящегоДокумента,
		|	ВЫРАЗИТЬ(АвансовыйОтчетОплатаПоставщикам.Содержание КАК СТРОКА(1000)),
		|	АвансовыйОтчетОплатаПоставщикам.СчетРасчетов,
		|	АвансовыйОтчетОплатаПоставщикам.НомерСтроки,
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка.СчетУчета,
		|	АвансовыйОтчетОплатаПоставщикам.Валюта,
		|	&ОплатаПоставщику + (ВЫРАЗИТЬ(АвансовыйОтчетОплатаПоставщикам.Контрагент.НаименованиеПолное КАК СТРОКА(50))),
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка,
		|	АвансовыйОтчетОплатаПоставщикам.Сумма,
		|	АвансовыйОтчетОплатаПоставщикам.Содержание
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2,
		|	АвансовыйОтчетТоварыУслуги.НомерСтроки,
		|	АвансовыйОтчетВладельцыПатентов.НомерДокумента,
		|	АвансовыйОтчетВладельцыПатентов.ДатаДокумента,
		|	АвансовыйОтчетТоварыУслуги.Номенклатура.Наименование,
		|	СУММА(АвансовыйОтчетТоварыУслуги.Сумма),
		|	АвансовыйОтчетТоварыУслуги.Сумма,
		|	АвансовыйОтчетТоварыУслуги.СчетУчета,
		|	АвансовыйОтчетТоварыУслуги.Ссылка.СчетУчета,
		|	МАКСИМУМ(&ВалютаРегламентированногоУчета),
		|	АвансовыйОтчетТоварыУслуги.Ссылка,
		|	NULL,
		|	АвансовыйОтчетТоварыУслуги.КлючСвязи
		|ИЗ
		|	Документ.АвансовыйОтчет.ТоварыУслуги КАК АвансовыйОтчетТоварыУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.ВладельцыПатентов КАК АвансовыйОтчетВладельцыПатентов
		|		ПО АвансовыйОтчетТоварыУслуги.Ссылка = АвансовыйОтчетВладельцыПатентов.Ссылка
		|			И АвансовыйОтчетТоварыУслуги.КлючСвязи = АвансовыйОтчетВладельцыПатентов.КлючСвязи
		|ГДЕ
		|	АвансовыйОтчетТоварыУслуги.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	АвансовыйОтчетТоварыУслуги.СчетУчета,
		|	АвансовыйОтчетТоварыУслуги.Номенклатура.Наименование,
		|	АвансовыйОтчетТоварыУслуги.Ссылка.СчетУчета,
		|	АвансовыйОтчетТоварыУслуги.НомерСтроки,
		|	АвансовыйОтчетТоварыУслуги.Ссылка,
		|	АвансовыйОтчетТоварыУслуги.Сумма,
		|	АвансовыйОтчетТоварыУслуги.КлючСвязи,
		|	АвансовыйОтчетВладельцыПатентов.ДатаДокумента,
		|	АвансовыйОтчетВладельцыПатентов.НомерДокумента
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	АвансовыйОтчетПрочее.НомерСтроки,
		|	АвансовыйОтчетПрочее.НомерВходящегоДокумента,
		|	АвансовыйОтчетПрочее.ДатаВходящегоДокумента,
		|	ВЫРАЗИТЬ(АвансовыйОтчетПрочее.ВидДокВходящий КАК СТРОКА(50)),
		|	СУММА(АвансовыйОтчетПрочее.Сумма),
		|	АвансовыйОтчетПрочее.Сумма,
		|	АвансовыйОтчетПрочее.СчетУчета,
		|	АвансовыйОтчетПрочее.Ссылка.СчетУчета,
		|	&ВалютаРегламентированногоУчета,
		|	АвансовыйОтчетПрочее.Ссылка,
		|	АвансовыйОтчетПрочее.Содержание,
		|	NULL
		|ИЗ
		|	Документ.АвансовыйОтчет.Прочее КАК АвансовыйОтчетПрочее
		|ГДЕ
		|	АвансовыйОтчетПрочее.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	АвансовыйОтчетПрочее.НомерВходящегоДокумента,
		|	АвансовыйОтчетПрочее.ДатаВходящегоДокумента,
		|	ВЫРАЗИТЬ(АвансовыйОтчетПрочее.ВидДокВходящий КАК СТРОКА(50)),
		|	АвансовыйОтчетПрочее.СчетУчета,
		|	АвансовыйОтчетПрочее.НомерСтроки,
		|	АвансовыйОтчетПрочее.Ссылка.СчетУчета,
		|	АвансовыйОтчетПрочее.Ссылка,
		|	АвансовыйОтчетПрочее.Сумма,
		|	АвансовыйОтчетПрочее.Содержание
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	4,
		|	NULL,
		|	NULL,
		|	NULL,
		|	&ВыплаченоРКО,
		|	СУММА(ВыплатаЗарплатыЗарплата.СуммаПоКассе),
		|	СУММА(ВыплатаЗарплатыЗарплата.СуммаПоКассе),
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НачисленнаяЗаработнаяПлата),
		|	АвансовыйОтчет.Ссылка.СчетУчета,
		|	&ВалютаРегламентированногоУчета,
		|	АвансовыйОтчет.Ссылка,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ВедомостьЗаработнойПлаты.Зарплата КАК ВыплатаЗарплатыЗарплата
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.ВыплатаЗаработнойПлаты КАК АвансовыйОтчет
		|		ПО ВыплатаЗарплатыЗарплата.Ссылка = АвансовыйОтчет.Ведомость
		|ГДЕ
		|	АвансовыйОтчет.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	АвансовыйОтчет.Ссылка.СчетУчета,
		|	АвансовыйОтчет.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|ИТОГИ
		|	МАКСИМУМ(Валюта)
		|ПО
		|	Ссылка";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);		
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("Дата", МассивОбъектов[0].Дата);
	Запрос.УстановитьПараметр("Организация", МассивОбъектов[0].Организация);
	Запрос.УстановитьПараметр("ОплатаПоставщику", НСтр("ru = 'Оплата поставщику:'"));
	Запрос.УстановитьПараметр("ВыплаченоРКО", НСтр("ru = 'Выплачено расходными ордерами'"));
	
	РезультатПакет = Запрос.ВыполнитьПакет();	
	
	Шапка = РезультатПакет[0].Выбрать();
	Пока Шапка.Следующий() Цикл
	
		Ссылка = Шапка.Ссылка;	
		
		Макет         = ПолучитьМакет("АвансовыйОтчетУпрощенный");
		
		ОбластьМакета = Макет.ПолучитьОбласть("Титул1");
		
		//******* ТИТУЛЬНЫЙ ЛИСТ*******
		КурсоваяРазница = 0;
		
		СведенияОФизЛице = БухгалтерскийУчетСервер.ПолучитьСведенияОФизЛице(Шапка.Организация, Шапка.ПодотчетноеЛицо, Шапка.ДатаДокумента); 
		
		ПодотчетноеЛицо = СведенияОФизЛице.ФИО;
		ТабельныйНомер = Шапка.ПодотчетноеЛицо.Код; 
		Подразделение =  СведенияОФизЛице.Подразделение;
		Должность =      СведенияОФизЛице.Должность;
		
		// Выводим титульный лист авансового отчета
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеПодотчетногоЛица = ПодотчетноеЛицо;
		КопияПодотчетноеЛицо = ПодотчетноеЛицо;
		
		ОбластьМакета.Параметры.ТабельныйНомер = ТабельныйНомер;
		ОбластьМакета.Параметры.ПредставлениеПодразделения = Подразделение;
		ОбластьМакета.Параметры.ДолжностьПодотчетногоЛицаПредставление = Должность;
		ОбластьМакета.Параметры.НомерДокумента  = Шапка.Номер; 
		
		ПредставлениеОрганизации = Шапка.ОрганизацияНаименованиеПолное;
		
		Руководители = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизаций(Шапка.Организация, Шапка.ДатаДокумента);
		
		Руководитель = Руководители.Руководитель;
		Бухгалтер    = Руководители.ГлавныйБухгалтер;
		
		
		ОбластьМакета.Параметры.ПредставлениеОрганизации           = СокрЛП(ПредставлениеОрганизации);
		ОбластьМакета.Параметры.РуководительПредставление          = Руководитель;
		
		// Получение данных табличной части авансов.
		
		// функция получает данные документа		
		СуммаОтчета = 0;
		Результат = ДанныеТабличныхЧастей(Шапка);
		ВыборкаТабличныхЧастей = Результат.Выбрать();
		Пока ВыборкаТабличныхЧастей.Следующий() Цикл
			Если ВыборкаТабличныхЧастей.Израсходовано <> 0
				И ВыборкаТабличныхЧастей.Израсходовано <> NULL Тогда 
				СуммаОтчета = СуммаОтчета + ВыборкаТабличныхЧастей.Израсходовано;
			КонецЕсли;
		КонецЦикла;
		ВыборкаТабличныхЧастей.Сбросить();
		                                           
		ОбластьМакета.Параметры.СуммаОтчетаЧислом = СтрШаблон("%1 %2", СуммаОтчета, ВалютаРегламентированногоУчета);
		ТабДокумент.Вывести(ОбластьМакета);
		ОбластьСтроки = Макет.ПолучитьОбласть("ШапкаСтроки");
		ТабДокумент.Вывести(ОбластьСтроки);
		ОбластьСтроки = Макет.ПолучитьОбласть("Строки");
		
		Пока ВыборкаТабличныхЧастей.Следующий() Цикл
			Если ЗначениеЗаполнено(ВыборкаТабличныхЧастей.Выдано) 
				ИЛИ ЗначениеЗаполнено(ВыборкаТабличныхЧастей.Приход) 
				ИЛИ ЗначениеЗаполнено(ВыборкаТабличныхЧастей.ИзрасходованоВВалюте)
				ИЛИ ЗначениеЗаполнено(ВыборкаТабличныхЧастей.НачОстаток) Тогда
				ОбластьСтроки.Параметры.Валюта 			= ВыборкаТабличныхЧастей.Валюта;
				ОбластьСтроки.Параметры.НачОстаток 		= ВыборкаТабличныхЧастей.НачОстаток;
				ОбластьСтроки.Параметры.Израсходовано 	= ВыборкаТабличныхЧастей.ИзрасходованоВВалюте;
				
				ОбластьСтроки.Параметры.СуммаОбмена 	= ?(ВыборкаТабличныхЧастей.Расход <> 0,
					"-" + Формат(ВыборкаТабличныхЧастей.Расход,"ЧЦ=15; ЧДЦ=2; ЧН=") + Символы.ПС, "") 
						+ ?(ВыборкаТабличныхЧастей.Приход <> 0, "+" 
						+ Формат(ВыборкаТабличныхЧастей.Приход,"ЧЦ=15; ЧДЦ=2; ЧН="), "");
						
				ОбластьСтроки.Параметры.Итого 			= ВыборкаТабличныхЧастей.НачОстаток 
					- ?(ВыборкаТабличныхЧастей.Расход <> 0, ВыборкаТабличныхЧастей.Расход, 0) 
					+ ?(ВыборкаТабличныхЧастей.Приход <> 0, ВыборкаТабличныхЧастей.Приход,0);
						
				ОбластьСтроки.Параметры.КонечныйОстаток = ВыборкаТабличныхЧастей.КонОстаток;
				ТабДокумент.Вывести(ОбластьСтроки);
			КонецЕсли;
		КонецЦикла;
		
		// выводим в отчет таблицу документов
		Если Ссылка.ТаблицаДокументов.Количество()<>0 Тогда
			
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТабДокументов");
			ТабДокумент.Вывести(ОбластьМакета);
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокиТабДокументов");
			
			Для каждого СТЧ Из Ссылка.ТаблицаДокументов Цикл
				ОбластьМакета.Параметры.Документ  = СТЧ.ДокументОплаты;
				ОбластьМакета.Параметры.Валюта    = СТЧ.Валюта;
				ОбластьМакета.Параметры.СуммаДокумента  = Формат(СТЧ.СуммаДокумента,"ЧЦ=15; ЧДЦ=2");
				ОбластьМакета.Параметры.Остаток   = Формат(СТЧ.Остаток,"ЧЦ=15; ЧДЦ=2") ;
				ТабДокумент.Вывести(ОбластьМакета);
			КонецЦикла;
		КонецЕсли;
		
		// Вывод таблицы бухгалтерских проводок.
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаБухЗапись");
		
		ТабДокумент.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокиБухЗапись");
				
		Если ПерваяСсылкаПроводки Тогда
			ВыборкаПоСсылкеПроводки = РезультатПакет[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		    ПерваяСсылкаПроводки 	= Ложь;
		КонецЕсли;

		Если ВыборкаПоСсылкеПроводки.Следующий() Тогда
			
			ВыборкаПроводок = ВыборкаПоСсылкеПроводки.Выбрать();
			
			Счетчик = 0;
			
			Пока ВыборкаПроводок.Следующий() Цикл
				
				Если ВыборкаПроводок.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами 
					И ВыборкаПроводок.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами 
					И ВыборкаПроводок.Содержание = НСтр("ru = 'Обмен валют подотчетником'") Тогда

					ОбластьМакета.Параметры.КорСчетДебет1   = ВыборкаПроводок.СчетДт;
					ОбластьМакета.Параметры.КорСчетКредит1  = "";
					
					Если ТипЗнч(ВыборкаПроводок.СубконтоДт) = ТипЗнч(Справочники.Контрагенты.ПустаяСсылка()) Тогда 
						ОбластьМакета.Параметры.СубконтоДт 	= ВыборкаПроводок.СубконтоДт.НаименованиеПолное;
					Иначе
						ОбластьМакета.Параметры.СубконтоДт 	= ВыборкаПроводок.СубконтоДт;
					КонецЕсли;
					
					ОбластьМакета.Параметры.СубконтоКт  = "";
					ОбластьМакета.Параметры.Валюта      = ВыборкаПроводок.ВалютаДт;
					ОбластьМакета.Параметры.Сумма 		= ВыборкаПроводок.ВалютнаяСуммаДт;
					
					ТабДокумент.Вывести(ОбластьМакета);
					
					ОбластьМакета.Параметры.КорСчетДебет1   = "";
					ОбластьМакета.Параметры.КорСчетКредит1  = ВыборкаПроводок.СчетКт;
					
					Если ТипЗнч(ВыборкаПроводок.СубконтоКт) = ТипЗнч(Справочники.Контрагенты.ПустаяСсылка()) Тогда 
						ОбластьМакета.Параметры.СубконтоКт 	= ВыборкаПроводок.СубконтоКт.НаименованиеПолное;
					Иначе
						ОбластьМакета.Параметры.СубконтоКт 	= ВыборкаПроводок.СубконтоКт;
					КонецЕсли;
					
					ОбластьМакета.Параметры.СубконтоДт  = "";
					ОбластьМакета.Параметры.Валюта      = ВыборкаПроводок.ВалютаКт;
					ОбластьМакета.Параметры.Сумма 		= ВыборкаПроводок.ВалютнаяСуммаКт;
					
					ТабДокумент.Вывести(ОбластьМакета);
					
				Иначе	
					ОбластьМакета.Параметры.КорСчетДебет1   = ВыборкаПроводок.СчетДт;
					ОбластьМакета.Параметры.КорСчетКредит1  = ВыборкаПроводок.СчетКт;
					
					Если ТипЗнч(ВыборкаПроводок.СубконтоДт) = ТипЗнч(Справочники.Контрагенты.ПустаяСсылка()) Тогда 
						ОбластьМакета.Параметры.СубконтоДт 	= ВыборкаПроводок.СубконтоДт.НаименованиеПолное;
					Иначе
						ОбластьМакета.Параметры.СубконтоДт 	= ВыборкаПроводок.СубконтоДт;
					КонецЕсли;
					
										
					Если ТипЗнч(ВыборкаПроводок.СубконтоКт) = ТипЗнч(Справочники.Контрагенты.ПустаяСсылка()) Тогда 
						ОбластьМакета.Параметры.СубконтоКт 	= ВыборкаПроводок.СубконтоКт.НаименованиеПолное;
					Иначе
						ОбластьМакета.Параметры.СубконтоКт 	= ВыборкаПроводок.СубконтоКт;
					КонецЕсли;	
					
					Если НЕ ЗначениеЗаполнено(ВыборкаПроводок.ВалютаКт) ИЛИ ВыборкаПроводок.ВалютаКт = ВалютаРегламентированногоУчета
						ИЛИ ВыборкаПроводок.СчетДт = ПланыСчетов.Хозрасчетный.УбыткиОтОперационныхКурсовыхРазниц Тогда
						ОбластьМакета.Параметры.Валюта      = ВалютаРегламентированногоУчета;
						ОбластьМакета.Параметры.Сумма 		= ВыборкаПроводок.Сумма;
					Иначе
						ОбластьМакета.Параметры.Валюта      = ВыборкаПроводок.ВалютаКт;
						ОбластьМакета.Параметры.Сумма 		= ВыборкаПроводок.ВалютнаяСуммаКт;
					КонецЕсли;
					
					ТабДокумент.Вывести(ОбластьМакета);
				КонецЕсли;
			КонецЦикла;
			
			ИзрасходованоЦелая       = 1;
		КонецЕсли;
		
		Если ПерваяСсылкаТовары Тогда
			ВыборкаПоСсылке 	= РезультатПакет[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		    ПерваяСсылкаТовары 	= Ложь;
		КонецЕсли;
		
		Если ВыборкаПоСсылке.Следующий() Тогда
			
			Товар = ВыборкаПоСсылке.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
				
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим табличные части
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			НомерСтроки   = 0;
			
			ИтогоПоОтчету        = 0;
			ИтогоПоОтчетуВВалюте = 0;
			
			// ТЧ.Товары и услуги
			Пока Товар.Следующий() Цикл
				ОбластьМакета.Параметры.Заполнить(Товар);
				НомерСтроки = НомерСтроки + 1;
				ОбластьМакета.Параметры.НомерСтроки         = НомерСтроки;
				ОбластьМакета.Параметры.ДокументДата        = Формат(Товар.ДокументДата, "ДЛФ=D");
				ОбластьМакета.Параметры.ДебетКорСчета 		= Товар.СчетЗатрат.Код;
				ОбластьМакета.Параметры.КредитКорСчета 		= ?(Товар.СчетРасчетов <> Null, Товар.СчетРасчетов.Код, "");
				ОбластьМакета.Параметры.НаименованиеРасхода = СокрЛП(Товар.НаименованиеРасхода) + " " + СокрЛП(Товар.Содержание);
				Сумма = Товар.ПоОтчетуВВалюте; 
				ОбластьМакета.Параметры.ПоОтчету = Сумма ;
				ИтогоПоОтчету = ИтогоПоОтчету + Сумма;
				ТабДокумент.Вывести(ОбластьМакета);   
			КонецЦикла;
		КонецЕсли;
		
		ТЗ = РезультатПакет[2].Выгрузить();
		
		ТЗ.Свернуть("Валюта");
		Если НЕ ТЗ.Количество() > 1 Тогда
			ОбластьИтоги 					= Макет.ПолучитьОбласть("Итоги");                     		
			ОбластьИтоги.Параметры.Итого 	= ИтогоПоОтчету;	
			ТабДокумент.Вывести(ОбластьИтоги);
		КонецЕсли;  
		
		// Вывод подвала.
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеПодотчетногоЛица 	= ПодотчетноеЛицо;
		ТабДокумент.Вывести(ОбластьМакета);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
	
	Возврат ТабДокумент;
КонецФункции
	
Функция ПечатьАвансовогоОтчетаАО1(МассивОбъектов, ОбъектыПечати)
	
	// 1. Реквизиты шапки авансового отчета.
	// 2. Проводки регистра бухгалтерии авансового отчета.
	// 3. Данные из 4 ТЧ: "ОплатаПоставщикам", "Прочее", "ТоварыУслуги" и "ВыплатаЗаработнойПлаты" (временная таблица).
	// 4. Общая сумма по каждому отчету из данных 3 пункта.
	// 5. Сгруппированные данные по 3 пункту.
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	АвансовыйОтчет.Ссылка КАК Ссылка,
		|	АвансовыйОтчет.Организация КАК Организация1,
		|	ВЫБОР
		|		КОГДА АвансовыйОтчет.Организация.НаименованиеПолное <> """"
		|			ТОГДА АвансовыйОтчет.Организация.НаименованиеПолное
		|		ИНАЧЕ АвансовыйОтчет.Организация.Наименование
		|	КОНЕЦ КАК ПредставлениеОрганизации,
		|	АвансовыйОтчет.Номер КАК Номер,
		|	АвансовыйОтчет.Дата КАК Дата,
		|	АвансовыйОтчет.ФизЛицо КАК ПодотчетноеЛицо,
		|	АвансовыйОтчет.ФизЛицо.Наименование КАК ПредставлениеПодотчетногоЛица,
		|	АвансовыйОтчет.Организация.Ссылка КАК Организация,
		|	АвансовыйОтчет.СчетУчета КАК СчетУчета,
		|	АвансовыйОтчет.Назначение КАК Назначение,
		|	АвансовыйОтчет.ВалютаДокумента КАК ВалютаДокумента,
		|	АвансовыйОтчет.ВалютаДокумента.Представление КАК ПредставлениеВалютыДокумента,
		|	АвансовыйОтчет.СуммаДокумента КАК СуммаДокумента,
		|	АвансовыйОтчет.Документов КАК Документов,
		|	АвансовыйОтчет.Листов КАК Листов
		|ИЗ
		|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
		|ГДЕ
		|	АвансовыйОтчет.Ссылка В(&СписокДокументов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Регистратор КАК Ссылка,
		|	ХозрасчетныйОбороты.Счет КАК СчетДт,
		|	ХозрасчетныйОбороты.КорСчет КАК СчетКт,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборот) КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(, , Регистратор, , , , , ) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	ХозрасчетныйОбороты.Регистратор В(&СписокДокументов)
		|	И ХозрасчетныйОбороты.СуммаОборот > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Регистратор,
		|	ХозрасчетныйОбороты.Счет,
		|	ХозрасчетныйОбороты.КорСчет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка КАК Ссылка,
		|	АвансовыйОтчетОплатаПоставщикам.ДатаВходящегоДокумента КАК ДокументДата,
		|	АвансовыйОтчетОплатаПоставщикам.НомерВходящегоДокумента КАК ДокументНомер,
		|	АвансовыйОтчетОплатаПоставщикам.ВидДокВходящий КАК НаименованиеРасхода,
		|	АвансовыйОтчетОплатаПоставщикам.Сумма КАК ПоОтчетуВВалюте,
		|	АвансовыйОтчетОплатаПоставщикам.Сумма * АвансовыйОтчетОплатаПоставщикам.Курс / АвансовыйОтчетОплатаПоставщикам.Кратность КАК ПоОтчету,
		|	АвансовыйОтчетОплатаПоставщикам.Сумма КАК ПоУчетуВВалюте,
		|	АвансовыйОтчетОплатаПоставщикам.Сумма * АвансовыйОтчетОплатаПоставщикам.Курс / АвансовыйОтчетОплатаПоставщикам.Кратность КАК ПоУчету,
		|	АвансовыйОтчетОплатаПоставщикам.СчетРасчетов КАК ДебетКорСчета,
		|	АвансовыйОтчетОплатаПоставщикам.Содержание КАК Содержание,
		|	АвансовыйОтчетОплатаПоставщикам.Контрагент КАК Контрагент
		|ПОМЕСТИТЬ ВременнаяТаблицаДанныеТЧ
		|ИЗ
		|	Документ.АвансовыйОтчет.ОплатаПоставщикам КАК АвансовыйОтчетОплатаПоставщикам
		|ГДЕ
		|	АвансовыйОтчетОплатаПоставщикам.Ссылка В(&СписокДокументов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	АвансовыйОтчетПрочее.Ссылка,
		|	АвансовыйОтчетПрочее.ДатаВходящегоДокумента,
		|	АвансовыйОтчетПрочее.НомерВходящегоДокумента,
		|	АвансовыйОтчетПрочее.ВидДокВходящий,
		|	АвансовыйОтчетПрочее.Сумма,
		|	АвансовыйОтчетПрочее.Сумма * АвансовыйОтчетПрочее.Курс / АвансовыйОтчетПрочее.Кратность,
		|	АвансовыйОтчетПрочее.Сумма,
		|	АвансовыйОтчетПрочее.Сумма * АвансовыйОтчетПрочее.Курс / АвансовыйОтчетПрочее.Кратность,
		|	АвансовыйОтчетПрочее.СчетУчета,
		|	АвансовыйОтчетПрочее.Содержание,
		|	""""
		|ИЗ
		|	Документ.АвансовыйОтчет.Прочее КАК АвансовыйОтчетПрочее
		|ГДЕ
		|	АвансовыйОтчетПрочее.Ссылка В(&СписокДокументов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	АвансовыйОтчетТоварыУслуги.Ссылка,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	АвансовыйОтчетТоварыУслуги.Номенклатура.НаименованиеПолное,
		|	АвансовыйОтчетТоварыУслуги.Сумма,
		|	АвансовыйОтчетТоварыУслуги.Сумма,
		|	АвансовыйОтчетТоварыУслуги.Сумма,
		|	АвансовыйОтчетТоварыУслуги.Сумма,
		|	АвансовыйОтчетТоварыУслуги.СчетУчета,
		|	NULL,
		|	""""
		|ИЗ
		|	Документ.АвансовыйОтчет.ТоварыУслуги КАК АвансовыйОтчетТоварыУслуги
		|ГДЕ
		|	АвансовыйОтчетТоварыУслуги.Ссылка В(&СписокДокументов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	АвансовыйОтчетВыплатаЗаработнойПлаты.Ссылка,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	&НаименованиеРасходаПоЗП,
		|	АвансовыйОтчетВыплатаЗаработнойПлаты.Сумма,
		|	АвансовыйОтчетВыплатаЗаработнойПлаты.Сумма,
		|	АвансовыйОтчетВыплатаЗаработнойПлаты.Сумма,
		|	АвансовыйОтчетВыплатаЗаработнойПлаты.Сумма,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НачисленнаяЗаработнаяПлата),
		|	NULL,
		|	""""
		|ИЗ
		|	Документ.АвансовыйОтчет.ВыплатаЗаработнойПлаты КАК АвансовыйОтчетВыплатаЗаработнойПлаты
		|ГДЕ
		|	АвансовыйОтчетВыплатаЗаработнойПлаты.Ссылка В(&СписокДокументов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаДанныеТЧ.Ссылка КАК Ссылка,
		|	СУММА(ВременнаяТаблицаДанныеТЧ.ПоОтчету) КАК Сумма,
		|	ЕСТЬNULL(АвансовыйОтчетДвижениеДенежныхСредств.Израсходовано, 0) КАК Израсходовано,
		|	АвансовыйОтчетДвижениеДенежныхСредств.Валюта КАК Валюта
		|ИЗ
		|	ВременнаяТаблицаДанныеТЧ КАК ВременнаяТаблицаДанныеТЧ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.ДвижениеДенежныхСредств КАК АвансовыйОтчетДвижениеДенежныхСредств
		|		ПО ВременнаяТаблицаДанныеТЧ.Ссылка = АвансовыйОтчетДвижениеДенежныхСредств.Ссылка
		|ГДЕ
		|	АвансовыйОтчетДвижениеДенежныхСредств.Ссылка В(&СписокДокументов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаДанныеТЧ.Ссылка,
		|	ЕСТЬNULL(АвансовыйОтчетДвижениеДенежныхСредств.Израсходовано, 0),
		|	АвансовыйОтчетДвижениеДенежныхСредств.Валюта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаДанныеТЧ.Ссылка КАК Ссылка,
		|	ВременнаяТаблицаДанныеТЧ.ДокументДата КАК ДокументДата,
		|	ВременнаяТаблицаДанныеТЧ.ДокументНомер КАК ДокументНомер,
		|	ВременнаяТаблицаДанныеТЧ.НаименованиеРасхода КАК НаименованиеРасхода,
		|	СУММА(ВременнаяТаблицаДанныеТЧ.ПоОтчету) КАК ПоОтчету,
		|	СУММА(ВременнаяТаблицаДанныеТЧ.ПоОтчетуВВалюте) КАК ПоОтчетуВВалюте,
		|	СУММА(ВременнаяТаблицаДанныеТЧ.ПоУчету) КАК ПоУчету,
		|	СУММА(ВременнаяТаблицаДанныеТЧ.ПоУчетуВВалюте) КАК ПоУчетуВВалюте,
		|	ВременнаяТаблицаДанныеТЧ.ДебетКорСчета КАК ДебетКорСчета,
		|	ВременнаяТаблицаДанныеТЧ.Содержание КАК Содержание,
		|	ВременнаяТаблицаДанныеТЧ.Контрагент КАК Контрагент
		|ИЗ
		|	ВременнаяТаблицаДанныеТЧ КАК ВременнаяТаблицаДанныеТЧ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаДанныеТЧ.Ссылка,
		|	ВременнаяТаблицаДанныеТЧ.ДокументДата,
		|	ВременнаяТаблицаДанныеТЧ.ДокументНомер,
		|	ВременнаяТаблицаДанныеТЧ.НаименованиеРасхода,
		|	ВременнаяТаблицаДанныеТЧ.ДебетКорСчета,
		|	ВременнаяТаблицаДанныеТЧ.Содержание,
		|	ВременнаяТаблицаДанныеТЧ.Контрагент";
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("НаименованиеРасходаПоЗП", НСтр("ru = 'Выплачено расходными ордерами'"));
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Шапка = МассивРезультатов[0].Выбрать();
	
	ТаблицаПроводок = МассивРезультатов[1].Выгрузить();
	ТаблицаПроводок.Индексы.Добавить("Ссылка");
	
	ТаблицаСуммыДокументов = МассивРезультатов[3].Выгрузить();
	ТаблицаСуммыДокументов.Индексы.Добавить("Ссылка");
	
	ТаблицаДанныеТЧ = МассивРезультатов[4].Выгрузить();
	ТаблицаДанныеТЧ.Индексы.Добавить("Ссылка");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "АвансовыйОтчет_КраткийАвансовыйОтчет";

	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.АвансовыйОтчет.ПФ_MXL_АвансовыйОтчетАО1");
	
	Пока Шапка.Следующий() Цикл	
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Титул");
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;
		
		ДанныеПечати.Вставить("ПредставлениеОрганизации", Шапка.ПредставлениеОрганизации);
		ДанныеПечати.Вставить("НомерДокумента", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер));
		ДанныеПечати.Вставить("ДатаДокумента", Шапка.Дата);
		ДанныеПечати.Вставить("НазначениеАванса", Шапка.Назначение);
		ДанныеПечати.Вставить("КоличествоДокументовВПриложении", Шапка.Документов);
		ДанныеПечати.Вставить("КоличествоЛистовВПриложении", Шапка.Листов);
		
		Руководители = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизаций(Шапка.Организация, Шапка.Дата);
		
		ДанныеПечати.Вставить("ПредставлениеРуководителя", Руководители.Руководитель);
		ДанныеПечати.Вставить("ПредставлениеГлавногоБухгалтера", Руководители.ГлавныйБухгалтер);
		
		СуммаИзрасходовано = 0;
		СуммаОтчета = 0;
		Для каждого СтрокаТЗ Из ТаблицаСуммыДокументов Цикл
			СуммаИзрасходовано = СуммаИзрасходовано + РаботаСКурсамиВалют.ПересчитатьВВалюту(СтрокаТЗ.Израсходовано, СтрокаТЗ.Валюта, ВалютаРегламентированногоУчета, Шапка.Дата);	 	
			СуммаОтчета = СтрокаТЗ.Сумма;
		КонецЦикла;
		
		Если СуммаОтчета <> 0 Тогда
			ДанныеПечати.Вставить("СуммаОтчетаПрописью", БухгалтерскийУчетСервер.СформироватьСуммуПрописью(СуммаОтчета, ВалютаРегламентированногоУчета));
			ДанныеПечати.Вставить("СуммаОтчетаЧисломЦел", Цел(СуммаОтчета));
			ДанныеПечати.Вставить("СуммаОтчетаЧисломДробная", Окр((СуммаОтчета - Цел(СуммаОтчета)) * 100, 2));
			ДанныеПечати.Вставить("Израсходовано", Цел(СуммаИзрасходовано));
		КонецЕсли;
			
		СведенияОФизЛице = БухгалтерскийУчетСервер.ПолучитьСведенияОФизЛице(Шапка.Организация, Шапка.ПодотчетноеЛицо, Шапка.Дата); 
		
		ДанныеПечати.Вставить("ПредставлениеПодотчетногоЛица", СведенияОФизЛице.ФИО);
		ДанныеПечати.Вставить("ПредставлениеПодразделения", СведенияОФизЛице.Подразделение);
		ДанныеПечати.Вставить("ПредставлениеДолжность", СведенияОФизЛице.Должность);
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаОстаток
			|ПОМЕСТИТЬ ВременнаяТаблицаОстаткиПоСчетамИсключаяДокумент
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(
			|			&Дата,
			|			Счет = &ПарныйСчет,
			|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СотрудникиОрганизаций),
			|			Организация = &Организация
			|				И Субконто1 = &ФизЛицо) КАК ХозрасчетныйОстатки
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ХозрасчетныйОстатки.СуммаОстаток
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(
			|			&Дата,
			|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами),
			|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СотрудникиОрганизаций),
			|			Организация = &Организация
			|				И Субконто1 = &ФизЛицо) КАК ХозрасчетныйОстатки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(ВременнаяТаблицаОстаткиПоСчетамИсключаяДокумент.СуммаОстаток) КАК СуммаОстаток
			|ИЗ
			|	ВременнаяТаблицаОстаткиПоСчетамИсключаяДокумент КАК ВременнаяТаблицаОстаткиПоСчетамИсключаяДокумент";
	   	Запрос.УстановитьПараметр("Дата", 			Шапка.Дата);
		Запрос.УстановитьПараметр("ПарныйСчет", 	ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами.ПарныйСчет);
		Запрос.УстановитьПараметр("Организация", 	Шапка.Организация);
		Запрос.УстановитьПараметр("ФизЛицо", 		Шапка.ПодотчетноеЛицо);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Сумма = 0;
		
		Если Выборка.Следующий() Тогда
			Сумма = Выборка.СуммаОстаток;
			
			Если Сумма > 0 Тогда 
				ДанныеПечати.Вставить("НачальныйОстаток", Сумма);
			Иначе
				ДанныеПечати.Вставить("НачальныйПерерасход", -Сумма);
			КонецЕсли;
		КонецЕсли;
		                                                    
		Если Сумма > 0  Тогда
			
			КонечнаяСумма = ДанныеПечати.НачальныйОстаток - СуммаИзрасходовано;
			
			Если КонечнаяСумма > 0 Тогда
				ДанныеПечати.Вставить("КонечныйПерерасход", КонечнаяСумма);
			Иначе
				ДанныеПечати.Вставить("КонечныйПерерасход", -КонечнаяСумма);	
			КонецЕсли;
			
		ИначеЕсли Сумма < 0  Тогда
			ДанныеПечати.Вставить("КонечныйПерерасход", ДанныеПечати.НачальныйПерерасход + СуммаИзрасходовано);
			
		Иначе
			ДанныеПечати.Вставить("КонечныйПерерасход", СуммаИзрасходовано);
		КонецЕсли;
		
		СтруктураПоиска = Новый Структура();
		СтруктураПоиска.Вставить("Ссылка", Шапка.Ссылка);
		
		МассивСтрокПроводок = ТаблицаПроводок.НайтиСтроки(СтруктураПоиска);			
		ОбластьМакетаСтрока = Макет.ПолучитьОбласть("ТитулСтрока");
		
		ОбластьТитулВыведена = Ложь;
		Индекс = 1;
		Для Каждого СтрокаМассива Из МассивСтрокПроводок Цикл
			
			Если Индекс < 10 Тогда
				ОбластьМакета.Параметры["КорСчетДебет" 	+ Индекс] = СтрокаМассива.СчетДт;
				ОбластьМакета.Параметры["СуммаДебет" 	+ Индекс] = СтрокаМассива.Сумма;
				ОбластьМакета.Параметры["КорСчетКредит" + Индекс] = СтрокаМассива.СчетКт;
				ОбластьМакета.Параметры["СуммаКредит" 	+ Индекс] = СтрокаМассива.Сумма;
				
				Индекс = Индекс + 1;
				Если Индекс = 9 Тогда
					ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластьМакета);
					ОбластьТитулВыведена = Истина;
				КонецЕсли;	
			Иначе
				ОбластьМакетаСтрока.Параметры.КорСчетДебет 	= СтрокаМассива.СчетДт;
				ОбластьМакетаСтрока.Параметры.СуммаДебет 	= СтрокаМассива.Сумма;
				ОбластьМакетаСтрока.Параметры.КорСчетКредит = СтрокаМассива.СчетКт;
				ОбластьМакетаСтрока.Параметры.СуммаКредит 	= СтрокаМассива.Сумма;
				
				ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
			КонецЕсли;
		КонецЦикла;	
		
		Если НЕ ОбластьТитулВыведена Тогда
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЕсли;		
		
		ОбластьМакета = Макет.ПолучитьОбласть("Приложение");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		МассивСтрокПроводок = ТаблицаДанныеТЧ.НайтиСтроки(СтруктураПоиска);			
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		
		ДанныеПечати.Вставить("ИтогоПоОтчету", 			0);
		ДанныеПечати.Вставить("ИтогоПоОтчетуВВалюте", 	0);
		ДанныеПечати.Вставить("ИтогоПоУчету", 			0);
		ДанныеПечати.Вставить("ИтогоПоУчетуВВалюте", 	0);
		
		Номер = 1;
		Для Каждого СтрокаМассива Из МассивСтрокПроводок Цикл
			ОбластьМакета.Параметры.Заполнить(СтрокаМассива);
			ОбластьМакета.Параметры.НомерСтроки = Номер;
			ОбластьМакета.Параметры.НаименованиеРасхода = "" + СтрокаМассива.Контрагент + " " + СтрокаМассива.НаименованиеРасхода + " " + СтрокаМассива.Содержание;
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			Номер = Номер + 1;
			
			ДанныеПечати.ИтогоПоОтчету 			= ДанныеПечати.ИтогоПоОтчету 		+ СтрокаМассива.ПоОтчету;
			ДанныеПечати.ИтогоПоОтчетуВВалюте 	= ДанныеПечати.ИтогоПоОтчетуВВалюте + СтрокаМассива.ПоОтчетуВВалюте;
			ДанныеПечати.ИтогоПоУчету 			= ДанныеПечати.ИтогоПоУчету 		+ СтрокаМассива.ПоУчету;
			ДанныеПечати.ИтогоПоУчетуВВалюте 	= ДанныеПечати.ИтогоПоУчетуВВалюте 	+ СтрокаМассива.ПоУчетуВВалюте;
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции // ПечатьКратАвансовогоОтчета()

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	// Проверяем, нужно ли для макета ПКО формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АвансовыйОтчет") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"АвансовыйОтчет", НСтр("ru = 'Авансовый отчет'"), ПечатьАвансовогоОтчета(МассивОбъектов, ОбъектыПечати),,
			"Документ.АвансовыйОтчет.АвансовыйОтчет");
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АвансовыйОтчетУпрощенный") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"АвансовыйОтчетУпрощенный", НСтр("ru = 'Авансовый отчет упрощенный'"), ПечатьАвансовогоОтчетаУпрощенный(МассивОбъектов, ОбъектыПечати),,
			"Документ.АвансовыйОтчет.АвансовыйОтчетУпрощенный");
	
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АвансовыйОтчет_АО-1") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"АвансовыйОтчет_АО-1", НСтр("ru = 'Авансовый отчет АО-1'"), ПечатьАвансовогоОтчетаАО1(МассивОбъектов, ОбъектыПечати),,
			"Документ.АвансовыйОтчет.ПФ_MXL_АвансовыйОтчетАО1");
	КонецЕсли;
		
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АвансовыйОтчет";
	КомандаПечати.Представление = НСтр("ru = 'Авансовый отчет'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АвансовыйОтчетУпрощенный";
	КомандаПечати.Представление = НСтр("ru = 'Авансовый отчет упрощенный'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 2;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АвансовыйОтчет_АО-1";
	КомандаПечати.Представление = НСтр("ru = 'Авансовый отчет АО-1'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 3;
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "РеестрАвансовыйОтчет";
	КомандаПечати.Представление  = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Реестр документов ""Авансовый отчет""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
КонецПроцедуры

#КонецОбласти

#КонецЕсли
