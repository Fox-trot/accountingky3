#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ТекстЗапросаДанныеДляОбновленияЦенДокументов() Экспорт
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.Цена КАК Цена,
		|	&Валюта КАК Валюта,
		|	&СпособЗаполненияЦены КАК СпособЗаполненияЦены,
		|	&ЦенаВключаетНалоги КАК ЦенаВключаетНалоги
		|ПОМЕСТИТЬ ТаблицаНоменклатуры
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаДокумента.Номенклатура,
		|	ТаблицаДокумента.Цена,
		|	&Валюта,
		|	&СпособЗаполненияЦены,
		|	&ЦенаВключаетНалоги
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПСервер.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
	
КонецФункции

 // СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла 
 
 // Устанавливает параметры загрузки.
//
Процедура УстановитьПараметрыЗагрузкиИзФайлаВТЧ(Параметры) Экспорт
	
КонецПроцедуры

// Производит сопоставление данных, загружаемых в табличную часть ПолноеИмяТабличнойЧасти,
// с данными в ИБ, и заполняет параметры АдресТаблицыСопоставления и СписокНеоднозначностей.
//
// Параметры:
//   АдресЗагружаемыхДанных    - Строка - Адрес временного хранилища с таблицей значений, в которой
//                                        находятся загруженные данные из файла. Состав колонок:
//     * Идентификатор - Число - Порядковый номер строки;
//     * остальные колонки соответствуют колонкам макета ЗагрузкаИзФайла.
//   АдресТаблицыСопоставления - Строка - Адрес временного хранилища с пустой таблицей значений,
//                                        являющейся копией табличной части документа, 
//                                        которую необходимо заполнить из таблицы АдресЗагружаемыхДанных.
//   СписокНеоднозначностей - ТаблицаЗначений - Список неоднозначных значений, для которых в ИБ имеется несколько
//                                              подходящих вариантов.
//     * Колонка       - Строка - Имя колонки, в которой была обнаружена неоднозначность;
//     * Идентификатор - Число  - Идентификатор строки, в которой была обнаружена неоднозначность.
//   ПолноеИмяТабличнойЧасти   - Строка - Полное имя табличной части, в которую загружаются данные.
//   ДополнительныеПараметры   - ЛюбойТип - Любые дополнительные сведения.
//
Процедура СопоставитьЗагружаемыеДанные(АдресЗагружаемыхДанных, АдресТаблицыСопоставления, СписокНеоднозначностей, ПолноеИмяТабличнойЧасти, ДополнительныеПараметры) Экспорт
	
	Товары = ПолучитьИзВременногоХранилища(АдресТаблицыСопоставления);
	ЗагружаемыеДанные = ПолучитьИзВременногоХранилища(АдресЗагружаемыхДанных);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДляСопоставления.Номенклатура,
		|	ДанныеДляСопоставления.Идентификатор
		|ПОМЕСТИТЬ ДанныеДляСопоставления
		|ИЗ
		|	&ДанныеДляСопоставления КАК ДанныеДляСопоставления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// Сопоставление по номенклатуре
		|ВЫБРАТЬ
		|	МАКСИМУМ(СправочникНоменклатура.Ссылка) КАК Ссылка,
		|	ДанныеДляСопоставления.Идентификатор,
		|	КОЛИЧЕСТВО(ДанныеДляСопоставления.Идентификатор) КАК Количество
		|ИЗ
		|	ДанныеДляСопоставления КАК ДанныеДляСопоставления
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО (СправочникНоменклатура.Наименование ПОДОБНО ДанныеДляСопоставления.Номенклатура)
		|ГДЕ
		|	НЕ СправочникНоменклатура.Ссылка ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДляСопоставления.Идентификатор";
	Запрос.УстановитьПараметр("ДанныеДляСопоставления", ЗагружаемыеДанные);
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	
	ТаблицаНоменклатура = РезультатыЗапросов[1].Выгрузить();
	ТаблицаНоменклатура.Индексы.Добавить("Идентификатор");
	
	Для Каждого СтрокаТаблицы Из ЗагружаемыеДанные Цикл
		
		СтрокаТабличнойЧасти = Товары.Добавить();
		СтрокаТабличнойЧасти.Идентификатор = СтрокаТаблицы.Идентификатор;
		СтрокаТабличнойЧасти.Количество = СтрокаТаблицы.Количество;
		СтрокаТабличнойЧасти.Цена = СтрокаТаблицы.Цена;
		СтрокаТабличнойЧасти.Сумма = СтрокаТаблицы.Сумма;
		СтрокаТабличнойЧасти.Всего = СтрокаТаблицы.Сумма;
		//СтрокаТабличнойЧасти.СуммаНДС = СтрокаТаблицы.СуммаНДС;
		//СтрокаТабличнойЧасти.СуммаНСП = СтрокаТаблицы.СуммаНСП;
				
		СтрокаНоменклатура = ТаблицаНоменклатура.Найти(СтрокаТаблицы.Идентификатор, "Идентификатор");
		Если СтрокаНоменклатура <> Неопределено Тогда 
			Если СтрокаНоменклатура.Количество = 1 Тогда 
				СтрокаТабличнойЧасти.Номенклатура = СтрокаНоменклатура.Ссылка;
			ИначеЕсли СтрокаНоменклатура.Количество > 1 Тогда
				ЗаписьОНеоднозначности = СписокНеоднозначностей.Добавить();
				ЗаписьОНеоднозначности.Идентификатор = СтрокаТаблицы.Идентификатор; 
				ЗаписьОНеоднозначности.Колонка = "Номенклатура";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(Товары, АдресТаблицыСопоставления);
	
КонецПроцедуры

// Возвращает список подходящих объектов ИБ для неоднозначного значения ячейки.
// 
// Параметры:
//   ПолноеИмяТабличнойЧасти  - Строка - Полное имя табличной части, в которую загружаются данные.
//  ИмяКолонки                - Строка - Имя колонки, в который возникла неоднозначность.
//  СписокНеоднозначностей    - Массив - Массив для заполнения с неоднозначными данными.
//  ЗагружаемыеЗначенияСтрока - Строка - Загружаемые данные на основании которых возникла неоднозначность.
//  ДополнительныеПараметры   - ЛюбойТип - Любые дополнительные сведения.
//
Процедура ЗаполнитьСписокНеоднозначностей(ПолноеИмяТабличнойЧасти, СписокНеоднозначностей, ИмяКолонки, ЗагружаемыеЗначенияСтрока, ДополнительныеПараметры) Экспорт
	
	Если ИмяКолонки = "Номенклатура" Тогда

		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Номенклатура.Ссылка
			|ИЗ
			|	Справочник.Номенклатура КАК Номенклатура
			|ГДЕ
			|	Номенклатура.Наименование = &Наименование";
		Запрос.УстановитьПараметр("Наименование", ЗагружаемыеЗначенияСтрока.Номенклатура);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СписокНеоднозначностей.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла
 
#КонецОбласти

#Область ПроцедурыПроведенияДокумента

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	// Таблица Реквизиты.
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Регистратор,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	&ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПСервер.ТекстРазделителяЗапросовПакета();
	
	// Таблица Товары.
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаВзаиморасчетов,
		|	ВременнаяТаблицаШапка.Склад КАК Склад,
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаТовары.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаТовары.Сумма + ВременнаяТаблицаТовары.СуммаНСП - ВременнаяТаблицаТовары.СуммаАкциза КАК Сумма,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВалютаДокумента = &ВалютаРегламентированногоУчета
		|			ТОГДА ВременнаяТаблицаТовары.Сумма + ВременнаяТаблицаТовары.СуммаНСП
		|		ИНАЧЕ ВременнаяТаблицаТовары.Всего
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ВременнаяТаблицаТовары.Количество КАК Количество,
		|	ВременнаяТаблицаШапка.СчетРасчетов КАК КорСчет,
		|	ВременнаяТаблицаШапка.Контрагент КАК КорСубконто1,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК КорСубконто2,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
		|	&СодержаниеТовары КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МБП)";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПСервер.ТекстОбъединитьВсе();
	
	// НДС в Себестоимость (Товары).
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаВзаиморасчетов,
		|	ВременнаяТаблицаШапка.Склад КАК Склад,
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаТовары.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаТовары.СуммаНДС КАК Сумма,
		|	ВременнаяТаблицаТовары.СуммаНДС КАК СуммаВзаиморасчетов,
		|	0 КАК Количество,
		|	ВременнаяТаблицаШапка.СчетРасчетов КАК КорСчет,
		|	ВременнаяТаблицаШапка.Контрагент КАК КорСубконто1,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК КорСубконто2,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
		|	&СодержаниеНДСВСебестоимость КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МБП)
		|	И НЕ ВременнаяТаблицаТовары.СуммаНДС = 0
		|	И &УказыватьПризнакЗачетаНДС
		|	И ВременнаяТаблицаТовары.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПСервер.ТекстОбъединитьВсе();

	// НДС в Себестоимость для ЕАЭС и НЕ плательщик НДС (Товары).
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	&ВалютаРегламентированногоУчета КАК ВалютаВзаиморасчетов,
		|	ВременнаяТаблицаШапка.Склад КАК Склад,
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаТовары.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаТовары.СуммаНДС КАК Сумма,
		|	ВременнаяТаблицаТовары.СуммаНДС КАК СуммаВзаиморасчетов,
		|	0 КАК Количество,
		|	ВременнаяТаблицаШапка.СчетРасчетовГНС КАК КорСчет,
		|	ВременнаяТаблицаШапка.КонтрагентГНС КАК КорСубконто1,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагентаГНС КАК КорСубконто2,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
		|	&СодержаниеНДСВСебестоимость КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МБП)
		|	И НЕ ВременнаяТаблицаТовары.СуммаНДС = 0
		|	И ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|	И НЕ ВременнаяТаблицаШапка.ПлательщикНДС";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПСервер.ТекстОбъединитьВсе();
	
	// Акциз (Товары).
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаВзаиморасчетов,
		|	ВременнаяТаблицаШапка.Склад КАК Склад,
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаТовары.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаТовары.СуммаАкциза КАК Сумма,
		|	ВременнаяТаблицаТовары.СуммаАкциза КАК СуммаВзаиморасчетов,
		|	0 КАК Количество,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Акцизы) КАК КорСчет,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто1,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто2,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
		|	&СодержаниеАкциз КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МБП)
		|	И НЕ ВременнаяТаблицаТовары.СуммаАкциза = 0";
	ТекстЗапроса = ТекстЗапроса +
		"
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПСервер.ТекстРазделителяЗапросовПакета();
	
	// Таблица МБП.
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаВзаиморасчетов,
		|	ВременнаяТаблицаШапка.Склад КАК Местонахождение,
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаТовары.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаТовары.Сумма + ВременнаяТаблицаТовары.СуммаНСП - ВременнаяТаблицаТовары.СуммаАкциза КАК Сумма,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВалютаДокумента = &ВалютаРегламентированногоУчета
		|			ТОГДА ВременнаяТаблицаТовары.Сумма + ВременнаяТаблицаТовары.СуммаНСП
		|		ИНАЧЕ ВременнаяТаблицаТовары.Всего
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ВременнаяТаблицаТовары.Количество КАК Количество,
		|	ВременнаяТаблицаШапка.СчетРасчетов КАК КорСчет,
		|	ВременнаяТаблицаШапка.Контрагент КАК КорСубконто1,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК КорСубконто2,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
		|	&СодержаниеМБП КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МБП)";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПСервер.ТекстОбъединитьВсе();
	
	// НДС в Себестоимость (МБП).
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаВзаиморасчетов,
		|	ВременнаяТаблицаШапка.Склад КАК Местонахождение,
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаТовары.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаТовары.СуммаНДС КАК Сумма,
		|	ВременнаяТаблицаТовары.СуммаНДС КАК СуммаВзаиморасчетов,
		|	0 КАК Количество,
		|	ВременнаяТаблицаШапка.СчетРасчетов КАК КорСчет,
		|	ВременнаяТаблицаШапка.Контрагент КАК КорСубконто1,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК КорСубконто2,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
		|	&СодержаниеНДСВСебестоимость КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МБП)
		|	И НЕ ВременнаяТаблицаТовары.СуммаНДС = 0
		|	И &УказыватьПризнакЗачетаНДС
		|	И ВременнаяТаблицаТовары.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПСервер.ТекстОбъединитьВсе();

	// НДС в Себестоимость для ЕАЭС и НЕ плательщик НДС (МБП).
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	&ВалютаРегламентированногоУчета КАК ВалютаВзаиморасчетов,
		|	ВременнаяТаблицаШапка.Склад КАК Местонахождение,
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаТовары.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаТовары.СуммаНДС КАК Сумма,
		|	ВременнаяТаблицаТовары.СуммаНДС КАК СуммаВзаиморасчетов,
		|	0 КАК Количество,
		|	ВременнаяТаблицаШапка.СчетРасчетовГНС КАК КорСчет,
		|	ВременнаяТаблицаШапка.КонтрагентГНС КАК КорСубконто1,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагентаГНС КАК КорСубконто2,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
		|	&СодержаниеНДСВСебестоимость КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МБП)
		|	И НЕ ВременнаяТаблицаТовары.СуммаНДС = 0
		|	И ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|	И НЕ ВременнаяТаблицаШапка.ПлательщикНДС";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПСервер.ТекстОбъединитьВсе();
	
	// Акциз (МБП).
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаВзаиморасчетов,
		|	ВременнаяТаблицаШапка.Склад КАК Склад,
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаТовары.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаТовары.СуммаАкциза КАК Сумма,
		|	ВременнаяТаблицаТовары.СуммаАкциза КАК СуммаВзаиморасчетов,
		|	0 КАК Количество,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Акцизы) КАК КорСчет,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто1,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто2,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
		|	&СодержаниеАкциз КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МБП)
		|	И НЕ ВременнаяТаблицаТовары.СуммаАкциза = 0";
	ТекстЗапроса = ТекстЗапроса +
		"
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СодержаниеТовары", НСтр("ru = 'Поступление товаров'")); 
	Запрос.УстановитьПараметр("СодержаниеМБП", НСтр("ru = 'Поступление МБП'"));
	Запрос.УстановитьПараметр("СодержаниеНДСВСебестоимость", НСтр("ru = 'НДС в себестоимость'"));
	Запрос.УстановитьПараметр("СодержаниеАкциз", НСтр("ru = 'Акциз'"));
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", СтруктураДополнительныеСвойства.ДляПроведения.ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("УказыватьПризнакЗачетаНДС", СтруктураДополнительныеСвойства.УчетнаяПолитика.УказыватьПризнакЗачетаНДСПриПоступлении);
	МассивРезультатов = Запрос.ВыполнитьПакет();

	ТаблицаРеквизиты = МассивРезультатов[0].Выгрузить();
	ТаблицаТовары = МассивРезультатов[1].Выгрузить();
	ТаблицаМБП = МассивРезультатов[2].Выгрузить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРеквизиты", ТаблицаРеквизиты);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаТовары", ТаблицаТовары);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаМБП", ТаблицаМБП);
	
	// Подготовка данных
	// 1. Услуги
	// 2. ОС
	// 3. НДС товары
	// 4. НДС услуги
	// 5. НДС услуги (Признак страны ЕАЭС и НЕ плательщик НДС)
	// 6. НДС ОС
	// 7. НДС ОС (Признак страны ЕАЭС и НЕ плательщик НДС)
	// 8. Расходы будущих периодов
	// 9. НДС Расходы будущих периодов
	// 10. Акциз услуги
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", СтруктураДополнительныеСвойства.ДляПроведения.ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ПлательщикНДС", СтруктураДополнительныеСвойства.УчетнаяПолитика.ПлательщикНДС);
	Запрос.УстановитьПараметр("СодержаниеУслуги", НСтр("ru = 'Поступление услуг'")); 
	Запрос.УстановитьПараметр("СодержаниеОС", НСтр("ru = 'Поступление ОС'")); 
	Запрос.УстановитьПараметр("СодержаниеРасходыБудущихПериодов", НСтр("ru = 'Расходы будущих периодов'")); 
	Запрос.УстановитьПараметр("СодержаниеНДС", НСтр("ru = 'НДС'"));
	Запрос.УстановитьПараметр("СодержаниеНДСВСебестоимость", НСтр("ru = 'НДС в себестоимость'"));
	Запрос.УстановитьПараметр("СодержаниеАкциз", НСтр("ru = 'Акциз'"));
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	// Услуги.
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	1 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаУслуги.СчетРасходов КАК СчетДт,
		|	ВременнаяТаблицаШапка.СчетРасчетов КАК СчетКт,
		|	ВременнаяТаблицаУслуги.Субконто1 КАК СубконтоДт1,
		|	ВременнаяТаблицаУслуги.Субконто2 КАК СубконтоДт2,
		|	ВременнаяТаблицаУслуги.Субконто3 КАК СубконтоДт3,
		|	ВременнаяТаблицаШапка.Контрагент КАК СубконтоКт1,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ВременнаяТаблицаУслуги.Сумма + ВременнаяТаблицаУслуги.СуммаНСП - ВременнаяТаблицаУслуги.СуммаАкциза КАК Сумма,
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаДт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВалютаДокумента = &ВалютаРегламентированногоУчета
		|			ТОГДА ВременнаяТаблицаУслуги.Сумма + ВременнаяТаблицаУслуги.СуммаНСП
		|		ИНАЧЕ ВременнаяТаблицаУслуги.Всего
		|	КОНЕЦ КАК ВалютнаяСуммаДт,
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаКт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВалютаДокумента = &ВалютаРегламентированногоУчета
		|			ТОГДА ВременнаяТаблицаУслуги.Сумма + ВременнаяТаблицаУслуги.СуммаНСП
		|		ИНАЧЕ ВременнаяТаблицаУслуги.Всего
		|	КОНЕЦ КАК ВалютнаяСуммаКт,
		|	&СодержаниеУслуги КАК Содержание,
		|	ВременнаяТаблицаУслуги.Количество КАК КоличествоДт,
		|	ВременнаяТаблицаУслуги.Количество КАК КоличествоКт,
		|	НЕОПРЕДЕЛЕНО КАК ЗачетНДС
		|ИЗ
		|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	(ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.Покупка)
		|			ИЛИ ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.Услуги))";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПСервер.ТекстОбъединитьВсе();
	
	// ОС.
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	2 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаОС.СчетУчета КАК СчетДт,
		|	ВременнаяТаблицаШапка.СчетРасчетов КАК СчетКт,
		|	ВременнаяТаблицаОС.ОсновноеСредство КАК СубконтоДт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	ВременнаяТаблицаШапка.Контрагент КАК СубконтоКт1,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ВременнаяТаблицаОС.Сумма + ВременнаяТаблицаОС.СуммаНСП - ВременнаяТаблицаОС.СуммаАкциза КАК Сумма,
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаДт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВалютаДокумента = &ВалютаРегламентированногоУчета
		|			ТОГДА ВременнаяТаблицаОС.Сумма + ВременнаяТаблицаОС.СуммаНСП
		|		ИНАЧЕ ВременнаяТаблицаОС.Всего
		|	КОНЕЦ КАК ВалютнаяСуммаДт,
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаКт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВалютаДокумента = &ВалютаРегламентированногоУчета
		|			ТОГДА ВременнаяТаблицаОС.Сумма + ВременнаяТаблицаОС.СуммаНСП
		|		ИНАЧЕ ВременнаяТаблицаОС.Всего
		|	КОНЕЦ КАК ВалютнаяСуммаКт,
		|	&СодержаниеОС КАК Содержание,
		|	0 КАК КоличествоДт,
		|	0 КАК КоличествоКт,
		|	НЕОПРЕДЕЛЕНО КАК ЗачетНДС
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаОС.Сумма = 0";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПСервер.ТекстОбъединитьВсе();
	
	// НДС товары.
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	3 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.НДСНеПодтвержден
		|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС_НеПодтвержденный)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС_ПодлежащийВозмещению)
		|	КОНЕЦ КАК СчетДт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.СчетРасчетовГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.СчетРасчетов
		|	КОНЕЦ КАК СчетКт,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.КонтрагентГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.Контрагент
		|	КОНЕЦ КАК СубконтоКт1,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.ДоговорКонтрагентаГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.ДоговорКонтрагента
		|	КОНЕЦ КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	СУММА(ВременнаяТаблицаТовары.СуммаНДС) КАК Сумма,
		|	&ВалютаРегламентированногоУчета КАК ВалютаДт,
		|	СУММА(ВременнаяТаблицаТовары.СуммаНДС) КАК ВалютнаяСуммаДт,
		|	&ВалютаРегламентированногоУчета КАК ВалютаКт,
		|	СУММА(ВременнаяТаблицаТовары.СуммаНДС) КАК ВалютнаяСуммаКт,
		|	&СодержаниеНДС КАК Содержание,
		|	0 КАК КоличествоДт,
		|	0 КАК КоличествоКт,
		|	ВременнаяТаблицаТовары.ЗачетНДС КАК ЗачетНДС
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|					И ВременнаяТаблицаШапка.ПлательщикНДС
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ВременнаяТаблицаШапка.ПлательщикНДС
		|		КОНЕЦ
		|	И НЕ ВременнаяТаблицаТовары.СуммаНДС = 0
		|	И ВЫБОР
		|			КОГДА &УказыватьПризнакЗачетаНДС
		|				ТОГДА НЕ ВременнаяТаблицаТовары.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.СчетРасчетовГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.СчетРасчетов
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.КонтрагентГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.Контрагент
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.ДоговорКонтрагентаГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.ДоговорКонтрагента
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.НДСНеПодтвержден
		|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС_НеПодтвержденный)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС_ПодлежащийВозмещению)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА &ВалютаРегламентированногоУчета
		|		ИНАЧЕ ВременнаяТаблицаШапка.ВалютаДокумента
		|	КОНЕЦ,
		|	ВременнаяТаблицаТовары.ЗачетНДС,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА &ВалютаРегламентированногоУчета
		|		ИНАЧЕ ВременнаяТаблицаШапка.ВалютаДокумента
		|	КОНЕЦ";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПСервер.ТекстОбъединитьВсе();
	
	// НДС услуги.
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	4 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|				И &УказыватьПризнакЗачетаНДС
		|			ТОГДА ВременнаяТаблицаУслуги.СчетРасходов
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВременнаяТаблицаШапка.НДСНеПодтвержден
		|					ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС_НеПодтвержденный)
		|				ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС_ПодлежащийВозмещению)
		|			КОНЕЦ
		|	КОНЕЦ КАК СчетДт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.СчетРасчетовГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.СчетРасчетов
		|	КОНЕЦ КАК СчетКт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|				И &УказыватьПризнакЗачетаНДС
		|			ТОГДА ВременнаяТаблицаУслуги.Субконто1
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДт1,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|				И &УказыватьПризнакЗачетаНДС
		|			ТОГДА ВременнаяТаблицаУслуги.Субконто2
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДт2,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|				И &УказыватьПризнакЗачетаНДС
		|			ТОГДА ВременнаяТаблицаУслуги.Субконто3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДт3,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.КонтрагентГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.Контрагент
		|	КОНЕЦ КАК СубконтоКт1,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.ДоговорКонтрагентаГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.ДоговорКонтрагента
		|	КОНЕЦ КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	СУММА(ВременнаяТаблицаУслуги.СуммаНДС) КАК Сумма,
		|	&ВалютаРегламентированногоУчета КАК ВалютаДт,
		|	СУММА(ВременнаяТаблицаУслуги.СуммаНДС) КАК ВалютнаяСуммаДт,
		|	&ВалютаРегламентированногоУчета КАК ВалютаКт,
		|	СУММА(ВременнаяТаблицаУслуги.СуммаНДС) КАК ВалютнаяСуммаКт,
		|	ВЫБОР
		|		КОГДА &УказыватьПризнакЗачетаНДС 
		|			И ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|			ТОГДА &СодержаниеНДСВСебестоимость
		|		ИНАЧЕ &СодержаниеНДС
		|	КОНЕЦ Содержание,
		|	0 КАК КоличествоДт,
		|	0 КАК КоличествоКт,
		|	ВременнаяТаблицаУслуги.ЗачетНДС КАК ЗачетНДС
		|ИЗ
		|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|					И ВременнаяТаблицаШапка.ПлательщикНДС
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ВременнаяТаблицаШапка.ПлательщикНДС
		|		КОНЕЦ
		|	И (ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.Покупка)
		|			ИЛИ ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.Услуги))
		|	И НЕ ВременнаяТаблицаУслуги.СуммаНДС = 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.СчетРасчетовГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.СчетРасчетов
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.КонтрагентГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.Контрагент
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.ДоговорКонтрагентаГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.ДоговорКонтрагента
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|				И &УказыватьПризнакЗачетаНДС
		|			ТОГДА ВременнаяТаблицаУслуги.СчетРасходов
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВременнаяТаблицаШапка.НДСНеПодтвержден
		|					ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС_НеПодтвержденный)
		|				ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС_ПодлежащийВозмещению)
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА &ВалютаРегламентированногоУчета
		|		ИНАЧЕ ВременнаяТаблицаШапка.ВалютаДокумента
		|	КОНЕЦ,
		|	ВременнаяТаблицаУслуги.ЗачетНДС,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА &ВалютаРегламентированногоУчета
		|		ИНАЧЕ ВременнаяТаблицаШапка.ВалютаДокумента
		|	КОНЕЦ,
		|	ВременнаяТаблицаУслуги.Субконто1,
		|	ВременнаяТаблицаУслуги.Субконто2,
		|	ВременнаяТаблицаУслуги.Субконто3";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПСервер.ТекстОбъединитьВсе();
	
	// НДС услуги (Признак страны ЕАЭС и НЕ плательщик НДС).
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	5 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаУслуги.СчетРасходов КАК СчетДт,
		|	ВременнаяТаблицаШапка.СчетРасчетовГНС КАК СчетКт,
		|	ВременнаяТаблицаУслуги.Субконто1 КАК СубконтоДт1,
		|	ВременнаяТаблицаУслуги.Субконто2 КАК СубконтоДт2,
		|	ВременнаяТаблицаУслуги.Субконто3 КАК СубконтоДт3,
		|	ВременнаяТаблицаШапка.КонтрагентГНС КАК СубконтоКт1,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагентаГНС КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ВременнаяТаблицаУслуги.СуммаНДС КАК Сумма,
		|	&ВалютаРегламентированногоУчета КАК ВалютаДт,
		|	ВременнаяТаблицаУслуги.СуммаНДС КАК ВалютнаяСуммаДт,
		|	&ВалютаРегламентированногоУчета КАК ВалютаКт,
		|	ВременнаяТаблицаУслуги.СуммаНДС КАК ВалютнаяСуммаКт,
		|	&СодержаниеНДС КАК Содержание,
		|	0 КАК КоличествоДт,
		|	0 КАК КоличествоКт,
		|	ВременнаяТаблицаУслуги.ЗачетНДС КАК ЗачетНДС
		|ИЗ
		|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|	И НЕ ВременнаяТаблицаШапка.ПлательщикНДС
		|	И (ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.Покупка)
		|			ИЛИ ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.Услуги))
		|	И НЕ ВременнаяТаблицаУслуги.СуммаНДС = 0
		|	И ВЫБОР
		|			КОГДА &УказыватьПризнакЗачетаНДС
		|				ТОГДА НЕ ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПСервер.ТекстОбъединитьВсе();
	
	// НДС ОС.
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	6 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОС.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|				И &УказыватьПризнакЗачетаНДС
		|			ТОГДА ВременнаяТаблицаОС.СчетУчета
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВременнаяТаблицаШапка.НДСНеПодтвержден
		|					ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС_НеПодтвержденный)
		|				ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС_ПодлежащийВозмещению)
		|			КОНЕЦ
		|	КОНЕЦ КАК СчетДт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.СчетРасчетовГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.СчетРасчетов
		|	КОНЕЦ КАК СчетКт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОС.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|				И &УказыватьПризнакЗачетаНДС
		|			ТОГДА ВременнаяТаблицаОС.ОсновноеСредство
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
		|	КОНЕЦ КАК СубконтоДт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.КонтрагентГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.Контрагент
		|	КОНЕЦ КАК СубконтоКт1,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.ДоговорКонтрагентаГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.ДоговорКонтрагента
		|	КОНЕЦ КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	СУММА(ВременнаяТаблицаОС.СуммаНДС) КАК Сумма,
		|	&ВалютаРегламентированногоУчета КАК ВалютаДт,
		|	СУММА(ВременнаяТаблицаОС.СуммаНДС) КАК ВалютнаяСуммаДт,
		|	&ВалютаРегламентированногоУчета КАК ВалютаКт,
		|	СУММА(ВременнаяТаблицаОС.СуммаНДС) КАК ВалютнаяСуммаКт,	
		|	ВЫБОР
		|		КОГДА &УказыватьПризнакЗачетаНДС 
		|			И ВременнаяТаблицаОС.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|			ТОГДА &СодержаниеНДСВСебестоимость
		|		ИНАЧЕ &СодержаниеНДС
		|	КОНЕЦ Содержание,
		|	0 КАК КоличествоДт,
		|	0 КАК КоличествоКт,
		|	ВременнаяТаблицаОС.ЗачетНДС КАК ЗачетНДС
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаШапка.ПлательщикНДС
		|	И НЕ ВременнаяТаблицаОС.СуммаНДС = 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.СчетРасчетовГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.СчетРасчетов
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.КонтрагентГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.Контрагент
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.ДоговорКонтрагентаГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.ДоговорКонтрагента
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОС.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|				И &УказыватьПризнакЗачетаНДС
		|			ТОГДА ВременнаяТаблицаОС.СчетУчета
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВременнаяТаблицаШапка.НДСНеПодтвержден
		|					ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС_НеПодтвержденный)
		|				ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС_ПодлежащийВозмещению)
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА &ВалютаРегламентированногоУчета
		|		ИНАЧЕ ВременнаяТаблицаШапка.ВалютаДокумента
		|	КОНЕЦ,
		|	ВременнаяТаблицаОС.ЗачетНДС,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА &ВалютаРегламентированногоУчета
		|		ИНАЧЕ ВременнаяТаблицаШапка.ВалютаДокумента
		|	КОНЕЦ,
		|	ВременнаяТаблицаОС.ОсновноеСредство";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПСервер.ТекстОбъединитьВсе();
	
	// НДС ОС (Признак страны ЕАЭС и НЕ плательщик НДС).
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	7 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаОС.СчетУчета КАК СчетДт,
		|	ВременнаяТаблицаШапка.СчетРасчетовГНС КАК СчетКт,
		|	ВременнаяТаблицаОС.ОсновноеСредство КАК СубконтоДт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	ВременнаяТаблицаШапка.КонтрагентГНС КАК СубконтоКт1,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагентаГНС КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ВременнаяТаблицаОС.СуммаНДС КАК Сумма,
		|	&ВалютаРегламентированногоУчета КАК ВалютаДт,
		|	ВременнаяТаблицаОС.СуммаНДС КАК ВалютнаяСуммаДт,
		|	&ВалютаРегламентированногоУчета КАК ВалютаКт,
		|	ВременнаяТаблицаОС.СуммаНДС КАК ВалютнаяСуммаКт,
		|	&СодержаниеНДС КАК Содержание,
		|	0 КАК КоличествоДт,
		|	0 КАК КоличествоКт,
		|	ВременнаяТаблицаОС.ЗачетНДС КАК ЗачетНДС
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|	И НЕ ВременнаяТаблицаШапка.ПлательщикНДС
		|	И НЕ ВременнаяТаблицаОС.СуммаНДС = 0
		|	И ВЫБОР
		|			КОГДА &УказыватьПризнакЗачетаНДС
		|				ТОГДА НЕ ВременнаяТаблицаОС.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПСервер.ТекстОбъединитьВсе();
	
	// Расходы будущих периодов.
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	8 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыБудущихПериодов) КАК СчетДт,
		|	ВременнаяТаблицаШапка.СчетРасчетов КАК СчетКт,
		|	ВременнаяТаблицаУслуги.Субконто1 КАК СубконтоДт1,
		|	ВременнаяТаблицаУслуги.Субконто2 КАК СубконтоДт2,
		|	ВременнаяТаблицаУслуги.Субконто3 КАК СубконтоДт3,
		|	ВременнаяТаблицаШапка.Контрагент КАК СубконтоКт1,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|				И &УказыватьПризнакЗачетаНДС
		|			ТОГДА ВременнаяТаблицаУслуги.Сумма + ВременнаяТаблицаУслуги.СуммаНДС + ВременнаяТаблицаУслуги.СуммаНСП
		|		ИНАЧЕ ВременнаяТаблицаУслуги.Сумма + ВременнаяТаблицаУслуги.СуммаНСП
		|	КОНЕЦ КАК Сумма,
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаДт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВалютаДокумента = &ВалютаРегламентированногоУчета
		|			ТОГДА ВЫБОР
		|					КОГДА ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|							И &УказыватьПризнакЗачетаНДС
		|						ТОГДА ВременнаяТаблицаУслуги.Сумма + ВременнаяТаблицаУслуги.СуммаНДС + ВременнаяТаблицаУслуги.СуммаНСП
		|					ИНАЧЕ ВременнаяТаблицаУслуги.Сумма + ВременнаяТаблицаУслуги.СуммаНСП
		|				КОНЕЦ
		|		ИНАЧЕ ВременнаяТаблицаУслуги.Всего
		|	КОНЕЦ КАК ВалютнаяСуммаДт,
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаКт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВалютаДокумента = &ВалютаРегламентированногоУчета
		|			ТОГДА ВЫБОР
		|					КОГДА ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|							И &УказыватьПризнакЗачетаНДС
		|						ТОГДА ВременнаяТаблицаУслуги.Сумма + ВременнаяТаблицаУслуги.СуммаНДС + ВременнаяТаблицаУслуги.СуммаНСП
		|					ИНАЧЕ ВременнаяТаблицаУслуги.Сумма + ВременнаяТаблицаУслуги.СуммаНСП
		|				КОНЕЦ
		|		ИНАЧЕ ВременнаяТаблицаУслуги.Всего
		|	КОНЕЦ КАК ВалютнаяСуммаКт,
		|	&СодержаниеРасходыБудущихПериодов КАК Содержание,
		|	ВременнаяТаблицаУслуги.Количество КАК КоличествоДт,
		|	ВременнаяТаблицаУслуги.Количество КАК КоличествоКт,
		|	НЕОПРЕДЕЛЕНО КАК ЗачетНДС
		|ИЗ
		|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.РасходыБудущихПериодов)
		|	И НЕ ВременнаяТаблицаУслуги.Сумма = 0";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПСервер.ТекстОбъединитьВсе();
	
	// НДС Расходы будущих периодов.
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	9 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС_ПодлежащийВозмещению) КАК СчетДт,
		|	ВременнаяТаблицаШапка.СчетРасчетов КАК СчетКт,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	ВременнаяТаблицаШапка.Контрагент КАК СубконтоКт1,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	СУММА(ВременнаяТаблицаУслуги.СуммаНДС) КАК Сумма,
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаДт,
		|	СУММА(ВременнаяТаблицаУслуги.СуммаНДС) КАК ВалютнаяСуммаДт,
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаКт,
		|	СУММА(ВременнаяТаблицаУслуги.СуммаНДС) КАК ВалютнаяСуммаКт,
		|	&СодержаниеНДС КАК Содержание,
		|	0 КАК КоличествоДт,
		|	0 КАК КоличествоКт,
		|	ВЫБОР
		|		КОГДА &УказыватьПризнакЗачетаНДС
		|			ТОГДА НЕ ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.ПустаяСсылка)
		|	КОНЕЦ КАК ЗачетНДС
		|ИЗ
		|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.РасходыБудущихПериодов)
		|	И ВременнаяТаблицаШапка.ПлательщикНДС
		|	И НЕ ВременнаяТаблицаУслуги.СуммаНДС = 0
		|	И ВЫБОР
		|			КОГДА &УказыватьПризнакЗачетаНДС
		|				ТОГДА НЕ ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетов,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.ВалютаДокумента,
		|	ВременнаяТаблицаУслуги.ЗачетНДС,
		|	ВременнаяТаблицаШапка.ВалютаДокумента";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПСервер.ТекстОбъединитьВсе();
	
	// Акциз услуги.
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	10 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.СчетРасчетовГНС КАК СчетДт,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Акцизы) КАК СчетКт,
		|	ВременнаяТаблицаУслуги.Субконто1 КАК СубконтоДт1,
		|	ВременнаяТаблицаУслуги.Субконто2 КАК СубконтоДт2,
		|	ВременнаяТаблицаУслуги.Субконто3 КАК СубконтоДт3,
		|	ВременнаяТаблицаШапка.КонтрагентГНС КАК СубконтоКт1,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагентаГНС КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ВременнаяТаблицаУслуги.СуммаАкциза КАК Сумма,
		|	&ВалютаРегламентированногоУчета КАК ВалютаДт,
		|	ВременнаяТаблицаУслуги.СуммаАкциза КАК ВалютнаяСуммаДт,
		|	&ВалютаРегламентированногоУчета КАК ВалютаКт,
		|	ВременнаяТаблицаУслуги.СуммаАкциза КАК ВалютнаяСуммаКт,
		|	&СодержаниеАкциз КАК Содержание,
		|	0 КАК КоличествоДт,
		|	0 КАК КоличествоКт,
		|	НЕОПРЕДЕЛЕНО КАК ЗачетНДС
		|ИЗ
		|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.Покупка)
		|	И НЕ ВременнаяТаблицаУслуги.СуммаАкциза = 0";
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("УказыватьПризнакЗачетаНДС", СтруктураДополнительныеСвойства.УчетнаяПолитика.УказыватьПризнакЗачетаНДСПриПоступлении);
	Запрос.УстановитьПараметр("ПлательщикНДС", СтруктураДополнительныеСвойства.УчетнаяПолитика.ПлательщикНДС);
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаХозрасчетный", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаПоступлениеТоваров(ДокументСсылка, СтруктураДополнительныеСвойства) 
	                   
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК Договор,
		|	ВременнаяТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаШапка.БезналичныйРасчет КАК БезналичныйРасчет,
		|	ВременнаяТаблицаШапка.ЗначениеСтавкиНДС КАК ЗначениеСтавкиНДС,
		|	ВременнаяТаблицаШапка.ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|				ИЛИ НЕ &УказыватьПризнакЗачетаНДС
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.ПустаяСсылка)
		|		ИНАЧЕ ВременнаяТаблицаТовары.ЗачетНДС
		|	КОНЕЦ КАК ЗачетНДС,
		|	ВременнаяТаблицаТовары.Сумма КАК Сумма,
		|	ВременнаяТаблицаТовары.СуммаНДС КАК СуммаНДС,
		|	ВременнаяТаблицаТовары.СуммаНСП КАК СуммаНСП,
		|	ВременнаяТаблицаТовары.Количество КАК Количество
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	ВременнаяТаблицаУслуги.Номенклатура,
		|	ВременнаяТаблицаШапка.БезналичныйРасчет,
		|	ВременнаяТаблицаШапка.ЗначениеСтавкиНДС,
		|	ВременнаяТаблицаШапка.ЗначениеСтавкиНСП,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|				ИЛИ НЕ &УказыватьПризнакЗачетаНДС
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.ПустаяСсылка)
		|		ИНАЧЕ ВременнаяТаблицаУслуги.ЗачетНДС
		|	КОНЕЦ,
		|	ВременнаяТаблицаУслуги.Сумма,
		|	ВременнаяТаблицаУслуги.СуммаНДС,
		|	ВременнаяТаблицаУслуги.СуммаНСП,
		|	ВременнаяТаблицаУслуги.Количество
		|ИЗ
		|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	ВременнаяТаблицаОС.ОсновноеСредство,
		|	ВременнаяТаблицаШапка.БезналичныйРасчет,
		|	ВременнаяТаблицаШапка.ЗначениеСтавкиНДС,
		|	ВременнаяТаблицаШапка.ЗначениеСтавкиНСПДляОС,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|				ИЛИ НЕ &УказыватьПризнакЗачетаНДС
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.ПустаяСсылка)
		|		ИНАЧЕ ВременнаяТаблицаОС.ЗачетНДС
		|	КОНЕЦ,
		|	ВременнаяТаблицаОС.Сумма,
		|	ВременнаяТаблицаОС.СуммаНДС,
		|	ВременнаяТаблицаОС.СуммаНСП,
		|	1
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)";
	Запрос.УстановитьПараметр("УказыватьПризнакЗачетаНДС", СтруктураДополнительныеСвойства.УчетнаяПолитика.УказыватьПризнакЗачетаНДСПриПоступлении);
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПоступлениеТоваров", РезультатЗапроса.Выгрузить());
		
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСведенияОПоступлении(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	// Переход на ЭСФ.
	Если СтруктураДополнительныеСвойства.ДляПроведения.Дата < Дата(2020, 07, 01) Тогда 
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Ссылка КАК ДокументСсылка,
		|	ВременнаяТаблицаШапка.Дата КАК Дата,
		|	ВременнаяТаблицаШапка.ВидОперации КАК ВидОперации,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|			ТОГДА ""ДПБУ""
		|		ИНАЧЕ ВременнаяТаблицаШапка.СерияБланкаСФ
		|	КОНЕЦ КАК СерияБланкаСФ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|			ТОГДА ВременнаяТаблицаШапка.НомерАкта
		|		ИНАЧЕ ВременнаяТаблицаШапка.НомерБланкаСФ
		|	КОНЕЦ КАК НомерБланкаСФ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|			ТОГДА ВременнаяТаблицаШапка.Дата
		|		ИНАЧЕ ВременнаяТаблицаШапка.ДатаСФ
		|	КОНЕЦ КАК ДатаСФ,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаШапка.ПризнакСтраны КАК ПризнакСтраны,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.Дата КАК ДатаПоставки,
		|	ВременнаяТаблицаТовары.ЗачетНДС КАК ЗачетНДС,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаТовары.БазаНДС 
		|		ИНАЧЕ ВременнаяТаблицаТовары.Сумма
		|	КОНЕЦ КАК Сумма,
		|	ВременнаяТаблицаТовары.СуммаНДС КАК СуммаНДС,
		|	ВременнаяТаблицаТовары.СуммаНСП КАК СуммаНСП,
		|	ВременнаяТаблицаТовары.СуммаАкциза КАК СуммаАкциза,		
		|	ВременнаяТаблицаШапка.НДСНеПодтвержден КАК НДСНеПодтвержден,
		|	ВременнаяТаблицаШапка.НеВключатьВРеестрСФ КАК НеВключатьВРеестрСФ
		|ПОМЕСТИТЬ ВременнаяТаблицаСтроки
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Ссылка,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.ВидОперации,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|			ТОГДА ""ДПБУ""
		|		ИНАЧЕ ВременнаяТаблицаШапка.СерияБланкаСФ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|			ТОГДА ВременнаяТаблицаШапка.НомерАкта
		|		ИНАЧЕ ВременнаяТаблицаШапка.НомерБланкаСФ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|			ТОГДА ВременнаяТаблицаШапка.Дата
		|		ИНАЧЕ ВременнаяТаблицаШапка.ДатаСФ
		|	КОНЕЦ,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.Контрагент.ПризнакСтраны,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаУслуги.ЗачетНДС,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаУслуги.БазаНДС 
		|		ИНАЧЕ ВременнаяТаблицаУслуги.Сумма
		|	КОНЕЦ,
		|	ВременнаяТаблицаУслуги.СуммаНДС,
		|	ВременнаяТаблицаУслуги.СуммаНСП,
		|	ВременнаяТаблицаУслуги.СуммаАкциза,
		|	ВременнаяТаблицаШапка.НДСНеПодтвержден,
		|	ВременнаяТаблицаШапка.НеВключатьВРеестрСФ
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ПО (ИСТИНА)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Ссылка,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.ВидОперации,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|			ТОГДА ""ДПБУ""
		|		ИНАЧЕ ВременнаяТаблицаШапка.СерияБланкаСФ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|			ТОГДА ВременнаяТаблицаШапка.НомерАкта
		|		ИНАЧЕ ВременнаяТаблицаШапка.НомерБланкаСФ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|			ТОГДА ВременнаяТаблицаШапка.Дата
		|		ИНАЧЕ ВременнаяТаблицаШапка.ДатаСФ
		|	КОНЕЦ,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.Контрагент.ПризнакСтраны,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаОС.ЗачетНДС,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаОС.БазаНДС 
		|		ИНАЧЕ ВременнаяТаблицаОС.Сумма
		|	КОНЕЦ,
		|	ВременнаяТаблицаОС.СуммаНДС,
		|	ВременнаяТаблицаОС.СуммаНСП,
		|	ВременнаяТаблицаОС.СуммаАкциза,
		|	ВременнаяТаблицаШапка.НДСНеПодтвержден,
		|	ВременнаяТаблицаШапка.НеВключатьВРеестрСФ
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаСтроки.Организация КАК Организация,
		|	ВременнаяТаблицаСтроки.ДокументСсылка КАК ДокументСсылка,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|			ТОГДА """"
		|		ИНАЧЕ ВременнаяТаблицаСтроки.СерияБланкаСФ
		|	КОНЕЦ КАК СерияБланкаСФ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|			ТОГДА """"
		|		ИНАЧЕ ВременнаяТаблицаСтроки.НомерБланкаСФ
		|	КОНЕЦ КАК НомерБланкаСФ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаСтроки.Дата
		|		КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ ВременнаяТаблицаСтроки.ДатаСФ
		|	КОНЕЦ КАК ДатаСФ,
		|	ВременнаяТаблицаСтроки.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаСтроки.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|			ТОГДА """"
		|		ИНАЧЕ ВременнаяТаблицаСтроки.ДатаПоставки
		|	КОНЕЦ КАК ДатаПоставки,
		|	ВЫБОР
		|		КОГДА &УказыватьПризнакЗачетаНДС
		|			ТОГДА ВременнаяТаблицаСтроки.ЗачетНДС
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.ПустаяСсылка)
		|	КОНЕЦ КАК ЗачетНДС,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаСтроки.Сумма
		|		КОНЕЦ) КАК Сумма,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаСтроки.СуммаНДС
		|		КОНЕЦ) КАК СуммаНДС,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаСтроки.СуммаНСП
		|		КОНЕЦ) КАК СуммаНСП,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаСтроки.СуммаАкциза
		|		КОНЕЦ) КАК СуммаАкциза,
		|	ВременнаяТаблицаСтроки.НДСНеПодтвержден КАК НДСНеПодтвержден
		|ИЗ
		|	ВременнаяТаблицаСтроки КАК ВременнаяТаблицаСтроки
		|ГДЕ
		|	НЕ ВременнаяТаблицаСтроки.НеВключатьВРеестрСФ
		|	И ВЫБОР
		|			КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|					ИЛИ ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ВременнаяТаблицаСтроки.СерияБланкаСФ <> """"
		|		КОНЕЦ
		|	И (ВременнаяТаблицаСтроки.Сумма <> 0
		|			ИЛИ ВременнаяТаблицаСтроки.СуммаНДС <> 0
		|			ИЛИ ВременнаяТаблицаСтроки.СуммаНСП <> 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаСтроки.ДокументСсылка,
		|	ВременнаяТаблицаСтроки.Организация,
		|	ВременнаяТаблицаСтроки.ДатаПоставки,
		|	ВременнаяТаблицаСтроки.Дата,
		|	ВременнаяТаблицаСтроки.ДатаСФ,
		|	ВременнаяТаблицаСтроки.СерияБланкаСФ,
		|	ВременнаяТаблицаСтроки.НомерБланкаСФ,
		|	ВременнаяТаблицаСтроки.Контрагент,
		|	ВременнаяТаблицаСтроки.ДоговорКонтрагента,
		|	ВременнаяТаблицаСтроки.ЗачетНДС,
		|	ВременнаяТаблицаСтроки.НДСНеПодтвержден,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|			ТОГДА """"
		|		ИНАЧЕ ВременнаяТаблицаСтроки.СерияБланкаСФ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|			ТОГДА """"
		|		ИНАЧЕ ВременнаяТаблицаСтроки.НомерБланкаСФ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаСтроки.Дата
		|		КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ ВременнаяТаблицаСтроки.ДатаСФ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|			ТОГДА """"
		|		ИНАЧЕ ВременнаяТаблицаСтроки.ДатаПоставки
		|	КОНЕЦ";
		Запрос.УстановитьПараметр("УказыватьПризнакЗачетаНДС", СтруктураДополнительныеСвойства.УчетнаяПолитика.УказыватьПризнакЗачетаНДСПриПоступлении);
		РезультатЗапроса = Запрос.Выполнить();
	Иначе 
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Ссылка КАК ДокументСсылка,
		|	ВременнаяТаблицаШапка.Дата КАК Дата,
		|	ВременнаяТаблицаШапка.ВидОперации КАК ВидОперации,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|			ТОГДА ""ДПБУ""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК СерияБланкаСФ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|			ТОГДА ВременнаяТаблицаШапка.НомерАкта
		|		ИНАЧЕ СведенияОбЭСФ.НомерЭСФ
		|	КОНЕЦ КАК НомерБланкаСФ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|			ТОГДА ВременнаяТаблицаШапка.Дата
		|		ИНАЧЕ СведенияОбЭСФ.ДатаПоставки
		|	КОНЕЦ КАК ДатаСФ,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаШапка.ПризнакСтраны КАК ПризнакСтраны,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.Дата КАК ДатаПоставки,
		|	ВременнаяТаблицаТовары.ЗачетНДС КАК ЗачетНДС,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаТовары.БазаНДС
		|		ИНАЧЕ ВременнаяТаблицаТовары.Сумма
		|	КОНЕЦ КАК Сумма,
		|	ВременнаяТаблицаТовары.СуммаНДС КАК СуммаНДС,
		|	ВременнаяТаблицаТовары.СуммаНСП КАК СуммаНСП,
		|	ВременнаяТаблицаТовары.СуммаАкциза КАК СуммаАкциза,
		|	ВременнаяТаблицаШапка.НДСНеПодтвержден КАК НДСНеПодтвержден,
		|	ВременнаяТаблицаШапка.НеВключатьВРеестрСФ КАК НеВключатьВРеестрСФ
		|ПОМЕСТИТЬ ВременнаяТаблицаСтроки
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбЭСФ КАК СведенияОбЭСФ
		|		ПО ВременнаяТаблицаШапка.Организация = СведенияОбЭСФ.Организация
		|			И ВременнаяТаблицаШапка.Ссылка = СведенияОбЭСФ.ДокументОснование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Ссылка,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.ВидОперации,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|			ТОГДА ""ДПБУ""
		|		ИНАЧЕ """"
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|			ТОГДА ВременнаяТаблицаШапка.НомерАкта
		|		ИНАЧЕ СведенияОбЭСФ.НомерЭСФ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|			ТОГДА ВременнаяТаблицаШапка.Дата
		|		ИНАЧЕ СведенияОбЭСФ.ДатаПоставки
		|	КОНЕЦ,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.Контрагент.ПризнакСтраны,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаУслуги.ЗачетНДС,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаУслуги.БазаНДС
		|		ИНАЧЕ ВременнаяТаблицаУслуги.Сумма
		|	КОНЕЦ,
		|	ВременнаяТаблицаУслуги.СуммаНДС,
		|	ВременнаяТаблицаУслуги.СуммаНСП,
		|	ВременнаяТаблицаУслуги.СуммаАкциза,
		|	ВременнаяТаблицаШапка.НДСНеПодтвержден,
		|	ВременнаяТаблицаШапка.НеВключатьВРеестрСФ
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ПО (ИСТИНА)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбЭСФ КАК СведенияОбЭСФ
		|		ПО ВременнаяТаблицаШапка.Организация = СведенияОбЭСФ.Организация
		|			И ВременнаяТаблицаШапка.Ссылка = СведенияОбЭСФ.ДокументОснование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Ссылка,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.ВидОперации,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|			ТОГДА ""ДПБУ""
		|		ИНАЧЕ """"
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|			ТОГДА ВременнаяТаблицаШапка.НомерАкта
		|		ИНАЧЕ СведенияОбЭСФ.НомерЭСФ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|			ТОГДА ВременнаяТаблицаШапка.Дата
		|		ИНАЧЕ СведенияОбЭСФ.ДатаПоставки
		|	КОНЕЦ,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.Контрагент.ПризнакСтраны,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаОС.ЗачетНДС,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаОС.БазаНДС
		|		ИНАЧЕ ВременнаяТаблицаОС.Сумма
		|	КОНЕЦ,
		|	ВременнаяТаблицаОС.СуммаНДС,
		|	ВременнаяТаблицаОС.СуммаНСП,
		|	ВременнаяТаблицаОС.СуммаАкциза,
		|	ВременнаяТаблицаШапка.НДСНеПодтвержден,
		|	ВременнаяТаблицаШапка.НеВключатьВРеестрСФ
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбЭСФ КАК СведенияОбЭСФ
		|		ПО ВременнаяТаблицаШапка.Организация = СведенияОбЭСФ.Организация
		|			И ВременнаяТаблицаШапка.Ссылка = СведенияОбЭСФ.ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаСтроки.Организация КАК Организация,
		|	ВременнаяТаблицаСтроки.ДокументСсылка КАК ДокументСсылка,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|			ТОГДА """"
		|		ИНАЧЕ ВременнаяТаблицаСтроки.СерияБланкаСФ
		|	КОНЕЦ КАК СерияБланкаСФ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|			ТОГДА """"
		|		ИНАЧЕ ВременнаяТаблицаСтроки.НомерБланкаСФ
		|	КОНЕЦ КАК НомерБланкаСФ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаСтроки.Дата
		|		КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ ВременнаяТаблицаСтроки.ДатаСФ
		|	КОНЕЦ КАК ДатаСФ,
		|	ВременнаяТаблицаСтроки.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаСтроки.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|			ТОГДА """"
		|		ИНАЧЕ ВременнаяТаблицаСтроки.ДатаПоставки
		|	КОНЕЦ КАК ДатаПоставки,
		|	ВЫБОР
		|		КОГДА &УказыватьПризнакЗачетаНДС
		|			ТОГДА ВременнаяТаблицаСтроки.ЗачетНДС
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.ПустаяСсылка)
		|	КОНЕЦ КАК ЗачетНДС,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаСтроки.Сумма
		|		КОНЕЦ) КАК Сумма,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаСтроки.СуммаНДС
		|		КОНЕЦ) КАК СуммаНДС,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаСтроки.СуммаНСП
		|		КОНЕЦ) КАК СуммаНСП,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|				ТОГДА 0
		|			ИНАЧЕ ВременнаяТаблицаСтроки.СуммаАкциза
		|		КОНЕЦ) КАК СуммаАкциза,
		|	ВременнаяТаблицаСтроки.НДСНеПодтвержден КАК НДСНеПодтвержден
		|ИЗ
		|	ВременнаяТаблицаСтроки КАК ВременнаяТаблицаСтроки
		|ГДЕ
		|	НЕ ВременнаяТаблицаСтроки.НеВключатьВРеестрСФ
		|	И (ВременнаяТаблицаСтроки.Сумма <> 0
		|			ИЛИ ВременнаяТаблицаСтроки.СуммаНДС <> 0
		|			ИЛИ ВременнаяТаблицаСтроки.СуммаНСП <> 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаСтроки.ДокументСсылка,
		|	ВременнаяТаблицаСтроки.Организация,
		|	ВременнаяТаблицаСтроки.ДатаПоставки,
		|	ВременнаяТаблицаСтроки.Дата,
		|	ВременнаяТаблицаСтроки.ДатаСФ,
		|	ВременнаяТаблицаСтроки.СерияБланкаСФ,
		|	ВременнаяТаблицаСтроки.НомерБланкаСФ,
		|	ВременнаяТаблицаСтроки.Контрагент,
		|	ВременнаяТаблицаСтроки.ДоговорКонтрагента,
		|	ВременнаяТаблицаСтроки.ЗачетНДС,
		|	ВременнаяТаблицаСтроки.НДСНеПодтвержден,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|			ТОГДА """"
		|		ИНАЧЕ ВременнаяТаблицаСтроки.СерияБланкаСФ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|			ТОГДА """"
		|		ИНАЧЕ ВременнаяТаблицаСтроки.НомерБланкаСФ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаСтроки.Дата
		|		КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ ВременнаяТаблицаСтроки.ДатаСФ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСтроки.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|			ТОГДА """"
		|		ИНАЧЕ ВременнаяТаблицаСтроки.ДатаПоставки
		|	КОНЕЦ";
		Запрос.УстановитьПараметр("УказыватьПризнакЗачетаНДС", СтруктураДополнительныеСвойства.УчетнаяПолитика.УказыватьПризнакЗачетаНДСПриПоступлении);
		РезультатЗапроса = Запрос.Выполнить();
	КонецЕсли;	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСведенияОПоступлении", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗначенияСтавокНалогов(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.ЗначениеСтавкиНДС КАК ЗначениеСтавкиНДС,
		|	ВременнаяТаблицаШапка.ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП,
		|	ВременнаяТаблицаШапка.ЗначениеСтавкиНСПДляОС КАК ЗначениеСтавкиНСПДляОС
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗначенияСтавокНалогов", РезультатЗапроса.Выгрузить());
		
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаПараметрыУчетаОС(ДокументСсылка, СтруктураДополнительныеСвойства)
	 	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаОС.ОсновноеСредство,
		|	ВременнаяТаблицаОС.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаОС.Сумма + ВременнаяТаблицаОС.СуммаНСП КАК ПервоначальнаяСтоимость
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПараметрыУчетаОС", РезультатЗапроса.Выгрузить()); 
		
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСостоянияОС(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Дата КАК ДатаСостояния,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаОС.ОсновноеСредство,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.Поступило) КАК Состояние,
		|	НЕОПРЕДЕЛЕНО КАК ДатаСписания
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСостоянияОС", РезультатЗапроса.Выгрузить()); 

КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСобытияОС(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Поступление) КАК Событие,
		|	ВременнаяТаблицаШапка.Номер КАК НомерДокумента,
		|	ВременнаяТаблицаШапка.Ссылка КАК НазваниеДокумента,
		|	ВременнаяТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСобытияОС", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРеестрВвезенных(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.ЗачетНДС КАК ЗачетНДС,
		|	ЕСТЬNULL(СУММА(ВременнаяТаблицаТовары.СуммаНДС), 0) КАК СуммаНДС,
		|	ЕСТЬNULL(СУММА(ВременнаяТаблицаТовары.БазаНДС), 0) КАК БазаНДС,
		|	ЕСТЬNULL(СУММА(ВременнаяТаблицаТовары.СуммаАкциза), 0) КАК СуммаАкциза
		|ПОМЕСТИТЬ ВременнаяТаблицаТаблицыТоваров
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаТовары.ЗачетНДС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаУслуги.ЗачетНДС,
		|	ЕСТЬNULL(СУММА(ВременнаяТаблицаУслуги.СуммаНДС), 0),
		|	ЕСТЬNULL(СУММА(ВременнаяТаблицаУслуги.БазаНДС), 0),
		|	ЕСТЬNULL(СУММА(ВременнаяТаблицаУслуги.СуммаАкциза), 0)
		|ИЗ
		|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаУслуги.ЗачетНДС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОС.ЗачетНДС,
		|	ЕСТЬNULL(СУММА(ВременнаяТаблицаОС.СуммаНДС), 0),
		|	ЕСТЬNULL(СУММА(ВременнаяТаблицаОС.БазаНДС), 0),
		|	ЕСТЬNULL(СУММА(ВременнаяТаблицаОС.СуммаАкциза), 0)
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаОС.ЗачетНДС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаТаблицыТоваров.ЗачетНДС КАК ЗачетНДС,
		|	ВременнаяТаблицаТаблицыТоваров.СуммаНДС КАК СуммаНДС,
		|	ВременнаяТаблицаТаблицыТоваров.БазаНДС КАК БазаНДС,
		|	ВременнаяТаблицаТаблицыТоваров.СуммаАкциза КАК СуммаАкциза
		|ПОМЕСТИТЬ ВТСуммыРеестрВвезенных
		|ИЗ
		|	ВременнаяТаблицаТаблицыТоваров КАК ВременнаяТаблицаТаблицыТоваров
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|				И ВременнаяТаблицаШапка.НомерАкта <> """"
		|			ТОГДА ВременнаяТаблицаШапка.НомерАкта
		|		КОГДА ВременнаяТаблицаШапка.НомерБланкаСФ <> """"
		|			ТОГДА ВременнаяТаблицаШапка.НомерБланкаСФ
		|		ИНАЧЕ ВременнаяТаблицаШапка.Номер
		|	КОНЕЦ КАК Номер,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ДатаСФ <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ВременнаяТаблицаШапка.ДатаСФ
		|		ИНАЧЕ ВременнаяТаблицаШапка.Дата
		|	КОНЕЦ КАК ДатаСФ,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	ВТСуммыРеестрВвезенных.СуммаНДС КАК СуммаНДС,
		|	ВТСуммыРеестрВвезенных.БазаНДС КАК Сумма,
		|	ВТСуммыРеестрВвезенных.СуммаАкциза КАК СуммаАкциза,
		|	ВТСуммыРеестрВвезенных.ЗачетНДС КАК ЗачетНДС
		|ИЗ
		|	ВТСуммыРеестрВвезенных КАК ВТСуммыРеестрВвезенных
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаШапка.НеВключатьВРеестрСФ
		|	И ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|	И ВременнаяТаблицаШапка.ПлательщикНДС";
	Запрос.УстановитьПараметр("УказыватьПризнакЗачетаНДС", СтруктураДополнительныеСвойства.УчетнаяПолитика.УказыватьПризнакЗачетаНДСПриПоступлении);
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРеестрВвезенных", Запрос.Выполнить().Выгрузить());		
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРеестрПриобретенныхМатериальныхРесурсов(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.ЗачетНДС КАК ЗачетНДС,
		|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
		|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС
		|ПОМЕСТИТЬ ВременнаяТаблицаДанныеТабличныхЧастей
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВременнаяТаблицаТовары.ЗачетНДС КАК ЗачетНДС,
		|		ЕСТЬNULL(СУММА(ВременнаяТаблицаТовары.Сумма), 0) КАК Сумма,
		|		ЕСТЬNULL(СУММА(ВременнаяТаблицаТовары.СуммаНДС), 0) КАК СуммаНДС
		|	ИЗ
		|		ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВременнаяТаблицаТовары.ЗачетНДС
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВременнаяТаблицаУслуги.ЗачетНДС,
		|		ЕСТЬNULL(СУММА(ВременнаяТаблицаУслуги.Сумма), 0),
		|		ЕСТЬNULL(СУММА(ВременнаяТаблицаУслуги.СуммаНДС), 0)
		|	ИЗ
		|		ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВременнаяТаблицаУслуги.ЗачетНДС
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВременнаяТаблицаОС.ЗачетНДС,
		|		ЕСТЬNULL(СУММА(ВременнаяТаблицаОС.Сумма), 0),
		|		ЕСТЬNULL(СУММА(ВременнаяТаблицаОС.СуммаНДС), 0)
		|	ИЗ
		|		ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВременнаяТаблицаОС.ЗачетНДС) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.ЗачетНДС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.ДатаСФ КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаДанныеТабличныхЧастей.ЗачетНДС КАК ЗачетНДС,
		|	ВременнаяТаблицаШапка.СерияБланкаСФ КАК СерияБланкаСФ,
		|	ВременнаяТаблицаШапка.НомерБланкаСФ КАК НомерБланкаСФ,
		|	ВременнаяТаблицаДанныеТабличныхЧастей.СуммаНДС КАК СуммаНДС,
		|	ВременнаяТаблицаДанныеТабличныхЧастей.Сумма КАК Сумма
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДанныеТабличныхЧастей КАК ВременнаяТаблицаДанныеТабличныхЧастей
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаШапка.ПлательщикНДС
		|	И ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
		|	И НЕ ВременнаяТаблицаШапка.СерияБланкаСФ = """"
		|	И НЕ ВременнаяТаблицаШапка.НеВключатьВРеестрСФ
		|	И НЕ ВременнаяТаблицаШапка.НДСНеПодтвержден
		|	И ВременнаяТаблицаШапка.Дата < ДАТАВРЕМЯ(2020, 7, 1)
		|	И НЕ ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОбЭСФ.ДатаПоставки,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаДанныеТабличныхЧастей.ЗачетНДС,
		|	"""",
		|	СведенияОбЭСФ.НомерЭСФ,
		|	ВременнаяТаблицаДанныеТабличныхЧастей.СуммаНДС,
		|	ВременнаяТаблицаДанныеТабличныхЧастей.Сумма
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДанныеТабличныхЧастей КАК ВременнаяТаблицаДанныеТабличныхЧастей
		|		ПО (ИСТИНА)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбЭСФ КАК СведенияОбЭСФ
		|		ПО ВременнаяТаблицаШапка.Организация = СведенияОбЭСФ.Организация
		|			И ВременнаяТаблицаШапка.Ссылка = СведенияОбЭСФ.ДокументОснование
		|ГДЕ
		|	ВременнаяТаблицаШапка.ПлательщикНДС
		|	И ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
		|	И НЕ ВременнаяТаблицаШапка.НеВключатьВРеестрСФ
		|	И НЕ ВременнаяТаблицаШапка.НДСНеПодтвержден
		|	И ВременнаяТаблицаШапка.Дата >= ДАТАВРЕМЯ(2020, 7, 1)
		|	И НЕ ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаДанныеТабличныхЧастей.ЗачетНДС,
		|	""ДПБУ"",
		|	ВременнаяТаблицаШапка.НомерАкта,
		|	ВременнаяТаблицаДанныеТабличныхЧастей.СуммаНДС,
		|	ВременнаяТаблицаДанныеТабличныхЧастей.Сумма
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДанныеТабличныхЧастей КАК ВременнаяТаблицаДанныеТабличныхЧастей
		|		ПО (ИСТИНА),
		|	РегистрСведений.СведенияОбЭСФ КАК СведенияОбЭСФ
		|ГДЕ
		|	ВременнаяТаблицаШапка.ПлательщикНДС
		|	И ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
		|	И НЕ ВременнаяТаблицаШапка.НеВключатьВРеестрСФ
		|	И НЕ ВременнаяТаблицаШапка.НДСНеПодтвержден
		|	И ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)";
	Запрос.УстановитьПараметр("УказыватьПризнакЗачетаНДС", СтруктураДополнительныеСвойства.УчетнаяПолитика.УказыватьПризнакЗачетаНДСПриПоступлении);
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРеестрПриобретенныхМатериальныхРесурсов", Запрос.Выполнить().Выгрузить());		
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаНДСНаИмпорт(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ИмпортОсвобожденныйОтНДС <> ЗНАЧЕНИЕ(Перечисление.ИмпортОсвобожденныйОтНДС.ПустаяСсылка)
		|			ТОГДА ВременнаяТаблицаШапка.ИмпортОсвобожденныйОтНДС
		|		ИНАЧЕ ВременнаяТаблицаТовары.ИмпортОсвобожденныйОтНДС
		|	КОНЕЦ КАК ИмпортОсвобожденныйОтНДС,
		|	ВременнаяТаблицаШапка.ПоказательИмпорта КАК ПоказательИмпорта,
		|	ВременнаяТаблицаТовары.СуммаНДС КАК СуммаНДС,
		|	ВременнаяТаблицаТовары.Сумма КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаНДСНаИмпорт
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ИмпортОсвобожденныйОтНДС <> ЗНАЧЕНИЕ(Перечисление.ИмпортОсвобожденныйОтНДС.ПустаяСсылка)
		|			ТОГДА ВременнаяТаблицаШапка.ИмпортОсвобожденныйОтНДС
		|		ИНАЧЕ ВременнаяТаблицаОС.ИмпортОсвобожденныйОтНДС
		|	КОНЕЦ,
		|	ВременнаяТаблицаШапка.ПоказательИмпорта,
		|	ВременнаяТаблицаОС.СуммаНДС,
		|	ВременнаяТаблицаОС.Сумма
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаНДСНаИмпорт.Период КАК Период,
		|	ВременнаяТаблицаНДСНаИмпорт.Организация КАК Организация,
		|	ВременнаяТаблицаНДСНаИмпорт.ИмпортОсвобожденныйОтНДС КАК ИмпортОсвобожденныйОтНДС,
		|	ВременнаяТаблицаНДСНаИмпорт.ПоказательИмпорта КАК ПоказательИмпорта,
		|	СУММА(ВременнаяТаблицаНДСНаИмпорт.СуммаНДС) КАК СуммаНДС,
		|	СУММА(ВременнаяТаблицаНДСНаИмпорт.Сумма) КАК Сумма
		|ИЗ
		|	ВременнаяТаблицаНДСНаИмпорт КАК ВременнаяТаблицаНДСНаИмпорт
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаНДСНаИмпорт.Организация,
		|	ВременнаяТаблицаНДСНаИмпорт.ИмпортОсвобожденныйОтНДС,
		|	ВременнаяТаблицаНДСНаИмпорт.ПоказательИмпорта,
		|	ВременнаяТаблицаНДСНаИмпорт.Период";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаНДСНаИмпорт", РезультатЗапроса.Выгрузить());
		
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьСведенияПоПоказателямИмпорта(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Дата,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Ссылка КАК ДокументСсылка,
		|	ВременнаяТаблицаШапка.Контрагент КАК Поставщик,
		|	ВременнаяТаблицаШапка.Страна КАК Страна,
		|	ВременнаяТаблицаШапка.ХарактерСделки КАК ХарактерСделки,
		|	ВременнаяТаблицаШапка.КоммерческийДокумент КАК КоммерческиеДокументы,
		|	ВременнаяТаблицаШапка.Транспортировка КАК Транспортировка,
		|	ВременнаяТаблицаШапка.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
		|	ВременнаяТаблицаШапка.ВидТранспорта КАК ВидТранспорта,
		|	ВременнаяТаблицаШапка.НомерКонтракта КАК НомерКонтракта,
		|	ВременнаяТаблицаШапка.ДатаКонтракта КАК ДатаКонтракта,
		|	ВременнаяТаблицаТовары.Номенклатура КАК Номенклатура,
		|	СУММА(ВременнаяТаблицаТовары.Вес) КАК Вес,
		|	СУММА(ВременнаяТаблицаТовары.Количество) КАК Количество,
		|	СУММА(ВременнаяТаблицаТовары.Сумма) КАК Сумма,
		|	СУММА(ВЫРАЗИТЬ(ВременнаяТаблицаТовары.Сумма / ВременнаяТаблицаКурсДоллара.Курс * ВременнаяТаблицаКурсДоллара.Кратность КАК ЧИСЛО(15, 2))) КАК СуммаВДолларах
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсДоллара КАК ВременнаяТаблицаКурсДоллара
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаШапка.Транспортировка,
		|	ВременнаяТаблицаШапка.Ссылка,
		|	ВременнаяТаблицаШапка.КоммерческийДокумент,
		|	ВременнаяТаблицаШапка.ДополнительнаяИнформация,
		|	ВременнаяТаблицаШапка.НомерКонтракта,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.ДатаКонтракта,
		|	ВременнаяТаблицаШапка.ВидТранспорта,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Страна,
		|	ВременнаяТаблицаШапка.ХарактерСделки,
		|	ВременнаяТаблицаТовары.Номенклатура";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСведенияПоПоказателямИмпорта", РезультатЗапроса.Выгрузить());
		
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРеестрЗакупок(ДокументСсылка, СтруктураДополнительныеСвойства) 
	                   
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаШапка.ЗначениеСтавкиНДС КАК ЗначениеСтавкиНДС,
		|	ВременнаяТаблицаШапка.ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП,
		|	ВременнаяТаблицаТовары.Сумма КАК Сумма,
		|	ВременнаяТаблицаТовары.СуммаНДС КАК СуммаНДС,
		|	ВременнаяТаблицаТовары.СуммаНСП КАК СуммаНСП,
		|	ВременнаяТаблицаТовары.Количество КАК Количество
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаШапка.ПризнакСтраны <> ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаУслуги.Номенклатура,
		|	ВременнаяТаблицаШапка.ЗначениеСтавкиНДС,
		|	ВременнаяТаблицаШапка.ЗначениеСтавкиНСП,
		|	ВременнаяТаблицаУслуги.Сумма,
		|	ВременнаяТаблицаУслуги.СуммаНДС,
		|	ВременнаяТаблицаУслуги.СуммаНСП,
		|	ВременнаяТаблицаУслуги.Количество
		|ИЗ
		|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Контрагент,
		|	ВременнаяТаблицаОС.ОсновноеСредство,
		|	ВременнаяТаблицаШапка.ЗначениеСтавкиНДС,
		|	ВременнаяТаблицаШапка.ЗначениеСтавкиНСПДляОС,
		|	ВременнаяТаблицаОС.Сумма,
		|	ВременнаяТаблицаОС.СуммаНДС,
		|	ВременнаяТаблицаОС.СуммаНСП,
		|	1
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаШапка.ПризнакСтраны <> ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)";
	Запрос.УстановитьПараметр("УказыватьПризнакЗачетаНДС", СтруктураДополнительныеСвойства.УчетнаяПолитика.УказыватьПризнакЗачетаНДСПриПоступлении);
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРеестрЗакупок", РезультатЗапроса.Выгрузить());
		
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗакупочныхАктов(ДокументСсылка, СтруктураДополнительныеСвойства) 
	                   
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаШапка.НомерАкта КАК Номер,
		|	ВременнаяТаблицаТовары.Номенклатура КАК Товар,
		|	ВременнаяТаблицаТовары.Количество КАК Количество,
		|	ВременнаяТаблицаТовары.Всего КАК Сумма
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт) 
		|	И (ВременнаяТаблицаТовары.Количество <> 0
		|	ИЛИ ВременнаяТаблицаТовары.Всего <> 0)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДанныеЗакупочныхАктов", РезультатЗапроса.Выгрузить());
		
КонецПроцедуры 

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц 	= СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.Дата КАК Дата,
		|	ТаблицаДокумента.Номер КАК Номер,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.ВидОперации КАК ВидОперации,
		|	ТаблицаДокумента.БезналичныйРасчет КАК БезналичныйРасчет,
		|	ТаблицаДокумента.ВалютаДокумента КАК ВалютаДокумента,
		|	ТаблицаДокумента.Склад КАК Склад,
		|	ТаблицаДокумента.Контрагент КАК Контрагент,
		|	ТаблицаДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ТаблицаДокумента.Контрагент.ПризнакСтраны КАК ПризнакСтраны,
		|	ТаблицаДокумента.Курс КАК Курс,
		|	ТаблицаДокумента.Кратность КАК Кратность,
		|	&КонтрагентГНС КАК КонтрагентГНС,
		|	&ДоговорКонтрагентаГНС КАК ДоговорКонтрагентаГНС,
		|	&СчетРасчетовГНС КАК СчетРасчетовГНС,
		|	ТаблицаДокумента.СуммаДокумента КАК СуммаДокумента,
		|	ТаблицаДокумента.СчетРасчетов КАК СчетРасчетов,
		|	ТаблицаДокумента.СерияБланкаСФ КАК СерияБланкаСФ,
		|	ТаблицаДокумента.НомерБланкаСФ КАК НомерБланкаСФ,
		|	ТаблицаДокумента.НомерАкта КАК НомерАкта,
		|	ТаблицаДокумента.ДатаСФ КАК ДатаСФ,
		|	ТаблицаДокумента.НДСНеПодтвержден КАК НДСНеПодтвержден,
		|	ТаблицаДокумента.НеВключатьВРеестрСФ КАК НеВключатьВРеестрСФ,
		|	&ПлательщикНДС КАК ПлательщикНДС,
		|	ТаблицаДокумента.ЗначениеСтавкиНДС КАК ЗначениеСтавкиНДС,
		|	ТаблицаДокумента.ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП,
		|	ТаблицаДокумента.ЗначениеСтавкиНСПДляОС КАК ЗначениеСтавкиНСПДляОС,
		|	ТаблицаДокумента.ПоказательИмпорта КАК ПоказательИмпорта,
		|	ТаблицаДокумента.ИмпортОсвобожденныйОтНДС КАК ИмпортОсвобожденныйОтНДС,
		|	ТаблицаДокумента.Контрагент.СтранаРезидентства КАК Страна,
		|	ТаблицаДокумента.ХарактерСделки КАК ХарактерСделки,
		|	ТаблицаДокумента.КоммерческийДокумент КАК КоммерческийДокумент,
		|	ТаблицаДокумента.Транспортировка КАК Транспортировка,
		|	ТаблицаДокумента.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
		|	ТаблицаДокумента.ВидТранспорта КАК ВидТранспорта,
		|	ТаблицаДокумента.НомерКонтракта КАК НомерКонтракта,
		|	ТаблицаДокумента.ДатаКонтракта КАК ДатаКонтракта
		|ПОМЕСТИТЬ ВременнаяТаблицаШапка
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.Количество КАК Количество,
		|	ТаблицаДокумента.Цена КАК Цена,
		|	ТаблицаДокумента.Сумма КАК Сумма,
		|	ТаблицаДокумента.СчетУчета КАК СчетУчета,
		|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
		|	ТаблицаДокумента.СуммаНСП КАК СуммаНСП,
		|	ТаблицаДокумента.СуммаАкциза КАК СуммаАкциза,
		|	ТаблицаДокумента.Всего КАК Всего,
		|	ТаблицаДокумента.БазаНДС КАК БазаНДС,
		|	ТаблицаДокумента.ИмпортОсвобожденныйОтНДС КАК ИмпортОсвобожденныйОтНДС,
		|	ТаблицаДокумента.Вес КАК Вес,
		|	ВЫБОР
		|		КОГДА НЕ &ПризнакЗачетаНДСП
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Распределение)
		|		КОГДА ТаблицаДокумента.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Зачет)
		|		ИНАЧЕ ТаблицаДокумента.ЗачетНДС
		|	КОНЕЦ КАК ЗачетНДС
		|ПОМЕСТИТЬ ВременнаяТаблицаТовары
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.Количество КАК Количество,
		|	ТаблицаДокумента.Цена КАК Цена,
		|	ТаблицаДокумента.Сумма КАК Сумма,
		|	ТаблицаДокумента.СчетРасходов КАК СчетРасходов,
		|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
		|	ТаблицаДокумента.СуммаНСП КАК СуммаНСП,
		|	ТаблицаДокумента.СуммаАкциза КАК СуммаАкциза,
		|	ТаблицаДокумента.Всего КАК Всего,
		|	ТаблицаДокумента.БазаНДС КАК БазаНДС,
		|	ВЫБОР
		|		КОГДА НЕ &ПризнакЗачетаНДСП
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Распределение)
		|		КОГДА ТаблицаДокумента.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Зачет)
		|		ИНАЧЕ ТаблицаДокумента.ЗачетНДС
		|	КОНЕЦ КАК ЗачетНДС,
		|	ТаблицаДокумента.Субконто1 КАК Субконто1,
		|	ТаблицаДокумента.Субконто2 КАК Субконто2,
		|	ТаблицаДокумента.Субконто3 КАК Субконто3
		|ПОМЕСТИТЬ ВременнаяТаблицаУслуги
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаДокумента.Сумма КАК Сумма,
		|	ТаблицаДокумента.СчетУчета КАК СчетУчета,
		|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
		|	ТаблицаДокумента.СуммаНСП КАК СуммаНСП,
		|	ТаблицаДокумента.СуммаАкциза КАК СуммаАкциза,
		|	ТаблицаДокумента.Всего КАК Всего,
		|	ТаблицаДокумента.БазаНДС КАК БазаНДС,
		|	ВЫБОР
		|		КОГДА НЕ &ПризнакЗачетаНДСП
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Распределение)
		|		КОГДА ТаблицаДокумента.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Зачет)
		|		ИНАЧЕ ТаблицаДокумента.ЗачетНДС
		|	КОНЕЦ КАК ЗачетНДС,
		|	ТаблицаДокумента.ИмпортОсвобожденныйОтНДС КАК ИмпортОсвобожденныйОтНДС
		|ПОМЕСТИТЬ ВременнаяТаблицаОС
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.ОС КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КурсыВалютСрезПоследних.Курс КАК Курс,
		|	КурсыВалютСрезПоследних.Кратность КАК Кратность
		|ПОМЕСТИТЬ ВременнаяТаблицаКурсДоллара
		|ИЗ
		|	РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта.Код = ""840"") КАК КурсыВалютСрезПоследних";
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	УчетнаяПолитика = СтруктураДополнительныеСвойства.УчетнаяПолитика;
	Запрос.УстановитьПараметр("ПлательщикНДС", УчетнаяПолитика.ПлательщикНДС);
	Запрос.УстановитьПараметр("ПризнакЗачетаНДСП", УчетнаяПолитика.УказыватьПризнакЗачетаНДСПриПоступлении);
	Запрос.УстановитьПараметр("Период", СтруктураДополнительныеСвойства.ДляПроведения.Дата);
	
	// Параметры для отражения НДС.
	КонтрагентГНС = СтруктураДополнительныеСвойства.ДляПроведения.Организация.КонтрагентГНС;
	
	СписокВидовДоговора = Новый СписокЗначений;
	СписокВидовДоговора.Добавить(Перечисления.ВидыДоговоровКонтрагентов.Прочее);
	ДоговорКонтрагентаГНС = Справочники.ДоговорыКонтрагентов.ПолучитьДоговорПоУмолчаниюПоОрганизацииВидуДоговора(КонтрагентГНС, 
		СтруктураДополнительныеСвойства.ДляПроведения.Организация, СписокВидовДоговора);
		
	СчетаУчета = БухгалтерскийУчетСервер.ПолучитьСчетаРасчетовСКонтрагентом(СтруктураДополнительныеСвойства.ДляПроведения.Организация, 
		КонтрагентГНС, ДоговорКонтрагентаГНС);
		
	Запрос.УстановитьПараметр("КонтрагентГНС", КонтрагентГНС);
	Запрос.УстановитьПараметр("ДоговорКонтрагентаГНС", ДоговорКонтрагентаГНС);
	Запрос.УстановитьПараметр("СчетРасчетовГНС", СчетаУчета.СчетРасчетовПоставщика);
	
	Запрос.Выполнить();    		
		
	СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства);	
	СформироватьТаблицаПоступлениеТоваров(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаПараметрыУчетаОС(ДокументСсылка, СтруктураДополнительныеСвойства); 
	СформироватьТаблицаСостоянияОС(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСобытияОС(ДокументСсылка, СтруктураДополнительныеСвойства);	
	СформироватьТаблицаРеестрВвезенных(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСведенияОПоступлении(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗначенияСтавокНалогов(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаНДСНаИмпорт(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьСведенияПоПоказателямИмпорта(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаРеестрЗакупок(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗакупочныхАктов(ДокументСсылка, СтруктураДополнительныеСвойства);
	
	СформироватьТаблицаРеестрПриобретенныхМатериальныхРесурсов(ДокументСсылка, СтруктураДополнительныеСвойства);
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой ПечатьНакладной
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьНакладная(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
		|	ПоступлениеТоваровУслуг.Номер КАК Номер,
		|	ПоступлениеТоваровУслуг.Дата КАК Дата,
		|	ПоступлениеТоваровУслуг.Организация КАК Организация,
		|	ПоступлениеТоваровУслуг.Склад КАК Склад,
		|	ПоступлениеТоваровУслуг.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	ПоступлениеТоваровУслуг.Контрагент.НаименованиеПолное КАК КонтрагентНаименованиеПолное,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровУслуг.Склад) КАК СкладПредставление,
		|	ПоступлениеТоваровУслуг.Курс КАК Курс,
		|	ПоступлениеТоваровУслуг.Кратность КАК Кратность,
		|	ПоступлениеТоваровУслуг.ВалютаДокумента КАК ВалютаДокумента,
		|	ПоступлениеТоваровУслуг.ИспользоватьДопЕдиницы КАК ИспользоватьДопЕдиницы,
		|	ПоступлениеТоваровУслуг.Товары.(
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
		|		ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровУслуг.Товары.Номенклатура.КодТНВЭД) КАК КодПоКлассификатору,
		|		ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровУслуг.Товары.Номенклатура.ЕдиницаИзмерения) КАК ЕИ,
		|		Количество КАК Количество,
		|		КоличествоДопЕдиницы КАК КоличествоДопЕдиницы,
		|		ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Товары.Всего / ПоступлениеТоваровУслуг.Товары.Количество КАК ЧИСЛО(15, 2)) КАК Цена,
		|		СуммаНДС КАК СуммаНДС,
		|		СуммаНСП КАК СуммаНСП,
		|		Всего КАК Всего
		|	) КАК Товары,
		|	ПоступлениеТоваровУслуг.Услуги.(
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
		|		ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровУслуг.Услуги.Номенклатура.КодГКЭД) КАК КодПоКлассификатору,
		|		ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровУслуг.Услуги.Номенклатура.ЕдиницаИзмерения) КАК ЕИ,
		|		Количество КАК Количество,
		|		ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Услуги.Всего / ПоступлениеТоваровУслуг.Услуги.Количество КАК ЧИСЛО(15, 2)) КАК Цена,
		|		СуммаНДС КАК СуммаНДС,
		|		СуммаНСП КАК СуммаНСП,
		|		Всего КАК Всего
		|	) КАК Услуги,
		|	ПоступлениеТоваровУслуг.ОС.(
		|		НомерСтроки КАК НомерСтроки,
		|		ОсновноеСредство КАК Номенклатура,
		|		ОсновноеСредство.НаименованиеПолное КАК НоменклатураПредставление,
		|		ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровУслуг.ОС.ОсновноеСредство.КодТНВЭД) КАК КодПоКлассификатору,
		|		Всего КАК Цена,
		|		1 КАК Количество,
		|		СуммаНДС КАК СуммаНДС,
		|		СуммаНСП КАК СуммаНСП,
		|		Всего КАК Всего
		|	) КАК ОС
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
		|ГДЕ
		|	ПоступлениеТоваровУслуг.Ссылка В(&СписокДокументов)";		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПоступлениеТоваровУслуг_Накладная";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПоступлениеТоваровУслуг.ПФ_MXL_Накладная");
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных.
		ДанныеПечати = Новый Структура;
		
		ТекстЗаголовка = СформироватьЗаголовокДокумента(Шапка, НСтр("ru = 'Накладная на поступление'"));
		ДанныеПечати.Вставить("ТекстЗаголовка", ТекстЗаголовка);
		ДанныеПечати.Вставить("ОрганизацияНаименованиеПолное", Шапка.ОрганизацияНаименованиеПолное);
		ДанныеПечати.Вставить("СкладПредставление", Шапка.СкладПредставление);
		ДанныеПечати.Вставить("КонтрагентНаименованиеПолное", Шапка.КонтрагентНаименованиеПолное);

		ТаблицаТовары = Шапка.Товары.Выгрузить();
		ТаблицаУслуги = Шапка.Услуги.Выгрузить();
		ТаблицаОС = Шапка.ОС.Выгрузить();
		
		Если ТаблицаТовары.Количество() > 0
			Или ТаблицаОС.Количество() > 0 Тогда 
			ДанныеПечати.Вставить("НаименованиеКлассификатора", НСтр("ru = 'Код ТНВЭД'"));
		ИначеЕсли ТаблицаУслуги.Количество() > 0 Тогда  
			ДанныеПечати.Вставить("НаименованиеКлассификатора", НСтр("ru = 'Код ГКЭД'"));	
		КонецЕсли;	
		
		Всего = Окр((ТаблицаТовары.Итог("Всего") + ТаблицаУслуги.Итог("Всего") + ТаблицаОС.Итог("Всего")) * Шапка.Курс / Шапка.Кратность, 2);
		ВсегоНДС = ТаблицаТовары.Итог("СуммаНДС") + ТаблицаУслуги.Итог("СуммаНДС") + ТаблицаОС.Итог("СуммаНДС");
		ВсегоНСП = ТаблицаТовары.Итог("СуммаНСП") + ТаблицаУслуги.Итог("СуммаНСП") + ТаблицаОС.Итог("СуммаНСП");
		КоличествоНаименований = ТаблицаТовары.Количество() + ТаблицаУслуги.Количество() + ТаблицаОС.Количество();		
		
		ДанныеПечати.Вставить("Всего", Всего);
		ДанныеПечати.Вставить("ВсегоНДС", ВсегоНДС);
		ДанныеПечати.Вставить("ВсегоНСП", ВсегоНСП);
		ДанныеПечати.Вставить("ИтоговаяСтрока", 
			СтрШаблон(НСтр("ru = 'Всего наименований %1, на сумму %2'"), 
			Формат(КоличествоНаименований, "ЧН=0; ЧГ=0"), Формат(ДанныеПечати.Всего, "ЧЦ=15; ЧДЦ=2")));
		ДанныеПечати.Вставить("СуммаПрописью", 
								БухгалтерскийУчетСервер.СформироватьСуммуПрописью(
									ДанныеПечати.Всего, 
									ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета()));

		// Области
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Заголовок");
		
		Если Шапка.ИспользоватьДопЕдиницы Тогда
			МассивОбластейМакета.Добавить("ШапкаТаблицыДопЕдиницы");
			МассивОбластейМакета.Добавить("СтрокаДопЕдиницы");
		Иначе	
			МассивОбластейМакета.Добавить("ШапкаТаблицы");
			МассивОбластейМакета.Добавить("Строка");
		КонецЕсли;	
			
		МассивОбластейМакета.Добавить("Подвал");
		МассивОбластейМакета.Добавить("Итоги");
		МассивОбластейМакета.Добавить("ИтогиНДС");
		МассивОбластейМакета.Добавить("ИтогиНСП");
		МассивОбластейМакета.Добавить("СуммаПрописью");
		МассивОбластейМакета.Добавить("Подписи");
	
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			
			Если ИмяОбласти = "Строка" ИЛИ ИмяОбласти = "СтрокаДопЕдиницы" Тогда
				
				СтруктураВсего_Цена = Новый Структура();
				СтруктураВсего_Цена.Вставить("Всего", 0);
				СтруктураВсего_Цена.Вставить("Цена", 0);
				
				НомерСтроки = 1;
				Для Каждого СтрокаТаблицы Из ТаблицаТовары Цикл
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
					
					СтруктураВсего_Цена.Всего = Окр(СтрокаТаблицы.Всего * Шапка.Курс / Шапка.Кратность, 2);
					СтруктураВсего_Цена.Цена = Окр(СтрокаТаблицы.Цена * Шапка.Курс / Шапка.Кратность, 2);
					
					ОбластьМакета.Параметры.Заполнить(СтруктураВсего_Цена);
					
					ТабличныйДокумент.Вывести(ОбластьМакета);
					НомерСтроки = НомерСтроки + 1;
				КонецЦикла;
				Для Каждого СтрокаТаблицы Из ТаблицаУслуги Цикл
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
					
					СтруктураВсего_Цена.Всего = Окр(СтрокаТаблицы.Всего * Шапка.Курс / Шапка.Кратность, 2);
					СтруктураВсего_Цена.Цена = Окр(СтрокаТаблицы.Цена * Шапка.Курс / Шапка.Кратность, 2);
					
					ОбластьМакета.Параметры.Заполнить(СтруктураВсего_Цена);
					
					ТабличныйДокумент.Вывести(ОбластьМакета);
					НомерСтроки = НомерСтроки + 1;
				КонецЦикла;
				Для Каждого СтрокаТаблицы Из ТаблицаОС Цикл
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
					
					СтруктураВсего_Цена.Всего = Окр(СтрокаТаблицы.Всего * Шапка.Курс / Шапка.Кратность, 2);
					СтруктураВсего_Цена.Цена = Окр(СтрокаТаблицы.Цена * Шапка.Курс / Шапка.Кратность, 2);
					
					ОбластьМакета.Параметры.Заполнить(СтруктураВсего_Цена);
					
					ТабличныйДокумент.Вывести(ОбластьМакета);
					НомерСтроки = НомерСтроки + 1;
				КонецЦикла;
				
			Иначе
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЕсли;	
		КонецЦикла;
		
		БухгалтерскиеОтчеты.ВыводПодписиРуководителей(ТабличныйДокумент, Шапка);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

// Функция формирует табличный документ с печатной формой ПечатьНакладной
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьСопроводительнаяНакладная(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
		|	ПоступлениеТоваровУслуг.Номер КАК Номер,
		|	ПоступлениеТоваровУслуг.Дата КАК Дата,
		|	ПоступлениеТоваровУслуг.Организация КАК Организация,
		|	ВЫБОР
		|   	КОГДА ПоступлениеТоваровУслуг.Контрагент.НаименованиеПолное <> """"
		|			ТОГДА ПоступлениеТоваровУслуг.Контрагент.НаименованиеПолное
		|		ИНАЧЕ ПоступлениеТоваровУслуг.Контрагент.Наименование
		|	КОНЕЦ КАК КонтрагентНаименованиеПолное,
		|   ПоступлениеТоваровУслуг.Контрагент.СтранаРезидентства.Наименование КАК СтранаЕАЭС,
		|   ПоступлениеТоваровУслуг.Контрагент.СтранаРезидентства.Код КАК КодСтраныЕАЭС,
		|	ПоступлениеТоваровУслуг.СерияБланкаСФ КАК СерияБланкаСФ,
		|	ПоступлениеТоваровУслуг.НомерБланкаСФ КАК НомерБланкаСФ,
		|	ПоступлениеТоваровУслуг.НомерСНакладной КАК НомерСНакладной,
		|	ПоступлениеТоваровУслуг.ДатаСНакладной КАК ДатаСНакладной,
		|	ПоступлениеТоваровУслуг.МаркаАТС КАК МаркаАТС,
		|	ПоступлениеТоваровУслуг.ГосНомерАТС КАК ГосНомерАТС,
		|	ПоступлениеТоваровУслуг.СтранаАТС.Наименование КАК СтранаАТС,
		|	ПоступлениеТоваровУслуг.СтранаАТС.Код КАК КодСтраныАТС,
		|	ПоступлениеТоваровУслуг.VINНомерКузова КАК VIN,
		|	ПоступлениеТоваровУслуг.ВидАТС КАК Тип,
		|	ПоступлениеТоваровУслуг.ОбъемДвигателя КАК ОбъемДвигателя,
		|	ПоступлениеТоваровУслуг.ГодВыпуска КАК ГодВыпуска,
		|	ПоступлениеТоваровУслуг.МаркаВвозимогоАТС КАК Марка,
		|	ПоступлениеТоваровУслуг.ВалютаДокумента.Наименование КАК ВалютаНаименование,
		|	ПоступлениеТоваровУслуг.Товары.(
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
		|		ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровУслуг.Товары.Номенклатура.ЕдиницаИзмерения) КАК ЕИ,
		|		Количество КАК Количество,
		|		Номенклатура.КодТНВЭД.Код КАК КодТНВЭД,
		|		Цена КАК Цена,
		|		Всего КАК Всего
		|	) КАК Товары
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
		|ГДЕ
		|	ПоступлениеТоваровУслуг.Ссылка В(&СписокДокументов)";		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПоступлениеТоваровУслуг_СопроводительнаяНакладная";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПоступлениеТоваровУслуг.ПФ_MXL_СопроводительнаяНакладная");
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		КонтактныеДанные = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСведенияОбОрганизации(Шапка.Организация, Шапка.Дата);

		ОКПО              				= КонтактныеДанные.ОКПО;
		ИНН 							= КонтактныеДанные.ИНН;
		ГНСНаименование                 = КонтактныеДанные.ГНСНаименование;
		КодГНС 							= КонтактныеДанные.ГНСКод;
		ОрганизацияНаименованиеПолное   = КонтактныеДанные.НаименованиеПолное;
		Индекс  						= КонтактныеДанные.Индекс;
		Город  							= КонтактныеДанные.Город;
		Улица							= КонтактныеДанные.Улица; 
		Телефон							= КонтактныеДанные.Тел;
		ЭлектроннаяПочта 				= КонтактныеДанные.Email; 
		
		ДанныеПечати = Новый Структура();
		ДанныеПечати.Вставить("ОрганизацияНаименованиеПолное", 	ОрганизацияНаименованиеПолное);
		ДанныеПечати.Вставить("НаименованиеНалоговой", 			ГНСНаименование);
		ДанныеПечати.Вставить("АдресГород", 					Город);
		ДанныеПечати.Вставить("АдресУлица", 					Улица);
		ДанныеПечати.Вставить("Телефон", 						Телефон);
		ДанныеПечати.Вставить("Email", 							ЭлектроннаяПочта);
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);

		ОбластьМакета.Параметры.ИНН1 = Сред(ИНН, 1, 1);
		ОбластьМакета.Параметры.ИНН2 = Сред(ИНН, 2, 1);
		ОбластьМакета.Параметры.ИНН3 = Сред(ИНН, 3, 1);                           
		ОбластьМакета.Параметры.ИНН4 = Сред(ИНН, 4, 1);
		ОбластьМакета.Параметры.ИНН5 = Сред(ИНН, 5, 1);
		ОбластьМакета.Параметры.ИНН6 = Сред(ИНН, 6, 1);
		ОбластьМакета.Параметры.ИНН7 = Сред(ИНН, 7, 1);
		ОбластьМакета.Параметры.ИНН8 = Сред(ИНН, 8, 1);
		ОбластьМакета.Параметры.ИНН9 = Сред(ИНН, 9, 1);
		ОбластьМакета.Параметры.ИНН10 = Сред(ИНН, 10, 1);
		ОбластьМакета.Параметры.ИНН11 = Сред(ИНН, 11, 1);
		ОбластьМакета.Параметры.ИНН12 = Сред(ИНН, 12, 1);
		ОбластьМакета.Параметры.ИНН13 = Сред(ИНН, 13, 1);
		ОбластьМакета.Параметры.ИНН14 = Сред(ИНН, 14, 1);         
		
		ОбластьМакета.Параметры.ГНС1 = Сред(КодГНС, 1, 1);
		ОбластьМакета.Параметры.ГНС2 = Сред(КодГНС, 2, 1);
		ОбластьМакета.Параметры.ГНС3 = Сред(КодГНС, 3, 1);
		
		Если ЗначениеЗаполнено(ОКПО) Тогда 
			ОбластьМакета.Параметры.ОКПО1 = Сред(ОКПО,1,1);
			ОбластьМакета.Параметры.ОКПО2 = Сред(ОКПО,2,1);
			ОбластьМакета.Параметры.ОКПО3 = Сред(ОКПО,3,1);
			ОбластьМакета.Параметры.ОКПО4 = Сред(ОКПО,4,1);
			ОбластьМакета.Параметры.ОКПО5 = Сред(ОКПО,5,1);
			ОбластьМакета.Параметры.ОКПО6 = Сред(ОКПО,6,1);
			ОбластьМакета.Параметры.ОКПО7 = Сред(ОКПО,7,1);
			ОбластьМакета.Параметры.ОКПО8 = Сред(ОКПО,8,1);
		КонецЕсли;
			
		Если ЗначениеЗаполнено(Индекс) Тогда
			ОбластьМакета.Параметры.ИНДЕКС1 = Сред(Индекс, 1, 1);	
			ОбластьМакета.Параметры.ИНДЕКС2 = Сред(Индекс, 2, 1);	
			ОбластьМакета.Параметры.ИНДЕКС3 = Сред(Индекс, 3, 1);	
			ОбластьМакета.Параметры.ИНДЕКС4 = Сред(Индекс, 4, 1);	
			ОбластьМакета.Параметры.ИНДЕКС5 = Сред(Индекс, 5, 1);	
			ОбластьМакета.Параметры.ИНДЕКС6 = Сред(Индекс, 6, 1);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Шапка.СерияБланкаСФ) Тогда
			ОбластьМакета.Параметры.СерияНомерСФ = Шапка.СерияБланкаСФ + " №" + Шапка.НомерБланкаСФ;	
		КонецЕсли;
		
		ТаблицаТовары = Шапка.Товары.Выгрузить();
		
		КоличествоЛистов = ПолучитьКоличествоЛистов(Макет, ТаблицаТовары);
		
		ОбластьМакета.Параметры.КоличествоЛистов = КоличествоЛистов;
		
		Индекс = 1;
		КоличествоСтрок = ТаблицаТовары.Количество();
		
		Для Каждого СтрокаТаблицы Из ТаблицаТовары Цикл	
			
			Если Индекс = 7 Тогда
				Прервать;				
			КонецЕсли;	
			
			ОбластьМакета.Параметры["НомерСтроки" + Индекс] 				= СтрокаТаблицы.НомерСтроки;
			ОбластьМакета.Параметры["НоменклатураПредставление" + Индекс] 	= СтрокаТаблицы.НоменклатураПредставление;
			ОбластьМакета.Параметры["ТНВЭД" + Индекс + "1"] 				= Сред(СтрокаТаблицы.КодТНВЭД, 1, 1);
			ОбластьМакета.Параметры["ТНВЭД" + Индекс + "2"] 				= Сред(СтрокаТаблицы.КодТНВЭД, 2, 1);
			ОбластьМакета.Параметры["ТНВЭД" + Индекс + "3"] 				= Сред(СтрокаТаблицы.КодТНВЭД, 3, 1);
			ОбластьМакета.Параметры["ТНВЭД" + Индекс + "4"] 				= Сред(СтрокаТаблицы.КодТНВЭД, 4, 1);
			ОбластьМакета.Параметры["ТНВЭД" + Индекс + "5"] 				= Сред(СтрокаТаблицы.КодТНВЭД, 5, 1);
			ОбластьМакета.Параметры["ТНВЭД" + Индекс + "6"] 				= Сред(СтрокаТаблицы.КодТНВЭД, 6, 1);
			ОбластьМакета.Параметры["ТНВЭД" + Индекс + "7"] 				= Сред(СтрокаТаблицы.КодТНВЭД, 7, 1);
			ОбластьМакета.Параметры["ТНВЭД" + Индекс + "8"] 				= Сред(СтрокаТаблицы.КодТНВЭД, 8, 1);
			ОбластьМакета.Параметры["ТНВЭД" + Индекс + "9"] 				= Сред(СтрокаТаблицы.КодТНВЭД, 9, 1);
			ОбластьМакета.Параметры["ТНВЭД" + Индекс + "10"] 				= Сред(СтрокаТаблицы.КодТНВЭД, 10, 1);
			ОбластьМакета.Параметры["ЕИ" + Индекс] 							= СтрокаТаблицы.ЕИ;
			ОбластьМакета.Параметры["Количество" + Индекс] 					= СтрокаТаблицы.Количество;
			ОбластьМакета.Параметры["Валюта" + Индекс] 						= Шапка.ВалютаНаименование;
			ОбластьМакета.Параметры["Цена" + Индекс] 						= СтрокаТаблицы.Цена;
			ОбластьМакета.Параметры["Всего" + Индекс] 						= СтрокаТаблицы.Всего;
			
			Индекс = Индекс + 1;
		КонецЦикла;	
		
		ОбластьМакета.Параметры.ВсегоОбщая = ТаблицаТовары.Итог("Всего");	
		
		ОбластьМакета.Параметры.Заполнить(Шапка);        
		
		ОбластьМакета.Параметры.КодСтраныЕАЭС1 = Сред(Шапка.КодСтраныЕАЭС, 1, 1);
		ОбластьМакета.Параметры.КодСтраныЕАЭС2 = Сред(Шапка.КодСтраныЕАЭС, 2, 1);
		ОбластьМакета.Параметры.КодСтраныЕАЭС3 = Сред(Шапка.КодСтраныЕАЭС, 3, 1);
		
		ОбластьМакета.Параметры.КодСтраныАТС1 = Сред(Шапка.КодСтраныАТС, 1, 1);
		ОбластьМакета.Параметры.КодСтраныАТС2 = Сред(Шапка.КодСтраныАТС, 2, 1);
		ОбластьМакета.Параметры.КодСтраныАТС3 = Сред(Шапка.КодСтраныАТС, 3, 1);
		
		ДатаСНакладной = Формат(Шапка.ДатаСНакладной, "ДЛФ=D");		
		ОбластьМакета.Параметры.ДатаСНакладной1 = Сред(ДатаСНакладной, 1, 1);
		ОбластьМакета.Параметры.ДатаСНакладной2 = Сред(ДатаСНакладной, 2, 1);
		ОбластьМакета.Параметры.ДатаСНакладной3 = Сред(ДатаСНакладной, 4, 1);                           
		ОбластьМакета.Параметры.ДатаСНакладной4 = Сред(ДатаСНакладной, 5, 1);
		ОбластьМакета.Параметры.ДатаСНакладной5 = Сред(ДатаСНакладной, 7, 1);
		ОбластьМакета.Параметры.ДатаСНакладной6 = Сред(ДатаСНакладной, 8, 1);
		ОбластьМакета.Параметры.ДатаСНакладной7 = Сред(ДатаСНакладной, 9, 1);
		ОбластьМакета.Параметры.ДатаСНакладной8 = Сред(ДатаСНакладной, 10, 1);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Если КоличествоСтрок > 6 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);

			ОбластьМакета.Параметры.ИНН1 = Сред(ИНН, 1, 1);
			ОбластьМакета.Параметры.ИНН2 = Сред(ИНН, 2, 1);
			ОбластьМакета.Параметры.ИНН3 = Сред(ИНН, 3, 1);                           
			ОбластьМакета.Параметры.ИНН4 = Сред(ИНН, 4, 1);
			ОбластьМакета.Параметры.ИНН5 = Сред(ИНН, 5, 1);
			ОбластьМакета.Параметры.ИНН6 = Сред(ИНН, 6, 1);
			ОбластьМакета.Параметры.ИНН7 = Сред(ИНН, 7, 1);
			ОбластьМакета.Параметры.ИНН8 = Сред(ИНН, 8, 1);
			ОбластьМакета.Параметры.ИНН9 = Сред(ИНН, 9, 1);
			ОбластьМакета.Параметры.ИНН10 = Сред(ИНН, 10, 1);
			ОбластьМакета.Параметры.ИНН11 = Сред(ИНН, 11, 1);
			ОбластьМакета.Параметры.ИНН12 = Сред(ИНН, 12, 1);
			ОбластьМакета.Параметры.ИНН13 = Сред(ИНН, 13, 1);
			ОбластьМакета.Параметры.ИНН14 = Сред(ИНН, 14, 1);         
			
			ОбластьМакета.Параметры.ГНС1 = Сред(КодГНС, 1, 1);
			ОбластьМакета.Параметры.ГНС2 = Сред(КодГНС, 2, 1);
			ОбластьМакета.Параметры.ГНС3 = Сред(КодГНС, 3, 1);
			
			Если ЗначениеЗаполнено(ОКПО) Тогда 
				ОбластьМакета.Параметры.ОКПО1 = Сред(ОКПО,1,1);
				ОбластьМакета.Параметры.ОКПО2 = Сред(ОКПО,2,1);
				ОбластьМакета.Параметры.ОКПО3 = Сред(ОКПО,3,1);
				ОбластьМакета.Параметры.ОКПО4 = Сред(ОКПО,4,1);
				ОбластьМакета.Параметры.ОКПО5 = Сред(ОКПО,5,1);
				ОбластьМакета.Параметры.ОКПО6 = Сред(ОКПО,6,1);
				ОбластьМакета.Параметры.ОКПО7 = Сред(ОКПО,7,1);
				ОбластьМакета.Параметры.ОКПО8 = Сред(ОКПО,8,1);
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
			ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
			ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
			
			ОбластьШапкаТаблицы.Параметры.Лист1 = "0";
			ОбластьШапкаТаблицы.Параметры.Лист2 = "0";
			ОбластьШапкаТаблицы.Параметры.Лист3 = "1";
			
			КоличествоСтрок = ТаблицаТовары.Количество();
			
		 	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
			
			НомерЛиста = 2;
			
			НомерСтроки = 0;
			
			Для Каждого СтрокаТаблицы Из ТаблицаТовары Цикл	
				НомерСтроки = НомерСтроки + 1;			
				Если НомерСтроки < 7 Тогда
					Продолжить;				
				КонецЕсли;
				
				ОбластьСтрокаТаблицы.Параметры.НомерСтроки 					= СтрокаТаблицы.НомерСтроки;
				ОбластьСтрокаТаблицы.Параметры.НоменклатураПредставление 	= СтрокаТаблицы.НоменклатураПредставление;
				ОбластьСтрокаТаблицы.Параметры.ТНВЭД1 						= Сред(СтрокаТаблицы.КодТНВЭД, 1, 1);
				ОбластьСтрокаТаблицы.Параметры.ТНВЭД2 						= Сред(СтрокаТаблицы.КодТНВЭД, 2, 1);
				ОбластьСтрокаТаблицы.Параметры.ТНВЭД3 						= Сред(СтрокаТаблицы.КодТНВЭД, 3, 1);
				ОбластьСтрокаТаблицы.Параметры.ТНВЭД4 						= Сред(СтрокаТаблицы.КодТНВЭД, 4, 1);
				ОбластьСтрокаТаблицы.Параметры.ТНВЭД5 						= Сред(СтрокаТаблицы.КодТНВЭД, 5, 1);
				ОбластьСтрокаТаблицы.Параметры.ТНВЭД6 						= Сред(СтрокаТаблицы.КодТНВЭД, 6, 1);
				ОбластьСтрокаТаблицы.Параметры.ТНВЭД7 						= Сред(СтрокаТаблицы.КодТНВЭД, 7, 1);
				ОбластьСтрокаТаблицы.Параметры.ТНВЭД8 						= Сред(СтрокаТаблицы.КодТНВЭД, 8, 1);
				ОбластьСтрокаТаблицы.Параметры.ТНВЭД9 						= Сред(СтрокаТаблицы.КодТНВЭД, 9, 1);
				ОбластьСтрокаТаблицы.Параметры.ТНВЭД10 						= Сред(СтрокаТаблицы.КодТНВЭД, 10, 1);
				ОбластьСтрокаТаблицы.Параметры.ЕИ 							= СтрокаТаблицы.ЕИ;
				ОбластьСтрокаТаблицы.Параметры.Количество 					= СтрокаТаблицы.Количество;
				ОбластьСтрокаТаблицы.Параметры.Валюта 						= Шапка.ВалютаНаименование;
				ОбластьСтрокаТаблицы.Параметры.Цена 						= СтрокаТаблицы.Цена;
				ОбластьСтрокаТаблицы.Параметры.Всего 						= СтрокаТаблицы.Всего;
				
				МассивОбластей = Новый Массив();
				МассивОбластей.Добавить(ОбластьСтрокаТаблицы);
				МассивОбластей.Добавить(ОбластьПодвалТаблицы);

				Если ТабличныйДокумент.ПроверитьВывод(МассивОбластей) Тогда
					ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);	
				Иначе	
					ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);
					
					Если НомерЛиста > 99 Тогда
						ОбластьШапкаТаблицы.Параметры.Лист1 = Сред(Строка(НомерЛиста), 1, 1);	
					Иначе	
						ОбластьШапкаТаблицы.Параметры.Лист1 = "0";
					КонецЕсли;
					
					Если НомерЛиста > 99 Тогда
						ОбластьШапкаТаблицы.Параметры.Лист1 = Сред(Строка(НомерЛиста), 2, 1);
					ИначеЕсли НомерЛиста > 9 Тогда
						ОбластьШапкаТаблицы.Параметры.Лист1 = Сред(Строка(НомерЛиста), 1, 1);
					Иначе	
						ОбластьШапкаТаблицы.Параметры.Лист1 = "0";
					КонецЕсли;
					
					Если НомерЛиста > 99 Тогда
						ОбластьШапкаТаблицы.Параметры.Лист1 = Сред(Строка(НомерЛиста), 3, 1);
					ИначеЕсли НомерЛиста > 9 Тогда
						ОбластьШапкаТаблицы.Параметры.Лист1 = Сред(Строка(НомерЛиста), 2, 1);
					Иначе	
						ОбластьШапкаТаблицы.Параметры.Лист1 = НомерЛиста;
					КонецЕсли;
					
					ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
					ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
					
					НомерЛиста = НомерЛиста + 1;
				КонецЕсли;
						
			КонецЦикла;
			
			ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);	
			
		КонецЕсли;
				
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

// Функция формирует табличный документ с печатной формой по Закупочному акту,
//
// Возвращаемое значение:
//  Табличный документ - печатная форма по Закупочному акту
//
Функция ПечатьЗакупочныйАкт(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)	
	Запрос = Новый Запрос;		
	Запрос.Текст =	
		"ВЫБРАТЬ
		|	ПоступлениеТоваровУслуг.Дата КАК Дата,
		|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
		|	ПоступлениеТоваровУслуг.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА ПоступлениеТоваровУслуг.Организация.НаименованиеПолное = """"
		|			ТОГДА ПоступлениеТоваровУслуг.Организация.Наименование
		|		ИНАЧЕ ПоступлениеТоваровУслуг.Организация.НаименованиеПолное
		|	КОНЕЦ КАК ОрганизацияНаименованиеПолное,
		|	ПоступлениеТоваровУслуг.Контрагент КАК Контрагент,
		|	ПоступлениеТоваровУслуг.Контрагент.ИНН КАК ИННКонтрагента,
		|	ВЫБОР
		|		КОГДА ПоступлениеТоваровУслуг.Контрагент.НаименованиеПолное = """"
		|			ТОГДА ПоступлениеТоваровУслуг.Контрагент.Наименование
		|		ИНАЧЕ ПоступлениеТоваровУслуг.Контрагент.НаименованиеПолное
		|	КОНЕЦ КАК КонтрагентПредставление,
		|	ПоступлениеТоваровУслуг.Патент.Наименование КАК НомерПатента,
		|	ПоступлениеТоваровУслуг.Патент.Паспорт КАК Паспорт,
		|	ПоступлениеТоваровУслуг.Товары.(
		|		Номенклатура.Наименование КАК Номенклатура,
		|		ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровУслуг.Товары.Номенклатура.ЕдиницаИзмерения) КАК ЕИ,
		|		Количество КАК Количество,
		|		Номенклатура.КодТНВЭД.Код КАК КодТНВЭД,
		|		Цена КАК Цена,
		|		Сумма КАК Сумма,
		|		НомерСтроки КАК НомерСтроки
		|	) КАК Товары
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
		|ГДЕ
		|	ПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
		|	И ПоступлениеТоваровУслуг.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_ПоступлениеТоваровУслуг_ЗакупочныйАкт";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьЗакупочныйАкт.ПФ_MXL_ЗакупочныйАкт");

	ОбластьШапка	= Макет.ПолучитьОбласть("Шапка");
	ОбластьДетали	= Макет.ПолучитьОбласть("Детали");
	ОбластьДеталиПустаяСтрока	= Макет.ПолучитьОбласть("ДеталиПустаяСтрока");
	ОбластьВсего	= Макет.ПолучитьОбласть("Всего");
	ОбластьПодвал	= Макет.ПолучитьОбласть("Подвал");
	
	Пока Шапка.Следующий() Цикл
				
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Шапка
		ДанныеПечати = Новый Структура();
		ДанныеПечати.Вставить("ОрганизацияНаименованиеПолное", Шапка.ОрганизацияНаименованиеПолное);
		
		СведенияОбОрганизации = БухгалтерскийУчетСервер.ПолучитьСведенияОбОрганизации(Шапка.Организация, Шапка.Дата);
		АдрОбластьГород = ?(СведенияОбОрганизации.Регион = "","",СведенияОбОрганизации.Регион + ",")
		+ ?(СведенияОбОрганизации.Район  = "","", " " + СведенияОбОрганизации.Район + ",") 
		+ ?(СведенияОбОрганизации.Город  = "","", " " + СведенияОбОрганизации.Город + ",") 
		+ ?(СведенияОбОрганизации.НаселенныйПункт  = "","", " " + СведенияОбОрганизации.НаселенныйПункт);
		ДанныеПечати.Вставить("АдресГород", АдрОбластьГород);
		ДанныеПечати.Вставить("АдресУлица", СведенияОбОрганизации.АдрЮР);

		ИНН 	= СведенияОбОрганизации.ИНН;
		КодГНС 	= СведенияОбОрганизации.ГНСКод;
		
		ДанныеПечати.Вставить("ИНН1", Сред(ИНН, 1, 1));
		ДанныеПечати.Вставить("ИНН2", Сред(ИНН, 2, 1));
		ДанныеПечати.Вставить("ИНН3", Сред(ИНН, 3, 1));                           
		ДанныеПечати.Вставить("ИНН4", Сред(ИНН, 4, 1));
		ДанныеПечати.Вставить("ИНН5", Сред(ИНН, 5, 1));
		ДанныеПечати.Вставить("ИНН6", Сред(ИНН, 6, 1));
		ДанныеПечати.Вставить("ИНН7", Сред(ИНН, 7, 1));
		ДанныеПечати.Вставить("ИНН8", Сред(ИНН, 8, 1));
		ДанныеПечати.Вставить("ИНН9", Сред(ИНН, 9, 1));
		ДанныеПечати.Вставить("ИНН10", Сред(ИНН, 10, 1));
		ДанныеПечати.Вставить("ИНН11", Сред(ИНН, 11, 1));
		ДанныеПечати.Вставить("ИНН12", Сред(ИНН, 12, 1));
		ДанныеПечати.Вставить("ИНН13", Сред(ИНН, 13, 1));
		ДанныеПечати.Вставить("ИНН14", Сред(ИНН, 14, 1));         
		
		ДанныеПечати.Вставить("ГНС1", Сред(КодГНС, 1, 1));
		ДанныеПечати.Вставить("ГНС2", Сред(КодГНС, 2, 1));
		ДанныеПечати.Вставить("ГНС3", Сред(КодГНС, 3, 1));
		ДанныеПечати.Вставить("ГНСОрганизации", СведенияОбОрганизации.ГНС);

		Период = Шапка.Дата;
		ДанныеПечати.Вставить("Дата1", Сред(Период, 1, 1));	
		ДанныеПечати.Вставить("Дата2", Сред(Период, 2, 1));	
		ДанныеПечати.Вставить("Дата3", Сред(Период, 4, 1));	
		ДанныеПечати.Вставить("Дата4", Сред(Период, 5, 1));	
		ДанныеПечати.Вставить("Дата5", Сред(Период, 7, 1));	
		ДанныеПечати.Вставить("Дата6", Сред(Период, 8, 1));	
		ДанныеПечати.Вставить("Дата7", Сред(Период, 9, 1));	
		ДанныеПечати.Вставить("Дата8", Сред(Период, 10, 1));	
		
		// Продавец
		ИННКонтрагента = Шапка.ИННКонтрагента;
		ДанныеПечати.Вставить("иннК1", Сред(ИННКонтрагента, 1, 1));
		ДанныеПечати.Вставить("иннК2", Сред(ИННКонтрагента, 2, 1));
		ДанныеПечати.Вставить("иннК3", Сред(ИННКонтрагента, 3, 1));                           
		ДанныеПечати.Вставить("иннК4", Сред(ИННКонтрагента, 4, 1));
		ДанныеПечати.Вставить("иннК5", Сред(ИННКонтрагента, 5, 1));
		ДанныеПечати.Вставить("иннК6", Сред(ИННКонтрагента, 6, 1));
		ДанныеПечати.Вставить("иннК7", Сред(ИННКонтрагента, 7, 1));
		ДанныеПечати.Вставить("иннК8", Сред(ИННКонтрагента, 8, 1));
		ДанныеПечати.Вставить("иннК9", Сред(ИННКонтрагента, 9, 1));
		ДанныеПечати.Вставить("иннК10", Сред(ИННКонтрагента, 10, 1));
		ДанныеПечати.Вставить("иннК11", Сред(ИННКонтрагента, 11, 1));
		ДанныеПечати.Вставить("иннК12", Сред(ИННКонтрагента, 12, 1));
		ДанныеПечати.Вставить("иннК13", Сред(ИННКонтрагента, 13, 1));
		ДанныеПечати.Вставить("иннК14", Сред(ИННКонтрагента, 14, 1)); 	
		
		// Сведения о контрагенте.
		АдресКонтрагента = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Шапка.Контрагент, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента); 	
		ДанныеПечати.Вставить("АдресПродавца", АдресКонтрагента);
		ДанныеПечати.Вставить("КонтрагентПредставление", Шапка.КонтрагентПредставление);
		ДанныеПечати.Вставить("Паспорт", Шапка.Паспорт);
		ДанныеПечати.Вставить("НомерПатента", Шапка.НомерПатента);
		
		ОбластьШапка.Параметры.Заполнить(ДанныеПечати);		
		ТабличныйДокумент.Вывести(ОбластьШапка);

		ИтогоКоличество 	= 0;
		ИтогоСумма 			= 0;
		КоличествоСтрокДетали = 0;
		
		ВыборкаТоваров = Шапка.Товары.Выбрать();
		Пока ВыборкаТоваров.Следующий() Цикл
			ДанныеПечатиСтроки = НоваяСтруктураСтрокиКодТНВЭД();
			
			Если ЗначениеЗаполнено(ВыборкаТоваров.КодТНВЭД) Тогда 
				КодТНВЭД = ВыборкаТоваров.КодТНВЭД;				
				ДанныеПечатиСтроки.ВЭД1 = Сред(КодТНВЭД, 1, 1);
				ДанныеПечатиСтроки.ВЭД2 = Сред(КодТНВЭД, 2, 1);
				ДанныеПечатиСтроки.ВЭД3 = Сред(КодТНВЭД, 3, 1);                           
				ДанныеПечатиСтроки.ВЭД4 = Сред(КодТНВЭД, 4, 1);
				ДанныеПечатиСтроки.ВЭД5 = Сред(КодТНВЭД, 5, 1);
				ДанныеПечатиСтроки.ВЭД6 = Сред(КодТНВЭД, 6, 1);
				ДанныеПечатиСтроки.ВЭД7 = Сред(КодТНВЭД, 7, 1);
				ДанныеПечатиСтроки.ВЭД8 = Сред(КодТНВЭД, 8, 1);
				ДанныеПечатиСтроки.ВЭД9 = Сред(КодТНВЭД, 9, 1);
				ДанныеПечатиСтроки.ВЭД10 = Сред(КодТНВЭД, 10, 1);
				ДанныеПечатиСтроки.ВЭД11 = Сред(КодТНВЭД, 11, 1);
				ДанныеПечатиСтроки.ВЭД12 = Сред(КодТНВЭД, 12, 1);
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ОбластьДетали.Параметры,ВыборкаТоваров);	
			ЗаполнитьЗначенияСвойств(ОбластьДетали.Параметры,ДанныеПечатиСтроки);	
			ТабличныйДокумент.Вывести(ОбластьДетали);
			КоличествоСтрокДетали = КоличествоСтрокДетали + 1;

			ИтогоКоличество = ИтогоКоличество + ВыборкаТоваров.Количество;
			ИтогоСумма 		= ИтогоСумма + ВыборкаТоваров.Сумма;
		КонецЦикла;
		
		Если КоличествоСтрокДетали < 13 Тогда 
			Для Счетчик = КоличествоСтрокДетали + 1 По 13 Цикл
				ТабличныйДокумент.Вывести(ОбластьДеталиПустаяСтрока);
			КонецЦикла;
		КонецЕсли;
		
		ДанныеПечати.Вставить("Количество", ИтогоКоличество);	
		ДанныеПечати.Вставить("Сумма", ИтогоСумма);
		
		ОбластьВсего.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьВсего);
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьЗакупочныйАкт()

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.     
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;      
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		 // Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"Накладная",  НСтр("ru = 'Накладная'"), ПечатьНакладная(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,
			"Документ.ПоступлениеТоваровУслуг.ПФ_MXL_Накладная");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СопроводительнаяНакладная") Тогда
		 // Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"СопроводительнаяНакладная",  НСтр("ru = 'Сопроводительная накладная'"), ПечатьСопроводительнаяНакладная(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,
			"Документ.ПоступлениеТоваровУслуг.ПФ_MXL_СопроводительнаяНакладная");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗакупочныйАкт") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ЗакупочныйАкт", НСтр("ru = 'Закупочный акт'"), ПечатьЗакупочныйАкт(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;

КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
		
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru = 'Накладная'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СопроводительнаяНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Сопроводительная накладная'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 2;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗакупочныйАкт";
	КомандаПечати.Представление = НСтр("ru = 'Закупочный акт'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 3;
	ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ВидОперации", Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт);

	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "РеестрПоступлениеТоваровУслуг";
	КомандаПечати.Представление  = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Реестр документов ""Поступление товаров и услуг""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает заголовок документа для печатной формы.
//
// Параметры:
//  Шапка - любая структура с полями:
//           Номер         - Строка или Число - номер документа;
//           Дата          - Дата - дата документа;
//           Представление - Строка - (необязательный) платформенное представление ссылки на документ.
//                                    Если параметр НазваниеДокумента не задан, то название документа будет вычисляться
//                                    из этого параметра.
//  НазваниеДокумента - Строка - название документа (например, "Счет на оплату").
//
// Возвращаемое значение:
//  Строка - заголовок документа.
//
Функция СформироватьЗаголовокДокумента(Шапка, Знач НазваниеДокумента = "")
	
	ДанныеДокумента = Новый Структура("Номер,Дата,Представление");
	ЗаполнитьЗначенияСвойств(ДанныеДокумента, Шапка);
	
	// Если название документа не передано, получим название по представлению документа.
	Если ПустаяСтрока(НазваниеДокумента) И ЗначениеЗаполнено(ДанныеДокумента.Представление) Тогда
		ПоложениеНомера = СтрНайти(ДанныеДокумента.Представление, ДанныеДокумента.Номер);
		Если ПоложениеНомера > 0 Тогда
			НазваниеДокумента = СокрЛП(Лев(ДанныеДокумента.Представление, ПоложениеНомера - 1));
		КонецЕсли;
	КонецЕсли;

	НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокумента.Номер);
	Возврат СтрШаблон(НСтр("ru = '%1 № %2 от %3'"),
		НазваниеДокумента, НомерНаПечать, Формат(ДанныеДокумента.Дата, "ДЛФ=DD"));
	
КонецФункции

// Заполнение таблицы товаров, в новом табличном документе, чтобы выяснить количество листов
//
Функция ПолучитьКоличествоЛистов(Макет, ТаблицаТовары)

	ТабличныйДокумент = Новый ТабличныйДокумент;	

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка  	 = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрока 	 = Макет.ПолучитьОбласть("СтрокаТаблицы");
	ОбластьПодвал 	 = Макет.ПолучитьОбласть("ПодвалТаблицы");
	
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	ТабличныйДокумент.Вывести(ОбластьШапка);	
	НомерЛиста = 1;
	
	Для Каждого СтрокаТаблицы Из ТаблицаТовары Цикл
		
		ОбластьСтрока.Параметры.Заполнить(СтрокаТаблицы);	
		
		МассивОбластей = Новый Массив();
		МассивОбластей.Добавить(ОбластьСтрока);
		МассивОбластей.Добавить(ОбластьПодвал);

		Если ТабличныйДокумент.ПроверитьВывод(МассивОбластей) Тогда
			ТабличныйДокумент.Вывести(ОбластьСтрока);	
		Иначе	
			ТабличныйДокумент.Вывести(ОбластьПодвал);
			ТабличныйДокумент.Вывести(ОбластьШапка);
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			НомерЛиста = НомерЛиста + 1;
		КонецЕсли;	
	КонецЦикла;
	
	Возврат НомерЛиста;
КонецФункции

Функция НоваяСтруктураСтрокиКодТНВЭД()
	ДанныеПечатиСтроки =  Новый Структура();
	ДанныеПечатиСтроки.Вставить("вэд1", "");	
	ДанныеПечатиСтроки.Вставить("вэд2", "");	
	ДанныеПечатиСтроки.Вставить("вэд3", "");	
	ДанныеПечатиСтроки.Вставить("вэд4", "");
	ДанныеПечатиСтроки.Вставить("вэд5", "");	
	ДанныеПечатиСтроки.Вставить("вэд6", "");	
	ДанныеПечатиСтроки.Вставить("вэд7", "");	
	ДанныеПечатиСтроки.Вставить("вэд8", "");
	ДанныеПечатиСтроки.Вставить("вэд9", "");	
	ДанныеПечатиСтроки.Вставить("вэд10", "");	
	ДанныеПечатиСтроки.Вставить("вэд11", "");	
	ДанныеПечатиСтроки.Вставить("вэд12", "");
	
	Возврат ДанныеПечатиСтроки;
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы <> "ФормаДокумента"
		И ВидФормы <> "ФормаОбъекта" Тогда
		Возврат;
	КонецЕсли;

	ВидОперации = Неопределено; 

	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Ключ, "ВидОперации");
	КонецЕсли;

	// Если документ копируется, то вид формы получаем из копируемого документа.
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначениеКопирования")
			И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Параметры.ЗначениеКопирования, "ВидОперации");
		КонецЕсли;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначенияЗаполнения") 
			И ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура") Тогда
			Если Параметры.ЗначенияЗаполнения.Свойство("ВидОперации") Тогда
				ВидОперации = Параметры.ЗначенияЗаполнения.ВидОперации;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("Основание")
			И ЗначениеЗаполнено(Параметры.Основание) Тогда
			ВидОперации = ОпределитьВидОперацииПоДокументуОснованию(Параметры.Основание);
		КонецЕсли;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ФормыПоступлениеТоваровУслуг = ПолучитьСоответствиеВидовОперацийФормам();
	ВыбраннаяФорма = ФормыПоступлениеТоваровУслуг[ВидОперации];
	Если ВыбраннаяФорма = Неопределено Тогда
		ВыбраннаяФорма = "ФормаДокумента";
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ОпределитьВидОперацииПоДокументуОснованию(Основание) Экспорт

	Результат = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Покупка;

	Если ЗначениеЗаполнено(Основание)
		И ТипЗнч(Основание) = Тип("ДокументСсылка.Доверенность") Тогда
		
		Результат = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.СчетНаОплатуПоставщика") Тогда
		
		ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание, "ДоговорКонтрагента.ВидДоговора");
			
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Основание);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(Таблицы.ЕстьТовары) КАК ЕстьТовары,
		|	СУММА(Таблицы.ЕстьУслуги) КАК ЕстьУслуги,
		|	СУММА(Таблицы.ЕстьВозвратнаяТара) КАК ЕстьВозвратнаяТара
		|ИЗ
		|	(ВЫБРАТЬ ПЕРВЫЕ 1
		|		1 КАК ЕстьТовары,
		|		0 КАК ЕстьУслуги,
		|		0 КАК ЕстьВозвратнаяТара
		|	ИЗ
		|		Документ.СчетНаОплатуПоставщика.Товары КАК ДокОснование
		|	ГДЕ
		|		ДокОснование.Ссылка = &Ссылка
		|		И НЕ ЕСТЬNULL(ДокОснование.Номенклатура.Услуга, ИСТИНА)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ ПЕРВЫЕ 1
		|		0,
		|		1,
		|		0
		|	ИЗ
		|		Документ.СчетНаОплатуПоставщика.Товары КАК ДокОснование
		|	ГДЕ
		|		ДокОснование.Ссылка = &Ссылка
		|		И ЕСТЬNULL(ДокОснование.Номенклатура.Услуга, ИСТИНА)) КАК Таблицы";
		//|	ОБЪЕДИНИТЬ ВСЕ
		//|	
		//|	ВЫБРАТЬ ПЕРВЫЕ 1
		//|		0,
		//|		0,
		//|		1
		//|	ИЗ
		//|		Документ.СчетНаОплатуПоставщика.ВозвратнаяТара КАК ДокОснование
		//|	ГДЕ
		//|		ДокОснование.Ссылка = &Ссылка) КАК Таблицы";
		Выборка = Запрос.Выполнить().Выбрать();
		ЕстьТовары 	= Ложь;
		ЕстьУслуги	= Ложь;
		ЕстьВозвратнаяТара	= Ложь;
		Если Выборка.Следующий() Тогда
			ЕстьТовары 	= ЗначениеЗаполнено(Выборка.ЕстьТовары) И Выборка.ЕстьТовары > 0;
			ЕстьУслуги	= ЗначениеЗаполнено(Выборка.ЕстьУслуги) И Выборка.ЕстьУслуги > 0;
			ЕстьВозвратнаяТара	= ЗначениеЗаполнено(Выборка.ЕстьВозвратнаяТара) И Выборка.ЕстьВозвратнаяТара > 0;
		КонецЕсли;
		
		Если ЕстьВозвратнаяТара Тогда
			// Использование возвратной тары выполняется через основную форму
		ИначеЕсли ЕстьТовары И ЕстьУслуги Тогда
			// Одновременное поступление товаров и услуг выполняется через основную форму
		ИначеЕсли ЕстьТовары Тогда
			Результат = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары;
		ИначеЕсли ЕстьУслуги Тогда
			Результат = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Услуги;
		КонецЕсли;
		
	КонецЕсли;

	Возврат Результат;

КонецФункции

Функция ПолучитьСоответствиеВидовОперацийФормам() Экспорт

	ФормыПоступлениеТоваровУслуг = Новый Соответствие;
	ФормыПоступлениеТоваровУслуг.Вставить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары, "ФормаДокументаТовары");
	ФормыПоступлениеТоваровУслуг.Вставить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Услуги, "ФормаДокументаУслуги");
	ФормыПоступлениеТоваровУслуг.Вставить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОсновныеСредства, "ФормаДокументаОсновныеСредства");
	ФормыПоступлениеТоваровУслуг.Вставить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Покупка, "ФормаДокументаОбщая");
	ФормыПоступлениеТоваровУслуг.Вставить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.РасходыБудущихПериодов, "ФормаДокументаРасходыБудущихПериодов");
	ФормыПоступлениеТоваровУслуг.Вставить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ЗакупочныйАкт, "ФормаДокументаЗакупочныйАкт");
	
	Возврат ФормыПоступлениеТоваровУслуг;

КонецФункции 

#КонецОбласти

#КонецЕсли
