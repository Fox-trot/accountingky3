#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Заполнение заголовка печатных форм
//
Процедура ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьМакета, ИмяМакета, ПерваяОбласть = Ложь)

	Организация 	= СтруктураПараметров.Организация;
	НачалоПериода 	= СтруктураПараметров.НачалоПериода;
	КонецПериода 	= СтруктураПараметров.КонецПериода;		
	
	КонтактныеДанные = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСведенияОбОрганизации(Организация, КонецПериода);

	ОКПО              				= КонтактныеДанные.ОКПО;
	ИНН 							= КонтактныеДанные.ИНН;
	ГНСНаименование                 = КонтактныеДанные.ГНСНаименование;
	КодГНС 							= КонтактныеДанные.ГНСКод;
	ОрганизацияНаменованиеПолное    = КонтактныеДанные.НаименованиеПолное;
	Индекс  						= КонтактныеДанные.Индекс;
	Город  							= КонтактныеДанные.Город;
	Улица							= КонтактныеДанные.Улица; 
	Телефон							= КонтактныеДанные.Тел;
	ЭлектроннаяПочта 				= КонтактныеДанные.Email; 
	
	ДанныеПечати = Новый Структура();
	ДанныеПечати.Вставить("ОРГАНИЗАЦИЯ", 	ОрганизацияНаменованиеПолное);
	ДанныеПечати.Вставить("НАЛОГОВАЯ", 		ГНСНаименование);
	ДанныеПечати.Вставить("ГОРОД", 			Город);
	ДанныеПечати.Вставить("АДРЕС", 			Улица);
	ДанныеПечати.Вставить("ТЕЛЕФОН", 		Телефон);
	ДанныеПечати.Вставить("ЕМЭЙЛ", 			ЭлектроннаяПочта);
	
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	
	Если (ИмяМакета <> "Приложение2" ИЛИ (ИмяМакета = "Приложение2" И ПерваяОбласть))
		И (ИмяМакета <> "Приложение2_1" ИЛИ (ИмяМакета = "Приложение2_1" И ПерваяОбласть)) Тогда
		ОбластьМакета.Параметры.ИНН1 = Сред(ИНН, 1, 1);
		ОбластьМакета.Параметры.ИНН2 = Сред(ИНН, 2, 1);
		ОбластьМакета.Параметры.ИНН3 = Сред(ИНН, 3, 1);                           
		ОбластьМакета.Параметры.ИНН4 = Сред(ИНН, 4, 1);
		ОбластьМакета.Параметры.ИНН5 = Сред(ИНН, 5, 1);
		ОбластьМакета.Параметры.ИНН6 = Сред(ИНН, 6, 1);
		ОбластьМакета.Параметры.ИНН7 = Сред(ИНН, 7, 1);
		ОбластьМакета.Параметры.ИНН8 = Сред(ИНН, 8, 1);
		ОбластьМакета.Параметры.ИНН9 = Сред(ИНН, 9, 1);
		ОбластьМакета.Параметры.ИНН10 = Сред(ИНН, 10, 1);
		ОбластьМакета.Параметры.ИНН11 = Сред(ИНН, 11, 1);
		ОбластьМакета.Параметры.ИНН12 = Сред(ИНН, 12, 1);
		ОбластьМакета.Параметры.ИНН13 = Сред(ИНН, 13, 1);
		ОбластьМакета.Параметры.ИНН14 = Сред(ИНН, 14, 1);         
		
		ОбластьМакета.Параметры.ГНС1 = Сред(КодГНС, 1, 1);
		ОбластьМакета.Параметры.ГНС2 = Сред(КодГНС, 2, 1);
		ОбластьМакета.Параметры.ГНС3 = Сред(КодГНС, 3, 1);
		
		Если ЗначениеЗаполнено(ОКПО) Тогда 
			ОбластьМакета.Параметры.ОКПО1 = Сред(ОКПО,1,1);
			ОбластьМакета.Параметры.ОКПО2 = Сред(ОКПО,2,1);
			ОбластьМакета.Параметры.ОКПО3 = Сред(ОКПО,3,1);
			ОбластьМакета.Параметры.ОКПО4 = Сред(ОКПО,4,1);
			ОбластьМакета.Параметры.ОКПО5 = Сред(ОКПО,5,1);
			ОбластьМакета.Параметры.ОКПО6 = Сред(ОКПО,6,1);
			ОбластьМакета.Параметры.ОКПО7 = Сред(ОКПО,7,1);
			ОбластьМакета.Параметры.ОКПО8 = Сред(ОКПО,8,1);
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ПерваяОбласть Тогда
		ОбластьМакета.Параметры.ДатаН1 = Сред(НачалоПериода, 1, 1);	
		ОбластьМакета.Параметры.ДатаН2 = Сред(НачалоПериода, 2, 1);	
		ОбластьМакета.Параметры.ДатаН3 = Сред(НачалоПериода, 4, 1);	
		ОбластьМакета.Параметры.ДатаН4 = Сред(НачалоПериода, 5, 1);	
		ОбластьМакета.Параметры.ДатаН5 = Сред(НачалоПериода, 7, 1);	
		ОбластьМакета.Параметры.ДатаН6 = Сред(НачалоПериода, 8, 1);	
		ОбластьМакета.Параметры.ДатаН7 = Сред(НачалоПериода, 9, 1);	
		ОбластьМакета.Параметры.ДатаН8 = Сред(НачалоПериода, 10, 1);		
			
		ОбластьМакета.Параметры.ДатаК1 = Сред(КонецПериода, 1, 1);	
		ОбластьМакета.Параметры.ДатаК2 = Сред(КонецПериода, 2, 1);	
		ОбластьМакета.Параметры.ДатаК3 = Сред(КонецПериода, 4, 1);	
		ОбластьМакета.Параметры.ДатаК4 = Сред(КонецПериода, 5, 1);	
		ОбластьМакета.Параметры.ДатаК5 = Сред(КонецПериода, 7, 1);	
		ОбластьМакета.Параметры.ДатаК6 = Сред(КонецПериода, 8, 1);	
		ОбластьМакета.Параметры.ДатаК7 = Сред(КонецПериода, 9, 1);	
		ОбластьМакета.Параметры.ДатаК8 = Сред(КонецПериода, 10, 1);
	КонецЕсли;
		
	Если ИмяМакета = "ОсновнаяФорма" Тогда
		Если ЗначениеЗаполнено(Индекс) Тогда
			ОбластьМакета.Параметры.ИНДЕКС1 = Сред(Индекс, 1, 1);	
			ОбластьМакета.Параметры.ИНДЕКС2 = Сред(Индекс, 2, 1);	
			ОбластьМакета.Параметры.ИНДЕКС3 = Сред(Индекс, 4, 1);	
			ОбластьМакета.Параметры.ИНДЕКС4 = Сред(Индекс, 5, 1);	
			ОбластьМакета.Параметры.ИНДЕКС5 = Сред(Индекс, 7, 1);	
			ОбластьМакета.Параметры.ИНДЕКС6 = Сред(Индекс, 8, 1);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой ПечатьНакладной
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьОсновнаяФорма(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетПоКосвеннымНалогам.Ссылка КАК Ссылка,
		|	ОтчетПоКосвеннымНалогам.Дата КАК Дата,
		|	ОтчетПоКосвеннымНалогам.Организация КАК Организация,
		|	ОтчетПоКосвеннымНалогам.ОсновнаяФорма.(
		|		НомерГрафыОтчета КАК НомерГрафыОтчета,
		|		Сумма КАК Сумма
		|	) КАК ОсновнаяФорма
		|ИЗ
		|	Документ.ОтчетПоКосвеннымНалогам КАК ОтчетПоКосвеннымНалогам
		|ГДЕ
		|	ОтчетПоКосвеннымНалогам.Ссылка В (&СписокДокументов)";		
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоКосвеннымНалогам_ОсновнаяФорма";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_ОсновнаяФорма");
	ИмяМакета = "ОсновнаяФорма";
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаОтчета");
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));

 		ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьМакета, ИмяМакета);
		
		Выборка = Шапка.ОсновнаяФорма.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.НомерГрафыОтчета = "050" Тогда
				ОбластьМакета.Параметры.Сумма050 = Выборка.Сумма;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "051" Тогда
				ОбластьМакета.Параметры.Сумма051 = Выборка.Сумма;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "052" Тогда
				ОбластьМакета.Параметры.Сумма052 = Выборка.Сумма;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "053" Тогда
				ОбластьМакета.Параметры.Сумма053 = Выборка.Сумма;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "054" Тогда
				ОбластьМакета.Параметры.Сумма054 = Выборка.Сумма;
			КонецЕсли;
		КонецЦикла;	
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

// Функция формирует табличный документ с печатной формой ПечатьНакладной
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриложение1(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетПоКосвеннымНалогам.Ссылка КАК Ссылка,
		|	ОтчетПоКосвеннымНалогам.Дата КАК Дата,
		|	ОтчетПоКосвеннымНалогам.Организация КАК Организация,
		|	ОтчетПоКосвеннымНалогам.Приложение1.(
		|		НомерГрафыОтчета КАК НомерГрафыОтчета,
		|		Сумма КАК Сумма,
		|		СуммаНДС КАК СуммаНДС
		|	) КАК Приложение1
		|ИЗ
		|	Документ.ОтчетПоКосвеннымНалогам КАК ОтчетПоКосвеннымНалогам
		|ГДЕ
		|	ОтчетПоКосвеннымНалогам.Ссылка В (&СписокДокументов)";		
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоКосвеннымНалогам_Приложение1";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение1");
	ИмяМакета = "Приложение1";
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаОтчета");
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));

 		ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьМакета, ИмяМакета);
		
		Выборка = Шапка.Приложение1.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.НомерГрафыОтчета = "150" Тогда
				ОбластьМакета.Параметры.Лизинг 			= Выборка.Сумма;
				ОбластьМакета.Параметры.ЛизингНДС 		= Выборка.СуммаНДС;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "151" Тогда
				ОбластьМакета.Параметры.ДавСырье 		= Выборка.Сумма;
				ОбластьМакета.Параметры.ДавСырьеНДС 	= Выборка.СуммаНДС;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "152" Тогда
				ОбластьМакета.Параметры.Транспорт 		= Выборка.Сумма;
				ОбластьМакета.Параметры.ТранспортНДС 	= Выборка.СуммаНДС;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "153" Тогда
				ОбластьМакета.Параметры.ПрочийИмпорт 	= Выборка.Сумма;
				ОбластьМакета.Параметры.ПрочийИмпортНДС = Выборка.СуммаНДС;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "154" Тогда
				ОбластьМакета.Параметры.ИмпортОбщий 	= Выборка.Сумма;
				ОбластьМакета.Параметры.ИмпортОбщийНДС 	= Выборка.СуммаНДС;
			КонецЕсли;
		КонецЦикла;	
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

// Функция формирует табличный документ с печатной формой ПечатьНакладной
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриложение2(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетПоКосвеннымНалогам.Ссылка КАК Ссылка,
		|	ОтчетПоКосвеннымНалогам.Дата КАК Дата,
		|	ОтчетПоКосвеннымНалогам.Организация КАК Организация,
		|	ОтчетПоКосвеннымНалогам.Приложение2.(
		|		НомерСтроки КАК НомерСтроки,
		|		КодСтраны КАК КодСтраны,
		|		НомерЗаявления КАК НомерЗаявления,
		|		ДатаЗаявления КАК ДатаЗаявления,
		|		СтоимостьТовара КАК СтоимостьТовара,
		|		УвелечениеСтоимостиСУчетомМУКЦ КАК УвелечениеСтоимостиСУчетомМУКЦ,
		|		СуммаАкцизногоНалога КАК СуммаАкцизногоНалога,
		|		СуммаНДС КАК СуммаНДС,
		|		НачислениеНДССУчетомМУКЦ КАК НачислениеНДССУчетомМУКЦ,
		|		СуммаНДСЗачет КАК СуммаНДСЗачет
		|	) КАК Приложение2
		|ИЗ
		|	Документ.ОтчетПоКосвеннымНалогам КАК ОтчетПоКосвеннымНалогам
		|ГДЕ
		|	ОтчетПоКосвеннымНалогам.Ссылка В(&СписокДокументов)";		
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоКосвеннымНалогам_Приложение2";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение2");
	ИмяМакета = "Приложение2";
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаОтчета");
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));

 		ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьМакета, ИмяМакета, Истина);		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		
		ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьМакета, ИмяМакета, Ложь);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьСтрока 		= Макет.ПолучитьОбласть("СтрокаТаблицы");		
		ОбластьИтогиПоЛисту = Макет.ПолучитьОбласть("ИтогоПоЛисту");
		ОбластьПодвал 		= Макет.ПолучитьОбласть("Подвал");
		ОбластьИтог 		= Макет.ПолучитьОбласть("ИтогоПоПриложению");
		
		МассивПроверки = Новый Массив();
		МассивПроверки.Добавить(ОбластьСтрока);
		МассивПроверки.Добавить(ОбластьИтогиПоЛисту);
		
		ИтогиПоЛисту = Новый Структура();
		ИтогиПоЛисту.Вставить("ИтогоСуммаАкцизногоНалога", 0);
		ИтогиПоЛисту.Вставить("ИтогоСуммаНДС", 0);
		ИтогиПоЛисту.Вставить("ИтогоНДСЗачет", 0);
		
		ИтогиПоРеестру = Новый Структура();
		ИтогиПоРеестру.Вставить("ИтогоСуммаАкцизногоНалога", 0);
		ИтогиПоРеестру.Вставить("ИтогоСуммаНДС", 0);
		ИтогиПоРеестру.Вставить("ИтогоНДСЗачет", 0);
		
		Выборка = Шапка.Приложение2.Выбрать();
		КоличествоСтрок = Выборка.Количество();
		ВыводимаяСтрока = 1;
		
		Пока Выборка.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Заполнить(Выборка);
			
			ИтогиПоЛисту.ИтогоСуммаАкцизногоНалога 		= ИтогиПоЛисту.ИтогоСуммаАкцизногоНалога + Выборка.СуммаАкцизногоНалога;
			ИтогиПоЛисту.ИтогоСуммаНДС 					= ИтогиПоЛисту.ИтогоСуммаНДС + Выборка.СуммаНДС;
			ИтогиПоЛисту.ИтогоНДСЗачет 					= ИтогиПоЛисту.ИтогоНДСЗачет + Выборка.СуммаНДСЗачет;
			
			ИтогиПоРеестру.ИтогоСуммаАкцизногоНалога 	= ИтогиПоРеестру.ИтогоСуммаАкцизногоНалога + Выборка.СуммаАкцизногоНалога;
			ИтогиПоРеестру.ИтогоСуммаНДС 				= ИтогиПоРеестру.ИтогоСуммаНДС + Выборка.СуммаНДС;
			ИтогиПоРеестру.ИтогоНДСЗачет 				= ИтогиПоРеестру.ИтогоНДСЗачет + Выборка.СуммаНДСЗачет;
			
			Если КоличествоСтрок = ВыводимаяСтрока Тогда
				МассивПроверки.Добавить(ОбластьПодвал);
				МассивПроверки.Добавить(ОбластьИтог);
				Вывод = ТабличныйДокумент.ПроверитьВывод(МассивПроверки);
			Иначе
				Вывод = ТабличныйДокумент.ПроверитьВывод(МассивПроверки);
			КонецЕсли;	
				
			Если Вывод Тогда
				ТабличныйДокумент.Вывести(ОбластьСтрока);	
			Иначе
				ОбластьИтогиПоЛисту.Параметры.Заполнить(ИтогиПоЛисту);
				ТабличныйДокумент.Вывести(ОбластьИтогиПоЛисту);
				ИтогиПоЛисту.ИтогоСуммаАкцизногоНалога 		= 0;
				ИтогиПоЛисту.ИтогоСуммаНДС 					= 0;
				ИтогиПоЛисту.ИтогоНДСЗачет 					= 0;
				
				ТабличныйДокумент.Вывести(ОбластьСтрока);
			КонецЕсли;	
			
			Если КоличествоСтрок = ВыводимаяСтрока Тогда
				Если Вывод Тогда
					ОбластьИтогиПоЛисту.Параметры.Заполнить(ИтогиПоЛисту);
					ТабличныйДокумент.Вывести(ОбластьИтогиПоЛисту);	
				КонецЕсли;	
					
				ТабличныйДокумент.Вывести(ОбластьПодвал);
				ОбластьИтог.Параметры.Заполнить(ИтогиПоРеестру);
				ТабличныйДокумент.Вывести(ОбластьИтог);
			КонецЕсли;
			
			ВыводимаяСтрока = ВыводимаяСтрока + 1;
		КонецЦикла;	
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

// Функция формирует табличный документ с печатной формой ПечатьНакладной
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриложение2_1(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетПоКосвеннымНалогам.Ссылка КАК Ссылка,
		|	ОтчетПоКосвеннымНалогам.Дата КАК Дата,
		|	ОтчетПоКосвеннымНалогам.Организация КАК Организация,
		|	ОтчетПоКосвеннымНалогам.Приложение2_1.(
		|		КодТНВЭДЕАЕС КАК КодТНВЭДЕАЕС,
		|		Номенклатура КАК Номенклатура,
		|		НомерСтрокиВЗаявлении КАК НомерСтрокиВЗаявлении,
		|		НомерЗаявленияОВвозе КАК НомерЗаявленияОВвозе,
		|		ДатаЗаявленияОВвозеТоваров КАК ДатаЗаявленияОВвозеТоваров,
		|		ЦенаЗаЕдТовараПоДоговору КАК ЦенаЗаЕдТовараПоДоговору,
		|		МУКЦЗаЕденицуТовара КАК МУКЦЗаЕденицуТовара,
		|		КоличествоИмпортированногоТовара КАК КоличествоИмпортированногоТовара,
		|		РазницаВСтоимостиТовараСУчетомМУКЦ КАК РазницаВСтоимостиТовараСУчетомМУКЦ,
		|		НачислениеНДССУчетомМУКЦ КАК НачислениеНДССУчетомМУКЦ,
		|		НомерСтроки КАК НомерСтроки
		|	) КАК Приложение2_1
		|ИЗ
		|	Документ.ОтчетПоКосвеннымНалогам КАК ОтчетПоКосвеннымНалогам
		|ГДЕ
		|	ОтчетПоКосвеннымНалогам.Ссылка В(&СписокДокументов)";		
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоКосвеннымНалогам_Приложение2_1";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение2_1");
	ИмяМакета = "Приложение2_1";
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаОтчета");
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));

 		ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьМакета, ИмяМакета, Истина);		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		
		ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьМакета, ИмяМакета, Ложь);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьСтрока 		= Макет.ПолучитьОбласть("СтрокаТаблицы");		
		ОбластьИтогиПоЛисту = Макет.ПолучитьОбласть("ИтогоПоЛисту");
		ОбластьПодвал 		= Макет.ПолучитьОбласть("Подвал");
		ОбластьИтог 		= Макет.ПолучитьОбласть("ИтогоПоПриложению");
		
		МассивПроверки = Новый Массив();
		МассивПроверки.Добавить(ОбластьСтрока);
		МассивПроверки.Добавить(ОбластьИтогиПоЛисту);
		
		ИтогиПоЛисту = Новый Структура();
		ИтогиПоЛисту.Вставить("ВсегоКол", 0);
		ИтогиПоЛисту.Вставить("ВсегоРазницаСУчетомМУКЦ", 0);
		ИтогиПоЛисту.Вставить("ВсегоСуммНДССМУКЦ", 0);
		
		ИтогиПоРеестру = Новый Структура();
		ИтогиПоРеестру.Вставить("ВсегоКол", 0);
		ИтогиПоРеестру.Вставить("ВсегоРазницаСУчетомМУКЦ", 0);
		ИтогиПоРеестру.Вставить("ВсегоСуммНДССМУКЦ", 0);
		
		Выборка = Шапка.Приложение2_1.Выбрать();
		КоличествоСтрок = Выборка.Количество();
		ВыводимаяСтрока = 1;
		
		Пока Выборка.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Заполнить(Выборка);
			
			КодТНВЭД = Выборка.КодТНВЭДЕАЕС;
			Если ЗначениеЗаполнено(КодТНВЭД) Тогда
				ОбластьСтрока.Параметры.ВЭД1 = Сред(КодТНВЭД, 1, 1);
				ОбластьСтрока.Параметры.ВЭД2 = Сред(КодТНВЭД, 2, 1);
				ОбластьСтрока.Параметры.ВЭД3 = Сред(КодТНВЭД, 3, 1);                           
				ОбластьСтрока.Параметры.ВЭД4 = Сред(КодТНВЭД, 4, 1);
				ОбластьСтрока.Параметры.ВЭД5 = Сред(КодТНВЭД, 5, 1);
				ОбластьСтрока.Параметры.ВЭД6 = Сред(КодТНВЭД, 6, 1);
				ОбластьСтрока.Параметры.ВЭД7 = Сред(КодТНВЭД, 7, 1);
				ОбластьСтрока.Параметры.ВЭД8 = Сред(КодТНВЭД, 8, 1);
				ОбластьСтрока.Параметры.ВЭД9 = Сред(КодТНВЭД, 9, 1);
				ОбластьСтрока.Параметры.ВЭД10 = Сред(КодТНВЭД, 10, 1);	
			КонецЕсли;	
			
			ИтогиПоЛисту.ВсегоКол 				 	= ИтогиПоЛисту.ВсегоКол + Выборка.КоличествоИмпортированногоТовара;
			ИтогиПоЛисту.ВсегоРазницаСУчетомМУКЦ 	= ИтогиПоЛисту.ВсегоРазницаСУчетомМУКЦ + Выборка.РазницаВСтоимостиТовараСУчетомМУКЦ;
			ИтогиПоЛисту.ВсегоСуммНДССМУКЦ 		 	= ИтогиПоЛисту.ВсегоСуммНДССМУКЦ + Выборка.НачислениеНДССУчетомМУКЦ;
			
			ИтогиПоРеестру.ВсегоКол 				= ИтогиПоРеестру.ВсегоКол + Выборка.КоличествоИмпортированногоТовара;
			ИтогиПоРеестру.ВсегоРазницаСУчетомМУКЦ 	= ИтогиПоРеестру.ВсегоРазницаСУчетомМУКЦ + Выборка.РазницаВСтоимостиТовараСУчетомМУКЦ;
			ИтогиПоРеестру.ВсегоСуммНДССМУКЦ 		= ИтогиПоРеестру.ВсегоСуммНДССМУКЦ + Выборка.НачислениеНДССУчетомМУКЦ;
			
			Если КоличествоСтрок = ВыводимаяСтрока Тогда
				МассивПроверки.Добавить(ОбластьПодвал);
				МассивПроверки.Добавить(ОбластьИтог);
				Вывод = ТабличныйДокумент.ПроверитьВывод(МассивПроверки);
			Иначе
				Вывод = ТабличныйДокумент.ПроверитьВывод(МассивПроверки);
			КонецЕсли;	
				
			Если Вывод Тогда
				ТабличныйДокумент.Вывести(ОбластьСтрока);	
			Иначе
				ОбластьИтогиПоЛисту.Параметры.Заполнить(ИтогиПоЛисту);
				ТабличныйДокумент.Вывести(ОбластьИтогиПоЛисту);
				ИтогиПоЛисту.ВсегоКол 				 = 0;
				ИтогиПоЛисту.ВсегоРазницаСУчетомМУКЦ = 0;
				ИтогиПоЛисту.ВсегоСуммНДССМУКЦ 		 = 0;
				
				ТабличныйДокумент.Вывести(ОбластьСтрока);
			КонецЕсли;	
			
			Если КоличествоСтрок = ВыводимаяСтрока Тогда
				Если Вывод Тогда
					ОбластьИтогиПоЛисту.Параметры.Заполнить(ИтогиПоЛисту);
					ТабличныйДокумент.Вывести(ОбластьИтогиПоЛисту);	
				КонецЕсли;	
					
				ТабличныйДокумент.Вывести(ОбластьПодвал);
				ОбластьИтог.Параметры.Заполнить(ИтогиПоРеестру);
				ТабличныйДокумент.Вывести(ОбластьИтог);
			КонецЕсли;
			
			ВыводимаяСтрока = ВыводимаяСтрока + 1;
		КонецЦикла;	
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

// Функция формирует табличный документ с печатной формой ПечатьНакладной
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриложение3(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетПоКосвеннымНалогам.Ссылка КАК Ссылка,
		|	ОтчетПоКосвеннымНалогам.Дата КАК Дата,
		|	ОтчетПоКосвеннымНалогам.Организация КАК Организация,
		|	ОтчетПоКосвеннымНалогам.Приложение3.(
		|		НомерГрафыОтчета КАК НомерГрафыОтчета,
		|		Сумма КАК Сумма
		|	) КАК Приложение3
		|ИЗ
		|	Документ.ОтчетПоКосвеннымНалогам КАК ОтчетПоКосвеннымНалогам
		|ГДЕ
		|	ОтчетПоКосвеннымНалогам.Ссылка В (&СписокДокументов)";		
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоКосвеннымНалогам_Приложение3";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение3");
	ИмяМакета = "Приложение3";
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаОтчета");
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));

 		ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьМакета, ИмяМакета);
		
		Выборка = Шапка.Приложение3.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.НомерГрафыОтчета = "350" Тогда
				ОбластьМакета.Параметры.Сумма350 = Выборка.Сумма;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "351" Тогда
				ОбластьМакета.Параметры.Сумма351 = Выборка.Сумма;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "352" Тогда
				ОбластьМакета.Параметры.Сумма352 = Выборка.Сумма;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "353" Тогда
				ОбластьМакета.Параметры.Сумма353 = Выборка.Сумма;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "354" Тогда
				ОбластьМакета.Параметры.Сумма354 = Выборка.Сумма;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "355" Тогда
				ОбластьМакета.Параметры.Сумма355 = Выборка.Сумма;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "356" Тогда
				ОбластьМакета.Параметры.Сумма356 = Выборка.Сумма;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "357" Тогда
				ОбластьМакета.Параметры.Сумма357 = Выборка.Сумма;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "358" Тогда
				ОбластьМакета.Параметры.Сумма358 = Выборка.Сумма;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "359" Тогда
				ОбластьМакета.Параметры.Сумма359 = Выборка.Сумма;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "360" Тогда
				ОбластьМакета.Параметры.Сумма360 = Выборка.Сумма;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "361" Тогда
				ОбластьМакета.Параметры.Сумма361 = Выборка.Сумма;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "398" Тогда
				ОбластьМакета.Параметры.Сумма398 = Выборка.Сумма;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "399" Тогда
				ОбластьМакета.Параметры.Сумма399 = Выборка.Сумма;
			КонецЕсли;
		КонецЦикла;	
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

// Функция формирует табличный документ с печатной формой ПечатьНакладной
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриложение4(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетПоКосвеннымНалогам.Ссылка КАК Ссылка,
		|	ОтчетПоКосвеннымНалогам.Дата КАК Дата,
		|	ОтчетПоКосвеннымНалогам.Организация КАК Организация,
		|	ОтчетПоКосвеннымНалогам.Приложение4.(
		|		НомерГрафыОтчета КАК НомерГрафыОтчета,
		|		ОблагаемыйОбъем КАК ОблагаемыйОбъем,
		|		СтавкаАкциза КАК СтавкаАкциза,
		|		СуммаАкциза КАК СуммаАкциза
		|	) КАК Приложение4
		|ИЗ
		|	Документ.ОтчетПоКосвеннымНалогам КАК ОтчетПоКосвеннымНалогам
		|ГДЕ
		|	ОтчетПоКосвеннымНалогам.Ссылка В (&СписокДокументов)";		
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоКосвеннымНалогам_Приложение4";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение4");
	ИмяМакета = "Приложение4";
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаОтчета");
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));

 		ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьМакета, ИмяМакета);
		
		ДанныеПечати = Новый Структура();
		ДанныеПечати.Вставить("Объем409_Литр", 0);
		ДанныеПечати.Вставить("Объем409_1000", 0);
		ДанныеПечати.Вставить("Объем409_Тн", 0);
		ДанныеПечати.Вставить("Акциз409", 0);
		
		Выборка = Шапка.Приложение4.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.НомерГрафыОтчета = "401" Тогда                              
				ОбластьМакета.Параметры.Объем401 	= Выборка.ОблагаемыйОбъем;
				ОбластьМакета.Параметры.Акциз401 	= Выборка.СуммаАкциза;
				ДанныеПечати.Объем409_Литр 			= Выборка.ОблагаемыйОбъем;
				ДанныеПечати.Акциз409 				= ДанныеПечати.Акциз409 + Выборка.СуммаАкциза;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "402" Тогда
				ОбластьМакета.Параметры.Объем402_1000 	= Выборка.ОблагаемыйОбъем;
				ОбластьМакета.Параметры.Акциз402_1000 	= Выборка.СуммаАкциза;
				ДанныеПечати.Объем409_1000 				= Выборка.ОблагаемыйОбъем;
				ДанныеПечати.Акциз409 					= ДанныеПечати.Акциз409 + Выборка.СуммаАкциза;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "403" Тогда
				ОбластьМакета.Параметры.Объем403 	= Выборка.ОблагаемыйОбъем;
				ОбластьМакета.Параметры.Ставка403 	= Выборка.СтавкаАкциза;
				ОбластьМакета.Параметры.Акциз403 	= Выборка.СуммаАкциза;
				ДанныеПечати.Объем409_Тн 			= ДанныеПечати.Объем409_Тн + Выборка.ОблагаемыйОбъем;
				ДанныеПечати.Акциз409 				= ДанныеПечати.Акциз409 + Выборка.СуммаАкциза;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "404" Тогда
				ОбластьМакета.Параметры.Объем404 	= Выборка.ОблагаемыйОбъем;
				ОбластьМакета.Параметры.Ставка404 	= Выборка.СтавкаАкциза;
				ОбластьМакета.Параметры.Акциз404 	= Выборка.СуммаАкциза;
				ДанныеПечати.Объем409_Тн 			= ДанныеПечати.Объем409_Тн + Выборка.ОблагаемыйОбъем;
				ДанныеПечати.Акциз409 				= ДанныеПечати.Акциз409 + Выборка.СуммаАкциза;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "405" Тогда
				ОбластьМакета.Параметры.Объем405 	= Выборка.ОблагаемыйОбъем;
				ОбластьМакета.Параметры.Ставка405 	= Выборка.СтавкаАкциза;
				ОбластьМакета.Параметры.Акциз405 	= Выборка.СуммаАкциза;
				ДанныеПечати.Объем409_Тн 			= ДанныеПечати.Объем409_Тн + Выборка.ОблагаемыйОбъем;
				ДанныеПечати.Акциз409 				= ДанныеПечати.Акциз409 + Выборка.СуммаАкциза;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "406" Тогда
				ОбластьМакета.Параметры.Объем406 	= Выборка.ОблагаемыйОбъем;
				ОбластьМакета.Параметры.Ставка406 	= Выборка.СтавкаАкциза;
				ОбластьМакета.Параметры.Акциз406 	= Выборка.СуммаАкциза;
				ДанныеПечати.Объем409_Тн 			= ДанныеПечати.Объем409_Тн + Выборка.ОблагаемыйОбъем;
				ДанныеПечати.Акциз409 				= ДанныеПечати.Акциз409 + Выборка.СуммаАкциза;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "407" Тогда
				ОбластьМакета.Параметры.Объем407 	= Выборка.ОблагаемыйОбъем;
				ОбластьМакета.Параметры.Ставка407 	= Выборка.СтавкаАкциза;
				ОбластьМакета.Параметры.Акциз407 	= Выборка.СуммаАкциза;
				ДанныеПечати.Объем409_Тн 			= ДанныеПечати.Объем409_Тн + Выборка.ОблагаемыйОбъем;
				ДанныеПечати.Акциз409 				= ДанныеПечати.Акциз409 + Выборка.СуммаАкциза;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "408" Тогда
				ОбластьМакета.Параметры.Объем408 	= Выборка.ОблагаемыйОбъем;
				ОбластьМакета.Параметры.Ставка408 	= Выборка.СтавкаАкциза;
				ОбластьМакета.Параметры.Акциз408 	= Выборка.СуммаАкциза;
				ДанныеПечати.Объем409_Тн 			= ДанныеПечати.Объем409_Тн + Выборка.ОблагаемыйОбъем;
				ДанныеПечати.Акциз409 				= ДанныеПечати.Акциз409 + Выборка.СуммаАкциза;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "410" Тогда
				ОбластьМакета.Параметры.Акциз410 	= Выборка.СуммаАкциза;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "411" Тогда
				ОбластьМакета.Параметры.Акциз411 	= Выборка.СуммаАкциза;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "412" Тогда
				ОбластьМакета.Параметры.Акциз412 	= Выборка.СуммаАкциза;
			КонецЕсли;
		КонецЦикла;	
		
		// Заполнение графы номер "409".
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

// Функция формирует табличный документ с печатной формой ПечатьНакладной
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриложение5(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетПоКосвеннымНалогам.Ссылка КАК Ссылка,
		|	ОтчетПоКосвеннымНалогам.Дата КАК Дата,
		|	ОтчетПоКосвеннымНалогам.Организация КАК Организация,
		|	ОтчетПоКосвеннымНалогам.Приложение5.(
		|		ВидАлкогольноПродукции КАК ВидПродукции,
		|		КодТНВЭД КАК КодТНВЭД,
		|		СодержаниеСпиртаВ1Литре КАК СодержаниеСпирта,
		|		ОблагаемыйОбъем КАК ОблагаемыйОбъем,
		|		СтавкаАкциза КАК СтавкаАкциза,
		|		СуммаАкциза КАК СуммаАкциза
		|	) КАК Приложение5
		|ИЗ
		|	Документ.ОтчетПоКосвеннымНалогам КАК ОтчетПоКосвеннымНалогам
		|ГДЕ
		|	ОтчетПоКосвеннымНалогам.Ссылка В(&СписокДокументов)";		
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоКосвеннымНалогам_Приложение5";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение5");
	ИмяМакета = "Приложение5";
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаОтчета");
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));

 		ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьМакета, ИмяМакета);		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьСтрока 		= Макет.ПолучитьОбласть("СтрокаТаблицы");		
		ОбластьИтогиПоЛисту = Макет.ПолучитьОбласть("ИтогиПоЛисту");
		ОбластьИтог 		= Макет.ПолучитьОбласть("ИтогиПоПриложению");
		ОбластьПодвал 		= Макет.ПолучитьОбласть("Подвал");
		
		МассивПроверки = Новый Массив();
		МассивПроверки.Добавить(ОбластьСтрока);
		МассивПроверки.Добавить(ОбластьИтогиПоЛисту);
		
		ИтогиПоЛисту = Новый Структура();
		ИтогиПоЛисту.Вставить("ОблагаемыйОбъем", 0);
		ИтогиПоЛисту.Вставить("СуммаАкциза", 0);
		
		ИтогиПоПриложению = Новый Структура();
		ИтогиПоПриложению.Вставить("ОблагаемыйОбъем", 0);
		ИтогиПоПриложению.Вставить("СуммаАкциза", 0);
		
		Выборка = Шапка.Приложение5.Выбрать();
		КоличествоСтрок = Выборка.Количество();
		ВыводимаяСтрока = 1;
		
		Пока Выборка.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Заполнить(Выборка);
			
			ИтогиПоЛисту.ОблагаемыйОбъем 		= ИтогиПоЛисту.ОблагаемыйОбъем + Выборка.ОблагаемыйОбъем;
			ИтогиПоЛисту.СуммаАкциза 			= ИтогиПоЛисту.СуммаАкциза + Выборка.СуммаАкциза;
			
			ИтогиПоПриложению.ОблагаемыйОбъем 	= ИтогиПоПриложению.ОблагаемыйОбъем + Выборка.ОблагаемыйОбъем;
			ИтогиПоПриложению.СуммаАкциза 		= ИтогиПоПриложению.СуммаАкциза + Выборка.СуммаАкциза;
			
			Если КоличествоСтрок = ВыводимаяСтрока Тогда
				МассивПроверки.Добавить(ОбластьПодвал);
				МассивПроверки.Добавить(ОбластьИтог);
				Вывод = ТабличныйДокумент.ПроверитьВывод(МассивПроверки);
			Иначе
				Вывод = ТабличныйДокумент.ПроверитьВывод(МассивПроверки);
			КонецЕсли;	
				
			Если Вывод Тогда
				ТабличныйДокумент.Вывести(ОбластьСтрока);	
			Иначе
				ОбластьИтогиПоЛисту.Параметры.Заполнить(ИтогиПоЛисту);
				ТабличныйДокумент.Вывести(ОбластьИтогиПоЛисту);
				ИтогиПоЛисту.ОблагаемыйОбъем = 0;
				ИтогиПоЛисту.СуммаАкциза 	 = 0;
				
				ТабличныйДокумент.Вывести(ОбластьСтрока);
			КонецЕсли;	
			
			Если КоличествоСтрок = ВыводимаяСтрока Тогда
				Если Вывод Тогда
					ОбластьИтогиПоЛисту.Параметры.Заполнить(ИтогиПоЛисту);
					ТабличныйДокумент.Вывести(ОбластьИтогиПоЛисту);	
				КонецЕсли;	
					
				ТабличныйДокумент.Вывести(ОбластьПодвал);
				ОбластьИтог.Параметры.Заполнить(ИтогиПоПриложению);
				ТабличныйДокумент.Вывести(ОбластьИтог);
			КонецЕсли;
			
			ВыводимаяСтрока = ВыводимаяСтрока + 1;
		КонецЦикла;	
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

// Функция формирует табличный документ с печатной формой ПечатьНакладной
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриложение6(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетПоКосвеннымНалогам.Ссылка КАК Ссылка,
		|	ОтчетПоКосвеннымНалогам.Дата КАК Дата,
		|	ОтчетПоКосвеннымНалогам.Организация КАК Организация,
		|	ОтчетПоКосвеннымНалогам.Приложение6.(
		|		НомерГрафыОтчета КАК НомерГрафыОтчета,
		|		ОблагаемыйОбъем КАК ОблагаемыйОбъем,
		|		СтавкаАкциза КАК СтавкаАкциза,
		|		СуммаАкциза КАК СуммаАкциза
		|	) КАК Приложение6
		|ИЗ
		|	Документ.ОтчетПоКосвеннымНалогам КАК ОтчетПоКосвеннымНалогам
		|ГДЕ
		|	ОтчетПоКосвеннымНалогам.Ссылка В (&СписокДокументов)";		
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоКосвеннымНалогам_Приложение6";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение6");
	ИмяМакета = "Приложение6";
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаОтчета");
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));

 		ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьМакета, ИмяМакета);
		
		ДанныеПечати = Новый Структура();
		ДанныеПечати.Вставить("Объем606_1000шт", 0);
		ДанныеПечати.Вставить("Объем606_шт", 	 0);
		ДанныеПечати.Вставить("Объем606_кг", 	 0);
		ДанныеПечати.Вставить("Сумма606", 		 0);
		
		Выборка = Шапка.Приложение6.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.НомерГрафыОтчета = "601" Тогда
				ОбластьМакета.Параметры.Ставка601 	= Выборка.СтавкаАкциза;
				ОбластьМакета.Параметры.Объем601 	= Выборка.ОблагаемыйОбъем;
				ОбластьМакета.Параметры.Сумма601 	= Выборка.СуммаАкциза;
				ДанныеПечати.Объем606_1000шт		= ДанныеПечати.Объем606_1000шт + Выборка.ОблагаемыйОбъем;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "602" Тогда
				ОбластьМакета.Параметры.Ставка602 	= Выборка.СтавкаАкциза;
				ОбластьМакета.Параметры.Объем602 	= Выборка.ОблагаемыйОбъем;
				ОбластьМакета.Параметры.Сумма602 	= Выборка.СуммаАкциза;
				ДанныеПечати.Объем606_1000шт		= ДанныеПечати.Объем606_1000шт + Выборка.ОблагаемыйОбъем;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "603" Тогда
				ОбластьМакета.Параметры.Ставка603 	= Выборка.СтавкаАкциза;
				ОбластьМакета.Параметры.Объем603 	= Выборка.ОблагаемыйОбъем;
				ОбластьМакета.Параметры.Сумма603 	= Выборка.СуммаАкциза;
				ДанныеПечати.Объем606_шт			= Выборка.ОблагаемыйОбъем;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "604" Тогда
				ОбластьМакета.Параметры.Ставка604 	= Выборка.СтавкаАкциза;
				ОбластьМакета.Параметры.Объем604 	= Выборка.ОблагаемыйОбъем;
				ОбластьМакета.Параметры.Сумма604 	= Выборка.СуммаАкциза;
				ДанныеПечати.Объем606_1000шт		= ДанныеПечати.Объем606_1000шт + Выборка.ОблагаемыйОбъем;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "605" Тогда
				ОбластьМакета.Параметры.Ставка605 	= Выборка.СтавкаАкциза;
				ОбластьМакета.Параметры.Объем605 	= Выборка.ОблагаемыйОбъем;
				ОбластьМакета.Параметры.Сумма605 	= Выборка.СуммаАкциза;
				ДанныеПечати.Объем606_кг			= Выборка.ОблагаемыйОбъем;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "606" Тогда
				ДанныеПечати.Сумма606 				= Выборка.СуммаАкциза;
			КонецЕсли;
		КонецЦикла;	
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

// Функция формирует табличный документ с печатной формой ПечатьНакладной
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриложение6_1(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетПоКосвеннымНалогам.Ссылка КАК Ссылка,
		|	ОтчетПоКосвеннымНалогам.Дата КАК Дата,
		|	ОтчетПоКосвеннымНалогам.Организация КАК Организация,
		|	ОтчетПоКосвеннымНалогам.Приложение6_1.(
		|		НомерГрафыОтчета КАК НомерГрафыОтчета,
		|		Содержание КАК Содержание,
		|		МРЦЗаПачку КАК МРЦЗаПачку,
		|		СтавкаАкциза КАК СтавкаАкциза,
		|		ОблагаемыйОбъем КАК ОблагаемыйОбъем,
		|		СуммаАкциза КАК СуммаАкциза
		|	) КАК Приложение6_1
		|ИЗ
		|	Документ.ОтчетПоКосвеннымНалогам КАК ОтчетПоКосвеннымНалогам
		|ГДЕ
		|	ОтчетПоКосвеннымНалогам.Ссылка В(&СписокДокументов)";		
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоКосвеннымНалогам_Приложение6_1";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение6_1");
	ИмяМакета = "Приложение6_1";
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаОтчета");
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));

 		ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьМакета, ИмяМакета);		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьСтрока 		= Макет.ПолучитьОбласть("СтрокаТаблицы");		
		ОбластьПодвал 		= Макет.ПолучитьОбласть("Подвал");
		
		МассивПроверки = Новый Массив();
		МассивПроверки.Добавить(ОбластьСтрока);
		МассивПроверки.Добавить(ОбластьПодвал);
		
		ИтогиПоРеестру = Новый Структура();
		ИтогиПоРеестру.Вставить("ОблагаемыйОбъем", 	0);
		ИтогиПоРеестру.Вставить("СуммаАкциза", 		0);
		
		Выборка = Шапка.Приложение6_1.Выбрать();
		КоличествоСтрок = Выборка.Количество();
		ВыводимаяСтрока = 1;
		
		Пока Выборка.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Заполнить(Выборка);
			
			ИтогиПоРеестру.ОблагаемыйОбъем 	= ИтогиПоРеестру.ОблагаемыйОбъем + Выборка.ОблагаемыйОбъем;
			ИтогиПоРеестру.СуммаАкциза 		= ИтогиПоРеестру.СуммаАкциза + Выборка.СуммаАкциза;
			
			Если КоличествоСтрок = ВыводимаяСтрока И НЕ ТабличныйДокумент.ПроверитьВывод(МассивПроверки) Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				ТабличныйДокумент.Вывести(ОбластьСтрока);
				
				ОбластьПодвал.Параметры.Заполнить(ИтогиПоРеестру);
				ТабличныйДокумент.Вывести(ОбластьПодвал);
				
			ИначеЕсли КоличествоСтрок = ВыводимаяСтрока Тогда
				ТабличныйДокумент.Вывести(ОбластьСтрока);
				
				ОбластьПодвал.Параметры.Заполнить(ИтогиПоРеестру);
				ТабличныйДокумент.Вывести(ОбластьПодвал);
				
			Иначе
				ТабличныйДокумент.Вывести(ОбластьСтрока);
			КонецЕсли;
				
			ВыводимаяСтрока = ВыводимаяСтрока + 1;
		КонецЦикла;	
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

// Функция формирует табличный документ с печатной формой ПечатьНакладной
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриложение7(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетПоКосвеннымНалогам.Ссылка КАК Ссылка,
		|	ОтчетПоКосвеннымНалогам.Дата КАК Дата,
		|	ОтчетПоКосвеннымНалогам.Организация КАК Организация,
		|	ОтчетПоКосвеннымНалогам.Приложение7.(
		|		НомерСтроки КАК НомерСтроки,
		|		НаименованиеВвезенногоДавальческогоСырья КАК НаименованиеВвезенногоДавальческогоСырья,
		|		КодТНВЭД КАК КодТНВЭД,
		|		КоличествоДавальческогоСырьяВвезенногоВОтчетныйПериод КАК КоличествоДавальческогоСырьяВвезенногоВОтчетныйПериод,
		|		КоличествоДавальческогоСырьяПереработанногоВОтчетномПериоде КАК КоличествоДавальческогоСырьяПереработанногоВОтчетномПериоде,
		|		ОстатокДавальческогоСырья КАК ОстатокДавальческогоСырья,
		|		НаименованиеПодакцизныхТОваровПодлежащихЭкспорту КАК НаименованиеПодакцизныхТОваровПодлежащихЭкспорту,
		|		ЕдИзмер КАК ЕдИзмер,
		|		СтавкаАкциза КАК СтавкаАкциза,
		|		ПодлежитВнесению КАК ПодлежитВнесению,
		|		ФактическиВнесенно КАК ФактическиВнесенно,
		|		СуммаДепозитаНеПодтвержденнаяДокументально КАК СуммаДепозитаНеПодтвержденнаяДокументально,
		|		СуммаДепозитаПодлежащаяВозврату КАК СуммаДепозитаПодлежащаяВозврату
		|	) КАК Приложение7
		|ИЗ
		|	Документ.ОтчетПоКосвеннымНалогам КАК ОтчетПоКосвеннымНалогам
		|ГДЕ
		|	ОтчетПоКосвеннымНалогам.Ссылка В(&СписокДокументов)";		
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоКосвеннымНалогам_Приложение7";

	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение7");
	ИмяМакета = "Приложение7";
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаОтчета");
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));

 		ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьМакета, ИмяМакета);		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьСтрока 		= Макет.ПолучитьОбласть("СтрокаТаблицы");		
		ОбластьИтоги 		= Макет.ПолучитьОбласть("ИтогоПоПриложению");
		ОбластьПодвал 		= Макет.ПолучитьОбласть("Подвал");
		
		МассивПроверки = Новый Массив();
		МассивПроверки.Добавить(ОбластьСтрока);
		МассивПроверки.Добавить(ОбластьИтоги);
		МассивПроверки.Добавить(ОбластьПодвал);
				
		Выборка = Шапка.Приложение7.Выбрать();
		КоличествоСтрок = Выборка.Количество();
		ВыводимаяСтрока = 1;
		
		Пока Выборка.Следующий() Цикл		
			ОбластьСтрока.Параметры.Заполнить(Выборка);
			
			Если КоличествоСтрок = ВыводимаяСтрока И НЕ ТабличныйДокумент.ПроверитьВывод(МассивПроверки) Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				ТабличныйДокумент.Вывести(ОбластьСтрока);;
				ТабличныйДокумент.Вывести(ОбластьИтоги);
				ТабличныйДокумент.Вывести(ОбластьПодвал);
				
			ИначеЕсли КоличествоСтрок = ВыводимаяСтрока Тогда
				ТабличныйДокумент.Вывести(ОбластьСтрока);				
				ТабличныйДокумент.Вывести(ОбластьИтоги);
				ТабличныйДокумент.Вывести(ОбластьПодвал);
				
			Иначе
				ТабличныйДокумент.Вывести(ОбластьСтрока);
			КонецЕсли;
				
			ВыводимаяСтрока = ВыводимаяСтрока + 1;
		КонецЦикла;	
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

// Функция формирует табличный документ с печатной формой ПечатьНакладной
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриложение8(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетПоКосвеннымНалогам.Ссылка КАК Ссылка,
		|	ОтчетПоКосвеннымНалогам.Дата КАК Дата,
		|	ОтчетПоКосвеннымНалогам.Организация КАК Организация,
		|	ОтчетПоКосвеннымНалогам.Приложение8.(
		|		НомерСтроки КАК НомерСтроки,
		|		НомерУведомления КАК НомерУведомления,
		|		ДатаУведомления КАК ДатаУведомления,
		|		ДатаФактическогоВвоза КАК ДатаФактическогоВвоза,
		|		КодСтраны КАК КодСтраны,
		|		ЕдИзмер КАК ЕдИзмер,
		|		ОблагаемыйОбъем КАК ОблагаемыйОбъем
		|	) КАК Приложение8
		|ИЗ
		|	Документ.ОтчетПоКосвеннымНалогам КАК ОтчетПоКосвеннымНалогам
		|ГДЕ
		|	ОтчетПоКосвеннымНалогам.Ссылка В(&СписокДокументов)";		
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоКосвеннымНалогам_Приложение8";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение8");
	ИмяМакета = "Приложение8";
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаОтчета");
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));

 		ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьМакета, ИмяМакета);		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьСтрока 		= Макет.ПолучитьОбласть("СтрокаТаблицы");		
		ОбластьИтогиПоЛисту = Макет.ПолучитьОбласть("ИтогоПоЛисту");
		ОбластьИтог 		= Макет.ПолучитьОбласть("ИтогоПоПриложению");
		ОбластьПодвал 		= Макет.ПолучитьОбласть("Подвал");
		
		ЕдИзм_Кг 	 = Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию("кг", Истина);
		ЕдИзм_Шт 	 = Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию("шт", Истина);
		ЕдИзм_Литр 	 = Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию("л", Истина);
		ЕдИзм_Тонна  = Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию("т", Истина);
		ЕдИзм_1000шт = Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию("тыс. шт", Истина);
		
		МассивПроверки = Новый Массив();
		МассивПроверки.Добавить(ОбластьСтрока);
		МассивПроверки.Добавить(ОбластьИтогиПоЛисту);
		
		ИтогиПоЛисту = Новый Структура();
		ИтогиПоЛисту.Вставить("КолТонна", 	0);
		ИтогиПоЛисту.Вставить("Кол1000шт", 	0);
		ИтогиПоЛисту.Вставить("КолЛитр", 	0);
		ИтогиПоЛисту.Вставить("КолШт", 		0);
		ИтогиПоЛисту.Вставить("КолКг", 		0);
		
		ИтогиПоРеестру = Новый Структура();
		ИтогиПоРеестру.Вставить("КолТонна", 0);
		ИтогиПоРеестру.Вставить("Кол1000шт",0);
		ИтогиПоРеестру.Вставить("КолЛитр", 	0);
		ИтогиПоРеестру.Вставить("КолШт", 	0);
		ИтогиПоРеестру.Вставить("КолКг", 	0);
		
		Выборка = Шапка.Приложение8.Выбрать();
		КоличествоСтрок = Выборка.Количество();
		ВыводимаяСтрока = 1;
		
		Пока Выборка.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Заполнить(Выборка);
			
			ИтогиПоЛисту.КолТонна 		= ИтогиПоЛисту.КолТонна 	+ ?(Выборка.ЕдИзмер = ЕдИзм_Тонна, 	Выборка.ОблагаемыйОбъем, 0);
			ИтогиПоЛисту.Кол1000шт 		= ИтогиПоЛисту.Кол1000шт 	+ ?(Выборка.ЕдИзмер = ЕдИзм_1000шт, Выборка.ОблагаемыйОбъем, 0);
			ИтогиПоЛисту.КолЛитр 		= ИтогиПоЛисту.КолЛитр 		+ ?(Выборка.ЕдИзмер = ЕдИзм_Литр, 	Выборка.ОблагаемыйОбъем, 0);
			ИтогиПоЛисту.КолШт 			= ИтогиПоЛисту.КолШт 		+ ?(Выборка.ЕдИзмер = ЕдИзм_Шт, 	Выборка.ОблагаемыйОбъем, 0);
			ИтогиПоЛисту.КолКг 			= ИтогиПоЛисту.КолКг 		+ ?(Выборка.ЕдИзмер = ЕдИзм_Кг, 	Выборка.ОблагаемыйОбъем, 0);
			
			ИтогиПоРеестру.КолТонна 	= ИтогиПоРеестру.КолТонна 	+ ?(Выборка.ЕдИзмер = ЕдИзм_Тонна, 	Выборка.ОблагаемыйОбъем, 0);
			ИтогиПоРеестру.Кол1000шт 	= ИтогиПоРеестру.Кол1000шт 	+ ?(Выборка.ЕдИзмер = ЕдИзм_1000шт, Выборка.ОблагаемыйОбъем, 0);
			ИтогиПоРеестру.КолЛитр 		= ИтогиПоРеестру.КолЛитр 	+ ?(Выборка.ЕдИзмер = ЕдИзм_Литр, 	Выборка.ОблагаемыйОбъем, 0);
			ИтогиПоРеестру.КолШт 		= ИтогиПоРеестру.КолШт 		+ ?(Выборка.ЕдИзмер = ЕдИзм_Шт, 	Выборка.ОблагаемыйОбъем, 0);
			ИтогиПоРеестру.КолКг 		= ИтогиПоРеестру.КолКг 		+ ?(Выборка.ЕдИзмер = ЕдИзм_Кг, 	Выборка.ОблагаемыйОбъем, 0);
			
			Если КоличествоСтрок = ВыводимаяСтрока Тогда
				МассивПроверки.Добавить(ОбластьИтог);
				МассивПроверки.Добавить(ОбластьПодвал);
				Вывод = ТабличныйДокумент.ПроверитьВывод(МассивПроверки);
			Иначе
				Вывод = ТабличныйДокумент.ПроверитьВывод(МассивПроверки);
			КонецЕсли;	
				
			Если Вывод Тогда
				ТабличныйДокумент.Вывести(ОбластьСтрока);	
			Иначе
				ОбластьИтогиПоЛисту.Параметры.Заполнить(ИтогиПоЛисту);
				ТабличныйДокумент.Вывести(ОбластьИтогиПоЛисту);
				ИтогиПоЛисту.КолТонна 	= 0;
				ИтогиПоЛисту.Кол1000шт 	= 0;
				ИтогиПоЛисту.КолЛитр 	= 0;
				ИтогиПоЛисту.КолШт 		= 0;
				ИтогиПоЛисту.КолКг 		= 0;
				
				ТабличныйДокумент.Вывести(ОбластьСтрока);
			КонецЕсли;	
			
			Если КоличествоСтрок = ВыводимаяСтрока Тогда
				Если Вывод Тогда
					ОбластьИтогиПоЛисту.Параметры.Заполнить(ИтогиПоЛисту);
					ТабличныйДокумент.Вывести(ОбластьИтогиПоЛисту);	
				КонецЕсли;	
									
				ОбластьИтог.Параметры.Заполнить(ИтогиПоРеестру);
				ТабличныйДокумент.Вывести(ОбластьИтог);
				ТабличныйДокумент.Вывести(ОбластьПодвал);
			КонецЕсли;
			
			ВыводимаяСтрока = ВыводимаяСтрока + 1;
		КонецЦикла;	
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

// Функция формирует табличный документ с печатной формой ПечатьНакладной
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриложение9(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетПоКосвеннымНалогам.Ссылка КАК Ссылка,
		|	ОтчетПоКосвеннымНалогам.Дата КАК Дата,
		|	ОтчетПоКосвеннымНалогам.Организация КАК Организация,
		|	ОтчетПоКосвеннымНалогам.Приложение9.(
		|		НомерГрафыОтчета КАК НомерГрафыОтчета,
		|		КоличествоИмпортированныхПодакцизныхТоваров КАК КоличествоТоваров,
		|		СтоимостьИмпортированныхПодакцизныхТоваров КАК СтоимостьТоваров
		|	) КАК Приложение9
		|ИЗ
		|	Документ.ОтчетПоКосвеннымНалогам КАК ОтчетПоКосвеннымНалогам
		|ГДЕ
		|	ОтчетПоКосвеннымНалогам.Ссылка В(&СписокДокументов)";		
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоКосвеннымНалогам_Приложение9";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение9");
	ИмяМакета = "Приложение9";
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаОтчета");
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", 	Шапка.Организация);
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(Шапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(Шапка.Дата));

 		ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьМакета, ИмяМакета);
		
		ДанныеПечати = Новый Структура();
		ДанныеПечати.Вставить("КоличествоИмпортированныхПодакцизныхТоваров909_литр"	, 	0);
		ДанныеПечати.Вставить("КоличествоИмпортированныхПодакцизныхТоваров909_шт" , 	0);
		ДанныеПечати.Вставить("КоличествоИмпортированныхПодакцизныхТоваров909_тонна" , 	0);
		ДанныеПечати.Вставить("СтоимостьИмпортированныхПодакцизныхТоваров909", 			0);
		
		Выборка = Шапка.Приложение9.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.НомерГрафыОтчета = "901" Тогда
				ОбластьМакета.Параметры.КоличествоИмпортированныхПодакцизныхТоваров901 	= Выборка.КоличествоТоваров;
				ОбластьМакета.Параметры.СтоимостьИмпортированныхПодакцизныхТоваров901 	= Выборка.СтоимостьТоваров;
				ДанныеПечати.КоличествоИмпортированныхПодакцизныхТоваров909_литр 		= Выборка.СтоимостьТоваров;
				ДанныеПечати.СтоимостьИмпортированныхПодакцизныхТоваров909 				
					= ДанныеПечати.СтоимостьИмпортированныхПодакцизныхТоваров909+  Выборка.СтоимостьТоваров;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "902" Тогда
				ОбластьМакета.Параметры.КоличествоИмпортированныхПодакцизныхТоваров902 	= Выборка.КоличествоТоваров;
				ОбластьМакета.Параметры.СтоимостьИмпортированныхПодакцизныхТоваров902 	= Выборка.СтоимостьТоваров;
				ДанныеПечати.КоличествоИмпортированныхПодакцизныхТоваров909_шт 			= Выборка.СтоимостьТоваров;
				
				ДанныеПечати.СтоимостьИмпортированныхПодакцизныхТоваров909 				
					= ДанныеПечати.СтоимостьИмпортированныхПодакцизныхТоваров909+  Выборка.СтоимостьТоваров;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "903" Тогда
				ОбластьМакета.Параметры.КоличествоИмпортированныхПодакцизныхТоваров903 	= Выборка.КоличествоТоваров;
				ОбластьМакета.Параметры.СтоимостьИмпортированныхПодакцизныхТоваров903 	= Выборка.СтоимостьТоваров;
				ДанныеПечати.КоличествоИмпортированныхПодакцизныхТоваров909_тонна 		
					= ДанныеПечати.КоличествоИмпортированныхПодакцизныхТоваров909_тонна + Выборка.СтоимостьТоваров;
					
				ДанныеПечати.СтоимостьИмпортированныхПодакцизныхТоваров909 				
					= ДанныеПечати.СтоимостьИмпортированныхПодакцизныхТоваров909+  Выборка.СтоимостьТоваров;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "904" Тогда
				ОбластьМакета.Параметры.КоличествоИмпортированныхПодакцизныхТоваров904 	= Выборка.КоличествоТоваров;
				ОбластьМакета.Параметры.СтоимостьИмпортированныхПодакцизныхТоваров904 	= Выборка.СтоимостьТоваров;
				ДанныеПечати.КоличествоИмпортированныхПодакцизныхТоваров909_тонна 		
					= ДанныеПечати.КоличествоИмпортированныхПодакцизныхТоваров909_тонна + Выборка.СтоимостьТоваров;
					
				ДанныеПечати.СтоимостьИмпортированныхПодакцизныхТоваров909 				
					= ДанныеПечати.СтоимостьИмпортированныхПодакцизныхТоваров909+  Выборка.СтоимостьТоваров;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "905" Тогда
				ОбластьМакета.Параметры.КоличествоИмпортированныхПодакцизныхТоваров905 	= Выборка.КоличествоТоваров;
				ОбластьМакета.Параметры.СтоимостьИмпортированныхПодакцизныхТоваров905 	= Выборка.СтоимостьТоваров;
				ДанныеПечати.КоличествоИмпортированныхПодакцизныхТоваров909_тонна 		
					= ДанныеПечати.КоличествоИмпортированныхПодакцизныхТоваров909_тонна + Выборка.СтоимостьТоваров;
					
				ДанныеПечати.СтоимостьИмпортированныхПодакцизныхТоваров909 				
					= ДанныеПечати.СтоимостьИмпортированныхПодакцизныхТоваров909+  Выборка.СтоимостьТоваров;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "906" Тогда
				ОбластьМакета.Параметры.КоличествоИмпортированныхПодакцизныхТоваров906 	= Выборка.КоличествоТоваров;
				ОбластьМакета.Параметры.СтоимостьИмпортированныхПодакцизныхТоваров906 	= Выборка.СтоимостьТоваров;
				ДанныеПечати.КоличествоИмпортированныхПодакцизныхТоваров909_тонна 		
					= ДанныеПечати.КоличествоИмпортированныхПодакцизныхТоваров909_тонна + Выборка.СтоимостьТоваров;
					
				ДанныеПечати.СтоимостьИмпортированныхПодакцизныхТоваров909 				
					= ДанныеПечати.СтоимостьИмпортированныхПодакцизныхТоваров909+  Выборка.СтоимостьТоваров;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "907" Тогда
				ОбластьМакета.Параметры.КоличествоИмпортированныхПодакцизныхТоваров907 	= Выборка.КоличествоТоваров;
				ОбластьМакета.Параметры.СтоимостьИмпортированныхПодакцизныхТоваров907 	= Выборка.СтоимостьТоваров;
				ДанныеПечати.КоличествоИмпортированныхПодакцизныхТоваров909_тонна 		
					= ДанныеПечати.КоличествоИмпортированныхПодакцизныхТоваров909_тонна + Выборка.СтоимостьТоваров;
					
				ДанныеПечати.СтоимостьИмпортированныхПодакцизныхТоваров909 				
					= ДанныеПечати.СтоимостьИмпортированныхПодакцизныхТоваров909+  Выборка.СтоимостьТоваров;
				
			ИначеЕсли Выборка.НомерГрафыОтчета = "908" Тогда
				ОбластьМакета.Параметры.КоличествоИмпортированныхПодакцизныхТоваров908 	= Выборка.КоличествоТоваров;
				ОбластьМакета.Параметры.СтоимостьИмпортированныхПодакцизныхТоваров908 	= Выборка.СтоимостьТоваров;
				ДанныеПечати.КоличествоИмпортированныхПодакцизныхТоваров909_тонна 		
					= ДанныеПечати.КоличествоИмпортированныхПодакцизныхТоваров909_тонна + Выборка.СтоимостьТоваров;
					
				ДанныеПечати.СтоимостьИмпортированныхПодакцизныхТоваров909 				
					= ДанныеПечати.СтоимостьИмпортированныхПодакцизныхТоваров909+  Выборка.СтоимостьТоваров;
			КонецЕсли;
		КонецЦикла;	
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.     
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;      
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОсновнаяФорма") Тогда
		 //Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"ОсновнаяФорма",  НСтр("ru = 'Основная форма'"), ПечатьОсновнаяФорма(МассивОбъектов, ОбъектыПечати),,
			"Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_ОсновнаяФорма");
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение1") Тогда
		 //Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"Приложение1",  НСтр("ru = 'Приложение 1'"), ПечатьПриложение1(МассивОбъектов, ОбъектыПечати),,
			"Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение1");
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение2") Тогда
		 //Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"Приложение2",  НСтр("ru = 'Приложение 2'"), ПечатьПриложение2(МассивОбъектов, ОбъектыПечати),,
			"Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение2");
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение2_1") Тогда
		 //Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"Приложение2_1",  НСтр("ru = 'Приложение 2.1'"), ПечатьПриложение2_1(МассивОбъектов, ОбъектыПечати),,
			"Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение2_1");
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение3") Тогда
		 //Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"Приложение3",  НСтр("ru = 'Приложение 3'"), ПечатьПриложение3(МассивОбъектов, ОбъектыПечати),,
			"Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение3");
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение4") Тогда
		 //Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"Приложение4",  НСтр("ru = 'Приложение 4'"), ПечатьПриложение4(МассивОбъектов, ОбъектыПечати),,
			"Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение4");
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение5") Тогда
		 //Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"Приложение5",  НСтр("ru = 'Приложение 5'"), ПечатьПриложение5(МассивОбъектов, ОбъектыПечати),,
			"Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение5");
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение6") Тогда
		 //Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"Приложение6",  НСтр("ru = 'Приложение 6'"), ПечатьПриложение6(МассивОбъектов, ОбъектыПечати),,
			"Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение6");
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение6_1") Тогда
		 //Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"Приложение6_1",  НСтр("ru = 'Приложение 6.1'"), ПечатьПриложение6_1(МассивОбъектов, ОбъектыПечати),,
			"Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение6_1");
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение7") Тогда
		 //Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"Приложение7",  НСтр("ru = 'Приложение 7'"), ПечатьПриложение7(МассивОбъектов, ОбъектыПечати),,
			"Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение7");
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение8") Тогда
		 //Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"Приложение8",  НСтр("ru = 'Приложение 8'"), ПечатьПриложение8(МассивОбъектов, ОбъектыПечати),,
			"Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение8");
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение9") Тогда
		 //Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"Приложение9",  НСтр("ru = 'Приложение 9'"), ПечатьПриложение9(МассивОбъектов, ОбъектыПечати),,
			"Документ.ОтчетПоКосвеннымНалогам.ПФ_MXL_Приложение9");
	КонецЕсли;	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
		
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОсновнаяФорма";
	КомандаПечати.Представление = НСтр("ru = 'Основная форма'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение1";
	КомандаПечати.Представление = НСтр("ru = 'Приложение 1'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 2;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение2";
	КомандаПечати.Представление = НСтр("ru = 'Приложение 2'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 3;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение2_1";
	КомандаПечати.Представление = НСтр("ru = 'Приложение 2.1'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 4;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение3";
	КомандаПечати.Представление = НСтр("ru = 'Приложение 3'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 5;

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение4";
	КомандаПечати.Представление = НСтр("ru = 'Приложение 4'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 6;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение5";
	КомандаПечати.Представление = НСтр("ru = 'Приложение 5'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 7;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение6";
	КомандаПечати.Представление = НСтр("ru = 'Приложение 6'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 8;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение6_1";
	КомандаПечати.Представление = НСтр("ru = 'Приложение 6.1'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 9;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение7";
	КомандаПечати.Представление = НСтр("ru = 'Приложение 7'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 10;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение8";
	КомандаПечати.Представление = НСтр("ru = 'Приложение 8'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 11;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение9";
	КомандаПечати.Представление = НСтр("ru = 'Приложение 9'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 12;
	
	Если НЕ ПользователиКлиентСервер.ЭтоСеансВнешнегоПользователя() Тогда
		// Настраиваемый комплект документов.
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ОсновнаяФорма,Приложение1,Приложение2,Приложение2_1,Приложение3,Приложение4,Приложение5,Приложение6,Приложение6_1,Приложение7,Приложение8,Приложение9";
		КомандаПечати.Представление = НСтр("ru = 'Комплект'");
		КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
		КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
		КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Настраиваемый комплект'");
		КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
		КомандаПечати.Порядок = 75;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецЕсли