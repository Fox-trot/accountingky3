#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Процедура - Заполнить шапку отчета
//
// Параметры:
//  НачалоПериода	 - 	 - 
//  КонецПериода	 - 	 - 
//  Организация		 - 	 - 
//  ОбластьШапка	 - 	 - 
//
Процедура ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьШапка)
	
	Организация 	= СтруктураПараметров.Организация;
	НачалоПериода 	= СтруктураПараметров.НачалоПериода;
	КонецПериода 	= СтруктураПараметров.КонецПериода;	

	ГоловнаяОрганизация = Организация.ГоловнаяОрганизация;
	
	ОКПО              				= Организация.КодПоОКПО;
	ИНН 							= ГоловнаяОрганизация.ИНН;
	КодГНС 							= СтруктураПараметров.ГНСКод;
	ОрганизацияНаменованиеПолное    = ГоловнаяОрганизация.НаименованиеПолное
										+ ?(ЗначениеЗаполнено(ГоловнаяОрганизация.НаименованиеПолное), Символы.ПС + " (", "")
										+ Организация.НаименованиеПолное
										+ ?(ЗначениеЗаполнено(ГоловнаяОрганизация.НаименованиеПолное), ")", "");	
	
	КонтактныеДанные = ПолучитьКонтактнуюИнформацию(Организация);
	
	Индекс           = КонтактныеДанные.Индекс;
	АдрОбластьГород  = КонтактныеДанные.АдрОбластьГород;
	ЮрАдрес	         = КонтактныеДанные.АдресОрганизации; 
	Телефон		     = КонтактныеДанные.Телефон;	
			
	ОбластьШапка.Параметры.ОрганизацияНаименованиеПолное = ОрганизацияНаменованиеПолное;
	Если ЗначениеЗаполнено(АдрОбластьГород) Тогда 
		ОбластьШапка.Параметры.АдресГород = АдрОбластьГород;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЮрАдрес) Тогда 
		ОбластьШапка.Параметры.АдресУлица = ЮрАдрес;
	КонецЕсли;
	
	ОбластьШапка.Параметры.Телефон = Телефон;
	
	Если ЗначениеЗаполнено(Индекс) ТОгда
		
		ОбластьШапка.Параметры.Индекс1 = Сред(Индекс,1,1);
		ОбластьШапка.Параметры.Индекс2 = Сред(Индекс,2,1);
		ОбластьШапка.Параметры.Индекс3 = Сред(Индекс,3,1);
		ОбластьШапка.Параметры.Индекс4 = Сред(Индекс,4,1);
		ОбластьШапка.Параметры.Индекс5 = Сред(Индекс,5,1);
		ОбластьШапка.Параметры.Индекс6 = Сред(Индекс,6,1);
		
	КонецЕсли;

	Если ЗначениеЗаполнено(ОКПО) Тогда 
		ОбластьШапка.Параметры.ОКПО1 = Сред(ОКПО,1,1);
		ОбластьШапка.Параметры.ОКПО2 = Сред(ОКПО,2,1);
		ОбластьШапка.Параметры.ОКПО3 = Сред(ОКПО,3,1);
		ОбластьШапка.Параметры.ОКПО4 = Сред(ОКПО,4,1);
		ОбластьШапка.Параметры.ОКПО5 = Сред(ОКПО,5,1);
		ОбластьШапка.Параметры.ОКПО6 = Сред(ОКПО,6,1);
		ОбластьШапка.Параметры.ОКПО7 = Сред(ОКПО,7,1);
		ОбластьШапка.Параметры.ОКПО8 = Сред(ОКПО,8,1);
	КонецЕсли;
	
	ОбластьШапка.Параметры.ИНН1 = Сред(ИНН, 1, 1);
	ОбластьШапка.Параметры.ИНН2 = Сред(ИНН, 2, 1);
	ОбластьШапка.Параметры.ИНН3 = Сред(ИНН, 3, 1);                           
	ОбластьШапка.Параметры.ИНН4 = Сред(ИНН, 4, 1);
	ОбластьШапка.Параметры.ИНН5 = Сред(ИНН, 5, 1);
	ОбластьШапка.Параметры.ИНН6 = Сред(ИНН, 6, 1);
	ОбластьШапка.Параметры.ИНН7 = Сред(ИНН, 7, 1);
	ОбластьШапка.Параметры.ИНН8 = Сред(ИНН, 8, 1);
	ОбластьШапка.Параметры.ИНН9 = Сред(ИНН, 9, 1);
	ОбластьШапка.Параметры.ИНН10 = Сред(ИНН, 10, 1);
	ОбластьШапка.Параметры.ИНН11 = Сред(ИНН, 11, 1);
	ОбластьШапка.Параметры.ИНН12 = Сред(ИНН, 12, 1);
	ОбластьШапка.Параметры.ИНН13 = Сред(ИНН, 13, 1);
	ОбластьШапка.Параметры.ИНН14 = Сред(ИНН, 14, 1);
	
	ОбластьШапка.Параметры.Налоговая = СтруктураПараметров.ГНСНаименование;
	
	ОбластьШапка.Параметры.Код1 = Сред(КодГНС, 1, 1);
	ОбластьШапка.Параметры.Код2 = Сред(КодГНС, 2, 1);
	ОбластьШапка.Параметры.Код3 = Сред(КодГНС, 3, 1);
	
	ОбластьШапка.Параметры.ДатаН1 = Сред(НачалоПериода, 1, 1);	
	ОбластьШапка.Параметры.ДатаН2 = Сред(НачалоПериода, 2, 1);	
	ОбластьШапка.Параметры.ДатаН3 = Сред(НачалоПериода, 4, 1);	
	ОбластьШапка.Параметры.ДатаН4 = Сред(НачалоПериода, 5, 1);	
	ОбластьШапка.Параметры.ДатаН5 = Сред(НачалоПериода, 7, 1);	
	ОбластьШапка.Параметры.ДатаН6 = Сред(НачалоПериода, 8, 1);	
	ОбластьШапка.Параметры.ДатаН7 = Сред(НачалоПериода, 9, 1);	
	ОбластьШапка.Параметры.ДатаН8 = Сред(НачалоПериода, 10, 1);	
	
	ОбластьШапка.Параметры.ДатаК1 = Сред(КонецПериода, 1, 1);	
	ОбластьШапка.Параметры.ДатаК2 = Сред(КонецПериода, 2, 1);	
	ОбластьШапка.Параметры.ДатаК3 = Сред(КонецПериода, 4, 1);	
	ОбластьШапка.Параметры.ДатаК4 = Сред(КонецПериода, 5, 1);	
	ОбластьШапка.Параметры.ДатаК5 = Сред(КонецПериода, 7, 1);	
	ОбластьШапка.Параметры.ДатаК6 = Сред(КонецПериода, 8, 1);	
	ОбластьШапка.Параметры.ДатаК7 = Сред(КонецПериода, 9, 1);	
	ОбластьШапка.Параметры.ДатаК8 = Сред(КонецПериода, 10, 1);

КонецПроцедуры

// Функция -ПолучитьКонтактнуюИнформацию
//
// Параметры:
//  Организация  - Спр.Ссылка - Спр.Органинизации 
// Возвращаемое значение:
//  Структура   - структура данных контактной информации
//
Функция ПолучитьКонтактнуюИнформацию(Организация)
	
	СтруктураКонтактнойИнформации = УправлениеКонтактнойИнформациейКлиентСервер.СтруктураКонтактнойИнформацииПоТипу(Перечисления.ТипыКонтактнойИнформации.Адрес);
	ТаблицаКонтактнойИнформации = УправлениеКонтактнойИнформацией.ТаблицаКонтактнойИнформацииОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	
	Если ТаблицаКонтактнойИнформации.Количество() > 0 Тогда 		
		СтруктураКонтактнойИнформации = ТаблицаКонтактнойИнформации[0].СтруктураПолей;
	КонецЕсли;
	Если СтруктураКонтактнойИнформации.Количество() > 3 Тогда 
		Индекс		    = СтруктураКонтактнойИнформации.Индекс; 
		ГородНасПункт   = ?(СтруктураКонтактнойИнформации.Город  = "",СтруктураКонтактнойИнформации.НаселенныйПункт,СтруктураКонтактнойИнформации.Город);
		АдрОбластьГород = ?(СтруктураКонтактнойИнформации.Регион = "","",СтруктураКонтактнойИнформации.Регион + ",")
		                + ?(СтруктураКонтактнойИнформации.Район  = "","", " " + СтруктураКонтактнойИнформации.Район + ",") 
						+ ?(ГородНасПункт = "",""," " + ГородНасПункт); 
		АдресОрганизации = ?(СтруктураКонтактнойИнформации.Улица    = "","",СтруктураКонтактнойИнформации.Улица + ",")
						 + ?(СтруктураКонтактнойИнформации.Дом      = "",""," " + СтруктураКонтактнойИнформации.Дом + ",")
						 + ?(СтруктураКонтактнойИнформации.Корпус   = "",""," " + СтруктураКонтактнойИнформации.Корпус + ",")
						 + ?(СтруктураКонтактнойИнформации.Квартира = "",""," " + СтруктураКонтактнойИнформации.Квартира);
		
	Иначе
		Индекс			 = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации); 
		АдрОбластьГород  = ""; 
		АдресОрганизации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);		
	КонецЕсли;	
	
	Телефон		= УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	
	Структура = Новый Структура("Индекс,АдрОбластьГород,АдресОрганизации,Телефон", Индекс,АдрОбластьГород,АдресОрганизации,Телефон);
	
	Возврат Структура;
	
КонецФункции // ПолучитьАдресОрганизации()

#КонецОбласти

#Область ИнтерфейсПечати

Функция ПечатьОтчетаПоНСП(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст =	
	"ВЫБРАТЬ
	|	ОтчетПоНСПОтчетОсновной.Ссылка КАК Ссылка,
	|	ОтчетПоНСПОтчетОсновной.Ссылка.Организация,
	|	ОтчетПоНСПОтчетОсновной.Ссылка.Дата,
	|	ОтчетПоНСПОтчетОсновной.Ссылка.ВидСубъекта КАК ВидСубъекта,
	|	ОтчетПоНСПОтчетОсновной.Строка,
	|	ОтчетПоНСПОтчетОсновной.Выручка,
	|	ОтчетПоНСПОтчетОсновной.СуммаНСП КАК СуммаНСП,
	|	ОтчетПоНСПОтчетОсновной.Ставка,
	|	ЕСТЬNULL(ОтчетПоНСПОтчетОсновной.Ссылка.Организация.ГНС.Наименование, """") КАК ГНСНаименование,
	|	ОтчетПоНСПОтчетОсновной.Ссылка.Организация.ГНС.Код КАК ГНСКод
	|ИЗ
	|	Документ.ОтчетПоНСП.ОтчетОсновной КАК ОтчетПоНСПОтчетОсновной
	|ГДЕ
	|	ОтчетПоНСПОтчетОсновной.Ссылка В(&МассивОбъектов)
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_ОтчетПоНДСОсновной";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоНСП.ПФ_MXL_ОтчетПоНСП");
	ОбластьШапка	= Макет.ПолучитьОбласть("Шапка");
	
	ВыборкаШапка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаШапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("НачалоПериода", 	НачалоМесяца(ВыборкаШапка.Дата));
		СтруктураПараметров.Вставить("КонецПериода", 	КонецМесяца(ВыборкаШапка.Дата));
		СтруктураПараметров.Вставить("Организация", 	ВыборкаШапка.Организация);

		ВыборкаОрганизация = ВыборкаШапка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаОрганизация.Следующий() Цикл	
			СтруктураПараметров.Вставить("ГНСКод", 				ВыборкаОрганизация.ГНСКод);
			СтруктураПараметров.Вставить("ГНСНаименование", 	ВыборкаОрганизация.ГНСНаименование);		
			
			Выборка = ВыборкаОрганизация.Выбрать();	
		
			//1. Заполнение шапки
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьШапка);
			
			Если ВыборкаОрганизация.ВидСубъекта = 0 Тогда 
				НомерSTI = "129";
			    НомерПриложения = "1";
				Заголовок = "ОТЧЕТ ПО НАЛОГУ С ПРОДАЖ
					|СУБЪЕКТА МАЛОГО ПРЕДПРИНИМАТЕЛЬСТВА";
			ИначеЕсли ВыборкаОрганизация.ВидСубъекта = 1 Тогда 
				НомерSTI = "130";
			    НомерПриложения = "2";
				Заголовок = "ОТЧЕТ ПО НАЛОГУ С ПРОДАЖ
					|СУБЪЕКТА СРЕДНЕГО ПРЕДПРИНИМАТЕЛЬСТВА";
			ИначеЕсли ВыборкаОрганизация.ВидСубъекта = 2 Тогда 
				НомерSTI = "131";
			    НомерПриложения = "3";
				Заголовок = "ОТЧЕТ ПО НАЛОГУ С ПРОДАЖ СУБЪЕКТА
					|(ЗА ИСКЛЮЧЕНИЕМ СУБЪЕКА МАЛОГО И СРЕДНЕГО ПРЕДПРИНИМАТЕЛЬСТВА)";
			КонецЕсли;	
				
			ОбластьШапка.Параметры.НомерSTI = НомерSTI;
			ОбластьШапка.Параметры.НомерПриложения = НомерПриложения;
			ОбластьШапка.Параметры.Заголовок = Заголовок;
				
			ИтогНСП_Секция1 = 0;
			ИтогНСП_Секция2 = 0;
			Пока Выборка.Следующий() Цикл
				Если Выборка.Строка = "050" Тогда
					ОбластьШапка.Параметры.СуммаТорг1 = Выборка.Выручка;
					ОбластьШапка.Параметры.СтавкаТорг1 = Выборка.Ставка;
					ОбластьШапка.Параметры.НСПТорг1 = Выборка.СуммаНСП;
					ИтогНСП_Секция1 = ИтогНСП_Секция1 + Выборка.СуммаНСП;
				ИначеЕсли Выборка.Строка = "053" Тогда
					ОбластьШапка.Параметры.СуммаСвязь1 = Выборка.Выручка;
					ОбластьШапка.Параметры.СтавкаСвязь1 = Выборка.Ставка;
					ОбластьШапка.Параметры.НСПСвязь1 = Выборка.СуммаНСП;
					ИтогНСП_Секция1 = ИтогНСП_Секция1 + Выборка.СуммаНСП;
				ИначеЕсли Выборка.Строка = "056" Тогда
					ОбластьШапка.Параметры.СуммаПроч1 = Выборка.Выручка;
					ОбластьШапка.Параметры.СтавкаПроч1 = Выборка.Ставка;
					ОбластьШапка.Параметры.НСППроч1 = Выборка.СуммаНСП;
					ИтогНСП_Секция1 = ИтогНСП_Секция1 + Выборка.СуммаНСП;
				ИначеЕсли Выборка.Строка = "060" Тогда
					ОбластьШапка.Параметры.СуммаТорг2 = Выборка.Выручка;
					ОбластьШапка.Параметры.СтавкаТорг2 = Выборка.Ставка;
					ОбластьШапка.Параметры.НСПТорг2 = Выборка.СуммаНСП;
					ИтогНСП_Секция2 = ИтогНСП_Секция2 + Выборка.СуммаНСП;
				ИначеЕсли Выборка.Строка = "063" Тогда
					ОбластьШапка.Параметры.СуммаСвязь2 = Выборка.Выручка;
					ОбластьШапка.Параметры.СтавкаСвязь2 = Выборка.Ставка;
					ОбластьШапка.Параметры.НСПСвязь2 = Выборка.СуммаНСП;
					ИтогНСП_Секция2 = ИтогНСП_Секция2 + Выборка.СуммаНСП;
				ИначеЕсли Выборка.Строка = "066" Тогда
					ОбластьШапка.Параметры.СуммаПроч2 = Выборка.Выручка;
					ОбластьШапка.Параметры.СтавкаПроч2 = Выборка.Ставка;
					ОбластьШапка.Параметры.НСППроч2 = Выборка.СуммаНСП;
					ИтогНСП_Секция2 = ИтогНСП_Секция2 + Выборка.СуммаНСП;
				КонецЕсли;

			КонецЦикла;
			
			КонтактныеДанные = ПолучитьКонтактнуюИнформацию(ВыборкаШапка.Организация);
			АдрОбластьГород  = КонтактныеДанные.АдрОбластьГород;

			ОбластьШапка.Параметры.АдресГород = АдрОбластьГород;
			
			ОбластьШапка.Параметры.НСПИтог1 = ИтогНСП_Секция1;
			ОбластьШапка.Параметры.НСПИтог2 = ИтогНСП_Секция2;
			ОбластьШапка.Параметры.НСПИтог 	= ИтогНСП_Секция1 + ИтогНСП_Секция2;
						
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			ТабличныйДокумент.Вывести(ОбластьШапка);
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаШапка.Ссылка);
		КонецЦикла;	
	
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ОтчетПоНСП") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ПФ_MXL_ОтчетПоНСП", 
		"Отчет по НСП", 
		ПечатьОтчетаПоНСП(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоНСП.ПФ_MXL_ОтчетПоНСП");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_ОтчетПоНСП";
	КомандаПечати.Представление = НСтр("ru = 'Отчет по НСП'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 1;
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли