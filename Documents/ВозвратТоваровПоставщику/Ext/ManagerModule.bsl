#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПроцедурыПроведенияДокумента

Процедура СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Период КАК Период,
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратТоваровПоставщику.ВозвратПоставщику)
	|			ТОГДА ВременнаяТаблицаШапка.СчетУчетаРасчетовПоВозвратам
	|		ИНАЧЕ ВременнаяТаблицаШапка.СчетУчетаРасчетовСКонтрагентом
	|	КОНЕЦ КАК СчетДт,
	|	ВременнаяТаблицаТовары.СчетУчета КАК СчетКт,
	|	ВременнаяТаблицаШапка.Контрагент КАК СубконтоДт1,
	|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	ВременнаяТаблицаТовары.Номенклатура КАК СубконтоКт1,
	|	ВременнаяТаблицаШапка.Склад КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	ВременнаяТаблицаТовары.Сумма * ВременнаяТаблицаШапка.Курс КАК Сумма,
	|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаДт,
	|	ВременнаяТаблицаТовары.Сумма КАК ВалютнаяСуммаДт,
	|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаКт,
	|	ВременнаяТаблицаТовары.Сумма КАК ВалютнаяСуммаКт,
	|	""Возврат ТМЗ - "" + ВременнаяТаблицаШапка.ВидОперацииНаименование КАК Содержание,
	|	ВременнаяТаблицаТовары.Количество КАК КоличествоДт,
	|	ВременнаяТаблицаТовары.Количество КАК КоличествоКт
	|ИЗ
	|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|		ПО (ИСТИНА)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратТоваровПоставщику.ВозвратПоставщику)
	|			ТОГДА ВременнаяТаблицаШапка.СчетУчетаРасчетовПоВозвратам
	|		ИНАЧЕ ВременнаяТаблицаШапка.СчетУчетаРасчетовСКонтрагентом
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС_ПодлежащийВозмещению),
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ВременнаяТаблицаТовары.СуммаНДС * ВременнаяТаблицаШапка.Курс,
	|	ВременнаяТаблицаШапка.ВалютаДокумента,
	|	ВременнаяТаблицаТовары.СуммаНДС,
	|	ВременнаяТаблицаШапка.ВалютаДокумента,
	|	ВременнаяТаблицаТовары.СуммаНДС,
	|	""Возврат ТМЗ - НДС"",
	|	0,
	|	0
	|ИЗ
	|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВременнаяТаблицаТовары.СуммаНДС <> 0";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаХозрасчетный", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

Процедура СформироватьТаблицаПоступления(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Ссылка КАК ДокументПоступления,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаШапка.Контрагент,
	|	ВременнаяТаблицаШапка.ДоговорКонтрагента,	
	|	ВременнаяТаблицаТовары.Номенклатура,
	|	ВременнаяТаблицаТовары.СтавкаНДС,
	|	-ВременнаяТаблицаТовары.СуммаНДС * ВременнаяТаблицаШапка.Курс КАК СуммаНДС,
	|	-ВременнаяТаблицаТовары.Сумма * ВременнаяТаблицаШапка.Курс КАК СуммаСебестоимости,
	|	-ВременнаяТаблицаТовары.СуммаНСП * ВременнаяТаблицаШапка.Курс КАК СуммаНеоблагаемая,
	|	-ВременнаяТаблицаТовары.СуммаНДС КАК СуммаНДСВал,
	|	-ВременнаяТаблицаТовары.Сумма КАК СуммаСебестоимостиВал,
	|	-ВременнаяТаблицаТовары.СуммаНСП КАК СуммаНеоблагаемаяВал,
	|	-ВременнаяТаблицаТовары.Количество КАК Количество
	|ИЗ
	|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|		ПО (ИСТИНА)";
	
	РезультатЗапроса = Запрос.Выполнить();
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПоступления", РезультатЗапроса.Выгрузить());
		
КонецПроцедуры 

Процедура СформироватьТаблицаЗапасы(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаТовары.СчетУчета,
	|	ВременнаяТаблицаШапка.Склад,
	|	ВременнаяТаблицаТовары.Номенклатура,
	|	ВременнаяТаблицаШапка.ДокументОснование КАК Партия,
	|	ВременнаяТаблицаТовары.Количество,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВременнаяТаблицаТовары.Цена * ВременнаяТаблицаШапка.Курс КАК Цена,
	|	ВременнаяТаблицаТовары.Всего * ВременнаяТаблицаШапка.Курс КАК Сумма
	|ИЗ
	|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|		ПО (ИСТИНА)";
	
	РезультатЗапроса = Запрос.Выполнить();
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасы", РезультатЗапроса.Выгрузить());
		
КонецПроцедуры 

Процедура СформироватьТаблицаПоступленияИтоги(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаШапка.Ссылка КАК ДокументПоступления,
	|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК Договор,
	|	ВременнаяТаблицаШапка.СерияБланкаСФ КАК СерияБланкаСФ,
	|	ВременнаяТаблицаШапка.НомерБланкаСФ КАК НомерБланкаСФ,
	|	ВременнаяТаблицаШапка.ДатаСФ КАК ДатаСФ,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыУчетаНДС.Возврат) КАК ВидУчета,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаШапка.Контрагент.СтранаРезидентства = ЗНАЧЕНИЕ(Справочник.СтраныМира.Киргизия)
	|				ИЛИ ВременнаяТаблицаШапка.Контрагент.СтранаРезидентства = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
	|		КОГДА ВременнаяТаблицаШапка.Контрагент.СтранаРезидентства.ЕАЭС
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
	|		КОГДА ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Справочник.ОперацииПоступлениеТоваровУслуг.Импорт)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.Импэкс)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ПустаяСсылка)
	|	КОНЕЦ КАК ПризнакСтраны
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка";
	
	РезультатЗапроса = Запрос.Выполнить();
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПоступленияИтоги", РезультатЗапроса.Выгрузить());
		
КонецПроцедуры 

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц 	= СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВозвратТоваровПоставщику.Ссылка,
	|	ВозвратТоваровПоставщику.Организация,
	|	ВозвратТоваровПоставщику.Дата КАК Период,
	|	ВозвратТоваровПоставщику.ВидОперации,
	|	ВозвратТоваровПоставщику.Контрагент,
	|	ВозвратТоваровПоставщику.ВалютаДокумента,
	|	ВозвратТоваровПоставщику.ДоговорКонтрагента,
	|	ВозвратТоваровПоставщику.Склад,
	|	ВозвратТоваровПоставщику.ДокументОснование,
	|	ВозвратТоваровПоставщику.Курс,
	|	ВозвратТоваровПоставщику.СчетУчетаРасчетовПоВозвратам,
	|	ВозвратТоваровПоставщику.СчетУчетаРасчетовСКонтрагентом,
	|	ВозвратТоваровПоставщику.СерияБланкаСФ,
	|	ВозвратТоваровПоставщику.НомерБланкаСФ,
	|	ВозвратТоваровПоставщику.ТипПоставкиСФ,
	|	ВозвратТоваровПоставщику.ДатаСФ,
	|	&ВидОперацииНаименование
	|ПОМЕСТИТЬ ВременнаяТаблицаШапка
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|ГДЕ
	|	ВозвратТоваровПоставщику.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровПоставщикуТовары.Ссылка,
	|	ВозвратТоваровПоставщикуТовары.Номенклатура,
	|	ВозвратТоваровПоставщикуТовары.Количество,
	|	ВозвратТоваровПоставщикуТовары.Цена,
	|	ВозвратТоваровПоставщикуТовары.Сумма,
	|	ВозвратТоваровПоставщикуТовары.СтавкаНДС,
	|	ВозвратТоваровПоставщикуТовары.СуммаНДС,
	|	ВозвратТоваровПоставщикуТовары.СуммаНСП,
	|	ВозвратТоваровПоставщикуТовары.СчетУчета,
	|	ВозвратТоваровПоставщикуТовары.Всего
	|ПОМЕСТИТЬ ВременнаяТаблицаТовары
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	|ГДЕ
	|	ВозвратТоваровПоставщикуТовары.Ссылка = &ДокументСсылка";	
	
	Запрос.УстановитьПараметр("ДокументСсылка", 			ДокументСсылка);
	Запрос.УстановитьПараметр("ВидОперацииНаименование", 	СтруктураДополнительныеСвойства.ДляПроведения.ВидОперацииНаименование);
	Запрос.Выполнить();    		
		
	СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства);	
	СформироватьТаблицаПоступления(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗапасы(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаПоступленияИтоги(ДокументСсылка, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти

#Область ИнтерфейсПечати

Функция ПечатьНакладной(МассивОбъектов, ОбъектыПечати)
	Перем Ошибки;
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати 	= "ПАРАМЕТРЫ_ПЕЧАТИ_ВозвратТоваровПоставщику_Накладная";
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВозвратТоваровПоставщику.Ссылка,
	|	ВозвратТоваровПоставщику.Номер,
	|	ВозвратТоваровПоставщику.Дата,
	|	ВозвратТоваровПоставщику.ДоговорКонтрагента,
	|	ВозвратТоваровПоставщику.Контрагент,
	|	ВозвратТоваровПоставщику.Организация,
	|	ВозвратТоваровПоставщику.СуммаДокумента,
	|	ВозвратТоваровПоставщику.ВалютаДокумента,
	|	ВозвратТоваровПоставщику.ДоговорКонтрагента.СуммаВключаетНалоги КАК СуммаВключаетНалоги,
	|	ВозвратТоваровПоставщику.Организация.НаименованиеПолное,
	|	ВозвратТоваровПоставщику.Контрагент.НаименованиеПолное,
	|	ВозвратТоваровПоставщику.ВалютаДокумента.Код,
	|	ВозвратТоваровПоставщику.ВалютаДокумента.Наименование,
	|	ВозвратТоваровПоставщику.Товары.(
	|		НомерСтроки,
	|		Номенклатура,
	|		ВЫРАЗИТЬ(ВозвратТоваровПоставщику.Товары.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК Товар,
	|		Количество,
	|		Цена,
	|		Сумма КАК Сумма,
	|		СуммаНДС,
	|		СуммаНСП
	|	)
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|ГДЕ
	|	ВозвратТоваровПоставщику.Ссылка В(&СписокДокументов)";
		

 	Шапка = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока Шапка.Следующий()  Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ТабличныйДокумент.ИмяПараметровПечати 	= "ПередачаОС_Накладная";
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВозвратТоваровПоставщику.ПФ_MXL_Накладная");
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = "Возврат поставщику";
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = Шапка.КонтрагентНаименованиеПолное;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = Шапка.ОрганизацияНаименованиеПолное;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Вывести табличную часть
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		Сумма    = 0;
		СуммаНДС = 0;
		
		СуммаВключаетНалоги = Шапка.ДоговорКонтрагента.СуммаВключаетНалоги;
		
		ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
				Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
				Продолжить;
			КонецЕсли;
			
			Если Шапка.СуммаВключаетНалоги Тогда 
				ТекСумма	= ВыборкаСтрокТовары.Сумма - ВыборкаСтрокТовары.СуммаНДС;
			Иначе
				ТекСумма	= ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.СуммаНСП;
			КонецЕсли;				
			Если ВыборкаСтрокТовары.Количество <> 0 Тогда 
				Цена = Окр(ТекСумма / ВыборкаСтрокТовары.Количество, 2);
			Иначе
				Цена = 0;
			КонецЕсли;				
			Сумма    = Сумма    + ТекСумма;
			СуммаНДС = СуммаНДС + ВыборкаСтрокТовары.СуммаНДС;
			
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьМакета.Параметры.Товар 	= СокрЛП(ВыборкаСтрокТовары.Товар);
			ОбластьМакета.Параметры.Цена 	= Цена;
			ОбластьМакета.Параметры.Сумма 	= ТекСумма;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		
		// Вывести Итого
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Всего = Сумма;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Вывести ИтогоНДС
		УПП = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьДанныеУчетнойПолитикиОрганизаций(Шапка.Дата, Шапка.Организация);
		Если УПП.ПлательщикНДС Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
			ОбластьМакета.Параметры.ВсегоНДС = Шапка.Товары.Выгрузить().Итог("СуммаНДС");
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		// Вывести всего
		ОбластьМакета = Макет.ПолучитьОбласть("Всего");
		ОбластьМакета.Параметры.Всего = Сумма + СуммаНДС;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Вывести Сумму прописью
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		СуммаКПрописи = Сумма + СуммаНДС;
		ОбластьМакета.Параметры.ИтоговаяСтрока ="Всего наименований " + ВыборкаСтрокТовары.Количество()
		+ ", на сумму " + СуммаКПрописи
		+ " " + ?(Шапка.ВалютаДокументаКод = "417","сом", Шапка.ВалютаДокументаНаименование);
		
		ОбластьМакета.Параметры.СуммаПрописью = БухгалтерскийУчетСервер.СформироватьСуммуПрописью(СуммаКПрописи, Шапка.ВалютаДокумента);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Вывести подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
		
	Если НЕ Ошибки = Неопределено Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
	КонецЕсли;	
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	// Добавление дополнительных параметров
	БухгалтерскиеОтчетыКлиентСервер.ЗаполнитьДополнительныеПараметрыПечати(ТабличныйДокумент);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьСчетФактураНДС(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВозвратТоваровПоставщику";
	ТабличныйДокумент.КлючПараметровПечати = "СчетФактураНДС";

	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщиеМакеты.СчетФактураНДС");
	
	ТекстЗапроса =
	
	"ВЫБРАТЬ
	|	ВозвратТоваровПоставщику.Номер,
	|	ВозвратТоваровПоставщику.Дата,
	|	ВозвратТоваровПоставщику.Организация,
	|	ВозвратТоваровПоставщику.Ссылка,
	|	ВозвратТоваровПоставщику.Контрагент,
	|	ВозвратТоваровПоставщику.Склад,
	|	ВозвратТоваровПоставщику.Товары.(
	|		Номенклатура,
	|		Номенклатура.Код КАК Код,
	|		Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Количество,
	|		Цена,
	|		Всего,
	|		СуммаНДС,
	|		СуммаНСП,
	|		НомерСтроки
	|	),
	|	ВозвратТоваровПоставщику.Организация.ИНН КАК ИНН,
	|	ВозвратТоваровПоставщику.Организация.ОсновнойБанковскийСчет КАК ОснБанкСчет,
	|	ВозвратТоваровПоставщику.Организация.ГНС КАК ГНС ,                        //ГНСГоловнойОрганизации КАК ГНС,
	|	ВозвратТоваровПоставщику.Организация.НаименованиеПолное КАК НаименованиеПолное,
	|	ВозвратТоваровПоставщику.ТипПоставкиСФ,
	|	ВозвратТоваровПоставщику.ТипПоставкиСФ.Наименование КАК НаимТипаПоставки,
	|	НЕОПРЕДЕЛЕНО КАК Поле1,
	|	ВозвратТоваровПоставщику.Контрагент.ОсновнойБанковскийСчет КАК ОснБанкСчет_Пок,
	|	НЕОПРЕДЕЛЕНО КАК Поле2,
	|	ВозвратТоваровПоставщику.Контрагент.КонтактнаяИнформация.(
	|		Ссылка КАК Поле1,
	|		НомерСтроки КАК Поле2,
	|		Тип КАК Поле3,
	|		Вид КАК Поле4,
	|		Представление КАК Поле5,
	|		ЗначенияПолей КАК Поле6,
	|		Страна КАК Поле7,
	|		Регион КАК Поле8,
	|		Город КАК Поле9,
	|		АдресЭП КАК Поле10,
	|		ДоменноеИмяСервера КАК Поле11,
	|		НомерТелефона КАК Поле12,
	|		НомерТелефонаБезКодов КАК Поле13
	|	) КАК Контрагент1,
	|	ВозвратТоваровПоставщику.ДоговорКонтрагента.СтавкаНДС,
	|	СтавкиНДССрезПоследних.Ставка,
	|	СтавкиНСПСрезПоследних.СтавкаПлательщикНДС,
	|	СтавкиНСПСрезПоследних.СтавкаНеПлательщикНДС,
	|	ВозвратТоваровПоставщику.СуммаДокумента,
	|	ВозвратТоваровПоставщику.Организация.ОсновнойБанковскийСчет КАК БанковскийСчет
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДС.СрезПоследних(, ) КАК СтавкиНДССрезПоследних
	|		ПО ВозвратТоваровПоставщику.ДоговорКонтрагента.СтавкаНДС = СтавкиНДССрезПоследних.СтавкаНДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНСП.СрезПоследних(, ) КАК СтавкиНСПСрезПоследних
	|		ПО ВозвратТоваровПоставщику.ДоговорКонтрагента.СтавкаНСП = СтавкиНСПСрезПоследних.СтавкаНСП
	|ГДЕ
	|	ВозвратТоваровПоставщику.Ссылка В(&СписокДокументов)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ДанныеПечати = Новый Структура;
		
		ВременнаяТаблицаТовары = Выборка.Товары.Выгрузить();                                        
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		//////////////////////Данные поставщика НАЧАЛО/////////////////////////////////////
		
		ОбластьМакета.Параметры.Номер                       = Выборка.Номер;
		ДатаСФ                         						= Строка(Выборка.Дата);
		ОбластьМакета.Параметры.Дата1                       = Сред(ДатаСФ,1,1);
		ОбластьМакета.Параметры.Дата2                       = Сред(ДатаСФ,2,1);
		ОбластьМакета.Параметры.Дата4                       = Сред(ДатаСФ,4,1);
		ОбластьМакета.Параметры.Дата5                       = Сред(ДатаСФ,5,1);
		ОбластьМакета.Параметры.Дата7                       = Сред(ДатаСФ,7,1);
		ОбластьМакета.Параметры.Дата8                       = Сред(ДатаСФ,8,1);
		ОбластьМакета.Параметры.Дата9                       = Сред(ДатаСФ,9,1);
		ОбластьМакета.Параметры.Дата10                      = Сред(ДатаСФ,10,1);
		
		ОбластьМакета.Параметры.ДП1                       = Сред(ДатаСФ,1,1);
		ОбластьМакета.Параметры.ДП2                       = Сред(ДатаСФ,2,1);
		ОбластьМакета.Параметры.ДП4                       = Сред(ДатаСФ,4,1);
		ОбластьМакета.Параметры.ДП5                       = Сред(ДатаСФ,5,1);
		ОбластьМакета.Параметры.ДП7                       = Сред(ДатаСФ,7,1);
		ОбластьМакета.Параметры.ДП8                       = Сред(ДатаСФ,8,1);
		ОбластьМакета.Параметры.ДП9                       = Сред(ДатаСФ,9,1);
		ОбластьМакета.Параметры.ДП10                      = Сред(ДатаСФ,10,1);
		
		ОбластьМакета.Параметры.ТипПоставки=Выборка.ТипПоставкиСФ;
		ОбластьМакета.Параметры.ИмяПоставки=Выборка.НаимТипаПоставки;		
		
		ИННнаш = Выборка.ИНН;	
		ОбластьМакета.Параметры.ИННПост1					= Сред(ИННнаш,1,1);	
		ОбластьМакета.Параметры.ИННПост2					= Сред(ИННнаш,2,1);	
		ОбластьМакета.Параметры.ИННПост3					= Сред(ИННнаш,3,1);
		ОбластьМакета.Параметры.ИННПост4					= Сред(ИННнаш,4,1);
		ОбластьМакета.Параметры.ИННПост5					= Сред(ИННнаш,5,1);
		ОбластьМакета.Параметры.ИННПост6					= Сред(ИННнаш,6,1);
		ОбластьМакета.Параметры.ИННПост7					= Сред(ИННнаш,7,1);
		ОбластьМакета.Параметры.ИННПост8					= Сред(ИННнаш,8,1);
		ОбластьМакета.Параметры.ИННПост9					= Сред(ИННнаш,9,1);
		ОбластьМакета.Параметры.ИННПост10					= Сред(ИННнаш,10,1);
		ОбластьМакета.Параметры.ИННПост11					= Сред(ИННнаш,11,1);
		ОбластьМакета.Параметры.ИННПост12					= Сред(ИННнаш,12,1);
		ОбластьМакета.Параметры.ИННПост13					= Сред(ИННнаш,13,1);
		ОбластьМакета.Параметры.ИННПост14					= Сред(ИННнаш,14,1);
		
		БанкНашСсылка  	= Выборка.БанковскийСчет;
		БИКнаш	 = БанкНашСсылка.Банк.Код;
		ОбластьМакета.Параметры.БИКПоставщика1				= Сред(БИКнаш,1,1);
		ОбластьМакета.Параметры.БИКПоставщика2				= Сред(БИКнаш,2,1);
		ОбластьМакета.Параметры.БИКПоставщика3		        = Сред(БИКнаш,3,1);
		ОбластьМакета.Параметры.БИКПоставщика4				= Сред(БИКнаш,4,1);
		ОбластьМакета.Параметры.БИКПоставщика5				= Сред(БИКнаш,5,1);	
		ОбластьМакета.Параметры.БИКПоставщика6				= Сред(БИКнаш,6,1);
		ОбластьМакета.Параметры.БИКПоставщика7				= Сред(БИКнаш,7,1);
		ОбластьМакета.Параметры.БИКПоставщика8				= Сред(БИКнаш,8,1);
		ОбластьМакета.Параметры.БИКПоставщика9				= Сред(БИКнаш,9,1);
		
		
		РСчетНаш = ?(не ЗначениеЗаполнено(БанкНашСсылка.НомерСчета),БанкНашСсылка.Наименование,БанкНашСсылка.НомерСчета);
		ОбластьМакета.Параметры.СчетПоставщика1			= Сред(РСчетНаш,1,1);
		ОбластьМакета.Параметры.СчетПоставщика2			= Сред(РСчетНаш,2,1);
		ОбластьМакета.Параметры.СчетПоставщика3			= Сред(РСчетНаш,3,1);
		ОбластьМакета.Параметры.СчетПоставщика4			= Сред(РСчетНаш,4,1);
		ОбластьМакета.Параметры.СчетПоставщика5			= Сред(РСчетНаш,5,1);
		ОбластьМакета.Параметры.СчетПоставщика6			= Сред(РСчетНаш,6,1);
		ОбластьМакета.Параметры.СчетПоставщика7			= Сред(РСчетНаш,7,1);
		ОбластьМакета.Параметры.СчетПоставщика8			= Сред(РСчетНаш,8,1);
		ОбластьМакета.Параметры.СчетПоставщика9			= Сред(РСчетНаш,9,1);
		ОбластьМакета.Параметры.СчетПоставщика10		= Сред(РСчетНаш,10,1);
		ОбластьМакета.Параметры.СчетПоставщика11		= Сред(РСчетНаш,11,1);
		ОбластьМакета.Параметры.СчетПоставщика12		= Сред(РСчетНаш,12,1);
		ОбластьМакета.Параметры.СчетПоставщика13		= Сред(РСчетНаш,13,1);
		ОбластьМакета.Параметры.СчетПоставщика14		= Сред(РСчетНаш,14,1);
		ОбластьМакета.Параметры.СчетПоставщика15		= Сред(РСчетНаш,15,1);
		ОбластьМакета.Параметры.СчетПоставщика16		= Сред(РСчетНаш,16,1);
		ОбластьМакета.Параметры.СчетПоставщика17		= Сред(РСчетНаш,17,1);
		ОбластьМакета.Параметры.СчетПоставщика18		= Сред(РСчетНаш,18,1);
		ОбластьМакета.Параметры.СчетПоставщика19		= Сред(РСчетНаш,19,1);
		
		ОбластьМакета.Параметры.БанкПост     = БанкНашСсылка.Банк.Наименование;
		
		ГНСнаш 										= Выборка.ГНС;
		
		ОбластьМакета.Параметры.ГНСПоставщика1		= Сред(ГНСнаш.Код,1,1);
		ОбластьМакета.Параметры.ГНСПоставщика2		= Сред(ГНСнаш.Код,2,1);
		ОбластьМакета.Параметры.ГНСПоставщика3		= Сред(ГНСнаш.Код,3,1);
		
		ОбластьМакета.Параметры.НаименованиеГНСПоставщика   = ГНСнаш.Наименование;
		ОбластьМакета.Параметры.ПредставлениеПоставщика    	= СокрЛП(Выборка.НаименованиеПолное);
		
		ОбластьМакета.Параметры.АдресПоставщика = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Выборка.Организация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации); 			
		//////////////////////Данные поставщика КОНЕЦ/////////////////////////////////////
		
		//////////////////////Данные покупателя НАЧАЛО/////////////////////////////////////
		ОбластьМакета.Параметры.АдресПокупателя = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Выборка.Контрагент, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента); 
		
		ИННпокупателя 										= Выборка.Контрагент.ИНН;
		ОбластьМакета.Параметры.ИННПок1						= Сред(ИННпокупателя,1,1);
		ОбластьМакета.Параметры.ИННПок2						= Сред(ИННпокупателя,2,1);
		ОбластьМакета.Параметры.ИННПок3						= Сред(ИННпокупателя,3,1);
		ОбластьМакета.Параметры.ИННПок4						= Сред(ИННпокупателя,4,1);
		ОбластьМакета.Параметры.ИННПок5						= Сред(ИННпокупателя,5,1);
		ОбластьМакета.Параметры.ИННПок6						= Сред(ИННпокупателя,6,1);
		ОбластьМакета.Параметры.ИННПок7						= Сред(ИННпокупателя,7,1);
		ОбластьМакета.Параметры.ИННПок8						= Сред(ИННпокупателя,8,1);
		ОбластьМакета.Параметры.ИННПок9						= Сред(ИННпокупателя,9,1);
		ОбластьМакета.Параметры.ИННПок10					= Сред(ИННпокупателя,10,1);
		ОбластьМакета.Параметры.ИННПок11					= Сред(ИННпокупателя,11,1);
		ОбластьМакета.Параметры.ИННПок12					= Сред(ИННпокупателя,12,1);
		ОбластьМакета.Параметры.ИННПок13					= Сред(ИННпокупателя,13,1);
		ОбластьМакета.Параметры.ИННПок14					= Сред(ИННпокупателя,14,1);
		
		ОбластьМакета.Параметры.ПредставлениеПокупателя    	= СокрЛП(Выборка.Контрагент.НаименованиеПолное);
		
		КодГНСПок          					= Выборка.Контрагент.ГНС.Код;
		ОбластьМакета.Параметры.ГНСПок1		= Сред(КодГНСПок,1,1);
		ОбластьМакета.Параметры.ГНСПок2		= Сред(КодГНСПок,2,1);
		ОбластьМакета.Параметры.ГНСПок3		= Сред(КодГНСПок,3,1);
		
		ОбластьМакета.Параметры.НаименованиеГНСПок  = Выборка.Контрагент.ГНС.Наименование;
		
		БанкСсылкаПок  	= Выборка.ОснБанкСчет_Пок;
		СчетПок = ?(не ЗначениеЗаполнено(БанкСсылкаПок.НомерСчета),БанкСсылкаПок.Наименование,БанкСсылкаПок.НомерСчета);
		ОбластьМакета.Параметры.СчетПок1			= Сред(СчетПок,1,1);
		ОбластьМакета.Параметры.СчетПок2			= Сред(СчетПок,2,1);
		ОбластьМакета.Параметры.СчетПок3			= Сред(СчетПок,3,1);
		ОбластьМакета.Параметры.СчетПок4			= Сред(СчетПок,4,1);
		ОбластьМакета.Параметры.СчетПок5			= Сред(СчетПок,5,1);
		ОбластьМакета.Параметры.СчетПок6			= Сред(СчетПок,6,1);
		ОбластьМакета.Параметры.СчетПок7			= Сред(СчетПок,7,1);
		ОбластьМакета.Параметры.СчетПок8			= Сред(СчетПок,8,1);
		ОбластьМакета.Параметры.СчетПок9			= Сред(СчетПок,9,1);
		ОбластьМакета.Параметры.СчетПок10	  		= Сред(СчетПок,10,1);
		ОбластьМакета.Параметры.СчетПок11			= Сред(СчетПок,11,1);
		ОбластьМакета.Параметры.СчетПок12			= Сред(СчетПок,12,1);
		ОбластьМакета.Параметры.СчетПок13			= Сред(СчетПок,13,1);
		ОбластьМакета.Параметры.СчетПок14			= Сред(СчетПок,14,1);
		ОбластьМакета.Параметры.СчетПок15			= Сред(СчетПок,15,1);
		ОбластьМакета.Параметры.СчетПок16			= Сред(СчетПок,16,1);
		ОбластьМакета.Параметры.СчетПок17			= Сред(СчетПок,17,1);
		ОбластьМакета.Параметры.СчетПок18			= Сред(СчетПок,18,1);
		ОбластьМакета.Параметры.СчетПок19			= Сред(СчетПок,19,1);
		
		БИКПок = БанкСсылкаПок.Банк.Код;   
		ОбластьМакета.Параметры.БИКПок1				= Сред(БИКПок,1,1);
		ОбластьМакета.Параметры.БИКПок2				= Сред(БИКПок,2,1);
		ОбластьМакета.Параметры.БИКПок3				= Сред(БИКПок,3,1);
		ОбластьМакета.Параметры.БИКПок4				= Сред(БИКПок,4,1);
		ОбластьМакета.Параметры.БИКПок5				= Сред(БИКПок,5,1);
		ОбластьМакета.Параметры.БИКПок6				= Сред(БИКПок,6,1);
		ОбластьМакета.Параметры.БИКПок7				= Сред(БИКПок,7,1);
		ОбластьМакета.Параметры.БИКПок8				= Сред(БИКПок,8,1);
		ОбластьМакета.Параметры.БИКПок9				= Сред(БИКПок,9,1);
		
		ОбластьМакета.Параметры.БанкПок     	= БанкСсылкаПок.Банк.Наименование;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);  
		
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");	                             
		ТабличныйДокумент.Вывести(ОбластьМакета);
		//////////////////////Данные покупателя КОНЕЦ/////////////////////////////////////
		
		//////////////////////ТабЧасть НАЧАЛО/////////////////////////////////////
		
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");	 
		Для Каждого Стр Из ВременнаяТаблицаТовары Цикл 
			ОбластьМакета.Параметры.Заполнить(Стр);
			ДанныеПечати.Вставить("Всего",стр.Всего+стр.СуммаНДС);
			ДанныеПечати.Вставить("СтавкаНДС",Выборка.Ставка);
			ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;		  		
		
		// Выборка из регистра накопления "Реализация"
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Реализация.Номенклатура,
		|	Реализация.СтавкаНДС,
		|	Реализация.СтавкаНСП,
		|	Реализация.Доход,
		|	Реализация.СуммаНДС КАК НДС,
		|	Реализация.СуммаНСП КАК НСП,
		|	Реализация.СуммаСкидки,
		|	Реализация.Количество,
		|	Реализация.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СтавкиНСПСрезПоследних.СтавкаНСП КАК СтавкаНСП1,
		|	СтавкиНСПСрезПоследних.СтавкаПлательщикНДС,
		|	СтавкиНСПСрезПоследних.СтавкаНеПлательщикНДС
		|ИЗ
		|	РегистрНакопления.Реализация КАК Реализация
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНСП.СрезПоследних КАК СтавкиНСПСрезПоследних
		|		ПО Реализация.СтавкаНСП = СтавкиНСПСрезПоследних.СтавкаНСП
		|ГДЕ
		|	Реализация.Регистратор = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Реализация.НомерСтроки
		|АВТОУПОРЯДОЧИВАНИЕ";	
		
		Запрос.УстановитьПараметр("Ссылка",	МассивОбъектов[0].Ссылка);	
		Результат = Запрос.Выполнить();
		ТЗ = Результат.Выгрузить();
		
		Если ТЗ.Итог("СуммаСкидки")<>0 Тогда		
			Доход=ВременнаяТаблицаТовары.Итог("Доход")+тз.Итог("Доход");
			НДС  =ВременнаяТаблицаТовары.Итог("СуммаНДС")+тз.Итог("НДС");
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");	 
			ДанныеПечати.Вставить("Номенклатура", "Скидка");
			ДанныеПечати.Вставить("Доход",-Доход);
			ДанныеПечати.Вставить("СуммаНДС",-НДС);
			ДанныеПечати.Вставить("Всего",-Доход-НДС);
			
			ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЕсли;				
		//////////////////////ТабЧасть КОНЕЦ/////////////////////////////////////
		
		////////////////////////Итоги и подвал НАЧАЛО//////////////////////
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.ИтогоКоличество = тз.Итог("Количество");
		ОбластьМакета.Параметры.ИтогоСумма = тз.Итог("Доход");
		ОбластьМакета.Параметры.ИтогоСуммаНДС   = тз.Итог("НДС");
		ИтогоСндс = тз.Итог("Доход")+тз.Итог("НДС");
		ОбластьМакета.Параметры.ИтогоСндс      = ИтогоСндс;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНСП");
		ДанныеПечати.Вставить("СтавкаНСП",строка(выборка.СтавкаПлательщикНДС)+" %");
		ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
		ОбластьМакета.Параметры.ИтогоНСП = тз.Итог("НСП");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоВсего");
		ИтогоВсего    = тз.Итог("Доход")+тз.Итог("НДС")+тз.Итог("НСП");
		ОбластьМакета.Параметры.ИтогоВсего    =  ИтогоВсего;
		ОбластьМакета.Параметры.СуммаПрописью =   БухгалтерскийУчетСервер.СформироватьСуммуПрописью(ИтогоВсего);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		Руководители 	= БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизаций(Выборка.Организация, КонецДня(Выборка.Дата));
		ОбластьМакета.Параметры.ФИОРуководителя 	= Руководители.Руководитель;
		ОбластьМакета.Параметры.ФИОГлавногоБухгалтера    	= Руководители.ГлавныйБухгалтер;
		ТабличныйДокумент.Вывести(ОбластьМакета);   
		////////////////////////Итоги и подвал КОНЕЦ//////////////////////
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
		
КонецФункции

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru = 'Накладная'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 2;

		
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"Накладная", НСтр("ru = 'Накладная'"), ПечатьНакладной(МассивОбъектов, ОбъектыПечати),,
			"Документ.ВозвратТоваровПоставщику.ПФ_MXL_Накладная");
			
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактура") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"СчетФактура", НСтр("ru = 'Счет-фактура'"), ПечатьСчетФактураНДС(МассивОбъектов, ОбъектыПечати),,
			"ОбщиеМакеты.СчетФактураНДС");

	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли