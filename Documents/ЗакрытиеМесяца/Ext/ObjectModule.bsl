#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеОбъектовБП.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения);
	
	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		Дата = КонецМесяца(ТекущаяДата());
		Если ЕстьДокументВУказанныйПериод(Дата) Тогда
			Дата = Дата('00010101');
		КонецЕсли;		
	КонецЕсли;
			
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.ЗакрытиеМесяца.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	БухгалтерскийУчетСервер.ОтразитьХозрасчетный(ДополнительныеСвойства, Движения, Ложь);	
	БухгалтерскийУчетСервер.ОтразитьАвансыДоотгрузка(ДополнительныеСвойства,Движения,Ложь);	
	БухгалтерскийУчетСервер.ОтразитьСведенияПоНалогуНаимущество(ДополнительныеСвойства,Движения,Ложь);
	БухгалтерскийУчетСервер.ОтразитьНалоговаяАмортизация(ДополнительныеСвойства, Движения, Ложь);
	БухгалтерскийУчетСервер.ОтразитьНалоговаяВыверка(ДополнительныеСвойства, Движения, Ложь);

	// Запись наборов записей.
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)		
	ПредварительныйКонтроль(Отказ);
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

// Процедура - Выполнить закрытие месяца
//
Процедура ВыполнитьЗакрытиеМесяца() Экспорт
	НачатьТранзакцию();
	
	УПП = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьДанныеУчетнойПолитикиОрганизаций(Дата, Организация);
	
	// Расчет амортизации ОС
	Если РасчетАмортизацииОС Тогда 
		РассчитатьАмортизациюОсновныхСредств(УПП);
	КонецЕсли;	
		
	// Расчет переоценки валютных средств
	Если РасчетПереоценкиВалютныхСредств Тогда 
		РассчитатьПереоценкуВалютныхСредств();
	КонецЕсли;	
	
	Если РасчетНДС И УПП.УчетНДСНаАвансы Тогда 
		РассчитатьНДСНаАвансыДоотгрузку(УПП);
		РассчитатьНДС(УПП);
	КонецЕсли;
	
	// Расчет налога на имущество
	Если РасчетНалогаНаИмущество Тогда 
		РассчитатьНалогНаИмущество();
	КонецЕсли;	
	
	// Расчет налога на имущество
	Если РасчетНалогаНаПрибыль Тогда 
		РассчитатьНалоговуюАмортизацию(УПП);
		РасчитатьНалоговуюВыверку(УПП);
	КонецЕсли;
	
	// Закрытие временных счетов учета
	Если ЗакрытьВременныеСчетаУчета Тогда 
		ВыполнитьЗакрытиеВременныхСчетовУчета();
	КонецЕсли;	
	
	// Закрытие парных счетов учета
	Если ЗакрытьПарныеСчетаУчета Тогда 
		ВыполнитьЗакрытиеПарныхСчетовУчета();
	КонецЕсли;
	
	// Расчет списания расходов будущих периодов
	Если РасчетСписанияРасходовБудущихПериодов Тогда 
		РассчитатьСписаниеРасходовБудущихПериодов();
	КонецЕсли;
	
	СформироватьНадписи();
	
	Попытка
		Записать(РежимЗаписиДокумента.Запись);
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		
		ТекстСообщения = НСтр("ru = 'Не удалось завершить запись документа.
			|Техническая информация об ошибке: %1'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));	
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось завершить запись документа по причине: %1'"), ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка закрытия месяца'"), УровеньЖурналаРегистрации.Ошибка,,, ТекстСообщения);
	КонецПопытки;
	
	Если НЕ ПроверитьЗаполнение() Тогда 
		Возврат;
	КонецЕсли;		
	
	Попытка
		Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		ТекстСообщения = НСтр("ru = 'Не удалось завершить проведение документа.
			|Техническая информация об ошибке: %1'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));	
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось завершить проведение документа по причине: %1'"), ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка закрытия месяца'"), УровеньЖурналаРегистрации.Ошибка,,, ТекстСообщения);
	КонецПопытки;
КонецПроцедуры 

// Процедура - Рассчитать амортизацию основных средств валютных средств по коэффициентам
//
Процедура РассчитатьАмортизациюОсновныхСредств(УПП)

	// 1. Получение списка ОС принятых к учету
	// 2. Получение параметров ОС по настройке РасчетАмортизационныхОтчисленийПоМесяцам
	//		* РасчетАмортизационныхОтчисленийПоМесяцам = Истина - все ОС до 15-го числа расчетного месяца
	//		* РасчетАмортизационныхОтчисленийПоМесяцам = Ложь - расчет по дням от последнего изменения параметров, 
	//			в случае когда месяц расчета и месяц изменения параметров совпадают
	// 3. Расчет амортизации	
	
	ТекстЗапроса = 		
		"ВЫБРАТЬ
		|	СостоянияОССрезПоследних.Период КАК ДатаПринятияКУчету,
		|	СостоянияОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	СостоянияОССрезПоследних.Состояние
		|ПОМЕСТИТЬ ТаблицаСостоянияОССвод
		|ИЗ
		|	РегистрСведений.СостоянияОС.СрезПоследних(&КонецПериода, Организация = &Организация) КАК СостоянияОССрезПоследних
		|ГДЕ
		|	СостоянияОССрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.ПринятоКУчету)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СостоянияОССрезПоследних.Период,
		|	СостоянияОССрезПоследних.ОсновноеСредство,
		|	СостоянияОССрезПоследних.Состояние
		|ИЗ
		|	РегистрСведений.СостоянияОС.СрезПоследних(&КонецПериода, Организация = &Организация) КАК СостоянияОССрезПоследних
		|ГДЕ
		|	НЕ &РасчетАмортизационныхОтчисленийПоМесяцам
		|	И СостоянияОССрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.СнятоСУчета)
		|	И СостоянияОССрезПоследних.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДатаПринятияКУчету,
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаСостоянияОССвод.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаСостоянияОССвод.ДатаПринятияКУчету,
		|	ТаблицаСостоянияОССвод.Состояние
		|ПОМЕСТИТЬ ТаблицаСостоянияОС
		|ИЗ
		|	ТаблицаСостоянияОССвод КАК ТаблицаСостоянияОССвод
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СобытияОС.Период,
		|	СобытияОС.Организация,
		|	СобытияОС.ОсновноеСредство,
		|	СобытияОС.Событие
		|ПОМЕСТИТЬ ТаблицаСобытияОС
		|ИЗ
		|	РегистрСведений.СобытияОС КАК СобытияОС
		|ГДЕ
		|	СобытияОС.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И СобытияОС.ОсновноеСредство В
		|			(ВЫБРАТЬ
		|				ТаблицаСостоянияОС.ОсновноеСредство
		|			ИЗ
		|				ТаблицаСостоянияОС КАК ТаблицаСостоянияОС)
		|	И СобытияОС.Организация = &Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Счет КАК Счет,
		|	ХозрасчетныйОбороты.Субконто1 КАК ОсновноеСредство,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОбороты.СуммаОборот < 0
		|			ТОГДА ХозрасчетныйОбороты.СуммаОборот * -1
		|		ИНАЧЕ ХозрасчетныйОбороты.СуммаОборот
		|	КОНЕЦ КАК СуммаИзмененияПараметров
		|ПОМЕСТИТЬ ТаблицаМодернизацияИзменениеПараметров
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Регистратор,
		|			Счет В (&СписокСчетовНакопленнойАмортизации),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация = &Организация
		|				И Субконто1 В
		|					(ВЫБРАТЬ
		|						ТабСобытияОС.ОсновноеСредство
		|					ИЗ
		|						ТаблицаСобытияОС КАК ТабСобытияОС
		|					ГДЕ
		|						ТабСобытияОС.Событие.Наименование = ""Изменение параметров""),
		|			,
		|			) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	ВЫРАЗИТЬ(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.МодернизацияОС).СобытиеОС КАК Справочник.СобытияОС).Наименование = ""Изменение параметров""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1 КАК ОсновноеСредство,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстатки.СуммаОстаток < 0
		|			ТОГДА ХозрасчетныйОстатки.СуммаОстаток * -1
		|		ИНАЧЕ ХозрасчетныйОстатки.СуммаОстаток
		|	КОНЕЦ КАК НакопленныйИзнос
		|ПОМЕСТИТЬ ТаблицаНакопленнаяАмортизация
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СписокСчетовНакопленнойАмортизации), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), Организация = &Организация) КАК ХозрасчетныйОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПараметрыУчетаОССрезПоследних.Период,
		|	ПараметрыУчетаОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	ПараметрыУчетаОССрезПоследних.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета КАК СчетУчета,
		|	ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.СрокСлужбы КАК СрокСлужбы,
		|	ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
		|	ПараметрыУчетаОССрезПоследних.СпособОтраженияРасходовПоАмортизации КАК СпособОтраженияРасходовПоАмортизации,
		|	ПараметрыУчетаОССрезПоследних.ДатаВводаВЭксплуатацию КАК ДатаВводаВЭксплуатацию
		|ПОМЕСТИТЬ ТаблицаПараметрыУчетаОС
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|			&НачалоПериода,
		|			Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ТаблицаСостоянияОС.ОсновноеСредство
		|					ИЗ
		|						ТаблицаСостоянияОС КАК ТаблицаСостоянияОС)) КАК ПараметрыУчетаОССрезПоследних
		|ГДЕ
		|	&РасчетАмортизационныхОтчисленийПоМесяцам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПараметрыУчетаОССрезПервых.Период,
		|	ПараметрыУчетаОССрезПервых.ОсновноеСредство,
		|	ПараметрыУчетаОССрезПервых.ИнвентарныйНомер,
		|	ПараметрыУчетаОССрезПервых.СчетУчета,
		|	ПараметрыУчетаОССрезПервых.ПервоначальнаяСтоимость,
		|	ПараметрыУчетаОССрезПервых.ЛиквидационнаяСтоимость,
		|	ПараметрыУчетаОССрезПервых.СрокСлужбы,
		|	ПараметрыУчетаОССрезПервых.СпособНачисленияАмортизации,
		|	ПараметрыУчетаОССрезПервых.СпособОтраженияРасходовПоАмортизации,
		|	ПараметрыУчетаОССрезПервых.ДатаВводаВЭксплуатацию
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПервых(
		|			&НачалоПериода,
		|			Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ТаблицаСостоянияОС.ОсновноеСредство
		|					ИЗ
		|						ТаблицаСостоянияОС КАК ТаблицаСостоянияОС
		|					ГДЕ
		|						ТаблицаСостоянияОС.ДатаПринятияКУчету МЕЖДУ &НачалоПериода И КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, 15), ДЕНЬ))) КАК ПараметрыУчетаОССрезПервых
		|ГДЕ
		|	&РасчетАмортизационныхОтчисленийПоМесяцам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПараметрыУчетаОССрезПоследних.Период,
		|	ПараметрыУчетаОССрезПоследних.ОсновноеСредство,
		|	ПараметрыУчетаОССрезПоследних.ИнвентарныйНомер,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета,
		|	ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.СрокСлужбы,
		|	ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации,
		|	ПараметрыУчетаОССрезПоследних.СпособОтраженияРасходовПоАмортизации,
		|	ПараметрыУчетаОССрезПоследних.ДатаВводаВЭксплуатацию
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|			&КонецПериода,
		|			Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ТаблицаСостоянияОС.ОсновноеСредство
		|					ИЗ
		|						ТаблицаСостоянияОС КАК ТаблицаСостоянияОС)) КАК ПараметрыУчетаОССрезПоследних
		|ГДЕ
		|	НЕ &РасчетАмортизационныхОтчисленийПоМесяцам
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаПараметрыУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаПараметрыУчетаОС.ИнвентарныйНомер,
		|	ТаблицаПараметрыУчетаОС.СчетУчета,
		|	ТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость,
		|	ТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость,
		|	ТаблицаПараметрыУчетаОС.СпособОтраженияРасходовПоАмортизации,
		|	ВЫБОР
		|		КОГДА ТаблицаПараметрыУчетаОС.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Линейный)
		|				И ТаблицаПараметрыУчетаОС.СрокСлужбы = 0
		|			ТОГДА 0
		|		КОГДА ТаблицаПараметрыУчетаОС.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Линейный)
		|				И НЕ &РасчетАмортизационныхОтчисленийПоМесяцам
		|				И &КонецПериода = КОНЕЦПЕРИОДА(ТаблицаПараметрыУчетаОС.Период, МЕСЯЦ)
		|			ТОГДА ВЫРАЗИТЬ((ТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ВЫБОР
		|						КОГДА ТаблицаСобытияОС.Событие.Наименование = ""Модернизация""
		|							ТОГДА ЕСТЬNULL(ТаблицаНакопленнаяАмортизация.НакопленныйИзнос, 0)
		|						ИНАЧЕ 0
		|					КОНЕЦ) / ТаблицаПараметрыУчетаОС.СрокСлужбы / ДЕНЬ(КОНЕЦПЕРИОДА(ТаблицаПараметрыУчетаОС.Период, МЕСЯЦ)) * (ДЕНЬ(КОНЕЦПЕРИОДА(ТаблицаПараметрыУчетаОС.Период, МЕСЯЦ)) - (ДЕНЬ(ТаблицаПараметрыУчетаОС.Период) - 1)) КАК ЧИСЛО(15, 2))
		|		КОГДА ТаблицаПараметрыУчетаОС.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Линейный)
		|				И &КонецПериода = КОНЕЦПЕРИОДА(ТаблицаПараметрыУчетаОС.Период, МЕСЯЦ)
		|			ТОГДА ВЫБОР
		|					КОГДА &РасчетАмортизационныхОтчисленийПоМесяцам
		|						ТОГДА ВЫРАЗИТЬ((ТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ВЫБОР
		|									КОГДА ТаблицаСобытияОС.Событие.Наименование = ""Модернизация""
		|										ТОГДА ЕСТЬNULL(ТаблицаНакопленнаяАмортизация.НакопленныйИзнос, 0)
		|									ИНАЧЕ 0
		|								КОНЕЦ) / ТаблицаПараметрыУчетаОС.СрокСлужбы КАК ЧИСЛО(15, 2))
		|					ИНАЧЕ ВЫРАЗИТЬ((ТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ВЫБОР
		|								КОГДА ТаблицаСобытияОС.Событие.Наименование = ""Модернизация""
		|									ТОГДА ЕСТЬNULL(ТаблицаНакопленнаяАмортизация.НакопленныйИзнос, 0)
		|								ИНАЧЕ 0
		|							КОНЕЦ) / ТаблицаПараметрыУчетаОС.СрокСлужбы / ДЕНЬ(&КонецПериода) * (ДЕНЬ(&КонецПериода) - ДЕНЬ(ТаблицаПараметрыУчетаОС.Период) + 1) КАК ЧИСЛО(15, 2))
		|				КОНЕЦ
		|		КОГДА ТаблицаПараметрыУчетаОС.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Линейный)
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаСостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.СнятоСУчета)
		|							И НЕ &РасчетАмортизационныхОтчисленийПоМесяцам
		|						ТОГДА (ВЫРАЗИТЬ((ТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ВЫБОР
		|									КОГДА ТаблицаСобытияОС.Событие.Наименование = ""Модернизация""
		|										ТОГДА ЕСТЬNULL(ТаблицаНакопленнаяАмортизация.НакопленныйИзнос, 0)
		|									ИНАЧЕ 0
		|								КОНЕЦ) / ТаблицаПараметрыУчетаОС.СрокСлужбы КАК ЧИСЛО(15, 2))) * ДЕНЬ(ТаблицаСостоянияОС.ДатаПринятияКУчету) / ДЕНЬ(КОНЕЦПЕРИОДА(ТаблицаСостоянияОС.ДатаПринятияКУчету, МЕСЯЦ))
		|					ИНАЧЕ ВЫРАЗИТЬ((ТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость - ТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость - ВЫБОР
		|								КОГДА ТаблицаСобытияОС.Событие.Наименование = ""Модернизация""
		|									ТОГДА ЕСТЬNULL(ТаблицаНакопленнаяАмортизация.НакопленныйИзнос, 0)
		|								ИНАЧЕ 0
		|							КОНЕЦ) / ТаблицаПараметрыУчетаОС.СрокСлужбы КАК ЧИСЛО(15, 2))
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК АмортизацияЗаМесяц,
		|	ТаблицаПараметрыУчетаОС.СпособНачисленияАмортизации
		|ПОМЕСТИТЬ ТаблицаРасчетАмортизации
		|ИЗ
		|	ТаблицаПараметрыУчетаОС КАК ТаблицаПараметрыУчетаОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСостоянияОС КАК ТаблицаСостоянияОС
		|		ПО ТаблицаПараметрыУчетаОС.ОсновноеСредство = ТаблицаСостоянияОС.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСобытияОС КАК ТаблицаСобытияОС
		|		ПО ТаблицаПараметрыУчетаОС.ОсновноеСредство = ТаблицаСобытияОС.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаНакопленнаяАмортизация КАК ТаблицаНакопленнаяАмортизация
		|		ПО ТаблицаПараметрыУчетаОС.ОсновноеСредство = ТаблицаНакопленнаяАмортизация.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаМодернизацияИзменениеПараметров КАК ТаблицаМодернизацияИзменениеПараметров
		|		ПО ТаблицаПараметрыУчетаОС.ОсновноеСредство = ТаблицаМодернизацияИзменениеПараметров.ОсновноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаРасчетАмортизации.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаРасчетАмортизации.ИнвентарныйНомер,
		|	ТаблицаРасчетАмортизации.СчетУчета,
		|	ХозрасчетныйОстатки.Счет КАК СчетАмортизации,
		|	ТаблицаРасчетАмортизации.СпособНачисленияАмортизации,
		|	ТаблицаРасчетАмортизации.СпособОтраженияРасходовПоАмортизации,
		|	НЕОПРЕДЕЛЕНО КАК СчетЗатрат,
		|	НЕОПРЕДЕЛЕНО КАК ЗначениеСубконто1,
		|	НЕОПРЕДЕЛЕНО КАК ЗначениеСубконто2,
		|	НЕОПРЕДЕЛЕНО КАК ЗначениеСубконто3,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) >= ТаблицаРасчетАмортизации.ПервоначальнаяСтоимость - ТаблицаРасчетАмортизации.ЛиквидационнаяСтоимость
		|			ТОГДА 0
		|		КОГДА ТаблицаРасчетАмортизации.ПервоначальнаяСтоимость - ТаблицаРасчетАмортизации.ЛиквидационнаяСтоимость - ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) < ТаблицаРасчетАмортизации.АмортизацияЗаМесяц
		|			ТОГДА ТаблицаРасчетАмортизации.ПервоначальнаяСтоимость - ТаблицаРасчетАмортизации.ЛиквидационнаяСтоимость - ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0)
		|		ИНАЧЕ ТаблицаРасчетАмортизации.АмортизацияЗаМесяц
		|	КОНЕЦ КАК Сумма
		|ИЗ
		|	ТаблицаРасчетАмортизации КАК ТаблицаРасчетАмортизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
		|				&КонецПериода,
		|				,
		|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|				Организация = &Организация
		|					И Субконто1 В
		|						(ВЫБРАТЬ
		|							ТаблицаСостоянияОС.ОсновноеСредство
		|						ИЗ
		|							ТаблицаСостоянияОС КАК ТаблицаСостоянияОС)) КАК ХозрасчетныйОстатки
		|		ПО ТаблицаРасчетАмортизации.ОсновноеСредство = ХозрасчетныйОстатки.Субконто1
		|ГДЕ
		|	НЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) >= ТаблицаРасчетАмортизации.ПервоначальнаяСтоимость - ТаблицаРасчетАмортизации.ЛиквидационнаяСтоимость
		|					ТОГДА 0
		|				КОГДА ТаблицаРасчетАмортизации.ПервоначальнаяСтоимость - ТаблицаРасчетАмортизации.ЛиквидационнаяСтоимость - ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) < ТаблицаРасчетАмортизации.АмортизацияЗаМесяц
		|					ТОГДА ТаблицаРасчетАмортизации.ПервоначальнаяСтоимость - ТаблицаРасчетАмортизации.ЛиквидационнаяСтоимость - ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0)
		|				ИНАЧЕ ТаблицаРасчетАмортизации.АмортизацияЗаМесяц
		|			КОНЕЦ = 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаРасчетАмортизации.ОсновноеСредство.Наименование
		|АВТОУПОРЯДОЧИВАНИЕ";
			
	Запрос = Новый Запрос(ТекстЗапроса);
	СписокСчетовНаопленногоИзноса = Новый СписокЗначений;
	СписокСчетовНаопленногоИзноса.Добавить(ПланыСчетов.Хозрасчетный.АмортизацияЗданияСооружения);
	СписокСчетовНаопленногоИзноса.Добавить(ПланыСчетов.Хозрасчетный.НакопленнаяАмортизацияОборудование);
	СписокСчетовНаопленногоИзноса.Добавить(ПланыСчетов.Хозрасчетный.НакопленнаяАмортизацияКонторскоеОборудование);
	СписокСчетовНаопленногоИзноса.Добавить(ПланыСчетов.Хозрасчетный.НакопленнаяАмортизацияМебельИПринадлежности);
	СписокСчетовНаопленногоИзноса.Добавить(ПланыСчетов.Хозрасчетный.НакопленнаяАмортизацияТранспортныеСредства);
	СписокСчетовНаопленногоИзноса.Добавить(ПланыСчетов.Хозрасчетный.НакопленнаяАмортизацияБлагоустройствоАрендованнойСобственности);
	СписокСчетовНаопленногоИзноса.Добавить(ПланыСчетов.Хозрасчетный.НакопленнаяАмортизацияБлагоустройствоЗемльныхУчастков);

	Запрос.УстановитьПараметр("СписокСчетовНакопленнойАмортизации",СписокСчетовНаопленногоИзноса);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("РасчетАмортизационныхОтчисленийПоМесяцам", УПП.РасчетАмортизационныхОтчисленийПоМесяцам); 
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	КэшДанныхСпрСпособыОтрРасхПоАморт = Новый Соответствие();
	
	// Данный цикл перебирает выборку, полученную из запроса.
	//
	// По строкам идет проверка способа отражения расходов по амортизации. Обращаемся к табличной части 
	// данного справочника и в зависимости от количества строк в ТЧ строка выборки дублируется и записывается 
	// в ТЧ документа. Записывается "СчетЗатрат" и в зависимости от коэффициентов в 
	// строках ТЧ распределяется сумма. А также заполняются колонки "Субконто".
	Пока Выборка.Следующий() Цикл
		
		// В соответствие записывается: 
		// Ключ - ссылка на справочник "СпособыОтраженияРасходовПоАмортизации".
		// Значение - ТЗ из запроса к данному элементу справочника.
		// При каждом шаге основного цикла проверяется наличие строки соответствия 
		// по ссылке на справочник, чтобы не обращаться к запросу каждый раз.
		ТЗСпособаОтражения = КэшДанныхСпрСпособыОтрРасхПоАморт.Получить(Выборка.СпособОтраженияРасходовПоАмортизации);
		
		Если ТЗСпособаОтражения = Неопределено Тогда
			ТЗСпособаОтражения = УправлениеВнеоборотнымиАктивамиПовтИсп.СпособыОтраженияРасходовПоАмортизации(Выборка.СпособОтраженияРасходовПоАмортизации); 
			КэшДанныхСпрСпособыОтрРасхПоАморт.Вставить(Выборка.СпособОтраженияРасходовПоАмортизации, ТЗСпособаОтражения);
		КонецЕсли;
		
		МассивКоэфициентов = ТЗСпособаОтражения.ВыгрузитьКолонку("Коэффициент");
		
		МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Выборка.Сумма, МассивКоэфициентов, 2);
		Если МассивСумм = Неопределено Тогда 
			Продолжить;
		КонецЕсли;	
		
		ИндексМассива = 0;
		Для Каждого СуммаСУчетомКоэф Из МассивСумм Цикл
		
			СтрокаТЧАмортизация = АмортизацияОС.Добавить();
			
			ЗаполнитьЗначенияСвойств(СтрокаТЧАмортизация, Выборка);
			
			СтрокаТЧАмортизация.Сумма		= СуммаСУчетомКоэф;			
			СтрокаТЧАмортизация.СчетЗатрат	= ТЗСпособаОтражения[ИндексМассива].СчетЗатрат;
			СтрокаТЧАмортизация.Субконто1  	= ТЗСпособаОтражения[ИндексМассива].Субконто1;
			СтрокаТЧАмортизация.Субконто2   = ТЗСпособаОтражения[ИндексМассива].Субконто2;
			СтрокаТЧАмортизация.Субконто3   = ТЗСпособаОтражения[ИндексМассива].Субконто3;
			
			ИндексМассива = ИндексМассива + 1;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры // РассчитатьАмортизациюОсновныхСредств()

// Процедура - Рассчитать переоценку валютных средств
//
Процедура РассчитатьПереоценкуВалютныхСредств()
	
	// Получение суммы остатков по счетам учета по условию
	//	* Валютный
	//	* Без СпособыПризнанияКурсовойРазницы Оперативно или НеРассчитывать	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Хозрасчетный.Ссылка КАК СчетУчета
		|ПОМЕСТИТЬ ТаблицаСчетаУчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаСОсобымПорядкомПереоценки КАК СчетаУчетаСОсобымПорядкомПереоценки
		|		ПО Хозрасчетный.Ссылка = СчетаУчетаСОсобымПорядкомПереоценки.СчетУчета
		|ГДЕ
		|	НЕ Хозрасчетный.Забалансовый
		|	И НЕ Хозрасчетный.ЗапретитьИспользоватьВПроводках
		|	И Хозрасчетный.Валютный
		|	И НЕ(ЕСТЬNULL(СчетаУчетаСОсобымПорядкомПереоценки.СпособПризнанияКурсовойРазницы, ЗНАЧЕНИЕ(Перечисление.СпособыПризнанияКурсовойРазницы.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СпособыПризнанияКурсовойРазницы.Оперативно)
		|				ИЛИ ЕСТЬNULL(СчетаУчетаСОсобымПорядкомПереоценки.СпособПризнанияКурсовойРазницы, ЗНАЧЕНИЕ(Перечисление.СпособыПризнанияКурсовойРазницы.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СпособыПризнанияКурсовойРазницы.НеРассчитывать))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет КАК СчетУчета,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2,
		|	ХозрасчетныйОстатки.Субконто3,
		|	ХозрасчетныйОстатки.Валюта,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстатки.СуммаОстаток - ХозрасчетныйОстатки.ВалютнаяСуммаОстаток * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) * ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 0) < 0
		|			ТОГДА (ХозрасчетныйОстатки.СуммаОстаток - ХозрасчетныйОстатки.ВалютнаяСуммаОстаток * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) * ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 0)) * -1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаДоход,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстатки.СуммаОстаток - ХозрасчетныйОстатки.ВалютнаяСуммаОстаток * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) * ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 0) > 0
		|			ТОГДА ХозрасчетныйОстатки.СуммаОстаток - ХозрасчетныйОстатки.ВалютнаяСуммаОстаток * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) * ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаУбыток
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&МоментВремени,
		|			Счет В
		|				(ВЫБРАТЬ
		|					ТаблицаСчетаУчета.СчетУчета
		|				ИЗ
		|					ТаблицаСчетаУчета КАК ТаблицаСчетаУчета),
		|			,
		|			Организация = &Организация) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, ) КАК КурсыВалютСрезПоследних
		|		ПО ХозрасчетныйОстатки.Валюта = КурсыВалютСрезПоследних.Валюта
		|ГДЕ
		|	ХозрасчетныйОстатки.СуммаОстаток <> ХозрасчетныйОстатки.ВалютнаяСуммаОстаток * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) * ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 0)
		|	И (ХозрасчетныйОстатки.СуммаОстаток - ХозрасчетныйОстатки.ВалютнаяСуммаОстаток * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) * ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 0) >= 0.005
		|			ИЛИ ХозрасчетныйОстатки.СуммаОстаток - ХозрасчетныйОстатки.ВалютнаяСуммаОстаток * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) * ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 0) <= -0.005)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ХозрасчетныйОстатки.Счет.Код";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МоментВремени", Дата + 1); 
	Запрос.УстановитьПараметр("Период", Дата); 
	Запрос.УстановитьПараметр("Организация", Организация);
	
	ПереоценкаВалюты.Загрузить(Запрос.Выполнить().Выгрузить())
	
КонецПроцедуры // РассчитатьПереоценкуВалютныхСредств()

// Процедура - Рассчитать НДС на авансы и доотгрузку
//
Процедура РассчитатьНДСНаАвансыДоотгрузку(УПП)	
	
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("СтавкаНСП", УПП.СтавкаНСППоУмолчанию);
	ТЗСрезПоследних = РегистрыСведений.СтавкиНСП.СрезПоследних(НачалоМесяца(Дата), СтруктураОтбора); 
	Если ТЗСрезПоследних.Количество() > 0 Тогда
		ЗначениеСтавкиНСП = ТЗСрезПоследних[0].СтавкаПлательщикНДС;
	Иначе
		ЗначениеСтавкиНСП = 0;
	КонецЕсли;
		
	// Описание таблиц запроса:
	// 1. Основная таблица для выбора договоров и сумм оборотов для дальнейшей обработки этих данных;	
	// 2. Таблица из 1 пункта, с корректировкой знака у сумм документов "возврат от покупателя";
	// 3. Таблица отгрузка текущего месяца, выборка из пункта 1 с условием не суммы оборотов дт > 0 (страховка от возврата);
	// 4. Таблица сальдо Дт нач. - получает начальное (на начало месяца) сальдо Дт по договорам из пункта 1;
	// 5. Таблица списка контрагентов - выбока неповторяющихся строк пункта 1;
	// 6. Таблица остатков авансов на начало месяца по договорам из пункта 5;
	// 7. Таблица начальных остатков - к договорам (пункт 5) прибавляются данные пунктов 6, 4, а также значения ставок НДС и НСП;
	// 8. Упорядоченная таблица итогов пункта 7;
	// 9. Упорядоченная таблица по пункту 2 с проверкой на не нулевую сумму оплаты;
	// 10. Сгруппированная таблица по пункту 3.	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Регистратор КАК Регистратор,
		|	ХозрасчетныйОбороты.Субконто1 КАК Контрагент,
		|	ХозрасчетныйОбороты.Субконто2 КАК Договор,
		|	ХозрасчетныйОбороты.Период КАК ДатаДокумента,
		|	ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаОборотДт,
		|	ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаОборотКт
		|ПОМЕСТИТЬ ВременнаяТаблицаОборотыРБ
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Регистратор,
		|			Счет <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНаАвансы),
		|			&ВидыСубконто,
		|			Организация = &Организация
		|				И Субконто2.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
		|				И Субконто2.СтавкаНДС <> ЗНАЧЕНИЕ(Справочник.СтавкиНДС.Нулевая)
		|				И Субконто2.СтавкаНДС <> ЗНАЧЕНИЕ(Справочник.СтавкиНДС.Освобожденная)
		|				И Субконто2 <> ЕСТЬNULL(Корсубконто2, ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)),
		|			,
		|			) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	ХозрасчетныйОбороты.Регистратор <> &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОборотыРБ.Регистратор КАК Регистратор,
		|	ВременнаяТаблицаОборотыРБ.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаОборотыРБ.Договор КАК Договор,
		|	ВременнаяТаблицаОборотыРБ.ДатаДокумента КАК ДатаДокумента,
		|	ВременнаяТаблицаОборотыРБ.СуммаОборотКт - ВременнаяТаблицаОборотыРБ.СуммаОборотДт КАК Оплата
		|ПОМЕСТИТЬ ВременнаяТаблицаОплатаТекущегоМесяца
		|ИЗ
		|	ВременнаяТаблицаОборотыРБ КАК ВременнаяТаблицаОборотыРБ
		|ГДЕ
		|	ВременнаяТаблицаОборотыРБ.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОборотыРБ.Регистратор,
		|	ВременнаяТаблицаОборотыРБ.Контрагент,
		|	ВременнаяТаблицаОборотыРБ.Договор,
		|	ВременнаяТаблицаОборотыРБ.ДатаДокумента,
		|	ВременнаяТаблицаОборотыРБ.СуммаОборотКт
		|ИЗ
		|	ВременнаяТаблицаОборотыРБ КАК ВременнаяТаблицаОборотыРБ
		|ГДЕ
		|	НЕ ВременнаяТаблицаОборотыРБ.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОборотыРБ.Регистратор КАК Регистратор,
		|	ВременнаяТаблицаОборотыРБ.ДатаДокумента КАК ДатаДокумента,
		|	ВременнаяТаблицаОборотыРБ.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаОборотыРБ.Договор КАК Договор,
		|	ВременнаяТаблицаОборотыРБ.СуммаОборотДт КАК Отгрузка
		|ПОМЕСТИТЬ ВременнаяТаблицаОтгрузкаТекущегоМесяца
		|ИЗ
		|	ВременнаяТаблицаОборотыРБ КАК ВременнаяТаблицаОборотыРБ
		|ГДЕ
		|	ВременнаяТаблицаОборотыРБ.СуммаОборотДт > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1 КАК Контрагент,
		|	ХозрасчетныйОстатки.Субконто2 КАК Договор,
		|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СальдоДтНач
		|ПОМЕСТИТЬ ВременнаяТаблицаСальдоДтНач
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&НачалоПериода,
		|			Счет <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНаАвансы),
		|			&ВидыСубконто,
		|			Субконто2 В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВременнаяТаблицаОборотыРБ.Договор
		|				ИЗ
		|					ВременнаяТаблицаОборотыРБ КАК ВременнаяТаблицаОборотыРБ)) КАК ХозрасчетныйОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТиповойОбороты.Контрагент КАК Контрагент,
		|	ТиповойОбороты.Договор КАК Договор,
		|	ТиповойОбороты.Договор.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ ВременнаяТаблицаСписокКонтрагентов
		|ИЗ
		|	ВременнаяТаблицаОборотыРБ КАК ТиповойОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АвансыДоотгрузкаОстатки.Контрагент КАК Контрагент,
		|	АвансыДоотгрузкаОстатки.Договор КАК Договор,
		|	АвансыДоотгрузкаОстатки.СуммаОстаток КАК СуммаОстаток,
		|	АвансыДоотгрузкаОстатки.СуммаНДСОстаток КАК СуммаНДСОстаток,
		|	АвансыДоотгрузкаОстатки.СуммаНСПОстаток КАК СуммаНСПОстаток,
		|	АвансыДоотгрузкаОстатки.ДокументА КАК ДокументАванса,
		|	АвансыДоотгрузкаОстатки.СуммаОстаток КАК СуммаАванса
		|ПОМЕСТИТЬ ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца
		|ИЗ
		|	РегистрНакопления.АвансыДоотгрузка.Остатки(
		|			&НачалоПериода,
		|			Организация = &Организация
		|				И Договор В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВременнаяТаблицаСписокКонтрагентов.Договор
		|					ИЗ
		|						ВременнаяТаблицаСписокКонтрагентов КАК ВременнаяТаблицаСписокКонтрагентов)) КАК АвансыДоотгрузкаОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаСписокКонтрагентов.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаСписокКонтрагентов.Договор КАК Договор,
		|	ЕСТЬNULL(ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.СуммаОстаток, 0) КАК СуммаАванса,
		|	ЕСТЬNULL(ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.СуммаНДСОстаток, 0) КАК СуммаНДСОстаток,
		|	ЕСТЬNULL(ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.СуммаНСПОстаток, 0) КАК СуммаНСПОстаток,
		|	ЕСТЬNULL(СтавкиНДССрезПоследних.Ставка, 0) КАК ЗначениеСтавкиНДС,
		|	&ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП,
		|	ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.ДокументАванса,
		|	НЕОПРЕДЕЛЕНО КАК Период,
		|	ЕСТЬNULL(ВременнаяТаблицаСальдоДтНач.СальдоДтНач, 0) КАК СальдоДтНач
		|ПОМЕСТИТЬ ВременнаяТаблицаОстаткиНач
		|ИЗ
		|	ВременнаяТаблицаСписокКонтрагентов КАК ВременнаяТаблицаСписокКонтрагентов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца КАК ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца
		|		ПО ВременнаяТаблицаСписокКонтрагентов.Договор = ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.Договор
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДС.СрезПоследних(&КонецПериода, ) КАК СтавкиНДССрезПоследних
		|		ПО ВременнаяТаблицаСписокКонтрагентов.СтавкаНДС = СтавкиНДССрезПоследних.СтавкаНДС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСальдоДтНач КАК ВременнаяТаблицаСальдоДтНач
		|		ПО ВременнаяТаблицаСписокКонтрагентов.Договор = ВременнаяТаблицаСальдоДтНач.Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОстаткиНач.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаОстаткиНач.Договор КАК Договор,
		|	ВременнаяТаблицаОстаткиНач.СуммаАванса КАК СуммаАванса,
		|	ВременнаяТаблицаОстаткиНач.СуммаНДСОстаток КАК СуммаНДСОстаток,
		|	ВременнаяТаблицаОстаткиНач.СуммаНСПОстаток КАК СуммаНСПОстаток,
		|	ВременнаяТаблицаОстаткиНач.ЗначениеСтавкиНДС КАК ЗначениеСтавкиНДС,
		|	ВременнаяТаблицаОстаткиНач.ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП,
		|	ВременнаяТаблицаОстаткиНач.ДокументАванса,
		|	ВременнаяТаблицаОстаткиНач.Период КАК Период,
		|	ВременнаяТаблицаОстаткиНач.СальдоДтНач КАК СальдоДтНач
		|ИЗ
		|	ВременнаяТаблицаОстаткиНач КАК ВременнаяТаблицаОстаткиНач
		|
		|УПОРЯДОЧИТЬ ПО
		|	Договор,
		|	Период
		|ИТОГИ
		|	МАКСИМУМ(Контрагент),
		|	МАКСИМУМ(СуммаНДСОстаток),
		|	МАКСИМУМ(СуммаНСПОстаток),
		|	МАКСИМУМ(ЗначениеСтавкиНДС),
		|	МАКСИМУМ(ЗначениеСтавкиНСП),
		|	МАКСИМУМ(СальдоДтНач)
		|ПО
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОплатаТекущегоМесяца.Регистратор КАК Регистратор,
		|	ВременнаяТаблицаОплатаТекущегоМесяца.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаОплатаТекущегоМесяца.Договор КАК Договор,
		|	ВременнаяТаблицаОплатаТекущегоМесяца.Оплата КАК Оплата,
		|	ВременнаяТаблицаОплатаТекущегоМесяца.ДатаДокумента КАК Период
		|ИЗ
		|	ВременнаяТаблицаОплатаТекущегоМесяца КАК ВременнаяТаблицаОплатаТекущегоМесяца
		|ГДЕ
		|	ВременнаяТаблицаОплатаТекущегоМесяца.Оплата <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Договор,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОтгрузкаТекущегоМесяца.Регистратор,
		|	ВременнаяТаблицаОтгрузкаТекущегоМесяца.Контрагент,
		|	ВременнаяТаблицаОтгрузкаТекущегоМесяца.Договор КАК Договор,
		|	СУММА(ВременнаяТаблицаОтгрузкаТекущегоМесяца.Отгрузка) КАК Отгрузка,
		|	ВременнаяТаблицаОтгрузкаТекущегоМесяца.ДатаДокумента КАК Период
		|ИЗ
		|	ВременнаяТаблицаОтгрузкаТекущегоМесяца КАК ВременнаяТаблицаОтгрузкаТекущегоМесяца
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаОтгрузкаТекущегоМесяца.Регистратор,
		|	ВременнаяТаблицаОтгрузкаТекущегоМесяца.Контрагент,
		|	ВременнаяТаблицаОтгрузкаТекущегоМесяца.Договор,
		|	ВременнаяТаблицаОтгрузкаТекущегоМесяца.ДатаДокумента
		|
		|УПОРЯДОЧИТЬ ПО
		|	Договор,
		|	Период";
		
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);	
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	Запрос.УстановитьПараметр("КонецПериода", 		КонецМесяца(Дата));
	Запрос.УстановитьПараметр("НачалоПериода", 		НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ВидыСубконто",		ВидыСубконто);
	Запрос.УстановитьПараметр("Организация", 		Организация);          
	Запрос.УстановитьПараметр("ЗначениеСтавкиНСП", 	ЗначениеСтавкиНСП);
	Запрос.УстановитьПараметр("Ссылка", 			Ссылка);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДоговор 	= РезультатЗапроса[7].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ТаблицаОплат 	= РезультатЗапроса[8].Выгрузить();
	ТаблицаОтгрузок = РезультатЗапроса[9].Выгрузить();
	
	МассивТиповДокументов = Новый Массив;
	МассивТиповДокументов.Добавить(ТипЗнч(Документы.ПлатежноеПоручениеВходящее));
	МассивТиповДокументов.Добавить(ТипЗнч(Документы.ПлатежноеПоручениеИсходящее));
	МассивТиповДокументов.Добавить(ТипЗнч(Документы.РасходныйКассовыйОрдер));
	МассивТиповДокументов.Добавить(ТипЗнч(Документы.ПриходныйКассовыйОрдер));
	
	ОписаниеТиповДокументов = Новый ОписаниеТипов(МассивТиповДокументов);
	
	ТЗАвансы = Новый ТаблицаЗначений;               
	ТЗАвансы.Колонки.Добавить("Период", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ТЗАвансы.Колонки.Добавить("ДокументАванса", ОписаниеТиповДокументов);
	ТЗАвансы.Колонки.Добавить("СуммаАванса", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТЗАвансы.Колонки.Добавить("СуммаНДСОстаток", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТЗАвансы.Колонки.Добавить("СуммаНСПОстаток", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТЗАвансы.Колонки.Добавить("ЗначениеСтавкиНДС", ОбщегоНазначения.ОписаниеТипаЧисло(10,2));
	ТЗАвансы.Колонки.Добавить("ЗначениеСтавкиНСП", ОбщегоНазначения.ОписаниеТипаЧисло(10,2));
	ТЗАвансы.Колонки.Добавить("СальдоНаНачало", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	
	Пока ВыборкаДоговор.Следующий() Цикл
		
		Договор 				= ВыборкаДоговор.Договор;		
		
		// Доотгрузка
		ТЗАвансы.Очистить();
		ВыборкаДокумента = ВыборкаДоговор.Выбрать();
		
		Пока ВыборкаДокумента.НайтиСледующий(Договор, "Договор")  Цикл
			Если ВыборкаДокумента.СуммаАванса > 0 Тогда
				СТЗ = ТЗАвансы.Добавить();
				ЗаполнитьЗначенияСвойств(СТЗ, ВыборкаДокумента);
			КонецЕсли;
		КонецЦикла;		
		
		ВсегоАвансов  	= ТЗАвансы.Количество();
		Счетчик			= 0;
		ОстТекАванс		= 0;
		ОтборПоДоговору = Новый Структура("Договор", Договор);		
		
		Если ТЗАвансы.Количество() > 0 Тогда
			ОстТекАванс		= ТЗАвансы[Счетчик].СуммаАванса;
			ТекущийОстатокНДС = ТЗАвансы[Счетчик].СуммаНДСОстаток;
			ТекущийОстатокНСП = ТЗАвансы[Счетчик].СуммаНСПОстаток;
			

			ТЗДоотгрузка = ТаблицаОтгрузок.Скопировать(ТаблицаОтгрузок.НайтиСтроки(ОтборПоДоговору));
			Для Каждого СтрокаТЗДоотгрузки Из ТЗДоотгрузка  Цикл       
				// Если все авансы закончилсь, то выход
				Если Счетчик > ВсегоАвансов - 1 Тогда 
					Прервать;
				КонецЕсли;				
				
				ОстТекОтгр		= СтрокаТЗДоотгрузки.Отгрузка;   			
				
				// Перебираем авансы до тех пор пока не кончится очередная отгрузка или аванс
				Пока ОстТекОтгр > 0 Цикл
					
					Если ОстТекАванс <= 0 Тогда
						Счетчик = Счетчик + 1;
						Если Счетчик > ВсегоАвансов - 1 Тогда
							Прервать;
						КонецЕсли;
						ОстТекАванс 	= ТЗАвансы[Счетчик].СуммаАванса;
						ТекущийОстатокНДС = ТЗАвансы[Счетчик].СуммаНДСОстаток;
						ТекущийОстатокНСП = ТЗАвансы[Счетчик].СуммаНСПОстаток;						
						Продолжить;			 
					КонецЕсли; 
					// СозданиеДоотгрузки
					СуммаДоотгр = Мин(ОстТекАванс, ОстТекОтгр);
					
					СтрокаТабличнойЧасти				= ДоотгрузкаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаТЗДоотгрузки);
					СтрокаТабличнойЧасти.ДокументОплаты = СтрокаТЗДоотгрузки.Регистратор; 
					СтрокаТабличнойЧасти.Сумма 			= СуммаДоотгр;
					СтрокаТабличнойЧасти.ДокументАванса	= ТЗАвансы[Счетчик].ДокументАванса;
					
					Если ОстТекАванс > ОстТекОтгр Тогда
						СтрокаТабличнойЧасти.СуммаНДС 	= Окр(СуммаДоотгр / ТЗАвансы[Счетчик].СуммаАванса * ТЗАвансы[Счетчик].СуммаНДСОстаток, 2);
						СтрокаТабличнойЧасти.СуммаНСП 	= Окр(СуммаДоотгр / ТЗАвансы[Счетчик].СуммаАванса * ТЗАвансы[Счетчик].СуммаНСПОстаток, 2);							
						ТекущийОстатокНДС 			= ТекущийОстатокНДС - СтрокаТабличнойЧасти.СуммаНДС;
						ТекущийОстатокНСП 			= ТекущийОстатокНСП - СтрокаТабличнойЧасти.СуммаНСП;
					Иначе
						СтрокаТабличнойЧасти.СуммаНДС 	= ТекущийОстатокНДС;
						СтрокаТабличнойЧасти.СуммаНСП 	= ТекущийОстатокНСП;						
					КонецЕсли;					
					
					// Остаток аванса			
					ОстТекАванс 	= ОстТекАванс 	- СуммаДоотгр;   			
					
					// Если текущая отгрузка закончилась, то начинаем новую
					ОстТекОтгр		= ОстТекОтгр 	- СуммаДоотгр;			
					Если ОстТекОтгр = 0 Тогда 
						Прервать;
					КонецЕсли;
					
					// Если очередной аванс кончился, то начинаем следующий
					Если ОстТекАванс <= 0 Тогда
						Счетчик = Счетчик + 1;
						
						// Проверяем, кончились авансы или нет
						Если Счетчик <= ВсегоАвансов - 1 Тогда 
							ОстТекАванс 	= ТЗАвансы[Счетчик].СуммаАванса;
							ТекущийОстатокНДС = ТЗАвансы[Счетчик].СуммаНДСОстаток;
							ТекущийОстатокНСП = ТЗАвансы[Счетчик].СуммаНСПОстаток;							
						Иначе
							Прервать;
						КонецЕсли; // Если все авансы закончилсь, то выход во внешний цикл и выход оттуда
						
						Продолжить;								
					КонецЕсли; 					
				КонецЦикла;				
			КонецЦикла;			
		КонецЕсли; 
		
		
		// Авансы
		ТЗОплата = ТаблицаОплат.Скопировать(ТаблицаОплат.НайтиСтроки(ОтборПоДоговору));
		
		ВремТаблицаОтгрузок = ТаблицаОтгрузок.Скопировать(ТаблицаОтгрузок.НайтиСтроки(ОтборПоДоговору));
		ВремДоотгрузка 		= ДоотгрузкаРасшифровка.Выгрузить(ДоотгрузкаРасшифровка.НайтиСтроки(ОтборПоДоговору));
				
		Оплата 	 	 	= ТЗОплата.Итог("Оплата"); // включая возврат ТМЗ от покупателя
		Отгрузка 	 	= ВремТаблицаОтгрузок.Итог("Отгрузка"); // включая возврат ДС
		ДоотгрузкаСм	= ВремДоотгрузка.Итог("Сумма");
		
		ТекущаяОтгрузка = Макс(0,(Отгрузка - ДоотгрузкаСм));
		
		ОстАванс	= Макс(0, Оплата - ТекущаяОтгрузка - ВыборкаДоговор.СальдоДтНач);
				
		ТЗОплата.Сортировать("Период Убыв");
		
		Для каждого СТЗ Из ТЗОплата Цикл
			
			ТекАванс = Мин(СТЗ.Оплата, ОстАванс);
			
			Если ТекАванс > 0 Тогда
				СтрокаТабличнойЧасти = Авансы.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СТЗ);
				СтрокаТабличнойЧасти.Сумма = ТекАванс;
				
				ЭтоБезналичныйРасчет = ТипЗнч(СТЗ.Регистратор) = ТИП("ДокументСсылка.ПлатежноеПоручениеВходящее");
				Если ЭтоБезналичныйРасчет Тогда
					ЗначениеСтавкиНСП = 0;
				Иначе	
				    ЗначениеСтавкиНСП = ВыборкаДоговор.ЗначениеСтавкиНСП;
				КонецЕсли;
				
				СтрокаТабличнойЧасти.СуммаНДС = Окр(ТекАванс * ВыборкаДоговор.ЗначениеСтавкиНДС / (100 + ВыборкаДоговор.ЗначениеСтавкиНДС + ЗначениеСтавкиНСП), 2);
				СтрокаТабличнойЧасти.СуммаНСП = Окр(ТекАванс * ЗначениеСтавкиНСП / (100 + ВыборкаДоговор.ЗначениеСтавкиНДС + ЗначениеСтавкиНСП), 2);				
			КонецЕсли;
			
			ОстАванс = ОстАванс - ТекАванс;
			Если ОстАванс <= 0 Тогда 
				Прервать;	
			КонецЕсли;					
		КонецЦикла;							
	КонецЦикла;	
	
	Авансы.Свернуть("Контрагент, Договор", "Сумма, СуммаНДС, СуммаНСП");
	
	ВременнаяТаблицаЗначений = ДоотгрузкаРасшифровка.Выгрузить();
	ВременнаяТаблицаЗначений.Свернуть("Контрагент, Договор", "Сумма, СуммаНДС, СуммаНСП");
	Доотгрузка.Загрузить(ВременнаяТаблицаЗначений);	
	
КонецПроцедуры

// Процедура - Рассчитать НДС для Отчета по НДС
Процедура РассчитатьНДС(УПП)
	НачалоПериода 	= НачалоМесяца(Дата);
	КонецПериода 	= КонецМесяца(Дата);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоМесяца", 	НачалоПериода);
	Запрос.УстановитьПараметр("КонецМесяца", 	КонецПериода);
	Запрос.УстановитьПараметр("Организация", 	Организация);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	// 1. Таблица данных из ТЧ "Доотгрузка" данного документа ЗМ;
	// 2. Таблица с общей суммой ТЧ "Доотргузка" по реквизитам "Сумма" и "СуммаНДС";
	// 3. Таблица с общей суммой оборотов ресурса "Доход" РН "Реализация" за месяц;
	// 4. Таблица суммирования пункта 3 и пункта 2 (по реквизиту "Сумма");
	// 5. Таблица с общей суммой оборотов ресурса "Доход" РН "Реализация" за месяц, где Ставка НДС = ОСВОБОЖДЕННАЯ.
		"ВЫБРАТЬ
		|	ЗакрытиеМесяцаДоотгрузка.Сумма КАК СуммаДоотгрузки,
		|	ЗакрытиеМесяцаДоотгрузка.СуммаНДС КАК СуммаНДСДоотгрузки
		|ПОМЕСТИТЬ ВременнаяТаблицаДоотгрузка
		|ИЗ
		|	&ТаблицаДоотгрузка КАК ЗакрытиеМесяцаДоотгрузка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ТаблицаДоотгрузка.СуммаДоотгрузки) КАК СуммаДоотгрузки,
		|	СУММА(ТаблицаДоотгрузка.СуммаНДСДоотгрузки) КАК СуммаНДСДоотгрузки
		|ПОМЕСТИТЬ ВременнаяТаблицаСуммарнаяДоотгрузка
		|ИЗ
		|	ВременнаяТаблицаДоотгрузка КАК ТаблицаДоотгрузка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(РеализацияОбороты.ДоходОборот, 0) КАК СуммаПродажОбщая
		|ПОМЕСТИТЬ ВременнаяВсяРеализация
		|ИЗ
		|	РегистрНакопления.РеализацияТоваров.Обороты(&НачалоМесяца, &КонецМесяца, , Организация = &Организация) КАК РеализацияОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВременнаяВсяРеализация.СуммаПродажОбщая, 0) - ЕСТЬNULL(ВременнаяТаблицаСуммарнаяДоотгрузка.СуммаДоотгрузки, 0) КАК СуммаПродажОбщая
		|ИЗ
		|	ВременнаяВсяРеализация КАК ВременнаяВсяРеализация,
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСуммарнаяДоотгрузка КАК ВременнаяТаблицаСуммарнаяДоотгрузка
		|		ПО (ИСТИНА)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(РеализацияОборотыОсвобожденные.ДоходОборот, 0) КАК СуммаПродажОсвобожденная
		|ИЗ
		|	РегистрНакопления.РеализацияТоваров.Обороты(
		|			&НачалоМесяца,
		|			&КонецМесяца,
		|			,
		|			Организация = &Организация
		|				И СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.Освобожденная)) КАК РеализацияОборотыОсвобожденные";
	
	ТаблицаДоотгрузка = Доотгрузка.Выгрузить();
	Запрос.Параметры.Вставить("ТаблицаДоотгрузка", ТаблицаДоотгрузка);
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатЗапроса[3].Выбрать();
	СуммаПродажОбщая = 0;
	Если Выборка.Следующий() Тогда
		СуммаПродажОбщая = Выборка.СуммаПродажОбщая;
	КонецЕсли;
	
	Выборка = РезультатЗапроса[4].Выбрать();
	СуммаПродажОсвобожденная = 0;
	Если Выборка.Следующий() Тогда
		СуммаПродажОсвобожденная = Выборка.СуммаПродажОсвобожденная;
	КонецЕсли;
	
	КоэффициентОсвобожденныхПоставок = 0;
	Если СуммаПродажОсвобожденная <> 0 ИЛИ СуммаПродажОсвобожденная <> 0 Тогда
		КоэффициентОсвобожденныхПоставок = Окр(СуммаПродажОсвобожденная / СуммаПродажОбщая, 4);		
	КонецЕсли;
	КоэффициентРаспределения = 1 - ?(КоэффициентОсвобожденныхПоставок < 0.05, 0, КоэффициентОсвобожденныхПоставок);
	
	// Строки 050 - 054
	// 1. Таблица с общей суммой оборотов ресурса "Доход" РН "Реализация" за месяц: СтавкаНДС <> Освобож или Нулевая, Признак страны = КР;
	// 2. Таблица с общей суммой оборотов ресурса "Доход" РН "Реализация" за месяц: СтавкаНДС = Нулевая;
	// 3. Таблица с общей суммой оборотов ресурса "Доход" РН "Реализация" за месяц: Признак страны = ЕАЭС;
	// 4. Таблица с общей суммой оборотов ресурса "Доход" РН "Реализация" за месяц: СтавкаНДС = Освобож;
	// 5. Сумма пункта 1 минус сумма реквизита "Сумма" из предыдущего стека запросов (см. ВременнаяТаблицаСуммарнаяДоотгрузка),
	//	  объединение с суммой пунктов 2 и 4;
	// 6. Сумма пункта 1 минус сумма реквизита "Сумма" из предыдущего стека запросов (см. ВременнаяТаблицаСуммарнаяДоотгрузка);
	// 7. Повтор пункта 2 без помещения во временную таблицу;
	// 8. Повтор пункта 3 без помещения во временную таблицу;
	// 9. Повтор пункта 4 без помещения во временную таблицу;
	// 10. Таблица с общей суммой по пункту 5;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	""050"" КАК Строка,
		|	""ОБЛАГАЕМЫЕ ПОСТАВКИ НА ТЕРРИТОРИИ КР"" КАК Содержание
		|ПОМЕСТИТЬ ВременнаяТаблица050Содержание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""051"" КАК Строка,
		|	""ПОСТАВКИ, ОБЛАГАЕМЫЕ ПО НУЛЕВОЙ СТАВКЕ"" КАК Содержание
		|ПОМЕСТИТЬ ВременнаяТаблица051Содержание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""052"" КАК Строка,
		|	""В ТОМ ЧИСЛЕ В ЕВРАЗИЙСКИЙ ЭКОНОМИЧЕСКИЙ СОЮЗ"" КАК Содержание
		|ПОМЕСТИТЬ ВременнаяТаблица052Содержание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""053"" КАК Строка,
		|	""ОСВОБОЖДЕННЫЕ И НЕОБЛАГАЕМЫЕ ПОСТАВКИ"" КАК Содержание
		|ПОМЕСТИТЬ ВременнаяТаблица053Содержание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблица050Содержание.Строка КАК Строка,
		|	ВременнаяТаблица050Содержание.Содержание КАК Содержание,
		|	ЕСТЬNULL(РеализацияОбороты.ДоходОборот, 0) КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблица050
		|ИЗ
		|	ВременнаяТаблица050Содержание КАК ВременнаяТаблица050Содержание
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РеализацияТоваров.Обороты(
		|				&НачалоМесяца,
		|				&КонецМесяца,
		|				,
		|				Организация = &Организация
		|					И Контрагент.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
		|					И СтавкаНДС <> ЗНАЧЕНИЕ(Справочник.СтавкиНДС.Освобожденная)
		|					И СтавкаНДС <> ЗНАЧЕНИЕ(Справочник.СтавкиНДС.Нулевая)) КАК РеализацияОбороты
		|		ПО (ИСТИНА)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблица051Содержание.Строка КАК Строка,
		|	ВременнаяТаблица051Содержание.Содержание КАК Содержание,
		|	ЕСТЬNULL(РеализацияОбороты.ДоходОборот, 0) КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблица051
		|ИЗ
		|	ВременнаяТаблица051Содержание КАК ВременнаяТаблица051Содержание
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РеализацияТоваров.Обороты(
		|				&НачалоМесяца,
		|				&КонецМесяца,
		|				,
		|				Организация = &Организация
		|					И СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.Нулевая)) КАК РеализацияОбороты
		|		ПО (ИСТИНА)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблица052Содержание.Строка КАК Строка,
		|	ВременнаяТаблица052Содержание.Содержание КАК Содержание,
		|	ЕСТЬNULL(РеализацияОбороты.ДоходОборот, 0) КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблица052
		|ИЗ
		|	ВременнаяТаблица052Содержание КАК ВременнаяТаблица052Содержание
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РеализацияТоваров.Обороты(
		|				&НачалоМесяца,
		|				&КонецМесяца,
		|				,
		|				Организация = &Организация
		|					И Контрагент.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)) КАК РеализацияОбороты
		|		ПО (ИСТИНА)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблица053Содержание.Строка КАК Строка,
		|	ВременнаяТаблица053Содержание.Содержание КАК Содержание,
		|	ЕСТЬNULL(РеализацияОбороты.ДоходОборот, 0) КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблица053
		|ИЗ
		|	ВременнаяТаблица053Содержание КАК ВременнаяТаблица053Содержание
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РеализацияТоваров.Обороты(
		|				&НачалоМесяца,
		|				&КонецМесяца,
		|				,
		|				Организация = &Организация
		|					И СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.Освобожденная)) КАК РеализацияОбороты
		|		ПО (ИСТИНА)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВременнаяТаблица050.Сумма, 0) - ЕСТЬNULL(ВременнаяТаблицаСуммарнаяДоотгрузка.СуммаДоотгрузки, 0) КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблица054
		|ИЗ
		|	ВременнаяТаблица050 КАК ВременнаяТаблица050
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСуммарнаяДоотгрузка КАК ВременнаяТаблицаСуммарнаяДоотгрузка
		|		ПО (ИСТИНА)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВременнаяТаблица051.Сумма, 0)
		|ИЗ
		|	ВременнаяТаблица051 КАК ВременнаяТаблица051
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВременнаяТаблица053.Сумма, 0)
		|ИЗ
		|	ВременнаяТаблица053 КАК ВременнаяТаблица053
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблица050.Строка КАК Строка,
		|	ВременнаяТаблица050.Содержание КАК Содержание,
		|	ЕСТЬNULL(ВременнаяТаблица050.Сумма, 0) - ЕСТЬNULL(ВременнаяТаблицаСуммарнаяДоотгрузка.СуммаДоотгрузки, 0) КАК Сумма
		|ИЗ
		|	ВременнаяТаблица050 КАК ВременнаяТаблица050
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСуммарнаяДоотгрузка КАК ВременнаяТаблицаСуммарнаяДоотгрузка
		|		ПО (ИСТИНА)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблица051.Строка КАК Строка,
		|	ВременнаяТаблица051.Содержание КАК Содержание,
		|	ВременнаяТаблица051.Сумма КАК Сумма
		|ИЗ
		|	ВременнаяТаблица051 КАК ВременнаяТаблица051
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблица052.Строка КАК Строка,
		|	ВременнаяТаблица052.Содержание КАК Содержание,
		|	ВременнаяТаблица052.Сумма КАК Сумма
		|ИЗ
		|	ВременнаяТаблица052 КАК ВременнаяТаблица052
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблица053.Строка КАК Строка,
		|	ВременнаяТаблица053.Содержание КАК Содержание,
		|	ВременнаяТаблица053.Сумма КАК Сумма
		|ИЗ
		|	ВременнаяТаблица053 КАК ВременнаяТаблица053
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""054"" КАК Строка,
		|	""ОБЩАЯ СТОИМОСТЬ  ПОСТАВОК (=050+051+053)"" КАК Содержание,
		|	СУММА(ВременнаяТаблица054.Сумма) КАК Сумма
		|ИЗ
		|	ВременнаяТаблица054 КАК ВременнаяТаблица054";	
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();	
	// 050
	Выборка = РезультатЗапроса[9].Выбрать();
	Выборка.Следующий();
	СтрокаТабличнойЧасти = НДС.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);
	// 051
	Выборка = РезультатЗапроса[10].Выбрать();
	Выборка.Следующий();
	СтрокаТабличнойЧасти = НДС.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);	
	// 052
	Выборка = РезультатЗапроса[11].Выбрать();
	Выборка.Следующий();
	СтрокаТабличнойЧасти = НДС.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);	
	// 053
	Выборка = РезультатЗапроса[12].Выбрать();
	Выборка.Следующий();
	СтрокаТабличнойЧасти = НДС.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);	
	// 054
	Выборка = РезультатЗапроса[13].Выбрать();
	Выборка.Следующий();
	СтрокаТабличнойЧасти = НДС.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);	
												
	// Строки 055 - 058
	// 1. Таблица с общей суммой по (ресурс "СуммаСебестоимости" минус ресурс "СуммаНеоблагаемая") РН "Поступления" 
	//	  за месяц: Признак страны = КР;
	// 2. Таблица с общей суммой оборотов ресурса "СуммаСебестоимости" РН "НДСГТДИмпорт" за месяц;
	// 3. Таблица с общей суммой оборотов ресурса "СуммаСебестоимости" РН "Поступления" за месяц: Признак страны = ЕАЭС или ИмпЭксп;
	// 4. Объединение сумм пунтктов 1 и 2;
	// 5. Повтор пункта 1 без помещения во временную таблицу;
	// 6. Повтор пункта 2 без помещения во временную таблицу;
	// 7. Повтор пункта 3 без помещения во временную таблицу;
	// 8. Повтор пункта 4 без помещения во временную таблицу;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	""055"" КАК Строка,
		|	""ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ В КР"" КАК Содержание
		|ПОМЕСТИТЬ ВременнаяТаблица055Содержание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""056"" КАК Строка,
		|	""ИМПОРТ МАТЕРИАЛЬНЫХ РЕСУРСОВ В КР"" КАК Содержание
		|ПОМЕСТИТЬ ВременнаяТаблица056Содержание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""057"" КАК Строка,
		|	""В ТОМ ЧИСЛЕ ИЗ ЕВРАЗИЙСКОГО ЭКОНОМИЧЕСКОГО СОЮЗА"" КАК Содержание
		|ПОМЕСТИТЬ ВременнаяТаблица057Содержание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблица055Содержание.Строка КАК Строка,
		|	ВременнаяТаблица055Содержание.Содержание КАК Содержание,
		|	ЕСТЬNULL(ПоступленияОбороты.СуммаСебестоимостиОборот, 0) - ЕСТЬNULL(ПоступленияОбороты.СуммаНеоблагаемаяОборот, 0) КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблица055
		|ИЗ
		|	ВременнаяТаблица055Содержание КАК ВременнаяТаблица055Содержание
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПоступлениеТоваров.Обороты(
		|				&НачалоМесяца,
		|				&КонецМесяца,
		|				,
		|				Организация = &Организация
		|					И Контрагент.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)) КАК ПоступленияОбороты
		|		ПО (ИСТИНА)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблица056Содержание.Строка КАК Строка,
		|	ВременнаяТаблица056Содержание.Содержание КАК Содержание,
		|	ЕСТЬNULL(НДСГТДИмпортОбороты.СуммаСебестоимостиОборот, 0) КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблица056
		|ИЗ
		|	ВременнаяТаблица056Содержание КАК ВременнаяТаблица056Содержание
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСГТДИмпорт.Обороты(&НачалоМесяца, &КонецМесяца, , Организация = &Организация) КАК НДСГТДИмпортОбороты
		|		ПО (ИСТИНА)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблица057Содержание.Строка КАК Строка,
		|	ВременнаяТаблица057Содержание.Содержание КАК Содержание,
		|	ЕСТЬNULL(ПоступленияОбороты.СуммаСебестоимостиОборот, 0) КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблица057
		|ИЗ
		|	ВременнаяТаблица057Содержание КАК ВременнаяТаблица057Содержание
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПоступлениеТоваров.Обороты(
		|				&НачалоМесяца,
		|				&КонецМесяца,
		|				,
		|				Организация = &Организация
		|					И (Контрагент.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|						ИЛИ Контрагент.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС))) КАК ПоступленияОбороты
		|		ПО (ИСТИНА)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВременнаяТаблица055.Сумма, 0) КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблица058
		|ИЗ
		|	ВременнаяТаблица055 КАК ВременнаяТаблица055
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВременнаяТаблица056.Сумма, 0)
		|ИЗ
		|	ВременнаяТаблица056 КАК ВременнаяТаблица056
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблица055.Строка КАК Строка,
		|	ВременнаяТаблица055.Содержание КАК Содержание,
		|	ВременнаяТаблица055.Сумма КАК Сумма
		|ИЗ
		|	ВременнаяТаблица055 КАК ВременнаяТаблица055
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблица056.Строка КАК Строка,
		|	ВременнаяТаблица056.Содержание КАК Содержание,
		|	ВременнаяТаблица056.Сумма КАК Сумма
		|ИЗ
		|	ВременнаяТаблица056 КАК ВременнаяТаблица056
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблица057.Строка,
		|	ВременнаяТаблица057.Содержание,
		|	ВременнаяТаблица057.Сумма КАК Сумма
		|ИЗ
		|	ВременнаяТаблица057 КАК ВременнаяТаблица057
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""058"" КАК Строка,
		|	""ОБЩАЯ СТОИМОСТЬ ПРИОБРЕТЕННЫХ МАТЕРИАЛЬНЫХ РЕСУРСОВ (=055+056)"" КАК Содержание,
		|	СУММА(ВременнаяТаблица058.Сумма) КАК Сумма
		|ИЗ
		|	ВременнаяТаблица058 КАК ВременнаяТаблица058";
	
											
	РезультатЗапроса = Запрос.ВыполнитьПакет();	
	// 055
	Выборка = РезультатЗапроса[7].Выбрать();
	ПриобретениеКР = ?(Выборка.Следующий(), Выборка.Сумма, 0);
	СтрокаТабличнойЧасти = НДС.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);
	
	// 056 - 057	
	Выборка = РезультатЗапроса[8].Выбрать();
	ТолькоИмпорт = ?(Выборка.Следующий(), Выборка.Сумма, 0);
	СтрокаТабличнойЧасти056 = НДС.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти056, Выборка);
	
	Выборка = РезультатЗапроса[9].Выбрать();
	ИмпортЕАЭС = ?(Выборка.Следующий(), Выборка.Сумма, 0);			
	СтрокаТабличнойЧасти057 = НДС.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти057, Выборка);
	
	ИмпортКР = ТолькоИмпорт + ИмпортЕАЭС;
	СтрокаТабличнойЧасти056.Сумма = ИмпортКР;
	
	// 058
	Выборка = РезультатЗапроса[10].Выбрать();
	Выборка.Следующий();
	СтрокаТабличнойЧасти = НДС.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);
	СтрокаТабличнойЧасти.Сумма = ПриобретениеКР + ИмпортКР;
	
	// 059, 065
	// 1. Таблица с общей суммой оборотов ресурса "СуммаНДС" РН "Реализация" за месяц;
	// 2. Таблица с общей суммой оборотов ресурса "СуммаНДС" РН "Поступления" за месяц: ЗачетНДС = Зачет или ПустаяСсылка И 
	//	  СтавкаНДС = Нулевая;
	// 3. Сумма пункта 1 минус сумма реквизита "СуммаНДС" из предыдущего стека запросов (см. ВременнаяТаблицаСуммарнаяДоотгрузка). 
	Запрос.Текст =
		"ВЫБРАТЬ
		|	""059"" КАК Строка,
		|	""ОБЩАЯ СУММА НДС ЗА ПРОИЗВЕДЕННЫЕ ПОСТАВКИ ( =050 х ставку / 100%)"" КАК Содержание,
		|	ЕСТЬNULL(РеализацияОбороты.СуммаНДСОборот, 0) КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблица059
		|ИЗ
		|	РегистрНакопления.РеализацияТоваров.Обороты(&НачалоМесяца, &КонецМесяца, , Организация = &Организация) КАК РеализацияОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""065"" КАК Строка,
		|	""В ТОМ ЧИСЛЕ НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ,  ИСПОЛЬЗУЕМЫЕ ДЛЯ ПОСТАВОК С НУЛЕВОЙ СТАВКОЙ"" КАК Содержание
		|ПОМЕСТИТЬ ВременнаяТаблица065Содержание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""059"" КАК Строка,
		|	""ОБЩАЯ СУММА НДС ЗА ПРОИЗВЕДЕННЫЕ ПОСТАВКИ ( =050 х ставку / 100%)"" КАК Содержание,
		|	ЕСТЬNULL(ВременнаяТаблица059.Сумма, 0) - ЕСТЬNULL(ВременнаяТаблицаСуммарнаяДоотгрузка.СуммаНДСДоотгрузки, 0) КАК Сумма
		|ИЗ
		|	ВременнаяТаблица059 КАК ВременнаяТаблица059
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСуммарнаяДоотгрузка КАК ВременнаяТаблицаСуммарнаяДоотгрузка
		|		ПО (ИСТИНА)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблица065Содержание.Строка КАК Строка,
		|	ВременнаяТаблица065Содержание.Содержание КАК Содержание,
		|	ЕСТЬNULL(ПоступленияОбороты.СуммаНДСОборот, 0) КАК Сумма
		|ИЗ
		|	ВременнаяТаблица065Содержание КАК ВременнаяТаблица065Содержание
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПоступлениеТоваров.Обороты(
		|				&НачалоМесяца,
		|				&КонецМесяца,
		|				,
		|				Организация = &Организация
		|					И (ЗачетНДС = ЗНАЧЕНИЕ(перечисление.ВидыЗачетаНДС.Зачет)
		|						ИЛИ ЗачетНДС = ЗНАЧЕНИЕ(перечисление.ВидыЗачетаНДС.ПустаяСсылка))
		|					И СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.Нулевая)) КАК ПоступленияОбороты
		|		ПО (ИСТИНА)";	
											
	РезультатЗапроса = Запрос.ВыполнитьПакет();	
	// 059
	Выборка = РезультатЗапроса[2].Выбрать();
	ВсегоНДСПоставки = ?(Выборка.Следующий(), Выборка.Сумма, 0);
	СтрокаТабличнойЧасти = НДС.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);	
	// 065 - Начало. Продолжение после 064
	Выборка065 = РезультатЗапроса[3].Выбрать();
	Выборка065.Следующий();	
	
	// Строки 060 - 063 
	Если УПП.УказыватьПризнакЗачетаНДСПриПоступлении Тогда
		// 1. Таблица с общей суммой оборотов ресурса "СуммаНДС" РН "Поступления" за месяц: ЗачетНДС = Распределение;
		// 2. Таблица с общей суммой оборотов ресурса "СуммаНДС" РН "Поступления" за месяц: ЗачетНДС = Зачет или ПустаяСсылка И
		//	  ПризнакСтраны = КР;
		// 3. Таблица с общей суммой оборотов ресурса "СуммаНДС" РН "НДСГТДИмпорт" за месяц;
		// 4. Таблица с общей суммой оборотов ресурса "СуммаНДС" РН "Поступления" за месяц: ЗачетНДС = Зачет или ПустаяСсылка И
		//	  ПризнакСтраны = ЕАЭС или ИмпЭксп;
		// 5. Таблица с общей суммой оборотов ресурса "СуммаНДС" РН "Поступления" за месяц: ЗачетНДС = Себестоимость; 
		Запрос.Текст = 		
			"ВЫБРАТЬ
			|	""Распределение"" КАК Содержание,
			|	ЕСТЬNULL(ПоступленияОбороты.СуммаНДСОборот, 0) КАК Сумма
			|ИЗ
			|	РегистрНакопления.ПоступлениеТоваров.Обороты(
			|			&НачалоМесяца,
			|			&КонецМесяца,
			|			,
			|			Организация = &Организация
			|				И ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Распределение)) КАК ПоступленияОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	""060"" КАК Строка,
			|	""НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ, ПОДЛЕЖАЩИЙ ЗАЧЕТУ"" КАК Содержание,
			|	ЕСТЬNULL(ПоступленияОбороты.СуммаНДСОборот, 0) КАК Сумма
			|ИЗ
			|	РегистрНакопления.ПоступлениеТоваров.Обороты(
			|			&НачалоМесяца,
			|			&КонецМесяца,
			|			,
			|			Организация = &Организация
			|				И Контрагент.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
			|				И (ЗачетНДС = ЗНАЧЕНИЕ(перечисление.ВидыЗачетаНДС.Зачет)
			|					ИЛИ ЗачетНДС = ЗНАЧЕНИЕ(перечисление.ВидыЗачетаНДС.ПустаяСсылка))) КАК ПоступленияОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	""061"" КАК Строка,
			|	""НДС НА ИМПОРТ, ПОДЛЕЖАЩИЙ ЗАЧЕТУ (только импорт)"" КАК Содержание,
			|	ЕСТЬNULL(НДСГТДИмпортОбороты.СуммаНДСОборот, 0) КАК Сумма
			|ИЗ
			|	РегистрНакопления.НДСГТДИмпорт.Обороты(&НачалоМесяца, &КонецМесяца, , Организация = &Организация) КАК НДСГТДИмпортОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	""062"" КАК Строка,
			|	""В ТОМ ЧИСЛЕ ИЗ ЕВРАЗИЙСКОГО ЭКОНОМИЧЕСКОГО СОЮЗА"" КАК Содержание,
			|	ЕСТЬNULL(ПоступленияОбороты.СуммаНДСОборот, 0) КАК Сумма
			|ИЗ
			|	РегистрНакопления.ПоступлениеТоваров.Обороты(
			|			&НачалоМесяца,
			|			&КонецМесяца,
			|			,
			|			Организация = &Организация
			|			И (Контрагент.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
			|				ИЛИ Контрагент.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС))
			|				И (ЗачетНДС = ЗНАЧЕНИЕ(перечисление.ВидыЗачетаНДС.Зачет)
			|					ИЛИ ЗачетНДС = ЗНАЧЕНИЕ(перечисление.ВидыЗачетаНДС.ПустаяСсылка))) КАК ПоступленияОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	""063"" КАК Строка,
			|	""НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ, НЕ ПОДЛЕЖАЩИЙ ЗАЧЕТУ"" КАК Содержание,
			|	ЕСТЬNULL(ПоступленияОбороты.СуммаНДСОборот, 0) КАК Сумма
			|ИЗ
			|	РегистрНакопления.ПоступлениеТоваров.Обороты(
			|			&НачалоМесяца,
			|			&КонецМесяца,
			|			,
			|			Организация = &Организация
			|				И ЗачетНДС = ЗНАЧЕНИЕ(перечисление.ВидыЗачетаНДС.Себестоимость)) КАК ПоступленияОбороты";		
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();	
		
		// Весь НДС на распределение
		Выборка = РезультатЗапроса[0].Выбрать();
		Распределение060 	= ?(Выборка.Следующий(), Выборка.Сумма, 0);
		НДСРаспределениеЗачет = Окр(Распределение060 * КоэффициентРаспределения, 2);
		
		МассивКоэффициентов = Новый Массив;
		// предварительно 060
		Выборка = РезультатЗапроса[1].Выбрать();
		НДСПоступленияКР = ?(Выборка.Следующий(), Выборка.Сумма, 0);
		МассивКоэффициентов.Добавить(НДСПоступленияКР);
		// предварительно 061 - только импорт, без ЕАЭС
		Выборка = РезультатЗапроса[2].Выбрать();
		НДСПоступленияТолькоИмпорт = ?(Выборка.Следующий(), Выборка.Сумма, 0);
		МассивКоэффициентов.Добавить(НДСПоступленияТолькоИмпорт);
		// предварительно 062 - только ЕАЭС
		Выборка = РезультатЗапроса[3].Выбрать();
		НДСПоступленияЕАЭС = ?(Выборка.Следующий(), Выборка.Сумма, 0);
		МассивКоэффициентов.Добавить(НДСПоступленияЕАЭС);
		// предварительно 063
		Выборка = РезультатЗапроса[4].Выбрать();
		НДССебестоимость = ?(Выборка.Следующий(), Выборка.Сумма, 0);
		
		
		МассивСуммРаспределения = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(НДСРаспределениеЗачет, МассивКоэффициентов, 2);
		Распр_Приобретение 	= ?(МассивСуммРаспределения = Неопределено, 0, МассивСуммРаспределения[0]);		
		Распр_Импорт 		= ?(МассивСуммРаспределения = Неопределено, 0, МассивСуммРаспределения[1]);
		Распр_ЕАЭС 			= ?(МассивСуммРаспределения = Неопределено, 0, МассивСуммРаспределения[2]);
		
		НДСИмпорт	= 	НДСПоступленияТолькоИмпорт + Распр_Импорт + НДСПоступленияЕАЭС + Распр_ЕАЭС;
		
		// 060
		СтрокаТабличнойЧасти = НДС.Добавить();
		СтрокаТабличнойЧасти.Строка 	= 	"060";		
		СтрокаТабличнойЧасти.Содержание = 	НСтр("ru = 'НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ, ПОДЛЕЖАЩИЙ ЗАЧЕТУ'");
		СтрокаТабличнойЧасти.Сумма 		= 	НДСПоступленияКР + Распр_Приобретение;
		НДС_060 = СтрокаТабличнойЧасти.Сумма;
		// 061
		СтрокаТабличнойЧасти = НДС.Добавить();
		СтрокаТабличнойЧасти.Строка 	= 	"061";		
		СтрокаТабличнойЧасти.Содержание = 	НСтр("ru = 'НДС НА ИМПОРТ, ПОДЛЕЖАЩИЙ ЗАЧЕТУ (только импорт)'");
		СтрокаТабличнойЧасти.Сумма 	= 	НДСИмпорт;
		НДС_061 = СтрокаТабличнойЧасти.Сумма;
		// 062
		СтрокаТабличнойЧасти = НДС.Добавить();
		СтрокаТабличнойЧасти.Строка 	= 	"062";		
		СтрокаТабличнойЧасти.Содержание = 	НСтр("ru = 'В ТОМ ЧИСЛЕ ИЗ ЕВРАЗИЙСКОГО ЭКОНОМИЧЕСКОГО СОЮЗА'");
		СтрокаТабличнойЧасти.Сумма 	= 	НДСПоступленияЕАЭС + Распр_ЕАЭС;				
		// 063
		СтрокаТабличнойЧасти = НДС.Добавить();
		СтрокаТабличнойЧасти.Строка 	= 	"063";		
		СтрокаТабличнойЧасти.Содержание = 	НСтр("ru = 'НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ, НЕ ПОДЛЕЖАЩИЙ ЗАЧЕТУ'");
		СтрокаТабличнойЧасти.Сумма 	= 	НДССебестоимость + Распределение060 - НДСРаспределениеЗачет;
		
	Иначе
		
		// 1. Таблица с общей суммой оборотов ресурса "СуммаНДС" РН "Поступления" за месяц: ПризнакСтраны = КР;
		// 2. Таблица с общей суммой оборотов ресурса "СуммаНДС" РН "НДСГТДИмпорт" за месяц;
		// 3. Таблица с общей суммой оборотов ресурса "СуммаНДС" РН "Поступления" за месяц: ПризнакСтраны = ЕАЭС или ИмпЭксп И
		//	  ЗачетНДС = Зачет или ПустаяСсылка;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	""060"" КАК Строка,
			|	""НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ, ПОДЛЕЖАЩИЙ ЗАЧЕТУ"" КАК Содержание,
			|	ЕСТЬNULL(ПоступленияОбороты.СуммаНДСОборот,0) КАК Сумма
			|ИЗ
			|	РегистрНакопления.ПоступлениеТоваров.Обороты(
			|			&НачалоМесяца,
			|			&КонецМесяца,
			|			Месяц,
			|			Организация = &Организация
			|				И Контрагент.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)) КАК ПоступленияОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	""062"" КАК Строка,
			|	""НДС НА ИМПОРТ, ПОДЛЕЖАЩИЙ ЗАЧЕТУ (только импорт)"" КАК Содержание,
			|	ЕСТЬNULL(НДСГТДИмпортОбороты.СуммаНДСОборот, 0) КАК Сумма
			|ИЗ
			|	РегистрНакопления.НДСГТДИмпорт.Обороты(&НачалоМесяца, &КонецМесяца, , Организация = &Организация) КАК НДСГТДИмпортОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	""061"" КАК Строка,
			|	""В ТОМ ЧИСЛЕ ИЗ ЕВРАЗИЙСКОГО ЭКОНОМИЧЕСКОГО СОЮЗА"" КАК Содержание,
			|	ЕСТЬNULL(ПоступленияОбороты.СуммаНДСОборот, 0) КАК Сумма
			|ИЗ
			|	РегистрНакопления.ПоступлениеТоваров.Обороты(
			|				&НачалоМесяца,
			|				&КонецМесяца,
			|				,
			|				Организация = &Организация
			|					И (Контрагент.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
			|						ИЛИ Контрагент.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС))
			|					И (ЗачетНДС = ЗНАЧЕНИЕ(перечисление.ВидыЗачетаНДС.Зачет)
			|						ИЛИ ЗачетНДС = ЗНАЧЕНИЕ(перечисление.ВидыЗачетаНДС.ПустаяСсылка))) КАК ПоступленияОбороты";
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		// 060
		Выборка = РезультатЗапроса[0].Выбрать();
		Если Выборка.Следующий() Тогда
			НДСПоступленияКР = Окр(Выборка.Сумма * КоэффициентРаспределения, 2);
			НДСКР_НеЗачет = Выборка.Сумма - НДСПоступленияКР;
		Иначе	
		    НДСПоступленияКР = 0;
			НДСКР_НеЗачет = 0;
		КонецЕсли;
		// 061
		Выборка = РезультатЗапроса[2].Выбрать();
		Если Выборка.Следующий() Тогда
			НДСПоступленияТолькоИмпорт = Окр(Выборка.Сумма * КоэффициентРаспределения, 2);
			НДСТолькоИмпорт_НеЗачет = Выборка.Сумма - НДСПоступленияТолькоИмпорт;
		Иначе
			НДСПоступленияТолькоИмпорт = 0;
			НДСТолькоИмпорт_НеЗачет = 0;
		КонецЕсли;
		// 062
		Выборка = РезультатЗапроса[1].Выбрать();
		Если Выборка.Следующий() Тогда
			НДСПоступленияЕАЭС = Окр(Выборка.Сумма * КоэффициентРаспределения, 2);
			НДСЕАЭС_НеЗачет = Выборка.Сумма - НДСПоступленияЕАЭС;
		Иначе
			НДСПоступленияЕАЭС = 0;
			НДСЕАЭС_НеЗачет = 0;
		КонецЕсли;		
		НДСИмпорт 		= НДСПоступленияТолькоИмпорт + НДСПоступленияЕАЭС;
		
		// 060
		СтрокаТабличнойЧасти = НДС.Добавить();
		СтрокаТабличнойЧасти.Строка 	= 	"060";		
		СтрокаТабличнойЧасти.Содержание = 	НСтр("ru = 'НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ, ПОДЛЕЖАЩИЙ ЗАЧЕТУ'");
		СтрокаТабличнойЧасти.Сумма 		= 	НДСПоступленияКР;
		НДС_060 = СтрокаТабличнойЧасти.Сумма;
		// 061
		СтрокаТабличнойЧасти = НДС.Добавить();
		СтрокаТабличнойЧасти.Строка 	= 	"061";		
		СтрокаТабличнойЧасти.Содержание = 	НСтр("ru = 'НДС НА ИМПОРТ, ПОДЛЕЖАЩИЙ ЗАЧЕТУ (только импорт)'");
		СтрокаТабличнойЧасти.Сумма 		= 	НДСИмпорт;
		НДС_061 = СтрокаТабличнойЧасти.Сумма;
		
		// 062
		СтрокаТабличнойЧасти = НДС.Добавить();
		СтрокаТабличнойЧасти.Строка 	= 	"062";		
		СтрокаТабличнойЧасти.Содержание = 	НСтр("ru = 'В ТОМ ЧИСЛЕ ИЗ ЕВРАЗИЙСКОГО ЭКОНОМИЧЕСКОГО СОЮЗА'");
		СтрокаТабличнойЧасти.Сумма 		= 	НДСПоступленияЕАЭС;		
		
		// 063
		СтрокаТабличнойЧасти = НДС.Добавить();
		СтрокаТабличнойЧасти.Строка 	= 	"063";		
		СтрокаТабличнойЧасти.Содержание = 	НСтр("ru = 'НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ, НЕ ПОДЛЕЖАЩИЙ ЗАЧЕТУ'");
		СтрокаТабличнойЧасти.Сумма 		= 	НДСКР_НеЗачет + НДСТолькоИмпорт_НеЗачет + НДСЕАЭС_НеЗачет;		
		
	КонецЕсли;
											
	// 064
	НДС_064 = НДС_060 + НДС_061;
	СтрокаТабличнойЧасти = НДС.Добавить();
	СтрокаТабличнойЧасти.Строка 	= 	"064";		
	СтрокаТабличнойЧасти.Содержание = 	НСтр("ru = 'ОБЩАЯ СУММА НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ, ПОДЛЕЖАЩАЯ ЗАЧЕТУ(=060+061)'");
	СтрокаТабличнойЧасти.Сумма 		= 	НДС_064;
	
	// 065
	СтрокаТабличнойЧасти = НДС.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка065);	
	СтрокаТабличнойЧасти.Строка 	= 	"065";		
	СтрокаТабличнойЧасти.Содержание = 	НСтр("ru = 'В ТОМ ЧИСЛЕ НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ,  ИСПОЛЬЗУЕМЫЕ ДЛЯ ПОСТАВОК С НУЛЕВОЙ СТАВКОЙ'");
		
	// 066
    НДСЗачет = НДСПоступленияКР + НДСИмпорт;
	СтрокаТабличнойЧасти = НДС.Добавить();
	СтрокаТабличнойЧасти.Строка 	= 	"066";		
	СтрокаТабличнойЧасти.Содержание = 	НСтр("ru = 'НАЛОГОВОЕ ОБЯЗАТЕЛЬСТВО (=059-064) (УКАЖИТЕ ЗНАК МИНУС, ЕСЛИ ЗНАЧЕНИЕ ОТРИЦАТЕЛЬНОЕ)'");
	СтрокаТабличнойЧасти.Сумма 		= 	ВсегоНДСПоставки - НДС_064;	

	// 067
	СтрокаТабличнойЧасти = НДС.Добавить();
	СтрокаТабличнойЧасти.Строка 	= 	"067";		
	СтрокаТабличнойЧасти.Содержание = 	НСтр("ru = 'НАЛОГОВОЕ ОБЯЗАТЕЛЬСТВО ПО ПРОМЫШЛЕННОЙ ПЕРЕРАБОТКЕ СЕЛЬСКОХОЗЯЙСТВЕННОЙ ПРОДУКЦИИ, ПОДЛЕЖАЩЕЕ УМЕНЬШЕНИЮ НА 35 % (УКАЖИТЕ ЗНАК МИНУС, ЕСЛИ ЗНАЧЕНИЕ ОТРИЦАТЕЛЬНОЕ)'");
		
	// 068
	СтрокаТабличнойЧасти = НДС.Добавить();
	СтрокаТабличнойЧасти.Строка 	= 	"068";		
	СтрокаТабличнойЧасти.Содержание = 	НСтр("ru = 'НАЛОГОВОЕ ОБЯЗАТЕЛЬСТВО ВСЕГО (=066-067-068) (УКАЖИТЕ ЗНАК МИНУС, ЕСЛИ ЗНАЧЕНИЕ ОТРИЦАТЕЛЬНОЕ)'");
	СтрокаТабличнойЧасти.Сумма 		= 	ВсегоНДСПоставки - НДС_064;
		
	// 069
	СтрокаТабличнойЧасти = НДС.Добавить();
	СтрокаТабличнойЧасти.Строка 	= 	"069";		
	СтрокаТабличнойЧасти.Содержание = 	"ОБЛАГАЕМЫЕ ПОСТАВКИ";
	
	// 070
	СтрокаТабличнойЧасти = НДС.Добавить();
	СтрокаТабличнойЧасти.Строка 	= 	"070";		
	СтрокаТабличнойЧасти.Содержание = 	"СУММА НДС ЗА ПРОИЗВЕДЕННЫЕ ПОСТАВКИ";
	
	// 071
	СтрокаТабличнойЧасти = НДС.Добавить();
	СтрокаТабличнойЧасти.Строка 	= 	"071";		
	СтрокаТабличнойЧасти.Содержание = 	"ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ";
	
	// 072
	СтрокаТабличнойЧасти = НДС.Добавить();
	СтрокаТабличнойЧасти.Строка 	= 	"072";		
	СтрокаТабличнойЧасти.Содержание = 	"СУММА НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ";
	
КонецПроцедуры

// Процедура формирования движений по налогу на имущество
Процедура РассчитатьНалогНаИмущество()
	
	УчетМесяцев = Истина;
	// 1. Проверим заполнение оценочной стоимости в РС "Оценочная стоимость..."
	//Если ПроверкаЗаполненияСтоимостиМатериалСтен(КонецМесяца(Дата)) Тогда 
		
		// 2. Заполним недвижимость
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Имущество.ГруппаИмущества КАК ГруппаИмущества,
		|	Имущество.ОсновноеСредство КАК ОС,
		|	Имущество.МатериалСтен,
		|	Имущество.ДатаВводаВЭксплуатацию КАК ДатаВвода,
		|	Имущество.РегиональныйКоэффициент КАК Кр,
		|	Имущество.ЗональныйКоэффициент КАК Кз,
		|	Имущество.ОтраслевойКоэффициент КАК Ко,
		|	Имущество.ЖилаяПлощадь + Имущество.НежилаяПлощадь КАК Площадь,
		|	ГОД(&КонецМесяца) - ГОД(Имущество.ДатаВводаВЭксплуатацию) КАК ЛетЭксп,
		|	ВЫБОР
		|		КОГДА СостоянияОС.Период ЕСТЬ NULL 
		|			ТОГДА &Месяц
		|		ИНАЧЕ МЕСЯЦ(СостоянияОС.Период)
		|	КОНЕЦ КАК МесяцКон,
		|	ВЫБОР
		|		КОГДА Имущество.ДатаВводаВЭксплуатацию < &НачалоГода
		|			ТОГДА 0
		|		ИНАЧЕ МЕСЯЦ(Имущество.ДатаВводаВЭксплуатацию)
		|	КОНЕЦ КАК МесяцНач,
		|	ВЫБОР
		|		КОГДА НЕ СостоянияОС.Период ЕСТЬ NULL 
		|				И СостоянияОС.Период < &НачалоГода
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Выбыло,
		|	Имущество.ЖилаяПлощадь,
		|	Имущество.НежилаяПлощадь
		|ПОМЕСТИТЬ ВременнаяТаблицаИмущество
		|ИЗ
		|	РегистрСведений.СведенияОбИмуществе.СрезПоследних(
		|			&КонецМесяца,
		|			ГруппаИмущества <> ЗНАЧЕНИЕ(Справочник.ГруппыИмущества.ГИ4)
		|				И ДатаВводаВЭксплуатацию < &КонецМесяца
		|				И Регистратор.Организация = &Организация) КАК Имущество
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОС.СрезПоследних(&КонецМесяца, Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.СнятоСУчета)) КАК СостоянияОС
		|		ПО Имущество.ОсновноеСредство = СостоянияОС.ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РНЗемельныйНалогОбороты.ОсновноеСредство,
		|	РНЗемельныйНалогОбороты.СуммаЗемельногоНалогаПодОбъектомИмуществаОборот
		|ПОМЕСТИТЬ ВременнаяТаблицаЗемНалог
		|ИЗ
		|	РегистрНакопления.ЗемельныйНалог.Обороты(&НачалоГода, &КонецМесяца, , Организация = &Организация) КАК РНЗемельныйНалогОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаИмущество.ГруппаИмущества,
		|	ВременнаяТаблицаИмущество.ОС,
		|	ВременнаяТаблицаИмущество.МатериалСтен КАК МатериалСтен,
		|	ВременнаяТаблицаИмущество.ДатаВвода,
		|	ВременнаяТаблицаИмущество.Кр,
		|	ВременнаяТаблицаИмущество.Кз,
		|	ВременнаяТаблицаИмущество.Ко,
		|	ВременнаяТаблицаИмущество.Площадь,
		|	ВременнаяТаблицаИмущество.ЛетЭксп,
		|	ВременнаяТаблицаИмущество.МесяцКон,
		|	ВременнаяТаблицаИмущество.МесяцНач,
		|	ВременнаяТаблицаИмущество.Выбыло,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаИмущество.ЛетЭксп >= ОценкаПоМатериалам.ОтЛет
		|				И (ВременнаяТаблицаИмущество.ЛетЭксп < ОценкаПоМатериалам.ДоЛет
		|					ИЛИ ОценкаПоМатериалам.ДоЛет = 0)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НайденДиапазон,
		|	ОценкаПоМатериалам.Стоимость КАК ОценочнаяСтоимость,
		|	ОценкаПоМатериалам.ОтЛет,
		|	ОценкаПоМатериалам.ДоЛет,
		|	ВременнаяТаблицаИмущество.ЖилаяПлощадь,
		|	ВременнаяТаблицаИмущество.НежилаяПлощадь
		|ПОМЕСТИТЬ ВременнаяТаблицаСвод
		|ИЗ
		|	ВременнаяТаблицаИмущество КАК ВременнаяТаблицаИмущество
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОценочнаяСтоимостьПоВидамМатериалов.СрезПоследних(&КонецМесяца, ) КАК ОценкаПоМатериалам
		|		ПО ВременнаяТаблицаИмущество.МатериалСтен = ОценкаПоМатериалам.МатериалСтен
		|ГДЕ
		|	НЕ ВременнаяТаблицаИмущество.Выбыло
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаСвод.ГруппаИмущества КАК ГруппаИмущества,
		|	ВременнаяТаблицаСвод.ОС КАК ОсновноеСредство,
		|	ВременнаяТаблицаСвод.МатериалСтен,
		|	ВременнаяТаблицаСвод.ДатаВвода,
		|	ВременнаяТаблицаСвод.Кр КАК КлассКр,
		|	ВременнаяТаблицаСвод.Кз КАК КлассКз,
		|	ВременнаяТаблицаСвод.Ко КАК КлассКо,
		|	ВременнаяТаблицаСвод.Площадь КАК ОбщаяПлощадь,
		|	ВременнаяТаблицаСвод.ЛетЭксп КАК СрокЭксплуатации,
		|	ВременнаяТаблицаСвод.МесяцКон - ВременнаяТаблицаСвод.МесяцНач КАК КоличествоМесяцев,
		|	ЕСТЬNULL(СтавкиНИ.Ставка, 0) КАК Ставка,
		|	ВременнаяТаблицаСвод.ОценочнаяСтоимость,
		|	ВременнаяТаблицаСвод.ОтЛет,
		|	ВременнаяТаблицаСвод.ДоЛет,
		|	ВременнаяТаблицаСвод.ЖилаяПлощадь,
		|	ВременнаяТаблицаСвод.НежилаяПлощадь,
		|	0 КАК СтоимостьНУ,
		|	0 КАК СуммаНалога,
		|	0 КАК НалогСУчетомЗемельногоНалога,
		|	0 КАК Кр,
		|	0 КАК Кз,
		|	0 КАК Ко,
		|	ЕСТЬNULL(ВременнаяТаблицаЗемНалог.СуммаЗемельногоНалогаПодОбъектомИмуществаОборот, 0) КАК ЗемНалог
		|ИЗ
		|	ВременнаяТаблицаСвод КАК ВременнаяТаблицаСвод
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&КонецМесяца, ) КАК СтавкиНИ
		|		ПО ВременнаяТаблицаСвод.ГруппаИмущества = СтавкиНИ.ГруппаНалогаНаИмущество
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаЗемНалог КАК ВременнаяТаблицаЗемНалог
		|		ПО ВременнаяТаблицаСвод.ОС = ВременнаяТаблицаЗемНалог.ОсновноеСредство
		|ГДЕ
		|	ВременнаяТаблицаСвод.НайденДиапазон
		|
		|УПОРЯДОЧИТЬ ПО
		|	ГруппаИмущества,
		|	ОсновноеСредство
		|АВТОУПОРЯДОЧИВАНИЕ";
		Запрос.УстановитьПараметр("Организация", 	Организация);			   
		Запрос.УстановитьПараметр("НачалоГода", 	НачалоГода(Дата));			   
		Запрос.УстановитьПараметр("КонецМесяца", 	КонецМесяца(Дата));			   
		Запрос.УстановитьПараметр("Месяц", 			Месяц(Дата));
		
		ТЗ = Запрос.Выполнить().Выгрузить();
		
		// 3. Рассчитаем налоговую стоимость и налог
		Для Каждого СТЧ Из ТЗ Цикл
			                                      
			ОтборКр = Новый Структура("Классификация", СТЧ.КлассКр);
			СтавкаКр = РегистрыСведений.КоэфицентыНалогаНаИмущество.ПолучитьПоследнее(Дата, ОтборКр).Коэфициент;
			
			ОтборКз = Новый Структура("Классификация", СТЧ.КлассКз);
			СтавкаКз = РегистрыСведений.КоэфицентыНалогаНаИмущество.ПолучитьПоследнее(Дата, ОтборКз).Коэфициент;
			
			ОтборКо = Новый Структура("Классификация", СТЧ.КлассКо);
			СтавкаКо = РегистрыСведений.КоэфицентыНалогаНаИмущество.ПолучитьПоследнее(Дата, ОтборКо).Коэфициент;
			
			СТЧ.Кр = СтавкаКр;
			СТЧ.Кз = СтавкаКз;
			СТЧ.Ко = СтавкаКо;
			
			
			СТЧ.СтоимостьНУ = Окр(СТЧ.ОбщаяПлощадь * СТЧ.ОценочнаяСтоимость * СТЧ.Кр * СТЧ.Кз * СТЧ.Ко * ?(УчетМесяцев, СТЧ.КоличествоМесяцев/Месяц(Дата), 1), 2);
			
			СТЧ.СуммаНалога	= Окр(СТЧ.СтоимостьНУ * СТЧ.Ставка/100, 2);
			
			СТЧ.НалогСУчетомЗемельногоНалога =  СТЧ.СуммаНалога - СТЧ.ЗемНалог;
			
		КонецЦикла;
		Недвижимость.Очистить();
		Недвижимость.Загрузить(ТЗ);	
	
	// 4. Сформируем транспорт
	//		1) ВременнаяТаблицаТранспорт: выбираем ОС группы 4, введенные в эксплуатацию до конца года, с подсчетом месяцев эксплуатации
	//		2) ВременнаяТаблицаСтоимость: выбираем балансовую стоимость для ОС категорий "Б" и "В" (Счет учета минус счет амортизации)
	//		3) ВременнаяТаблицаСвод, объединение:
	//			Выбираем из ВТ1 категорию "А" и соединяем ее со ставками
	//			Выбираем из ВТ1 категории Б и В (Не А) и соединяем с балансовой стоимостью 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ХозрасчетныйВидыСубконто.Ссылка КАК СчетУчетаБУ
	|ПОМЕСТИТЬ ВременнаяТаблицаСчетаОС
	|ИЗ
	|	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|ГДЕ
	|	ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Транспорт.Период,
	|	Транспорт.Регистратор,
	|	Транспорт.НомерСтроки,
	|	Транспорт.Активность,
	|	Транспорт.ОсновноеСредство КАК ОсновноеСредство,
	|	Транспорт.ДатаВводаВЭксплуатацию,
	|	Транспорт.ВидТранспорта,
	|	Транспорт.ОбъемДвигателя,
	|	Транспорт.ГруппаИмущества,
	|	ГОД(&КонецМесяца) - ГОД(Транспорт.ДатаВводаВЭксплуатацию) КАК ЛетЭксп,
	|	ВЫБОР
	|		КОГДА СостоянияОС.Период ЕСТЬ NULL 
	|			ТОГДА &Месяц
	|		ИНАЧЕ МЕСЯЦ(СостоянияОС.Период)
	|	КОНЕЦ КАК МесяцКон,
	|	ВЫБОР
	|		КОГДА Транспорт.ДатаВводаВЭксплуатацию < &НачалоГода
	|			ТОГДА 0
	|		ИНАЧЕ МЕСЯЦ(Транспорт.ДатаВводаВЭксплуатацию)
	|	КОНЕЦ КАК МесяцНач,
	|	ВЫБОР
	|		КОГДА НЕ СостоянияОС.Период ЕСТЬ NULL 
	|				И СостоянияОС.Период < &НачалоГода
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Выбыло,
	|	ВЫБОР
	|		КОГДА Транспорт.ВидТранспорта = ЗНАЧЕНИЕ(Справочник.ВидыТранспортаПоНалогуНаИмущество.Несамоходные)
	|			ТОГДА ""В""
	|		КОГДА Транспорт.ВидТранспорта = ЗНАЧЕНИЕ(Справочник.ВидыТранспортаПоНалогуНаИмущество.Другие)
	|			ТОГДА ""Б""
	|		ИНАЧЕ ""А""
	|	КОНЕЦ КАК АБВ
	|ПОМЕСТИТЬ ВременнаяТаблицаТранспорт
	|ИЗ
	|	РегистрСведений.СведенияОТранспорте.СрезПоследних(
	|			&КонецМесяца,
	|			ГруппаИмущества = ЗНАЧЕНИЕ(Справочник.ГруппыИмущества.ГИ4)
	|				И ДатаВводаВЭксплуатацию < &КонецМесяца
	|				И Регистратор.Организация = &Организация) КАК Транспорт
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОС.СрезПоследних(
	|				&КонецМесяца,
	|				Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.СнятоСУчета)
	|					И Организация = &Организация) КАК СостоянияОС
	|		ПО Транспорт.ОсновноеСредство = СостоянияОС.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТиповойОстатки.Субконто1 КАК ОсновноеСредство,
	|	СУММА(ТиповойОстатки.СуммаОстатокДт - ТиповойОстатки.СуммаОстатокКт) КАК БалансоваяСтоимость
	|ПОМЕСТИТЬ ВременнаяТаблицаСтоимость
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецМесяца,
	|			Счет В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Счета.СчетУчетаБУ
	|				ИЗ
	|					ВременнаяТаблицаСчетаОС КАК Счета),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Субконто1 В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ВременнаяТаблицаТранспорт.ОсновноеСредство
	|					ИЗ
	|						ВременнаяТаблицаТранспорт КАК ВременнаяТаблицаТранспорт
	|					ГДЕ
	|						НЕ ВременнаяТаблицаТранспорт.Выбыло
	|						И ВременнаяТаблицаТранспорт.АБВ <> ""А"")
	|				И Организация = &Организация) КАК ТиповойОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТиповойОстатки.Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаТранспорт.АБВ,
	|	ВременнаяТаблицаТранспорт.ОсновноеСредство,
	|	ВременнаяТаблицаТранспорт.ДатаВводаВЭксплуатацию,
	|	ВременнаяТаблицаТранспорт.ВидТранспорта,
	|	ВременнаяТаблицаТранспорт.ОбъемДвигателя,
	|	ВременнаяТаблицаТранспорт.ГруппаИмущества,
	|	ВременнаяТаблицаТранспорт.МесяцКон,
	|	ВременнаяТаблицаТранспорт.МесяцНач,
	|	ЕСТЬNULL(СтавкиА.Ставка, 0) КАК Ставка,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаТранспорт.ЛетЭксп >= ЕСТЬNULL(СтавкиА.ОтЛет, 0)
	|				И (ВременнаяТаблицаТранспорт.ЛетЭксп < ЕСТЬNULL(СтавкиА.ДоЛет, 0)
	|					ИЛИ ЕСТЬNULL(СтавкиА.ДоЛет, 0) = 0)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НайденДиапазон,
	|	ВременнаяТаблицаТранспорт.ЛетЭксп,
	|	ЕСТЬNULL(СтавкиА.ОтЛет, 0) КАК ОтЛет,
	|	ЕСТЬNULL(СтавкиА.ДоЛет, 0) КАК ДоЛет,
	|	ВременнаяТаблицаТранспорт.Регистратор,
	|	ВременнаяТаблицаТранспорт.Период
	|ПОМЕСТИТЬ ВременнаяТаблицаСвод
	|ИЗ
	|	ВременнаяТаблицаТранспорт КАК ВременнаяТаблицаТранспорт
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаТранспорт.СрезПоследних(&КонецМесяца, ) КАК СтавкиА
	|		ПО ВременнаяТаблицаТранспорт.ВидТранспорта = СтавкиА.ВидТранспорта
	|ГДЕ
	|	НЕ ВременнаяТаблицаТранспорт.Выбыло
	|	И ВременнаяТаблицаТранспорт.АБВ = ""А""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаТранспорт.АБВ,
	|	ВременнаяТаблицаТранспорт.ОсновноеСредство,
	|	ВременнаяТаблицаТранспорт.ДатаВводаВЭксплуатацию,
	|	ВременнаяТаблицаТранспорт.ВидТранспорта,
	|	ЕСТЬNULL(ВременнаяТаблицаСтоимость.БалансоваяСтоимость, 0),
	|	ВременнаяТаблицаТранспорт.ГруппаИмущества,
	|	ВременнаяТаблицаТранспорт.МесяцКон,
	|	ВременнаяТаблицаТранспорт.МесяцНач,
	|	&Ставка,
	|	ИСТИНА,
	|	ВременнаяТаблицаТранспорт.ЛетЭксп,
	|	0,
	|	0,
	|	NULL,
	|	NULL
	|ИЗ
	|	ВременнаяТаблицаТранспорт КАК ВременнаяТаблицаТранспорт
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтоимость КАК ВременнаяТаблицаСтоимость
	|		ПО ВременнаяТаблицаТранспорт.ОсновноеСредство = ВременнаяТаблицаСтоимость.ОсновноеСредство
	|ГДЕ
	|	НЕ ВременнаяТаблицаТранспорт.Выбыло
	|	И ВременнаяТаблицаТранспорт.АБВ <> ""А""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаСвод.АБВ КАК АБВ,
	|	ВременнаяТаблицаСвод.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ВременнаяТаблицаСвод.Регистратор) = ТИП(Документ.ПринятиеКУчетуОС)
	|			ТОГДА ВременнаяТаблицаСвод.Период
	|		ИНАЧЕ ВременнаяТаблицаСвод.ДатаВводаВЭксплуатацию
	|	КОНЕЦ КАК ДатаВводаВЭксплуатацию,
	|	ВременнаяТаблицаСвод.ВидТранспорта,
	|	ВременнаяТаблицаСвод.ОбъемДвигателя,
	|	ВременнаяТаблицаСвод.ГруппаИмущества,
	|	ВременнаяТаблицаСвод.МесяцКон - ВременнаяТаблицаСвод.МесяцНач КАК КоличествоМесяцев,
	|	ВременнаяТаблицаСвод.Ставка,
	|	ВременнаяТаблицаСвод.ЛетЭксп КАК СрокЭксплуатации,
	|	ВременнаяТаблицаСвод.ОтЛет,
	|	ВременнаяТаблицаСвод.ДоЛет,
	|	ВременнаяТаблицаСвод.Регистратор
	|ПОМЕСТИТЬ ВременнаяТаблицаИтог
	|ИЗ
	|	ВременнаяТаблицаСвод КАК ВременнаяТаблицаСвод
	|ГДЕ
	|	ВременнаяТаблицаСвод.НайденДиапазон
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаИтог.АБВ,
	|	ВременнаяТаблицаИтог.ОсновноеСредство,
	|	ВременнаяТаблицаИтог.ДатаВводаВЭксплуатацию,
	|	ВременнаяТаблицаИтог.ВидТранспорта,
	|	ВременнаяТаблицаИтог.ОбъемДвигателя,
	|	ВременнаяТаблицаИтог.ГруппаИмущества,
	|	ВЫБОР
	|		КОГДА ГОД(ВременнаяТаблицаИтог.ДатаВводаВЭксплуатацию) = ГОД(&КонецГода)
	|			ТОГДА МЕСЯЦ(&КонецГода) - МЕСЯЦ(ВременнаяТаблицаИтог.ДатаВводаВЭксплуатацию)
	|		ИНАЧЕ ВременнаяТаблицаИтог.КоличествоМесяцев
	|	КОНЕЦ КАК КоличествоМесяцев,
	|	ВременнаяТаблицаИтог.Ставка,
	|	ВременнаяТаблицаИтог.СрокЭксплуатации,
	|	ВременнаяТаблицаИтог.ОтЛет,
	|	ВременнаяТаблицаИтог.ДоЛет,
	|	ВременнаяТаблицаИтог.Регистратор
	|ИЗ
	|	ВременнаяТаблицаИтог КАК ВременнаяТаблицаИтог";
	
	Запрос.УстановитьПараметр("Организация", 	Организация);			   
	Запрос.УстановитьПараметр("НачалоГода", 	НачалоГода(Дата));			   
	Запрос.УстановитьПараметр("КонецМесяца", 	КонецМесяца(Дата));			   
	Запрос.УстановитьПараметр("Ставка", 		0.5);
	Запрос.УстановитьПараметр("Месяц", 			Месяц(Дата));
	Запрос.УстановитьПараметр("КонецГода",      КонецГода(КонецДня(Дата)));
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	Транспорт.Очистить();
	Транспорт.Загрузить(ТЗ);
	
	СписокОС = Транспорт.ВыгрузитьКолонку("ОсновноеСредство");
	
	СчетаАмортизации = Новый СписокЗначений;
	СчетаАмортизации.Добавить(ПланыСчетов.Хозрасчетный.АмортизацияЗданияСооружения);
	СчетаАмортизации.Добавить(ПланыСчетов.Хозрасчетный.НакопленнаяАмортизацияОборудование);
    СчетаАмортизации.Добавить(ПланыСчетов.Хозрасчетный.НакопленнаяАмортизацияКонторскоеОборудование);
	СчетаАмортизации.Добавить(ПланыСчетов.Хозрасчетный.НакопленнаяАмортизацияМебельИПринадлежности);
	СчетаАмортизации.Добавить(ПланыСчетов.Хозрасчетный.НакопленнаяАмортизацияТранспортныеСредства);
	СчетаАмортизации.Добавить(ПланыСчетов.Хозрасчетный.НакопленнаяАмортизацияБлагоустройствоАрендованнойСобственности);
	СчетаАмортизации.Добавить(ПланыСчетов.Хозрасчетный.НакопленнаяАмортизацияБлагоустройствоЗемльныхУчастков);

	СчетаОС = Новый СписокЗначений;
	СчетаОС.Добавить(ПланыСчетов.Хозрасчетный.Земля);
	СчетаОС.Добавить(ПланыСчетов.Хозрасчетный.ЗданияСооружения);
	СчетаОС.Добавить(ПланыСчетов.Хозрасчетный.Оборудование);
	СчетаОС.Добавить(ПланыСчетов.Хозрасчетный.КонторскоеОборудование);
	СчетаОС.Добавить(ПланыСчетов.Хозрасчетный.МебельИПринадлежности);
	СчетаОС.Добавить(ПланыСчетов.Хозрасчетный.ТранспортныеСредстваЖДТранспорта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет,
	|	ХозрасчетныйОстатки.Субконто1 КАК ОсновноеСредство,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК ПервоначальнаяСтоимость
	|ПОМЕСТИТЬ ВременнаяТаблицаСтоимость
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаСреза, счет В (&СчетаОС), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), Субконто1 В (&ОсновноеСредство)) КАК ХозрасчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Счет,
	|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК ОсновноеСредство,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток * -1 КАК НакопленыйИзнос
	|ПОМЕСТИТЬ ВременнаяТаблицаИзнос
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаН, &ДатаК, , Движения, Счет В (&СчетаАмортизации), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), Субконто1 В (&ОсновноеСредство)) КАК ХозрасчетныйОстаткиИОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаСтоимость.ОсновноеСредство,
	|	ВременнаяТаблицаСтоимость.ПервоначальнаяСтоимость,
	|	ЕСТЬNULL(ВременнаяТаблицаИзнос.НакопленыйИзнос, 0) КАК НакопленыйИзнос
	|ИЗ
	|	ВременнаяТаблицаСтоимость КАК ВременнаяТаблицаСтоимость
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаИзнос КАК ВременнаяТаблицаИзнос
	|		ПО ВременнаяТаблицаСтоимость.ОсновноеСредство = ВременнаяТаблицаИзнос.ОсновноеСредство";
	
	Запрос.УстановитьПараметр("ДатаСреза",			КонецДня(Дата));
	Запрос.УстановитьПараметр("ДатаН",				НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаК",				КонецМесяца(Дата));	
	Запрос.УстановитьПараметр("ОсновноеСредство",	СписокОС);	 
	Запрос.УстановитьПараметр("СчетаАмортизации",	СчетаАмортизации);	 
	Запрос.УстановитьПараметр("СчетаОС",			СчетаОС);	 
	
	ТЗРасчет = Запрос.Выполнить().Выгрузить();
	
	// 5. Рассчитаем налоговую стоимость и налог
	Для Каждого СТЧ Из Транспорт Цикл
		Если СТЧ.АБВ = "А" Тогда 
			СТЧ.СуммаНалога	= Окр(СТЧ.ОбъемДвигателя * СТЧ.Ставка * ?(УчетМесяцев, СТЧ.КоличествоМесяцев/Месяц(Дата), 1), 2);
		ИначеЕсли СТЧ.АБВ = "В"  Тогда
						
			СТЧРасчет = ТЗРасчет.Найти(СТЧ.ОС, "ОсновноеСредство");
			Если Не  СТЧРасчет = Неопределено Тогда 
				СуммаНалога  =	(СТЧРасчет.ПервоначальнаяСтоимость - СТЧРасчет.НакопленыйИзнос) / 100 * СТЧ.Ставка; 
				
				СТЧ.СуммаНалога = СуммаНалога;
			КонецЕсли;	
				
		Иначе 
			СТЧ.СуммаНалога	= Окр(СТЧ.ОбъемДвигателя * СТЧ.Ставка /100 * ?(УчетМесяцев, СТЧ.КоличествоМесяцев/Месяц(Дата), 1), 2);
		КонецЕсли;
		
		Если СТЧ.АБВ ="В" Тогда 
			СТЧ.ОбъемДвигателя = "0";
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Процедура - рассчитать налоговую амортизацию
Процедура РассчитатьНалоговуюАмортизацию(УПП)
	
	НалоговаяАмортизация.Очистить();	
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	// 1. Периоды поступления и выбытия ОС
	// 1.1. Поступление ОС с учетом выбытия
	// 1.2. Выбытие ОС (за исключением поступивших в отчетном году)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеОС.ГруппаНУ,
		|	""П"" КАК ПоступлениеВыбытие,
		|	ПоступлениеОС.ОсновноеСредство,
		|	ПоступлениеОС.Период КАК Дата,
		|	МЕСЯЦ(ПоступлениеОС.Период) КАК МесяцПоступления,
		|	ЕСТЬNULL(МЕСЯЦ(ВыбытиеПоступивших.Период), 13) КАК МесяцВыбытия,
		|	ПоступлениеОС.Поступление КАК СуммаПоступления,
		|	0 КАК СуммаВыбытия
		|ПОМЕСТИТЬ ВТДвижениеОС
		|ИЗ
		|	РегистрНакопления.ДвижениеОСНУ КАК ПоступлениеОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОС КАК ВыбытиеПоступивших
		|		ПО ПоступлениеОС.ОсновноеСредство = ВыбытиеПоступивших.ОсновноеСредство
		|			И (ВыбытиеПоступивших.Период МЕЖДУ &ДатаН И &ДатаК)
		|			И (ВыбытиеПоступивших.Состояние = &Выбытие)
		|			И (ВыбытиеПоступивших.Организация = &Организация)
		|ГДЕ
		|	ПоступлениеОС.Период МЕЖДУ &ДатаН И &ДатаК
		|	И ПоступлениеОС.Поступление > 0
		|	И ПоступлениеОС.Организация = &Организация
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВыбытиеОС.ГруппаНУ,
		|	""В"",
		|	ВыбытиеОС.ОсновноеСредство,
		|	ВыбытиеОС.Период,
		|	1,
		|	МЕСЯЦ(ВыбытиеОС.Период),
		|	0,
		|	ВыбытиеОС.Поступление
		|ИЗ
		|	РегистрНакопления.ДвижениеОСНУ КАК ВыбытиеОС
		|ГДЕ
		|	ВыбытиеОС.Период МЕЖДУ &ДатаН И &ДатаК
		|	И ВыбытиеОС.Организация = &Организация
		|	И ВыбытиеОС.Выбытие > 0
		|	И НЕ ВыбытиеОС.ОсновноеСредство В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ПоступлениеОС.ОсновноеСредство
		|				ИЗ
		|					РегистрНакопления.ДвижениеОСНУ КАК ПоступлениеОС
		|				ГДЕ
		|					ПоступлениеОС.Период МЕЖДУ &ДатаН И &ДатаК
		|					И ПоступлениеОС.Организация = &Организация
		|					И ПоступлениеОС.Поступление > 0)";	
	Запрос.УстановитьПараметр("Организация",	Организация);
	Запрос.УстановитьПараметр("ДатаН",			НачалоГода(Дата));
	Запрос.УстановитьПараметр("ДатаК",			КонецГода(Дата));
	Запрос.УстановитьПараметр("Выбытие",		Перечисления.ВидыСостоянийОС.СнятоСУчета);
	
	Запрос.Выполнить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТДвижениеОС";
	ТЗ1 = Запрос.Выполнить().Выгрузить();
		
	// 2. Список движения ОС с расчетом полных месяцев 
	//    плюс список групп и ОС группы 5 из налоговой амортизации прошлого года
	//    плюс затраты на ремонт изРгНУ
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДвижениеОС.ГруппаНУ,
		|	ВЫБОР
		|		КОГДА ДвижениеОС.ГруппаНУ = &Группа5
		|			ТОГДА ДвижениеОС.ОсновноеСредство
		|		ИНАЧЕ &ПустоеОС
		|	КОНЕЦ КАК ОсновноеСредство,
		|	ДвижениеОС.ПоступлениеВыбытие,
		|	ДвижениеОС.МесяцПоступления,
		|	ДвижениеОС.МесяцВыбытия,
		|	ДвижениеОС.СуммаПоступления,
		|	ДвижениеОС.СуммаВыбытия,
		|	ВЫБОР
		|		КОГДА ДвижениеОС.ПоступлениеВыбытие = ""П""
		|				И ДвижениеОС.МесяцВыбытия <> ДвижениеОС.МесяцПоступления
		|			ТОГДА ДвижениеОС.МесяцВыбытия - ДвижениеОС.МесяцПоступления - 1
		|		КОГДА ДвижениеОС.ПоступлениеВыбытие = ""П""
		|				И ДвижениеОС.МесяцВыбытия = ДвижениеОС.МесяцПоступления
		|			ТОГДА 0
		|		ИНАЧЕ 12 - ДвижениеОС.МесяцВыбытия
		|	КОНЕЦ КАК КолПолныхМесяцев,
		|	0 КАК АмортизацияПредыдущегоГода,
		|	0 КАК БалансоваяСтоимостьНаКонецГодаПГ,
		|	0 КАК СуммаПоступленияОстатокПГ,
		|	0 КАК СуммаВыбытияОстатокПГ,
		|	0 КАК БазаПрямолинейнойАмортизацииПГ,
		|	0 КАК ЗатратыНаРемонт
		|ПОМЕСТИТЬ ВТСписокГруппИОС
		|ИЗ
		|	ВТДвижениеОС КАК ДвижениеОС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НалоговаяАмортизация.ГруппаНУ,
		|	НалоговаяАмортизация.ОсновноеСредство,
		|	""Н"",
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	СУММА(НалоговаяАмортизация.АмортизацияЗаГод),
		|	СУММА(НалоговаяАмортизация.БалансоваяСтоимостьНаКонецГода),
		|	СУММА(НалоговаяАмортизация.СуммаПоступленияОстаток),
		|	СУММА(НалоговаяАмортизация.СуммаВыбытияОстаток),
		|	СУММА(НалоговаяАмортизация.БазаПрямолинейнойАмортизации),
		|	0
		|ИЗ
		|	РегистрСведений.НалоговаяАмортизация КАК НалоговаяАмортизация
		|ГДЕ
		|	НалоговаяАмортизация.Год МЕЖДУ &ДатаНПГ И &ДатаКПГ
		|	И НалоговаяАмортизация.Организация = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговаяАмортизация.ОсновноеСредство,
		|	НалоговаяАмортизация.ГруппаНУ
		|
		|ИМЕЮЩИЕ
		|	НЕ(СУММА(НалоговаяАмортизация.БалансоваяСтоимостьНаКонецГода) = 0
		|			И СУММА(НалоговаяАмортизация.СуммаПоступленияОстаток) = 0
		|			И СУММА(НалоговаяАмортизация.СуммаВыбытияОстаток) = 0
		|			И СУММА(НалоговаяАмортизация.БазаПрямолинейнойАмортизации) = 0)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Ремонт.Субконто2,
		|	ВЫБОР
		|		КОГДА Ремонт.Субконто2 = &Группа5
		|			ТОГДА Ремонт.Субконто1
		|		ИНАЧЕ &ПустоеОС
		|	КОНЕЦ,
		|	""Р"",
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	Ремонт.СуммаОборот
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаН,
		|			&ДатаК,
		|			,
		|			Счет В (&СчетаЗатратНаРемонтОС),
		|			,
		|			Организация = &Организация,
		|			,
		|			) КАК Ремонт";	
	МассивСчетовЗатратНаРемонтОС = Новый Массив();
	МассивСчетовЗатратНаРемонтОС.Добавить(ПланыСчетов.Хозрасчетный.ЗатратыНаРемонтИОбслуживаниеОсновныхСредств);
	МассивСчетовЗатратНаРемонтОС.Добавить(ПланыСчетов.Хозрасчетный.РемонтИОбслуживаниеОсновныхСредств);
	
	Запрос.УстановитьПараметр("Группа2", 				Справочники.ГруппыНалоговогоУчетаОС.Группа2);
	Запрос.УстановитьПараметр("Группа5", 				Справочники.ГруппыНалоговогоУчетаОС.Группа5);
	Запрос.УстановитьПараметр("ПустоеОС",				Справочники.ОсновныеСредства.ПустаяСсылка());	
	Запрос.УстановитьПараметр("Организация",			Организация);
	Запрос.УстановитьПараметр("СчетаЗатратНаРемонтОС",	МассивСчетовЗатратНаРемонтОС);
	Запрос.УстановитьПараметр("ДатаНПГ",				НачалоГода(НачалоГода(Дата) - 1));	
	Запрос.УстановитьПараметр("ДатаКПГ",				КонецГода(НачалоГода(Дата) - 1));	
	Запрос.УстановитьПараметр("ДатаН",					НачалоГода(Дата));
	Запрос.УстановитьПараметр("ДатаК",					КонецГода(Дата));
	Запрос.Выполнить();

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТСписокГруппИОС";
	ТЗ2 = Запрос.Выполнить().Выгрузить();
		
	// 3. Расчет сумм поступления и выбытия ОС по группам НУ
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СписокГруппИОС.ГруппаНУ,
		|	СписокГруппИОС.ОсновноеСредство,
		|	СУММА(СписокГруппИОС.СуммаПоступления) КАК СуммаПоступления,
		|	СУММА(СписокГруппИОС.СуммаВыбытия) КАК СуммаВыбытия,
		|	СУММА(ВЫРАЗИТЬ(СписокГруппИОС.СуммаПоступления * (СписокГруппИОС.КолПолныхМесяцев + 0.5) / 12 КАК ЧИСЛО(14, 2))) КАК СуммаПоступленияНУ,
		|	СУММА(ВЫРАЗИТЬ(СписокГруппИОС.СуммаВыбытия * (СписокГруппИОС.КолПолныхМесяцев + 0.5) / 12 КАК ЧИСЛО(14, 2))) КАК СуммаВыбытияНУ,
		|	СУММА(СписокГруппИОС.АмортизацияПредыдущегоГода) КАК АмортизацияПредыдущегоГода,
		|	СУММА(СписокГруппИОС.БалансоваяСтоимостьНаКонецГодаПГ) КАК БалансоваяСтоимостьНаКонецГодаПГ,
		|	СУММА(ВЫБОР
		|			КОГДА &НКДо2009
		|				ТОГДА 0
		|			ИНАЧЕ СписокГруппИОС.СуммаПоступленияОстатокПГ
		|		КОНЕЦ) КАК СуммаПоступленияОстатокПГ,
		|	СУММА(ВЫБОР
		|			КОГДА &НКДо2009
		|				ТОГДА 0
		|			ИНАЧЕ СписокГруппИОС.СуммаВыбытияОстатокПГ
		|		КОНЕЦ) КАК СуммаВыбытияОстатокПГ,
		|	СУММА(СписокГруппИОС.БазаПрямолинейнойАмортизацииПГ) КАК БазаПрямолинейнойАмортизацииПГ,
		|	СУММА(СписокГруппИОС.ЗатратыНаРемонт) КАК ЗатратыНаРемонт
		|ПОМЕСТИТЬ ВТПолныйСписок
		|ИЗ
		|	ВТСписокГруппИОС КАК СписокГруппИОС
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокГруппИОС.ГруппаНУ,
		|	СписокГруппИОС.ОсновноеСредство";	
	Запрос.УстановитьПараметр("НКДо2009",	?(Год(Дата) < 2009, Истина, Ложь));
	Запрос.Выполнить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТПолныйСписок";
	ТЗ3 = Запрос.Выполнить().Выгрузить();
	
	// 4. Количество ОС в группах
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыАО.ОсновноеСредство,
		|	ПараметрыАО.ГруппаНУ
		|ПОМЕСТИТЬ СписокОС
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(&ДатаК, ) КАК ПараметрыАО
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОС.СрезПоследних(&ДатаК, ) КАК СостоянияОС
		|		ПО ПараметрыАО.ОсновноеСредство = СостоянияОС.ОсновноеСредство
		|			И (СостоянияОС.Состояние <> &СнятоСУчетаОС)
		|ГДЕ
		|	ПараметрыАО.ГруппаНУ <> &ПустаяГруппа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокОС.ГруппаНУ,
		|	КОЛИЧЕСТВО(СписокОС.ГруппаНУ) КАК Количество
		|ПОМЕСТИТЬ ТЗКоличествоВГруппах
		|ИЗ
		|	СписокОС КАК СписокОС
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокОС.ГруппаНУ";
	Запрос.УстановитьПараметр("ДатаН",			НачалоГода(Дата));                                                     
	Запрос.УстановитьПараметр("ДатаК", 			КонецГода(Дата));
	Запрос.УстановитьПараметр("ПустаяГруппа", 	Справочники.ГруппыНалоговогоУчетаОС.ПустаяСсылка());
	Запрос.УстановитьПараметр("Группа2", 		Справочники.ГруппыНалоговогоУчетаОС.Группа2);
	Запрос.УстановитьПараметр("СнятоСУчетаОС", 	Перечисления.ВидыСостоянийОС.СнятоСУчета);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	// 5. Основной запрос
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПолныйСписок.ГруппаНУ,
		|	ПолныйСписок.ГруппаНУ.НормаАмортизации КАК НАО,
		|	ПолныйСписок.ОсновноеСредство,
		|	ПолныйСписок.СуммаПоступления,
		|	ПолныйСписок.СуммаВыбытия,
		|	ПолныйСписок.СуммаПоступленияНУ,
		|	ПолныйСписок.СуммаВыбытияНУ,
		|	ПолныйСписок.АмортизацияПредыдущегоГода,
		|	ПолныйСписок.БалансоваяСтоимостьНаКонецГодаПГ,
		|	ПолныйСписок.СуммаПоступленияОстатокПГ,
		|	ПолныйСписок.СуммаВыбытияОстатокПГ,
		|	ПолныйСписок.БазаПрямолинейнойАмортизацииПГ,
		|	ПолныйСписок.ЗатратыНаРемонт,
		|	ЕСТЬNULL(СостоянияСрез.Период, &ПустаяДата) КАК Период,
		|	ВЫБОР
		|		КОГДА ПолныйСписок.ГруппаНУ = &Группа5
		|			ТОГДА ЕСТЬNULL(СостоянияСрез.Период, &ПустаяДата)
		|		ИНАЧЕ &ПустаяДата
		|	КОНЕЦ КАК ДатаПринятияКУчету,
		|	ЕСТЬNULL(КоличествоВГруппах.Количество, 0) КАК Количество
		|ИЗ
		|	ВТПолныйСписок КАК ПолныйСписок
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОС.СрезПервых(
		|				,
		|				Организация = &Организация
		|					И Состояние = &ПринятоКУчету) КАК СостоянияСрез
		|		ПО ПолныйСписок.ОсновноеСредство = СостоянияСрез.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТЗКоличествоВГруппах КАК КоличествоВГруппах
		|		ПО ПолныйСписок.ГруппаНУ = КоличествоВГруппах.ГруппаНУ
		|ГДЕ
		|	КоличествоВГруппах.ГруппаНУ <> &ПустаяГруппа";
	Запрос.УстановитьПараметр("ПустаяГруппа", 	Справочники.ГруппыНалоговогоУчетаОС.ПустаяСсылка());
	Запрос.УстановитьПараметр("Группа5", 		Справочники.ГруппыНалоговогоУчетаОС.Группа5);
	Запрос.УстановитьПараметр("ПустаяДата",		'00010101');	
	Запрос.УстановитьПараметр("ПринятоКУчету",	Перечисления.ВидыСостоянийОС.ПринятоКУчету);
	Запрос.УстановитьПараметр("Организация",	Организация);
		
	ТЗ = Запрос.Выполнить().Выгрузить();
	МенеджерВТ.Закрыть(); 
	
	// 6. Подготовка ТЗ для расчета - добавление расчетных колонок 
	ТЗ.Колонки.Добавить("НормаНаРемонт");
	ТЗ.Колонки.Добавить("ПревышениеНормыНаРемонт");
	ТЗ.Колонки.Добавить("ВычетПриПоступленииОС");
	ТЗ.Колонки.Добавить("БалансоваяСтоимостьНаНачалоГода");
	ТЗ.Колонки.Добавить("БалансоваяСтоимостьНаКонецГода");
	ТЗ.Колонки.Добавить("БалансоваяСтоимостьИтого");
	ТЗ.Колонки.Добавить("АмортизацияЗаГод");
	ТЗ.Колонки.Добавить("УвеличениеСОД");
	ТЗ.Колонки.Добавить("ВычетМеньше100РП");
	ТЗ.Колонки.Добавить("КоличествоЛетЭксплуатации");
	ТЗ.Колонки.Добавить("СуммаПоступленияОстаток");
	ТЗ.Колонки.Добавить("СуммаВыбытияОстаток");
	ТЗ.Колонки.Добавить("БазаПрямолинейнойАмортизации");
	ТЗ.ЗаполнитьЗначения(0,"НормаНаРемонт,ПревышениеНормыНаРемонт,ВычетПриПоступленииОС,
							|БалансоваяСтоимостьНаНачалоГода,БалансоваяСтоимостьНаКонецГода,
							|БалансоваяСтоимостьИтого,
							|АмортизацияЗаГод,УвеличениеСОД,ВычетМеньше100РП, 
							|КоличествоЛетЭксплуатации,СуммаПоступленияОстаток,СуммаВыбытияОстаток,
							|БазаПрямолинейнойАмортизации");
	
	// 7. Расчет по группам НУ и ОС группы 5
	
	// Выборка общих ставок и норм 
	СтавкаРемонтаОС 				= УПП.ПредельнаяНормаНаРемонтОС; 		
	МинимальнаяСтоимостьГруппыОС 	= УПП.МинимальнаяСтоимостьГруппыОС;
	
	Для Каждого СТЗ Из ТЗ Цикл
		
		СТЗ.БалансоваяСтоимостьНаНачалоГода = СТЗ.БалансоваяСтоимостьНаКонецГодаПГ - СТЗ.АмортизацияПредыдущегоГода;
		
		// 7.1. Норма на ремонт 15%, если не укладываемся, то превышение идет на увеличение балансовой стоимости
		Если СТЗ.ЗатратыНаРемонт <> 0 Тогда 
			СТЗ.НормаНаРемонт = Окр(СТЗ.БалансоваяСтоимостьНаНачалоГода * СтавкаРемонтаОС /100,2);	
		КонецЕсли;			
		
		// 7.2. Превышение нормы на ремонт
		Если СТЗ.ЗатратыНаРемонт > СТЗ.НормаНаРемонт Тогда 
			СТЗ.ПревышениеНормыНаРемонт = СТЗ.ЗатратыНаРемонт - СТЗ.НормаНаРемонт;	
		КонецЕсли;
		
		// 7.3. Балансовая стоимость группы расчетная
		СТЗ.БалансоваяСтоимостьНаКонецГода = СТЗ.БалансоваяСтоимостьНаНачалоГода
		+ СТЗ.СуммаПоступленияНУ
		+ СТЗ.СуммаПоступленияОстатокПГ
		- СТЗ.СуммаВыбытияНУ
		- СТЗ.СуммаВыбытияОстатокПГ
		+ СТЗ.ПревышениеНормыНаРемонт;
	                                  		
		СТЗ.БалансоваяСтоимостьИтого = СТЗ.БалансоваяСтоимостьНаКонецГода;
				
		// 7.4. Проверяем ОС группы 5 больше 20 лет
		СТЗ.КоличествоЛетЭксплуатации = 0;	
		Если СТЗ.ГруппаНУ = Справочники.ГруппыНалоговогоУчетаОС.Группа5 Тогда 
			
			// 7.4.1. Проверка указаия даты принятия к учету
			Если НЕ ЗначениеЗаполнено(СТЗ.ДатаПринятияКУчету) и СТЗ.СуммаВыбытияОстатокПГ = 0 Тогда 				
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Для ОС - %1 - не указана дата принятия к учету!'"), СТЗ.ОсновноеСредство.Наименование);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				//Отказ = Истина;
			КонецЕсли;
			
			// 7.4.2. Расчет количества лет экплуатации
			СТЗ.КоличествоЛетЭксплуатации = Год(Дата) - Год(СТЗ.ДатаПринятияКУчету);	
			
			// 7.4.3. Проверка заполнения базы для расчета прямолинейной амортизации 
			Если СТЗ.КоличествоЛетЭксплуатации > 20 И СТЗ.БазаПрямолинейнойАмортизацииПГ = 0 Тогда 
				СТЗ.БазаПрямолинейнойАмортизацииПГ = СТЗ.БалансоваяСтоимостьНаНачалоГода;
			КонецЕсли;		
			
			// 7.4.4. БазаПрямолинейнойАмортизации = База прошлого года + СуммаПоступления + ПревышениеЗатратНаРемонт
			СТЗ.БазаПрямолинейнойАмортизации = СТЗ.БазаПрямолинейнойАмортизацииПГ
				+ СТЗ.СуммаПоступления
				+ СТЗ.ПревышениеНормыНаРемонт;
		КонецЕсли;			
				
		// 7.5. Расчетные амортизация и вычеты									
		// 7.5.1. Проверка балансовой стоимости меньше нуля
		Если СТЗ.БалансоваяСтоимостьНаКонецГода < 0 Тогда 
						
			СТЗ.УвеличениеСОД 					= - СТЗ.БалансоваяСтоимостьНаКонецГода;			
			СТЗ.БалансоваяСтоимостьИтого 		= 0;
			СТЗ.АмортизацияЗаГод				= 0;
			
		// 7.5.2. Проверка балансовой стоимости на меньше 100 РП
		ИначеЕсли СТЗ.БалансоваяСтоимостьНаКонецГода < МинимальнаяСтоимостьГруппыОС  Тогда 
			
			СТЗ.ВычетМеньше100РП				= СТЗ.БалансоваяСтоимостьНаКонецГода;			
			СТЗ.БалансоваяСтоимостьИтого 		= 0;			
			СТЗ.АмортизацияЗаГод				= СТЗ.БалансоваяСтоимостьНаКонецГода;		
			
		// 7.5.3. Проверка на нулевое количество группы
		ИначеЕсли СТЗ.Количество = 0 И СТЗ.ГруппаНУ <> Справочники.ГруппыНалоговогоУчетаОС.Группа5  Тогда 
			СТЗ.АмортизацияЗаГод				= СТЗ.БалансоваяСтоимостьНаКонецГода;			
			СТЗ.БалансоваяСтоимостьИтого 		= 0;			
			
		// 7.5.4. Проверка на нулевое количество ОС группы 5 
		ИначеЕсли НЕ СТЗ.ОсновноеСредство.Пустая() И СТЗ.СуммаВыбытия > 0 Тогда 
			СТЗ.АмортизацияЗаГод				= СТЗ.БалансоваяСтоимостьНаКонецГода;			
			СТЗ.БалансоваяСтоимостьИтого 		= 0;			
			
		// 7.5.5. Расчет амортизация для ОС группы 5
		ИначеЕсли СТЗ.КоличествоЛетЭксплуатации > 20 Тогда 
			
			СТЗ.АмортизацияЗаГод				= Окр(СТЗ.БазаПрямолинейнойАмортизации * СТЗ.ГруппаНУ.НормаАмортизацииДополнительная /100,2);
			
		// 7.5.6. Обычный расчет	
		Иначе
			
			СТЗ.АмортизацияЗаГод				= Окр(СТЗ.БалансоваяСтоимостьНаКонецГода * СТЗ.НАО /100,2);
			
		КонецЕсли;
		
		// 8. Запись данных в табличную часть "НалоговаяАмортизация"
		СтрокаНалоговойАмортизации =  НалоговаяАмортизация.Добавить();
		
		СтрокаНалоговойАмортизации.ГруппаНУ 					= СТЗ.ГруппаНУ;
		СтрокаНалоговойАмортизации.ОсновноеСредство 			= СТЗ.ОсновноеСредство;
		СтрокаНалоговойАмортизации.БалансоваяСтоимостьПГ 		= СТЗ.БалансоваяСтоимостьНаКонецГодаПГ;
		СтрокаНалоговойАмортизации.АмортизацияПГ 				= СТЗ.АмортизацияПредыдущегоГода;
		СтрокаНалоговойАмортизации.БалансоваяСтоимостьНаНГ		= СТЗ.БалансоваяСтоимостьНаНачалоГода;
		СтрокаНалоговойАмортизации.УвеличениеСтоимости 			= СТЗ.СуммаПоступления;
		СтрокаНалоговойАмортизации.УвеличениеСтоимостиНУ 		= СТЗ.СуммаПоступленияНУ;
		СтрокаНалоговойАмортизации.ПоступлениеПГ 				= СТЗ.СуммаПоступления - СТЗ.СуммаПоступленияНУ;
		СтрокаНалоговойАмортизации.СуммаВыбытияОбщая 			= СТЗ.СуммаВыбытия;
		СтрокаНалоговойАмортизации.СуммаВыбытияНУ			 	= СТЗ.СуммаВыбытияНУ;
		СтрокаНалоговойАмортизации.ВыбытиеПГ 					= СТЗ.СуммаВыбытия - СТЗ.СуммаВыбытияНУ;
		СтрокаНалоговойАмортизации.ЗатратыНаРемонт				= СТЗ.ЗатратыНаРемонт;
		СтрокаНалоговойАмортизации.НормаНаРемонт 				= СТЗ.НормаНаРемонт;
		СтрокаНалоговойАмортизации.Превышение 					= СТЗ.ПревышениеНормыНаРемонт;
		СтрокаНалоговойАмортизации.БалансоваяСтоимость 			= СТЗ.БалансоваяСтоимостьНаКонецГода;
		СтрокаНалоговойАмортизации.БалансоваяСтоимостьИтого 	= СТЗ.БалансоваяСтоимостьИтого;
		СтрокаНалоговойАмортизации.НормаАО 						= СТЗ.НАО;
		СтрокаНалоговойАмортизации.Амортизация 					= СТЗ.АмортизацияЗаГод;
		СтрокаНалоговойАмортизации.УвеличениеСОД 				= СТЗ.УвеличениеСОД;
		СтрокаНалоговойАмортизации.ВычетМеньше100РП 			= СТЗ.ВычетМеньше100РП;
		СтрокаНалоговойАмортизации.ДатаПринятияКУчету			= СТЗ.ДатаПринятияКУчету;
		СтрокаНалоговойАмортизации.КоличествоЛетЭксплуатации 	= СТЗ.КоличествоЛетЭксплуатации;
		СтрокаНалоговойАмортизации.БазаПрямолинейнойАмортизации = СТЗ.БазаПрямолинейнойАмортизации;
		
	КонецЦикла;		

КонецПроцедуры

// Процедура - рассчитать налоговую выверку
Процедура РасчитатьНалоговуюВыверку(УПП)

	НалоговаяВыверка.Очистить();
	
	СтавкаНП = УПП.СтавкаНалогаНаПрибыль;
	
	// 1. Доходы по БУ
	СтрокаНалоговойВыверки 						= НалоговаяВыверка.Добавить();
	СтрокаНалоговойВыверки.НаименованиеСтроки 	= НСтр("ru = 'Доходы по бухучету'");
	СмДоходыБУ									= ДоходыБУ();
	СтрокаНалоговойВыверки.Сумма				= СмДоходыБУ;
	
	// 2. Расходы по БУ
	СтрокаНалоговойВыверки 						= НалоговаяВыверка.Добавить();
	СтрокаНалоговойВыверки.НаименованиеСтроки 	= НСтр("ru = 'Расходы по бухучету'");
	СмРасходыБУ									= РасходыБУ();
	СтрокаНалоговойВыверки.Сумма				= СмРасходыБУ;
	
	// 3. Прибыль до налогобложения
	СтрокаНалоговойВыверки 						= НалоговаяВыверка.Добавить();
	СтрокаНалоговойВыверки.НаименованиеСтроки 	= НСтр("ru = 'Прибыль до налогообложения по бухучету (Стр1 - Стр2)'");
	СмПрибыльДоНалогов							= СмДоходыБУ - СмРасходыБУ;
	СтрокаНалоговойВыверки.Сумма				= СмПрибыльДоНалогов;
	
	// 4. Постоянные разницы - доходы
	СтрокаНалоговойВыверки 						= НалоговаяВыверка.Добавить();
	СтрокаНалоговойВыверки.НаименованиеСтроки 	= НСтр("ru = 'Постоянные разницы - доходы'");
	СмПостоянныеРазницыДоходы					= ПостоянныеРазницыДоходы();
	СтрокаНалоговойВыверки.Сумма				= СмПостоянныеРазницыДоходы;
	
	// 5. Постоянные разницы - расходы
	СтрокаНалоговойВыверки 						= НалоговаяВыверка.Добавить();
	СтрокаНалоговойВыверки.НаименованиеСтроки 	= НСтр("ru = 'Постоянные разницы - расходы'");
	СмПостоянныеРазницыРасходы					= ПостоянныеРазницыРасходы();
	СтрокаНалоговойВыверки.Сумма				= СмПостоянныеРазницыРасходы;
	
	// 6. Постоянные разницы
	СтрокаНалоговойВыверки 						= НалоговаяВыверка.Добавить();
	СтрокаНалоговойВыверки.НаименованиеСтроки 	= НСтр("ru = 'Постоянные разницы (Стр5 - Стр4)'");
	СмПостоянныеРазницы							= -(СмПостоянныеРазницыДоходы - СмПостоянныеРазницыРасходы);
	СтрокаНалоговойВыверки.Сумма				= СмПостоянныеРазницы;
	
	// 7. Прибыль с учетом ПР
	СтрокаНалоговойВыверки 						= НалоговаяВыверка.Добавить();
	СтрокаНалоговойВыверки.НаименованиеСтроки 	= НСтр("ru = 'Прибыль с учетом ПР (Стр3 + Стр6)'");
	ПрибыльСУчетомПР							= СмПрибыльДоНалогов + СмПостоянныеРазницы;
	СтрокаНалоговойВыверки.Сумма				= ПрибыльСУчетомПР;
	
	// 8. Расходы по налогу на прибыль (справочно)
	СтрокаНалоговойВыверки 						= НалоговаяВыверка.Добавить();
	СтрокаНалоговойВыверки.НаименованиеСтроки 	= НСтр("ru = 'Расходы по НП (справочно: по ставке Стр17 от Стр7 с округл. до целых)'");
	Если ПрибыльСУчетомПР > 0 Тогда 
		РасходыПоНПСправочно					= Окр(ПрибыльСУчетомПР * СтавкаНП / 100,0);
	Иначе		
		РасходыПоНПСправочно					= 0;
	КонецЕсли;
	СтрокаНалоговойВыверки.Сумма				= РасходыПоНПСправочно;	
	
	// 9. ВременныеРазницы
	СтрокаНалоговойВыверки 						= НалоговаяВыверка.Добавить();
	СтрокаНалоговойВыверки.НаименованиеСтроки 	= НСтр("ru = 'ВРЕМЕННЫЕ РАЗНИЦЫ:'");	
	
	// 10. Вычет 15% за приобретенные ОС
	СтрокаНалоговойВыверки 						= НалоговаяВыверка.Добавить();
	СтрокаНалоговойВыверки.НаименованиеСтроки 	= НСтр("ru = 'Вычеты при поступлении - действует только до 2009 г!'");
	ВычетыОС									= 0;
	СтрокаНалоговойВыверки.Сумма				= ВычетыОС;
	
	// 11. ДоходОтВыбытияОС
	СтрокаНалоговойВыверки 						= НалоговаяВыверка.Добавить();
	СтрокаНалоговойВыверки.НаименованиеСтроки 	= НСтр("ru = 'Доход от выбытия ОС (отрицательная стоимость категорий ОС)'");
	СмДоходОтВыбОС								= НалоговаяАмортизация.Итог("УвеличениеСОД");
	СтрокаНалоговойВыверки.Сумма				= СмДоходОтВыбОС;	
	
	// 12. Амортизация бухгалтерская
	СтрокаНалоговойВыверки 						= НалоговаяВыверка.Добавить();
	СтрокаНалоговойВыверки.НаименованиеСтроки 	= НСтр("ru = 'Амортизация бухгалтерская'");
	АмортизацияБух								= АмортизацияБухгалтерская();
	СтрокаНалоговойВыверки.Сумма				= АмортизацияБух;
	
	// 13. Амортизация налоговая
	СтрокаНалоговойВыверки 						= НалоговаяВыверка.Добавить();
	СтрокаНалоговойВыверки.НаименованиеСтроки 	= НСтр("ru = 'Амортизация налоговая'");
	АмортизацияНал								= НалоговаяАмортизация.Итог("Амортизация");
	СтрокаНалоговойВыверки.Сумма				= АмортизацияНал;
	
	// 14. Прочие временные разницы
	СтрокаНалоговойВыверки 						= НалоговаяВыверка.Добавить();
	СтрокаНалоговойВыверки.НаименованиеСтроки 	= НСтр("ru = 'Прочие временные разницы (ВР) по РБНУ'");
	ПрочиеВР									= ПрочиеВременныеРазницы();
	СтрокаНалоговойВыверки.Сумма				= ПрочиеВР;
	
	// 15. Итого временные разницы
	СтрокаНалоговойВыверки 						= НалоговаяВыверка.Добавить();
	СтрокаНалоговойВыверки.НаименованиеСтроки 	= НСтр("ru = 'Итого временные разницы (-Стр10 + Стр11 - Стр12 + Стр13 + Стр14)'");
	ИтогоВР										= - ВычетыОС + СмДоходОтВыбОС - АмортизацияБух + АмортизацияНал + ПрочиеВР;
	СтрокаНалоговойВыверки.Сумма				= ИтогоВР;
	
	// 16. Налогоблагаемая прибыль
	СтрокаНалоговойВыверки 						= НалоговаяВыверка.Добавить();
	СтрокаНалоговойВыверки.НаименованиеСтроки 	= НСтр("ru = 'Налогоблагаемая прибыль (Стр3 + Стр6 + Стр15)'");
	НалогооблагаемаяПрибыль						= СмПрибыльДоНалогов + СмПостоянныеРазницы + ИтогоВР;
	СтрокаНалоговойВыверки.Сумма				= НалогооблагаемаяПрибыль;
	
	// 17. Ставка налога
	СтрокаНалоговойВыверки 						= НалоговаяВыверка.Добавить();
	СтрокаНалоговойВыверки.НаименованиеСтроки 	= НСтр("ru = 'Ставка налога'");
	СтрокаНалоговойВыверки.Сумма				= СтавкаНП;
	
	// 18. Сумма налога на прибыль
	СтрокаНалоговойВыверки 						= НалоговаяВыверка.Добавить();
	СтрокаНалоговойВыверки.НаименованиеСтроки 	= НСтр("ru = 'Сумма налога на прибыль (по ставке Стр17 от Стр16)'");	
	Если НалогооблагаемаяПрибыль > 0 Тогда 
		НалогНаПрибыль							= Окр(НалогооблагаемаяПрибыль * СтавкаНП/100,0);
	Иначе
		НалогНаПрибыль							= 0;
	КонецЕсли;	
	СтрокаНалоговойВыверки.Сумма				= НалогНаПрибыль;		

КонецПроцедуры

// Процедура - Выполнить закрытие временных счетов учета
//
Процедура ВыполнитьЗакрытиеВременныхСчетовУчета()
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Хозрасчетный.Ссылка,
		|	Хозрасчетный.Вид КАК ВидСчета,
		|	Хозрасчетный.Код КАК КодСчета
		|ПОМЕСТИТЬ ВременнаяТаблицаСчетаУчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Временный
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет КАК СчетУчета,
		|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаДт,
		|	0 КАК СуммаКт,
		|	ВременнаяТаблицаСчетаУчета.КодСчета КАК КодСчета
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&МоментВремени,
		|			Счет В
		|				(ВЫБРАТЬ
		|					ВременнаяТаблицаСчетаУчета.Ссылка
		|				ИЗ
		|					ВременнаяТаблицаСчетаУчета КАК ВременнаяТаблицаСчетаУчета
		|				ГДЕ
		|					ВременнаяТаблицаСчетаУчета.ВидСчета = ЗНАЧЕНИЕ(ВидСчета.Активный)),
		|			,
		|			Организация = &Организация) КАК ХозрасчетныйОстатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСчетаУчета КАК ВременнаяТаблицаСчетаУчета
		|		ПО ХозрасчетныйОстатки.Счет = ВременнаяТаблицаСчетаУчета.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет,
		|	0,
		|	ХозрасчетныйОстатки.СуммаОстаток * -1,
		|	ВременнаяТаблицаСчетаУчета.КодСчета
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&МоментВремени,
		|			Счет В
		|				(ВЫБРАТЬ
		|					ВременнаяТаблицаСчетаУчета.Ссылка
		|				ИЗ
		|					ВременнаяТаблицаСчетаУчета КАК ВременнаяТаблицаСчетаУчета
		|				ГДЕ
		|					ВременнаяТаблицаСчетаУчета.ВидСчета = ЗНАЧЕНИЕ(ВидСчета.Пассивный)),
		|			,
		|			Организация = &Организация) КАК ХозрасчетныйОстатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСчетаУчета КАК ВременнаяТаблицаСчетаУчета
		|		ПО ХозрасчетныйОстатки.Счет = ВременнаяТаблицаСчетаУчета.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодСчета";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МоментВремени", Дата + 1); 
	Запрос.УстановитьПараметр("Организация", Организация);
	
	ВременныеСчетаУчета.Загрузить(Запрос.Выполнить().Выгрузить())
	
КонецПроцедуры // РассчитатьПереоценкуВалютныхСредств()

// Процедура - Выполнить закрытие парных счетов учета
//
Процедура ВыполнитьЗакрытиеПарныхСчетовУчета()
	
	// 1. Список активных счетов, с заполненым парным счетом (только Контрагенты и договоры) 
	// 2. Список парных счетов (пассивные)
	// 3. Остатки по активным счетам
	// 4. Осатки по пассивным счетам
	// 5. Соединение активных и пассивных остатков
	// 6. Таблица для заполнения	
	
	ТекстЗапроса =
		// Список активных счетов
		"ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК АктивныйСчетУчета
		|ПОМЕСТИТЬ ВременнаяТаблицаСписокАктивныхПарныхСчетов
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
		|	И НЕ Хозрасчетный.ПарныйСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|	И Хозрасчетный.ВидыСубконто.ВидСубконто В(&ВидыСубконто)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// Список парных счетов
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК ПассивныйСчетУчета
		|ПОМЕСТИТЬ ВременнаяТаблицаСписокПассивныхПарныхСчетов
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
		|	И НЕ Хозрасчетный.ПарныйСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|	И Хозрасчетный.ВидыСубконто.ВидСубконто В(&ВидыСубконто)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// Остатки по активным сетам
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет КАК СчетАктивный,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2,
		|	СУММА(ХозрасчетныйОстатки.СуммаОстатокДт) КАК СальдоАктивный,
		|	СУММА(ХозрасчетныйОстатки.ВалютнаяСуммаОстатокДт) КАК ВалютноеСальдоАктивный,
		|	ХозрасчетныйОстатки.Валюта КАК Валюта
		|ПОМЕСТИТЬ ВременнаяТаблицаСальдоАктивныхСчетов
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&МоментВремени,
		|			Счет В
		|				(ВЫБРАТЬ
		|					ВременнаяТаблицаСписокАктивныхПарныхСчетов.АктивныйСчетУчета
		|				ИЗ
		|					ВременнаяТаблицаСписокАктивныхПарныхСчетов КАК ВременнаяТаблицаСписокАктивныхПарныхСчетов),
		|			&ВидыСубконто,
		|			Организация = &Организация) КАК ХозрасчетныйОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2,
		|	ХозрасчетныйОстатки.Валюта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// Остатки по пассивным счетам
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет КАК СчетПассивный,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2,
		|	СУММА(ХозрасчетныйОстатки.СуммаОстатокКт) КАК СальдоПассивный,
		|	СУММА(ХозрасчетныйОстатки.ВалютнаяСуммаОстатокКт) КАК ВалютноеСальдоПассивный,
		|	ХозрасчетныйОстатки.Валюта КАК Валюта
		|ПОМЕСТИТЬ ВременнаяТаблицаСальдоПассивныхСчетов
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&МоментВремени,
		|			Счет В
		|				(ВЫБРАТЬ
		|					ВременнаяТаблицаСписокПассивныхПарныхСчетов.ПассивныйСчетУчета
		|				ИЗ
		|					ВременнаяТаблицаСписокПассивныхПарныхСчетов КАК ВременнаяТаблицаСписокПассивныхПарныхСчетов),
		|			&ВидыСубконто,
		|			Организация = &Организация) КАК ХозрасчетныйОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2,
		|	ХозрасчетныйОстатки.Валюта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// Соединение остатков
		|ВЫБРАТЬ
		|	ВременнаяТаблицаСальдоАктивныхСчетов.СчетАктивный КАК СчетАктивный,
		|	ВременнаяТаблицаСальдоАктивныхСчетов.Субконто1 КАК Субконто1,
		|	ВременнаяТаблицаСальдоАктивныхСчетов.Субконто2 КАК Субконто2,
		|	ВременнаяТаблицаСальдоАктивныхСчетов.Валюта КАК Валюта,
		|	СУММА(ВременнаяТаблицаСальдоАктивныхСчетов.СальдоАктивный) КАК СальдоАктивный,
		|	СУММА(ВременнаяТаблицаСальдоАктивныхСчетов.ВалютноеСальдоАктивный) КАК ВалютноеСальдоАктивный,
		|	ВременнаяТаблицаСальдоПассивныхСчетов.СчетПассивный КАК СчетПассивный,
		|	СУММА(ВременнаяТаблицаСальдоПассивныхСчетов.СальдоПассивный) КАК СальдоПассивный,
		|	СУММА(ВременнаяТаблицаСальдоПассивныхСчетов.ВалютноеСальдоПассивный) КАК ВалютноеСальдоПассивный
		|ПОМЕСТИТЬ ВременнаяТаблицаСальдоСводПарСчетов
		|ИЗ
		|	ВременнаяТаблицаСальдоАктивныхСчетов КАК ВременнаяТаблицаСальдоАктивныхСчетов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСальдоПассивныхСчетов КАК ВременнаяТаблицаСальдоПассивныхСчетов
		|		ПО ВременнаяТаблицаСальдоАктивныхСчетов.Субконто1 = ВременнаяТаблицаСальдоПассивныхСчетов.Субконто1
		|			И ВременнаяТаблицаСальдоАктивныхСчетов.Субконто2 = ВременнаяТаблицаСальдоПассивныхСчетов.Субконто2
		|			И ВременнаяТаблицаСальдоАктивныхСчетов.Валюта = ВременнаяТаблицаСальдоПассивныхСчетов.Валюта
		|			И (ВременнаяТаблицаСальдоАктивныхСчетов.СальдоАктивный <> 0)
		|			И (ВременнаяТаблицаСальдоПассивныхСчетов.СальдоПассивный <> 0)
		|			И ВременнаяТаблицаСальдоАктивныхСчетов.СчетАктивный.ПарныйСчет = ВременнаяТаблицаСальдоПассивныхСчетов.СчетПассивный
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаСальдоАктивныхСчетов.СчетАктивный,
		|	ВременнаяТаблицаСальдоПассивныхСчетов.СчетПассивный,
		|	ВременнаяТаблицаСальдоАктивныхСчетов.Субконто1,
		|	ВременнаяТаблицаСальдоАктивныхСчетов.Субконто2,
		|	ВременнаяТаблицаСальдоАктивныхСчетов.Валюта
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Остатки (отрицательные) есть только по активным
		|ВЫБРАТЬ
		|	ВременнаяТаблицаСальдоАктивныхСчетов.СчетАктивный,
		|	ВременнаяТаблицаСальдоАктивныхСчетов.Субконто1,
		|	ВременнаяТаблицаСальдоАктивныхСчетов.Субконто2,
		|	ВременнаяТаблицаСальдоАктивныхСчетов.Валюта,
		|	СУММА(ВременнаяТаблицаСальдоАктивныхСчетов.СальдоАктивный),
		|	СУММА(ВременнаяТаблицаСальдоАктивныхСчетов.ВалютноеСальдоАктивный),
		|	ВременнаяТаблицаСальдоАктивныхСчетов.СчетАктивный.ПарныйСчет,
		|	СУММА(0),
		|	СУММА(0)
		|ИЗ
		|	ВременнаяТаблицаСальдоАктивныхСчетов КАК ВременнаяТаблицаСальдоАктивныхСчетов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСальдоПассивныхСчетов КАК ВременнаяТаблицаСальдоПассивныхСчетов
		|		ПО ВременнаяТаблицаСальдоАктивныхСчетов.Субконто1 = ВременнаяТаблицаСальдоПассивныхСчетов.Субконто1
		|			И ВременнаяТаблицаСальдоАктивныхСчетов.Субконто2 = ВременнаяТаблицаСальдоПассивныхСчетов.Субконто2
		|			И ВременнаяТаблицаСальдоАктивныхСчетов.Валюта = ВременнаяТаблицаСальдоПассивныхСчетов.Валюта
		|			И ВременнаяТаблицаСальдоАктивныхСчетов.СчетАктивный.ПарныйСчет = ВременнаяТаблицаСальдоПассивныхСчетов.СчетПассивный
		|ГДЕ
		|	ВременнаяТаблицаСальдоАктивныхСчетов.СальдоАктивный < 0
		|	И ВременнаяТаблицаСальдоПассивныхСчетов.СчетПассивный ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаСальдоАктивныхСчетов.СчетАктивный,
		|	ВременнаяТаблицаСальдоАктивныхСчетов.Субконто1,
		|	ВременнаяТаблицаСальдоАктивныхСчетов.Субконто2,
		|	ВременнаяТаблицаСальдоАктивныхСчетов.Валюта,
		|	ВременнаяТаблицаСальдоАктивныхСчетов.СчетАктивный.ПарныйСчет
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Остатки (отрицательные) есть только по пассивным
		|ВЫБРАТЬ
		|	ВременнаяТаблицаСальдоПассивныхСчетов.СчетПассивный.ПарныйСчет,
		|	ВременнаяТаблицаСальдоПассивныхСчетов.Субконто1,
		|	ВременнаяТаблицаСальдоПассивныхСчетов.Субконто2,
		|	ВременнаяТаблицаСальдоПассивныхСчетов.Валюта,
		|	СУММА(0),
		|	СУММА(0),
		|	ВременнаяТаблицаСальдоПассивныхСчетов.СчетПассивный,
		|	СУММА(ВременнаяТаблицаСальдоПассивныхСчетов.СальдоПассивный),
		|	СУММА(ВременнаяТаблицаСальдоПассивныхСчетов.ВалютноеСальдоПассивный)
		|ИЗ
		|	ВременнаяТаблицаСальдоПассивныхСчетов КАК ВременнаяТаблицаСальдоПассивныхСчетов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСальдоАктивныхСчетов КАК ВременнаяТаблицаСальдоАктивныхСчетов
		|		ПО ВременнаяТаблицаСальдоПассивныхСчетов.Субконто1 = ВременнаяТаблицаСальдоАктивныхСчетов.Субконто1
		|			И ВременнаяТаблицаСальдоПассивныхСчетов.Субконто2 = ВременнаяТаблицаСальдоАктивныхСчетов.Субконто2
		|			И ВременнаяТаблицаСальдоПассивныхСчетов.Валюта = ВременнаяТаблицаСальдоАктивныхСчетов.Валюта
		|			И ВременнаяТаблицаСальдоПассивныхСчетов.СчетПассивный.ПарныйСчет = ВременнаяТаблицаСальдоАктивныхСчетов.СчетАктивный
		|ГДЕ
		|	ВременнаяТаблицаСальдоПассивныхСчетов.СальдоПассивный < 0
		|	И ВременнаяТаблицаСальдоАктивныхСчетов.СчетАктивный ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаСальдоПассивныхСчетов.СчетПассивный,
		|	ВременнаяТаблицаСальдоПассивныхСчетов.Субконто1,
		|	ВременнаяТаблицаСальдоПассивныхСчетов.Субконто2,
		|	ВременнаяТаблицаСальдоПассивныхСчетов.Валюта,
		|	ВременнаяТаблицаСальдоПассивныхСчетов.СчетПассивный.ПарныйСчет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// Опеределение проводки и сумм
		|ВЫБРАТЬ
		|	ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный КАК СальдоАктивный,
		|	ВременнаяТаблицаСальдоСводПарСчетов.ВалютноеСальдоАктивный КАК СальдоАктивныйВалютное,
		|	ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный КАК СальдоПассивный,
		|	ВременнаяТаблицаСальдоСводПарСчетов.ВалютноеСальдоПассивный КАК СальдоПассивныйВалютное,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный > 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный > 0
		|			ТОГДА ВременнаяТаблицаСальдоСводПарСчетов.СчетПассивный
		|		ИНАЧЕ ВременнаяТаблицаСальдоСводПарСчетов.СчетАктивный
		|	КОНЕЦ КАК СчетДт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный > 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный > 0
		|			ТОГДА ВременнаяТаблицаСальдоСводПарСчетов.СчетАктивный
		|		ИНАЧЕ ВременнаяТаблицаСальдоСводПарСчетов.СчетПассивный
		|	КОНЕЦ КАК СчетКт,
		|	ВременнаяТаблицаСальдоСводПарСчетов.Субконто1 КАК Субконто1,
		|	ВременнаяТаблицаСальдоСводПарСчетов.Субконто2 КАК Субконто2,
		|	ВременнаяТаблицаСальдоСводПарСчетов.Валюта КАК Валюта,
		|	НЕОПРЕДЕЛЕНО КАК Субконто3,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный >= 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный < 0
		|			ТОГДА ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный * -1
		|		КОГДА ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный < 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный >= 0
		|			ТОГДА ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный * -1
		|		КОГДА ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный > 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный > 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный >= ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный
		|			ТОГДА ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный
		|		КОГДА ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный > 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный > 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный < ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный
		|			ТОГДА ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный
		|		КОГДА ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный < 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный < 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный >= ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный
		|			ТОГДА ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный * -1
		|		КОГДА ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный < 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный < 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный < ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный
		|			ТОГДА ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный * -1
		|	КОНЕЦ КАК Сумма,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный >= 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный < 0
		|			ТОГДА ВременнаяТаблицаСальдоСводПарСчетов.ВалютноеСальдоПассивный * -1
		|		КОГДА ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный < 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный >= 0
		|			ТОГДА ВременнаяТаблицаСальдоСводПарСчетов.ВалютноеСальдоАктивный * -1
		|		КОГДА ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный > 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный > 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный >= ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный
		|			ТОГДА ВременнаяТаблицаСальдоСводПарСчетов.ВалютноеСальдоПассивный
		|		КОГДА ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный > 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный > 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный < ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный
		|			ТОГДА ВременнаяТаблицаСальдоСводПарСчетов.ВалютноеСальдоАктивный
		|		КОГДА ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный < 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный < 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный >= ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный
		|			ТОГДА ВременнаяТаблицаСальдоСводПарСчетов.ВалютноеСальдоПассивный * -1
		|		КОГДА ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный < 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный < 0
		|				И ВременнаяТаблицаСальдоСводПарСчетов.СальдоАктивный < ВременнаяТаблицаСальдоСводПарСчетов.СальдоПассивный
		|			ТОГДА ВременнаяТаблицаСальдоСводПарСчетов.ВалютноеСальдоАктивный * -1
		|	КОНЕЦ КАК ВалютнаяСумма
		|ИЗ
		|	ВременнаяТаблицаСальдоСводПарСчетов КАК ВременнаяТаблицаСальдоСводПарСчетов
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВЫРАЗИТЬ(ВременнаяТаблицаСальдоСводПарСчетов.Субконто1 КАК Справочник.Контрагенты).Наименование,
		|	ВЫРАЗИТЬ(ВременнаяТаблицаСальдоСводПарСчетов.Субконто2 КАК Справочник.ДоговорыКонтрагентов).Наименование";
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МоментВремени", 	Дата + 1); 
	Запрос.УстановитьПараметр("Период", 		Дата);
	Запрос.УстановитьПараметр("Организация", 	Организация);
	Запрос.УстановитьПараметр("ВидыСубконто", 	ВидыСубконто);
	
	ПарныеСчетаУчета.Загрузить(Запрос.Выполнить().Выгрузить())
	
КонецПроцедуры // РассчитатьПереоценкуВалютныхСредств()

Процедура РассчитатьСписаниеРасходовБудущихПериодов()
	КонецПериода 	= КонецМесяца(Дата);	
	
	СписокСчетовРБП = Новый Массив;
	СписокСчетовРБП.Добавить(ПланыСчетов.Хозрасчетный.РасходыБудущихПериодов);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КонецМесяца", КонецПериода);
	Запрос.УстановитьПараметр("СписокСчет",  СписокСчетовРБП);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК РасходыБП,
	|	ХозрасчетныйОстатки.Субконто1.ДатаНачалаСписания КАК ДатаНачалаСписания,
	|	ХозрасчетныйОстатки.Субконто1.ДатаОкончанияСписания КАК ДатаОкончанияСписания,
	|	ХозрасчетныйОстатки.Субконто1.Сумма КАК Сумма,
	|	ХозрасчетныйОстатки.Субконто1.СчетУчета КАК СчетДт,
	|	ХозрасчетныйОстатки.Субконто1.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстатки.Субконто1.Субконто2 КАК Субконто2,
	|	ХозрасчетныйОстатки.Субконто1.Субконто3 КАК Субконто3,
	|	ХозрасчетныйОстатки.Счет КАК СчетКт,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокДт, 0) КАК СуммаОстатокДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецМесяца, Счет В (&СписокСчет), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов), Организация = &Организация) КАК ХозрасчетныйОстатки
	|ИТОГИ ПО
	|	РасходыБП";
	
	Результат = Запрос.Выполнить();
	
	Таблица = Новый ТаблицаЗначений;
	Таблица = Результат.Выгрузить();
	СуммаСписания = 0;
	
	ВыборкаРБП = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "РасходыБП");
	
	РасходыБП.Очистить();
	
	Пока ВыборкаРБП.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(ВыборкаРБП.РасходыБП)
			ИЛИ НЕ ЗначениеЗаполнено(ВыборкаРБП.ДатаНачалаСписания)
			ИЛИ НЕ ЗначениеЗаполнено(ВыборкаРБП.ДатаОкончанияСписания)
			ИЛИ НЕ ЗначениеЗаполнено(ВыборкаРБП.Сумма) Тогда
			Продолжить;
		КонецЕсли;		
		
		ВыборкаПоСчетам = ВыборкаРБП.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоСчетам.Следующий() Цикл		
			
			СтруктураСписания = СуммаСписанияЗаМесяц(ВыборкаПоСчетам.РасходыБП 
													 ,ВыборкаПоСчетам.ДатаНачалаСписания 
													 ,ВыборкаПоСчетам.ДатаОкончанияСписания 
													 ,ВыборкаПоСчетам.СуммаОстатокДт);
													 
			СуммаСписания 	= СтруктураСписания.СуммаСписания;
			НДССписания 	= СтруктураСписания.НДССписания;
			
			РБП    = ВыборкаПоСчетам.РасходыБП;
			Счет = ВыборкаПоСчетам.СчетДт;				
			Сумма  = ВыборкаПоСчетам.Сумма;
			
			//Сформировать проводку БУ				
			Если (ВыборкаПоСчетам.СуммаОстатокДт = 0) ИЛИ (СуммаСписания = 0) Тогда
				Продолжить;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(РБП) Тогда
				Продолжить;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Счет) Тогда					
				ТекстСообщения = СтрШаблон(НСтр("ru = 'В справочнике ""Расходы будущих периодов"" для статьи ""%1"" не заполнен реквизит ""Счет""'"), РБП);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				Продолжить;
			КонецЕсли;
			
			СтрокаТабличнойЧасти = РасходыБП.Добавить();
			СтрокаТабличнойЧасти.СчетДт	= ВыборкаПоСчетам.СчетДт;
			
			СтрокаТабличнойЧасти.СубконтоДт1	= ВыборкаПоСчетам.Субконто1;
			СтрокаТабличнойЧасти.СубконтоДт2	= ВыборкаПоСчетам.Субконто2;
			СтрокаТабличнойЧасти.СубконтоДт3	= ВыборкаПоСчетам.Субконто3;
			СтрокаТабличнойЧасти.РБП			= ВыборкаПоСчетам.РасходыБП;
			
			СтрокаТабличнойЧасти.СчетКт 		= ВыборкаПоСчетам.СчетКт;
			СтрокаТабличнойЧасти.Сумма       	= СуммаСписания;
			СтрокаТабличнойЧасти.СуммаНДС		= НДССписания;
			
		КонецЦикла;
	КонецЦикла;
	
		
	
	// ФОРМИРОВАНИЕ ПРОВОДОК 
	
	//Для Каждого СТЧ Из РасходыБП Цикл
	//	
	//	// 1. БУ - проводка
	//	Проводка = мПроводкиБУ.Добавить();
	//	Проводка.Период       = мКонДата;
	//	Проводка.Организация  = Организация;
	//	
	//	Проводка.СчетДт       = СТЧ.СчетДт;
	//	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, СТЧ.СубконтоДт1);
	//	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, СТЧ.СубконтоДт2);
	//	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, СТЧ.СубконтоДт3);
	//	
	//	Проводка.СчетКт       = СТЧ.СчетКт;
	//	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыБудущихПериодов", СТЧ.РБП);				
	//	Проводка.Сумма        = СТЧ.Сумма;
	//	
	//	Проводка.Содержание   = "Расходы БП за " + ПредставлениеПериода(мНачДата, мКонДата, "ФП=Истина");
	//	Проводка.НомерЖурнала = "БП";
	//	
	//	// 2. БУ - проводка по НДС для учета СФ "Распределять" и "Ежемесячно"
	//	Если СТЧ.РБП.УчетСФ = 1 ИЛИ СТЧ.РБП.УчетСФ = 2 Тогда 
	//		
	//		Проводка = мПроводкиБУ.Добавить();
	//		Проводка.Период       = мКонДата;
	//		Проводка.Организация  = Организация;
	//		
	//		Проводка.СчетДт       = ПланыСчетов.Типовой.НалогиПодлежащиеВозмещению;
	//		
	//		Проводка.СчетКт       = СТЧ.СчетКт;
	//		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыБудущихПериодов", СТЧ.РБП);				
	//		Проводка.Сумма        = СТЧ.НДС;
	//		
	//		Проводка.Содержание   = "НДС расходы буд/периодов за " + ПредставлениеПериода(мНачДата, мКонДата, "ФП=Истина");
	//		Проводка.НомерЖурнала = "БП";
	//	КонецЕсли;			
	//	
	//	// 3. НУ - проводка
	//	Если мУчетнаяПолитикаПоНалоговомуУчету.ОрганизацияЯвляетсяПлательщикомНП 
	//		И СТЧ.СчетДт.ДоходыРасходы = Перечисления.ДоходыРасходы.Расходы Тогда
	//		
	//		СчетДтНУ = НалоговыйУчет.ПолучитьСчетНУПоСоответствиюБУНУ(Проводка.СчетДт, Дата);				
	//		Если СчетДтНУ.Пустая() Тогда 
	//			Сообщить("Не найден счет НУ, соответствующий счету расходов-доходов БУ " + Проводка.СчетДт.Код + "!", СтатусСообщения.Важное);
	//		Иначе
	//			ПроводкаНУ = мПроводкиНУ.Добавить();
	//			ПроводкаНУ.Период       = мКонДата;
	//			ПроводкаНУ.Организация  = Организация;
	//			ПроводкаНУ.СчетДт       = СчетДтНУ;
	//			ПроводкаНУ.Сумма        = СТЧ.Сумма;
	//			ПроводкаНУ.НомерЖурнала = "БП";
	//			ПроводкаНУ.СчетСоответствияБУ = Проводка.СчетДт;
	//			ПроводкаНУ.Содержание   = "Расходы БП за " + ПредставлениеПериода(мНачДата, мКонДата, "ФП=Истина");
	//			НалоговыйУчет.ВидУчетаНУ(ПроводкаНУ,ОтражатьВНалоговомУчете);
	//		КонецЕсли;
	//	КонецЕсли;
	//	
	//	// 4. Движения по СФП, НДСВ и ПТМЗиУ учета СФ "Распределять"
	//	Если СТЧ.РБП.УчетСФ = 1 Тогда 				
	//	//***КЭ - ИВЗ 01.02.2016 10:25:33 << Добавил ЗМ в движения по приведенным ниже регистрам точно не знаю нужны или нет (Код ниже уже был написан сделал его работоспособным)
	//	//Если что закоментировать
	//	
	//	//то 
	//		// 4.0. Найдем 
	//		Запрос = Новый Запрос;
	//		Запрос.Текст = 
	//		"ВЫБРАТЬ
	//		|	ПоступлениеТоваровУслугУслуги.Ссылка
	//		|ИЗ
	//		|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
	//		|ГДЕ
	//		|	ПоступлениеТоваровУслугУслуги.СубконтоЗатратБУ1 = &РБП";
	//		
	//		Запрос.УстановитьПараметр("РБП", СТЧ.РБП);
	//		Результат = Запрос.Выполнить();
	//		Выборка = Результат.Выбрать();
	//		
	//		Если Выборка.Следующий() Тогда 
	//			ДокРБП = Выборка.Ссылка;
	//			
	//			// 4.1. Запись в регистр Счета-фактуры полученные
	//			ДвижениеСФ						= Движения.СчетаФактурыПолученные.Добавить();		     				
	//			ДвижениеСФ.Организация			= Организация;
	//			ДвижениеСФ.ДатаСФ				= Дата;		
	//			ДвижениеСФ.ДокументПокупки 		= ДокРБП;
	//			
	//			ДвижениеСФ.СерияБланкаСФ 		= ДокРБП.СерияБланкаСФ;
	//			ДвижениеСФ.НомерБланкаСФ 		= ДокРБП.НомерБланкаСФ;
	//			ДвижениеСФ.ТипПоставкиСФ 		= ДокРБП.ТипПоставкиСФ;          
	//			ДвижениеСФ.РасходыБП			= СТЧ.РБП;//СТЧ.РБП.РасходыБП;  //***КЭ - ИВЗ 01.02.2016 10:27:45 
	//			ДвижениеСФ.Примечание			= "РБП - распрделение";			
	//			ДвижениеСФ.СчетФактура 			= ДокРБП.СерияБланкаСФ
	//			+ " №" 
	//			+ ДокРБП.НомерБланкаСФ;
	//			
	//			// 4.2. Движения по НДСВ "Распределять"
	//			Движение = Движения.НДСКВозмещению.Добавить();
	//			Движение.Организация			= Организация;
	//			Движение.СтавкаНДС				= ДокРБП.Услуги[0].СтавкаНДС;
	//			//Движение.Номенклатура 			= ДокРБП.Услуги[0].Номенклатура;    - нет в регистре   //***КЭ - ИВЗ 01.02.2016 10:27:45
	//			Движение.ЗачетНДС 	 			= ДокРБП.Услуги[0].ЗачетНДС;
	//			Движение.СтавкаНСП    			= ДокРБП.Услуги[0].СтавкаНСП;
	//			//Движение.Количество 	 		= ДокРБП.Услуги[0].Количество;   		- нет в регистре   //***КЭ - ИВЗ 01.02.2016 10:27:45
	//			Движение.СуммаБезНДС			= СТЧ.Сумма;
	//			Движение.СуммаНДС				= СТЧ.НДС;
	//			Движение.ДоговорКонтрагента		= ДокРБП.ДоговорКонтрагента;
	//			Движение.НаименованиеПоставки	= ДокРБП.Услуги[0].Номенклатура.Наименование; 
	//			Движение.Период					= Дата;
	//			
	//			// 4.3. Движения по ПТМЗ "Ежемесячно"
	//			Движение = Движения.ПоступлениеТМЗ.Добавить();
	//			Движение.Период					= Дата;
	//			Движение.Организация 			= Организация;
	//			Движение.СчетУчета				= ДокРБП.Услуги[0].СчетЗатратБУ;
	//			Движение.ДоговорКонтрагента		= ДокРБП.ДоговорКонтрагента;
	//			Движение.Валюта					= ДокРБП.ВалютаДокумента;
	//			
	//			Движение.Номенклатура 			= ДокРБП.Услуги[0].Номенклатура;
	//			Движение.Количество 	 		= ДокРБП.Услуги[0].Количество;
	//			Движение.СуммаБезНДС			= СТЧ.Сумма;
	//			Движение.НДС					= СТЧ.НДС;
	//			Движение.СуммаВсего				= СТЧ.Сумма + СТЧ.НДС; 
	//			
	//			Движение.СуммаБезНДСВал			= СТЧ.Сумма;
	//			Движение.НДСВал					= СТЧ.НДС;
	//			Движение.СуммаВсегоВал			= СТЧ.Сумма + СТЧ.НДС; 
	//			Движение.СтавкаНСП				= ДокРБП.Услуги[0].СтавкаНСП;
	//			Движение.СтавкаНДС				= ДокРБП.Услуги[0].СтавкаНДС;
	//			Движение.Содержание				= "Расход БП - распределять";
	//			//***КЭ - ИВЗ 01.02.2016 10:28:36 >>
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьНадписи()
	НадписьОС = "";
	НадписьПереоценкаВалютныхСредств = "";
	
	Если РасчетАмортизацииОС Тогда
		НадписьОС	= СтрШаблон(НСтр("ru = 'Сумма амортизации: %1'"), АмортизацияОС.Итог("Сумма"));
	КонецЕсли;
	
	Если РасчетПереоценкиВалютныхСредств Тогда
		НадписьПереоценкаВалютныхСредств	= СтрШаблон(НСтр("ru = 'Доходы: %1. Убытки: %2'"), 
										ПереоценкаВалюты.Итог("СуммаДоход"), 
										ПереоценкаВалюты.Итог("СуммаУбыток"));	
	КонецЕсли;
	
	Если РасчетНДС Тогда
		//СтрокаТабличнойЧасти = НДС.Найти("059", "Строка");
		//Сумма059 = СтрокаТабличнойЧасти.Сумма;
		//СтрокаТабличнойЧасти = НДС.Найти("064", "Строка");
		//Сумма064 = СтрокаТабличнойЧасти.Сумма;		
		//НадписьНДС	= СтрШаблон(НСтр("ru = 'НДС начисленный: %1. НДС, разрешенный к зачету: %2'"), 
		//								Сумма059, 
		//								Сумма064);	
	КонецЕсли;								
	
	Если РасчетНалогаНаИмущество Тогда
		НадписьНалогНаИмущество	= СтрШаблон(НСтр("ru = 'Недвижимость сумма: %1. Транспорт сумма: %2'"), 
										Недвижимость.Итог("СуммаНалога"), 
										Транспорт.Итог("СуммаНалога"));	
	КонецЕсли;
	
	Если ЗакрытьПарныеСчетаУчета Тогда
		НадписьЗакрытиеПарныхСчетов	= СтрШаблон(НСтр("ru = 'Контрольная сумма проводок: %1'"), ПарныеСчетаУчета.Итог("Сумма"));	
	КонецЕсли;
	
	Если ЗакрытьВременныеСчетаУчета Тогда
		НадписьЗакрытиеВременныхСчетов	= СтрШаблон(НСтр("ru = 'Сумма: %1'"), 0);	
	КонецЕсли;
	
	Если НЕ РучнойВводКомментариев Тогда
		Комментарий = СтрШаблон(НСтр("ru = 'Закрытие месяца за %1 %2. Сформировано %3'"), 
					Формат(Дата,"ДФ=ММММ"), 
					Формат(Дата, "ДФ=гггг"),
					ТекущаяДата()); 
	КонецЕсли;
	
	Если РасчетСписанияРасходовБудущихПериодов Тогда
		НадписьСписаниеРасходовБудущихПериодов	= СтрШаблон(НСтр("ru = 'Списание расходов будущих периодов: %1'"), РасходыБП.Итог("Сумма"));
	КонецЕсли;			
	
КонецПроцедуры

Процедура ПредварительныйКонтроль(Отказ)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗакрытиеМесяца.Ссылка
		|ИЗ
		|	Документ.ЗакрытиеМесяца КАК ЗакрытиеМесяца
		|ГДЕ
		|	НЕ ЗакрытиеМесяца.ПометкаУдаления
		|	И НЕ ЗакрытиеМесяца.Ссылка = &Ссылка
		|	И КОНЕЦПЕРИОДА(ЗакрытиеМесяца.Дата, МЕСЯЦ) = &Дата";
	
	Запрос.УстановитьПараметр("Дата", Дата);		
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
		
	Если Выборка.Количество() > 0 Тогда
		ТекстСообщения = НСтр("ru = 'Для указанного периода существует проведенный документ Закрытие месяца!'");
		БухгалтерскийУчетСервер.СообщитьОбОшибке(
			ЭтотОбъект,   
			ТекстСообщения,
			,
			,
			,
			Отказ);	    
	КонецЕсли;		

КонецПроцедуры

Функция ЕстьДокументВУказанныйПериод(Дата)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗакрытиеМесяца.Ссылка
		|ИЗ
		|	Документ.ЗакрытиеМесяца КАК ЗакрытиеМесяца
		|ГДЕ
		|	НЕ ЗакрытиеМесяца.ПометкаУдаления
		|	И КОНЕЦПЕРИОДА(ЗакрытиеМесяца.Дата, МЕСЯЦ) = &Дата";
	
	Запрос.УстановитьПараметр("Дата", Дата);		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка.Количество() > 0 	

КонецФункции 

Функция РазностьДатВДнях(Дата1, Дата2)
	
	мДлинаСуток = 86400; // в секундах
	
	Возврат Окр((НачалоДня(Дата1) - НачалоДня(Дата2)) / мДлинаСуток);
	
КонецФункции

// Функция определяет сумму расходов будущих периодов
// подлежащих отнесению на затраты в текущем периоде
Функция СуммаСписанияЗаМесяц(СтатьяРасходовБудущихПериодов, Знач ДатаНачалаСписания, Знач ДатаОкончанияСписания, Остаток)
	НачалоПериода 	= НачалоМесяца(Дата);
	КонецПериода 	= КонецМесяца(Дата);
	
	СуммаНДС 		= ?(СтатьяРасходовБудущихПериодов.УчетСФ = 3, 0, СтатьяРасходовБудущихПериодов.СуммаНДС); 
	Сумма 			= СтатьяРасходовБудущихПериодов.Себестоимость;//СтатьяРасходовБудущихПериодов.Себестоимость - НДС; 
	
	//НДС 			= СтатьяРасходовБудущихПериодов.НДС; 
	//Сумма 		= СтатьяРасходовБудущихПериодов.Сумма - НДС;
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("СуммаСписания", 0);
	СтруктураВозврата.Вставить("НДССписания", 	0);
	
	Если Сумма = 0 Тогда
		Возврат СтруктураВозврата;	
	КонецЕсли;
	
	ДатаНачалаСписания    = НачалоДня(ДатаНачалаСписания);
	ДатаОкончанияСписания = КонецДня(ДатаОкончанияСписания);
	
	Если НЕ ЗначениеЗаполнено(ДатаНачалаСписания) Тогда
		Возврат СтруктураВозврата;
	ИначеЕсли ДатаНачалаСписания > КонецПериода Тогда
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаОкончанияСписания) Тогда
		Возврат СтруктураВозврата;
	ИначеЕсли ДатаОкончанияСписания < НачалоПериода  Тогда
		Возврат СтруктураВозврата;
	ИначеЕсли ДатаОкончанияСписания < ДатаНачалаСписания Тогда
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	Если ДатаНачалаСписания < НачалоМесяца(ДатаОкончанияСписания) Тогда
		
		Если ДатаНачалаСписания > НачалоМесяца(ДатаНачалаСписания) Тогда
			ДатаНачалаПолногоМесяцаСписания = НачалоМесяца(ДобавитьМесяц(ДатаНачалаСписания, 1));
		Иначе
			ДатаНачалаПолногоМесяцаСписания = ДатаНачалаСписания;
		КонецЕсли;
		
		Если ДатаОкончанияСписания < КонецМесяца(ДатаОкончанияСписания) Тогда
			ДатаОкончанияПолногоМесяцаСписания = КонецМесяца(ДобавитьМесяц(ДатаОкончанияСписания, -1));
		Иначе
			ДатаОкончанияПолногоМесяцаСписания = ДатаОкончанияСписания;
		КонецЕсли;
		
		Если ДатаОкончанияПолногоМесяцаСписания >= ДатаНачалаПолногоМесяцаСписания Тогда
			КоличествоПолныхМесяцев = (Год(ДатаОкончанияПолногоМесяцаСписания) - Год(ДатаНачалаПолногоМесяцаСписания)) * 12 
			+ Месяц(ДатаОкончанияПолногоМесяцаСписания) - Месяц(ДатаНачалаПолногоМесяцаСписания) + 1;
		Иначе
			КоличествоПолныхМесяцев = 0;
		КонецЕсли;
		
		ПериодСписанияВ_Днях          	= РазностьДатВДнях(ДатаОкончанияСписания, ДатаНачалаСписания)+ 1;
		СуммаСписанияПервогоМесяца    	= Окр(Сумма * РазностьДатВДнях(ДатаНачалаПолногоМесяцаСписания, ДатаНачалаСписания) / ПериодСписанияВ_Днях, 2);
		СуммаСписанияПоследнегоМесяца 	= Окр(Сумма * РазностьДатВДнях(ДатаОкончанияСписания, ДатаОкончанияПолногоМесяцаСписания) / ПериодСписанияВ_Днях, 2);
		НДССписанияПервогоМесяца    	= Окр(СуммаНДС * РазностьДатВДнях(ДатаНачалаПолногоМесяцаСписания, ДатаНачалаСписания) / ПериодСписанияВ_Днях, 2);
		НДССписанияПоследнегоМесяца 	= Окр(СуммаНДС * РазностьДатВДнях(ДатаОкончанияСписания, ДатаОкончанияПолногоМесяцаСписания) / ПериодСписанияВ_Днях, 2);
		
		Если КоличествоПолныхМесяцев > 0 Тогда
			СуммаСписанияПолногоМесяца 	= Окр((Сумма - СуммаСписанияПервогоМесяца - СуммаСписанияПоследнегоМесяца) / КоличествоПолныхМесяцев, 2);
			НДССписанияПолногоМесяца 	= Окр((СуммаНДС   - НДССписанияПервогоМесяца   - НДССписанияПоследнегоМесяца) / КоличествоПолныхМесяцев, 2);			
		Иначе
			СуммаСписанияПолногоМесяца = 0;
			НДССписанияПолногоМесяца = 0;
		КонецЕсли;
		
		СуммаСписанияПоследнегоМесяца 	= Сумма - СуммаСписанияПервогоМесяца - СуммаСписанияПолногоМесяца * КоличествоПолныхМесяцев;
		НДССписанияПоследнегоМесяца 	= СуммаНДС   - НДССписанияПервогоМесяца   - НДССписанияПолногоМесяца * КоличествоПолныхМесяцев;		
		
		Если ДатаНачалаПолногоМесяцаСписания > КонецПериода Тогда
			СуммаСписания = СуммаСписанияПервогоМесяца;
			НДССписания   = НДССписанияПервогоМесяца;
		ИначеЕсли ДатаОкончанияПолногоМесяцаСписания < НачалоПериода  Тогда
			СуммаСписания = СуммаСписанияПоследнегоМесяца;
			НДССписания   = НДССписанияПоследнегоМесяца;
		ИначеЕсли КонецПериода = КонецМесяца(ДатаОкончанияСписания) Тогда
			СуммаСписания = СуммаСписанияПолногоМесяца + СуммаСписанияПоследнегоМесяца;
			НДССписания   = НДССписанияПолногоМесяца   + НДССписанияПоследнегоМесяца;
		Иначе
			СуммаСписания = СуммаСписанияПолногоМесяца;
			НДССписания   = НДССписанияПолногоМесяца;
		КонецЕсли;
		
	Иначе
		СуммаСписания = Сумма;
		НДССписания   = СуммаНДС;
	КонецЕсли;
	
	Если СуммаСписания + НДССписания > Остаток Тогда 
		СуммаСписания 	= Окр(Остаток/(СуммаСписания + НДССписания) * СуммаСписания,2);
		НДССписания		= Остаток - СуммаСписания;
	КонецЕсли;		
		
	СтруктураВозврата.Вставить("СуммаСписания", СуммаСписания);
	СтруктураВозврата.Вставить("НДССписания", 	НДССписания);
	                                                 
	Возврат СтруктураВозврата;      
	
КонецФункции // СуммаСписанияЗаМесяц()

// Функция возвращает сумму оборотов по счетам доходов
//
Функция ДоходыБУ()

	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.СуммаОборот КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаН,
		|			&ДатаК,
		|			,
		|			Счет.Временный = ИСТИНА
		|				И Счет.Вид = &Вид,
		|			,
		|			Организация = &Организация,
		|			,
		|			) КАК ХозрасчетныйОбороты";
	Запрос.УстановитьПараметр("ДатаН", НачалоГода(Дата));
	Запрос.УстановитьПараметр("ДатаК", КонецГода(Дата));
	Запрос.УстановитьПараметр("Вид", ВидСчета.Пассивный);
	Запрос.УстановитьПараметр("Организация", Организация);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда	 
		ДоходыБУ = Результат.Сумма;
	Иначе
		ДоходыБУ = 0;
	КонецЕсли;
	Возврат ДоходыБУ;
	
КонецФункции // ДоходыБУ()

// Функция возвращает сумму оборотов по счетам расходов
//
Функция РасходыБУ()

	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.СуммаОборот КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаН,
		|			&ДатаК,
		|			,
		|			Счет.Временный = ИСТИНА
		|				И Счет.Вид = &Вид,
		|			,
		|			Организация = &Организация,
		|			,
		|			) КАК ХозрасчетныйОбороты";
	Запрос.УстановитьПараметр("ДатаН", НачалоГода(Дата));
	Запрос.УстановитьПараметр("ДатаК", КонецГода(Дата));
	Запрос.УстановитьПараметр("Вид", ВидСчета.Активный);
	Запрос.УстановитьПараметр("Организация", Организация);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда	 
		РасходыБУ = Результат.Сумма;
	Иначе
		РасходыБУ = 0;
	КонецЕсли;
	Возврат РасходыБУ;
	
КонецФункции // РасходыБУ()

// Функция возвращает сумму оборотов по счетам доходов с признаком "Постоянные разницы"
//
Функция ПостоянныеРазницыДоходы()
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КорректировкиНУОбороты.СуммаОборот КАК Сумма
		|ИЗ
		|	РегистрНакопления.КорректировкиНУ.Обороты(
		|			&ДатаН,
		|			&ДатаК,
		|			,
		|			Организация = &Организация
		|				И ДоходРасход = &ДоходРасход
		|				И ВидУчета = &ВидУчета) КАК КорректировкиНУОбороты";
	Запрос.УстановитьПараметр("ДатаН", НачалоГода(Дата));
	Запрос.УстановитьПараметр("ДатаК", КонецГода(Дата));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДоходРасход", Перечисления.ПризнакСчета.Доходный);
	Запрос.УстановитьПараметр("ВидУчета", Перечисления.ВидыУчета.ПР);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда	 
		ПРРасходы = Результат.Сумма;
	Иначе
		ПРРасходы = 0;
	КонецЕсли;
	Возврат ПРРасходы;
	
КонецФункции // ПостоянныеРазницыДоходы()

// Функция возвращает сумму оборотов по счетам расходов с признаком "Постоянные разницы"
//
Функция ПостоянныеРазницыРасходы()
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КорректировкиНУОбороты.СуммаОборот КАК Сумма
		|ИЗ
		|	РегистрНакопления.КорректировкиНУ.Обороты(
		|			&ДатаН,
		|			&ДатаК,
		|			,
		|			Организация = &Организация
		|				И ДоходРасход = &ДоходРасход
		|				И ВидУчета = &ВидУчета) КАК КорректировкиНУОбороты";
	Запрос.УстановитьПараметр("ДатаН", НачалоГода(Дата));
	Запрос.УстановитьПараметр("ДатаК", КонецГода(Дата));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДоходРасход", Перечисления.ПризнакСчета.Расходный);
	Запрос.УстановитьПараметр("ВидУчета", Перечисления.ВидыУчета.ПР);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда	 
		ПРДоходы = Результат.Сумма;
	Иначе
		ПРДоходы = 0;
	КонецЕсли;
	Возврат ПРДоходы;
	
КонецФункции // ПостоянныеРазницыРасходы()

// Функция возвращает сумму оборотовКТ по счетам доходов с первым субконто "ОсновныеСредства"
//
Функция АмортизацияБухгалтерская()
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.СуммаОборотКт КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаН,
		|			&ДатаК,
		|			,
		|			Счет В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ПараметрыУчетаОС.СчетУчета
		|				ИЗ
		|					РегистрСведений.ПараметрыУчетаОС КАК ПараметрыУчетаОС),
		|			,
		|			Организация = &Организация,
		|			,
		|			) КАК ХозрасчетныйОбороты";	
	Запрос.УстановитьПараметр("ДатаН", НачалоГода(Дата));
	Запрос.УстановитьПараметр("ДатаК", КонецГода(Дата));
	Запрос.УстановитьПараметр("Организация", Организация);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда	 
		АмортБух = Результат.Сумма;
	Иначе
		АмортБух = 0;
	КонецЕсли;
	Возврат АмортБух;
	
КонецФункции // АмортизацияБухгалтерская()

// Функция возвращает разницу сумм: обороты по счетам доходов с признаком "Временные разницы" минус 
// обороты по счетам расходов с признаком "Временные разницы"
//
Функция ПрочиеВременныеРазницы()

	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КорректировкиНУОбороты.СуммаОборот КАК Сумма
		|ИЗ
		|	РегистрНакопления.КорректировкиНУ.Обороты(
		|			&ДатаН,
		|			&ДатаК,
		|			,
		|			Организация = &Организация
		|				И ДоходРасход = &ДоходРасход
		|				И ВидУчета = &ВидУчета) КАК КорректировкиНУОбороты";	
	Запрос.УстановитьПараметр("ДатаН", НачалоГода(Дата));
	Запрос.УстановитьПараметр("ДатаК", КонецГода(Дата));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДоходРасход", Перечисления.ПризнакСчета.Доходный);
	Запрос.УстановитьПараметр("ВидУчета", Перечисления.ВидыУчета.ВР);
	Результат = Запрос.Выполнить().Выбрать();	
	Если Результат.Следующий() Тогда	 
		СуммаДоходовВР = Результат.Сумма;
	Иначе
		СуммаДоходовВР = 0;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КорректировкиНУОбороты.СуммаОборот КАК Сумма
		|ИЗ
		|	РегистрНакопления.КорректировкиНУ.Обороты(
		|			&ДатаН,
		|			&ДатаК,
		|			,
		|			Организация = &Организация
		|				И ДоходРасход = &ДоходРасход
		|				И ВидУчета = &ВидУчета) КАК КорректировкиНУОбороты";	
	Запрос.УстановитьПараметр("ДатаН", НачалоГода(Дата));
	Запрос.УстановитьПараметр("ДатаК", КонецГода(Дата));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДоходРасход", Перечисления.ПризнакСчета.Расходный);
	Запрос.УстановитьПараметр("ВидУчета", Перечисления.ВидыУчета.ВР);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда	 
		СуммаРасходовВР = Результат.Сумма;
	Иначе
		СуммаРасходовВР = 0;
	КонецЕсли;
	
	Возврат СуммаДоходовВР - СуммаРасходовВР;
КонецФункции // ПрочиеВременныеРазницы()

#КонецОбласти

#КонецЕсли