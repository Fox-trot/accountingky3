#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыПроведенияДокумента

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Дата КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Комментарий КАК Содержание,
	|	ТаблицаДокумента.Дебет КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,  
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	ТаблицаДокумента.Кредит КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	ТаблицаДокумента.СуммаСбора КАК Сумма
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаХозрасчетный", РезультатЗапроса.Выгрузить());
КонецПроцедуры

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НалогНаМусор.Дата,
		|	НалогНаМусор.Организация,
		|	НалогНаМусор.Комментарий,
		|	НалогНаМусор.Дебет,
		|	НалогНаМусор.Кредит,
		|	НалогНаМусор.СуммаСбора
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	Документ.НалогНаМусор КАК НалогНаМусор
		|ГДЕ
		|	НалогНаМусор.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Выполнить();
	
	СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства);
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция -ПолучитьКонтактнуюИнформацию
//
// Параметры:
//  Организация  - Спр.Ссылка - Спр.Органинизации 
// Возвращаемое значение:
//  Структура   - структура данных контактной информации
//
Функция ПолучитьКонтактнуюИнформацию(Организация)
	
	СведенияОбОрганизации = БухгалтерскийУчетСервер.ПолучитьСведенияОбОрганизации(Организация);

	Индекс = СведенияОбОрганизации.Индекс; 
	
	ГородНасПункт   = ?(СведенияОбОрганизации.Город  = "",СведенияОбОрганизации.НаселенныйПункт,СведенияОбОрганизации.Город);
	АдрОбластьГород = ?(СведенияОбОрганизации.Регион = "","",СведенияОбОрганизации.Регион + ",")
		+ ?(СведенияОбОрганизации.Район  = "","", " " + СведенияОбОрганизации.Район + ",") 
		+ ?(ГородНасПункт = "",""," " + ГородНасПункт); 
	АдресОрганизации = ?(СведенияОбОрганизации.Улица    = "","",СведенияОбОрганизации.Улица + ",")
		+ ?(СведенияОбОрганизации.Дом      = "",""," " + СведенияОбОрганизации.Дом + ",")
		+ ?(СведенияОбОрганизации.Корпус   = "",""," " + СведенияОбОрганизации.Корпус + ",")
		+ ?(СведенияОбОрганизации.Квартира = "",""," " + СведенияОбОрганизации.Квартира);
		
	Телефон = СведенияОбОрганизации.Тел;
	
	Структура = Новый Структура("Индекс,АдрОбластьГород,АдресОрганизации,Телефон", Индекс,АдрОбластьГород,АдресОрганизации,Телефон);
	
	Возврат Структура;
	
КонецФункции // ПолучитьАдресОрганизации()

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

Функция ПечатьАктаСписания(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НалогНаМусор.Дата,
		|	НалогНаМусор.СтавкаСбора,
		|	НалогНаМусор.Оплачено,
		|	НалогНаМусор.ЧисленностьСотрудников,
		|	НалогНаМусор.СуммаСбора
		|ИЗ
		|	Документ.НалогНаМусор КАК НалогНаМусор
		|ГДЕ
		|	НалогНаМусор.Ссылка В(&МассивОбъектов)";		
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "НалогНаМусор_НалогНаМусор";
	ТабличныйДокумент.Очистить();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.НалогНаМусор.ПФ_MXL_НалогНаМусор");
	
	Пока Выборка.Следующий() Цикл
		
		//Подготовка данных для извлечения из них необходимого
		Организация				= МассивОбъектов[0].Организация;
		КонтактныеДанные 		= ПолучитьКонтактнуюИнформацию(Организация);
		Руководители 			= БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизаций(Организация, Выборка.Дата);
		
		//Данные для заполнения
		ГНС 					= МассивОбъектов[0].Организация.ГНС;
		МестоРегистрации 		= МассивОбъектов[0].Организация.ГНС;
		НаименованиеОрганизации = МассивОбъектов[0].Организация.НаименованиеПолное;
		ИНН 					= МассивОбъектов[0].Организация.ИНН;
		Адрес	        		= КонтактныеДанные.Индекс + "," + КонтактныеДанные.АдрОбластьГород + ", " + КонтактныеДанные.АдресОрганизации;
		Руководитель 			= Руководители.Руководитель;
		Бухгалтер    			= Руководители.ГлавныйБухгалтер;
		ЗаголовокДаты			= "за " + Формат(Выборка.Дата, "ДФ = 'гггг'")+" г.";
		ОстатокСбора 			= Выборка.СуммаСбора - Выборка.Оплачено;
		
		ДанныеПечати = Новый Структура;
		ДанныеПечати.Вставить("ГНС", ГНС);
		ДанныеПечати.Вставить("МестоРегистрации", МестоРегистрации);
		ДанныеПечати.Вставить("НаименованиеОрганизации", НаименованиеОрганизации);
 		ДанныеПечати.Вставить("ИНН", ИНН);
		ДанныеПечати.Вставить("Адрес", Адрес);
		ДанныеПечати.Вставить("Руководитель", Руководитель);
		ДанныеПечати.Вставить("Бухгалтер", Бухгалтер);
		ДанныеПечати.Вставить("ЗаголовокДаты", ЗаголовокДаты);
		ДанныеПечати.Вставить("ОстатокСбора", ОстатокСбора);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Страница");
		
		ОбластьМакета.Параметры.Заполнить(Выборка);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
			
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НалогНаМусор") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"НалогНаМусор",
		НСтр("ru = 'Налог на мусор'"), 
		ПечатьАктаСписания(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.НалогНаМусор.ПФ_MXL_НалогНаМусор");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "НалогНаМусор";
	КомандаПечати.Представление = НСтр("ru = 'Налог на мусор'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли