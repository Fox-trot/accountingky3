#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура ОбработкаРезультатаЗапросаЛандшафт(ТабличныйДокумент, ПараметрыВыборки)
	Пакет 	= ПараметрыВыборки.Пакет;
	Область = ПараметрыВыборки.Область;
	
	//СерияА4Р = "";
	//СерияА5Р = "";
	//СерияА4П = "";
	//СерияА5П = "";
	//ИнтервалыСерийА4Р = "";
	//ИнтервалыСерийА5Р = "";
	//ИнтервалыСерийА4П = "";
	//ИнтервалыСерийА5П = "";
	ПараметрыИнтервалов = Новый Структура;
	
	ОбщееКолво = 0;
	
	ПредыдущийНомер = -100; // Здесь надо ставить любой заведомо не реальный номер;
	
	ВыборкаСерии = Пакет.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаСерии.Следующий() Цикл
		Серия 					= ВыборкаСерии.Серия;
		//Ручные 					= ВыборкаСерии.Ручные;
		//Формат 					= ВыборкаСерии.Формат;
		НомерОт 				= ВыборкаСерии.БланкНомер;
		ПредыдущийНомер 		= СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ВыборкаСерии.БланкНомер) - 1;
		ПервыйНомерИнтервала	= ВыборкаСерии.БланкНомер;
		ПоследнийНомерИнтервала	= СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ВыборкаСерии.БланкНомер);
		ОбщееКолво 				= ОбщееКолво + ВыборкаСерии.КоличествоВсего;		
		
		//ПараметрыИнтервалов.Вставить("Ручные", Ручные);
		//ПараметрыИнтервалов.Вставить("Формат", Формат);
		//ПараметрыИнтервалов.Вставить("ИнтервалыСерийА4Р", ИнтервалыСерийА4Р);
		//ПараметрыИнтервалов.Вставить("ИнтервалыСерийА5Р", ИнтервалыСерийА5Р);
		//ПараметрыИнтервалов.Вставить("ИнтервалыСерийА4П", ИнтервалыСерийА4П);
		//ПараметрыИнтервалов.Вставить("ИнтервалыСерийА5П", ИнтервалыСерийА5П);
		//ИнтервалыСерии 			= ПолучитьНужныйИнтервалСерий(ПараметрыИнтервалов);
		ПервыйИнтервалСерии 	= Истина;
		ВыборкаНомера 			= ВыборкаСерии.Выбрать();
		//СтруктураИнтервала 		= Новый Структура;
		Пока ВыборкаНомера.Следующий() Цикл
			ПроверяемыйНомер = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ВыборкаНомера.БланкНомер);
			Если ПроверяемыйНомер = (ПредыдущийНомер + 1) Тогда
				ПредыдущийНомер = ПроверяемыйНомер;
				ПоследнийНомерИнтервала = ПроверяемыйНомер;
			Иначе 
				НомерОт 				= ПервыйНомерИнтервала;
				НомерПо 				= СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Строка(ПредыдущийНомер), Символы.НПП, ""), 6, "0", "Слева");				
				//СтруктураИнтервала.Вставить("НомерОт", 				НомерОт);
				//СтруктураИнтервала.Вставить("НомерПо", 				НомерПо);
				//СтруктураИнтервала.Вставить("Серия", 				Серия);
				//СтруктураИнтервала.Вставить("ПервыйИнтервалСерии", 	ПервыйИнтервалСерии);
				//ДобавитьИнтервал(ИнтервалыСерии, СтруктураИнтервала);
				ПредыдущийНомер			= СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ВыборкаНомера.БланкНомер);
				ПервыйНомерИнтервала	= ВыборкаНомера.БланкНомер;
				ПервыйИнтервалСерии = Ложь;
			КонецЕсли;
		
		КонецЦикла;
		НомерОт = ПервыйНомерИнтервала;
		НомерПо = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Строка(ПредыдущийНомер), Символы.НПП, ""), 6, "0", "Слева");
		//СтруктураИнтервала.Вставить("НомерОт", 				НомерОт);
		//СтруктураИнтервала.Вставить("НомерПо", 				НомерПо);
		//СтруктураИнтервала.Вставить("Серия", 				Серия);
		//СтруктураИнтервала.Вставить("ПервыйИнтервалСерии", 	ПервыйИнтервалСерии);
		//ДобавитьИнтервал(ИнтервалыСерии, СтруктураИнтервала);
		
		СерияСтр = Серия + "-" + ВыборкаСерии.КоличествоВсего;
		//Если Ручные Тогда
		//	Если Формат = Перечисления.ФорматыБланковСФ.А4 Тогда
		//		ИнтервалыСерийА4Р = ИнтервалыСерии;
		//		СерияА4Р = ?(ЗначениеЗаполнено(СерияА4Р), СерияА4Р + ", " + СерияСтр, СерияСтр);
		//	Иначе
		//		ИнтервалыСерийА5Р = ИнтервалыСерии;
		//		СерияА5Р = ?(ЗначениеЗаполнено(СерияА5Р), СерияА5Р + ", " + СерияСтр, СерияСтр);
		//	КонецЕсли;			
		//Иначе
		//	Если Формат = Перечисления.ФорматыБланковСФ.А4 Тогда
		//		ИнтервалыСерийА4П = ИнтервалыСерии;
		//		СерияА4П = ?(ЗначениеЗаполнено(СерияА4П), СерияА4Р + ", " + СерияСтр, СерияСтр);
		//	Иначе
		//		ИнтервалыСерийА5П = ИнтервалыСерии;
		//		СерияА5П = ?(ЗначениеЗаполнено(СерияА5П), СерияА5П + ", " + СерияСтр, СерияСтр);				
		//	КонецЕсли;		
		//КонецЕсли;	
		
	КонецЦикла; // Конец серии
	
	ПараметрыВыборки.Область.Параметры.Всего 		= ОбщееКолво;
	//ПараметрыВыборки.Область.Параметры.СерияА4Р 	= СерияА4Р;
	//ПараметрыВыборки.Область.Параметры.НомераА4Р 	= ИнтервалыСерийА4Р;
	//ПараметрыВыборки.Область.Параметры.СерияА5Р 	= СерияА5Р;
	//ПараметрыВыборки.Область.Параметры.НомераА5Р 	= ИнтервалыСерийА5Р;
	//ПараметрыВыборки.Область.Параметры.СерияА4П 	= СерияА4П;
	//ПараметрыВыборки.Область.Параметры.НомераА4П 	= ИнтервалыСерийА4П;
	//ПараметрыВыборки.Область.Параметры.СерияА5П 	= СерияА5П;
	//ПараметрыВыборки.Область.Параметры.НомераА5П 	= ИнтервалыСерийА5П;	

	ТабличныйДокумент.Вывести(ПараметрыВыборки.Область);
	
КонецПроцедуры

Процедура ОбработкаРезультатаЗапросаПодробный(ТабличныйДокумент, Макет, ПараметрыВыборки)
	Пакет 			= ПараметрыВыборки.Пакет;
	ОбластьГруппы 	= Макет.ПолучитьОбласть("Группа");
	ОбластьГруппы.Параметры.Заполнить(ПараметрыВыборки);
	
	ВыборкаГруппы 	= Пакет.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
	
	Если ВыборкаГруппы.Количество() = 0 Тогда
		ТабличныйДокумент.Вывести(ОбластьГруппы);
	    Возврат;
	КонецЕсли;
	
	Пока ВыборкаГруппы.Следующий() Цикл	
		ОбластьГруппы.Параметры.Заполнить(ВыборкаГруппы);
		ТабличныйДокумент.Вывести(ОбластьГруппы);

		ВыборкаНомера 			= ВыборкаГруппы.Выбрать();		
		Пока ВыборкаНомера.Следующий() Цикл
			ОбластьДетали 	= Макет.ПолучитьОбласть("Детали");
			ОбластьДетали.Параметры.Заполнить(ВыборкаНомера);
			ОбластьДетали.Параметры.СтрокаНомеров = ВыборкаНомера.Серия + " " + ВыборкаНомера.БланкНомер;
			ТабличныйДокумент.Вывести(ОбластьДетали);			
		КонецЦикла;
		
	КонецЦикла; 
	
КонецПроцедуры

// Процедура - Вывод области детали
//
// Параметры:
//  ТабличныйДокумент				 - 	 - 
//  Макет				 - 	 - 
//  НомерЯчейки			 - 	 - 
//  НомерСтраницы		 - 	 - 
//  ОбщееКолвоПозиций	 - 	 - 
//  КоличествоВыделенных		 - 	 - 
//  Количество			 - 	 - 
//  НомерСтроки			 - 	 - 
//  Заключительный		 - 	 - 
//
Процедура ВыводОбластиДетали(ТабличныйДокумент, Макет, ОбластьДетали, НомерЯчейки, НомерСтраницы, ОбщееКолвоПозиций, КоличествоВыделенных, Количество, НомерСтроки, Заключительный)

	ОбластьИтого 			= Макет.ПолучитьОбласть("Итоги");
	ОбластьПодвал 			= Макет.ПолучитьОбласть("Подвал");
	ОбластьПодпись			= Макет.ПолучитьОбласть("Подпись");
	ОбластьНомерЛиста		= Макет.ПолучитьОбласть("НомерЛиста");
	ОбластьНомерЗаклЛиста	= Макет.ПолучитьОбласть("НомерЗаклЛиста");
	ОбластьЗаголовок		= Макет.ПолучитьОбласть("Заголовок");
	
	ОбластьДетали.Параметры.Ном1 = НомерЯчейки + 1;
	ОбластьДетали.Параметры.Ном2 = НомерЯчейки + 2;
	ОбластьДетали.Параметры.Ном3 = НомерЯчейки + 3;
	ОбластьДетали.Параметры.Ном4 = НомерЯчейки + 4;

	НомерЯчейки = НомерЯчейки + 4;
	
	ОбластьДетали.Параметры.Количество 	= СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ОбластьДетали.Параметры.НомерПо) - СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ОбластьДетали.Параметры.НомерОт) + 1;
	Количество = Количество + ОбластьДетали.Параметры.Количество;
	
	НомерСтроки = НомерСтроки + 1;
	КоличествоВыделенных = КоличествоВыделенных + 1;
	ТабличныйДокумент.Вывести(ОбластьДетали);
	
	// Вывод нового листа <<
	Если НомерСтраницы = 1 и НомерСтроки = 17 ИЛИ НомерСтроки = 24 Тогда
		Если (ОбщееКолвоПозиций - КоличествоВыделенных) < 24 Тогда 
			Заключительный = Истина
		КонецЕсли;
		
		НомерЯчейки = НомерЯчейки + 1;
		ОбластьИтого.Параметры.Ном = НомерЯчейки;
		ОбластьИтого.Параметры.Количество = Количество;
		ТабличныйДокумент.Вывести(ОбластьИтого);
		
		Если НомерСтраницы <> 1 Тогда 
			ТабличныйДокумент.Вывести(ОбластьПодпись);
		Иначе 
			ТабличныйДокумент.Вывести(ОбластьПодвал);
		КонецЕсли;
							
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		НомерСтраницы = НомерСтраницы + 1;
		Если Не Заключительный Тогда
			
			Если СтрДлина(Формат(НомерСтраницы,"ЧГ=0")) = 1 Тогда
				ОбластьНомерЛиста.Параметры.НомерЛиста1 = "0";
				ОбластьНомерЛиста.Параметры.НомерЛиста2 = "0";
				ОбластьНомерЛиста.Параметры.НомерЛиста3 = НомерСтраницы;
			ИначеЕсли СтрДлина(Формат(НомерСтраницы,"ЧГ=0")) = 2 Тогда
				ОбластьНомерЛиста.Параметры.НомерЛиста1 = "0";
				ОбластьНомерЛиста.Параметры.НомерЛиста2 = Сред(НомерСтраницы, 1,1);
				ОбластьНомерЛиста.Параметры.НомерЛиста3 = Сред(НомерСтраницы, 2,1);
			ИначеЕсли СтрДлина(Формат(НомерСтраницы,"ЧГ=0")) = 3 Тогда
				ОбластьНомерЛиста.Параметры.НомерЛиста1 = Сред(НомерСтраницы, 1,1);
				ОбластьНомерЛиста.Параметры.НомерЛиста2 = Сред(НомерСтраницы, 2,1);
				ОбластьНомерЛиста.Параметры.НомерЛиста3 = Сред(НомерСтраницы, 3,1);
			КонецЕсли;				
			ТабличныйДокумент.Вывести(ОбластьНомерЛиста);
			
		Иначе
			
			Если СтрДлина(Формат(НомерСтраницы,"ЧГ=0")) = 1 Тогда
				ОбластьНомерЗаклЛиста.Параметры.НомерЛиста1 = "0";
				ОбластьНомерЗаклЛиста.Параметры.НомерЛиста2 = "0";
				ОбластьНомерЗаклЛиста.Параметры.НомерЛиста3 = НомерСтраницы;
			ИначеЕсли СтрДлина(Формат(НомерСтраницы,"ЧГ=0")) = 2 Тогда
				ОбластьНомерЗаклЛиста.Параметры.НомерЛиста1 = "0";
				ОбластьНомерЗаклЛиста.Параметры.НомерЛиста2 = Сред(НомерСтраницы, 1,1);
				ОбластьНомерЗаклЛиста.Параметры.НомерЛиста3 = Сред(НомерСтраницы, 2,1);
			ИначеЕсли СтрДлина(Формат(НомерСтраницы,"ЧГ=0")) = 3 Тогда
				ОбластьНомерЗаклЛиста.Параметры.НомерЛиста1 = Сред(НомерСтраницы, 1,1);
				ОбластьНомерЗаклЛиста.Параметры.НомерЛиста2 = Сред(НомерСтраницы, 2,1);
				ОбластьНомерЗаклЛиста.Параметры.НомерЛиста3 = Сред(НомерСтраницы, 3,1);
			КонецЕсли;				
			ТабличныйДокумент.Вывести(ОбластьНомерЗаклЛиста);
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		НомерСтроки = 1;
		кол = 0;
	КонецЕсли;
	
	// >> Вывод нового листа	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция -ПолучитьКонтактнуюИнформацию
//
// Параметры:
//  Организация  - Спр.Ссылка - Спр.Органинизации 
// Возвращаемое значение:
//  Структура   - структура данных контактной информации
//
Функция ПолучитьКонтактнуюИнформацию(Организация)
	
	СведенияОбОрганизации = БухгалтерскийУчетСервер.ПолучитьСведенияОбОрганизации(Организация);

	Индекс = СведенияОбОрганизации.Индекс; 
	
	ГородНасПункт   = ?(СведенияОбОрганизации.Город  = "",СведенияОбОрганизации.НаселенныйПункт,СведенияОбОрганизации.Город);
	АдрОбластьГород = ?(СведенияОбОрганизации.Регион = "","",СведенияОбОрганизации.Регион + ",")
		+ ?(СведенияОбОрганизации.Район  = "","", " " + СведенияОбОрганизации.Район + ",") 
		+ ?(ГородНасПункт = "",""," " + ГородНасПункт); 
	АдресОрганизации = ?(СведенияОбОрганизации.Улица    = "","",СведенияОбОрганизации.Улица + ",")
		+ ?(СведенияОбОрганизации.Дом      = "",""," " + СведенияОбОрганизации.Дом + ",")
		+ ?(СведенияОбОрганизации.Корпус   = "",""," " + СведенияОбОрганизации.Корпус + ",")
		+ ?(СведенияОбОрганизации.Квартира = "",""," " + СведенияОбОрганизации.Квартира);
		
	Телефон = СведенияОбОрганизации.Тел;
	
	Структура = Новый Структура("Индекс,АдрОбластьГород,АдресОрганизации,Телефон", Индекс,АдрОбластьГород,АдресОрганизации,Телефон);
	
	Возврат Структура;
	
КонецФункции // ПолучитьАдресОрганизации()

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой ОтчетОбИспользованииБланков
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьОтчетаОбИспользованииБланков(МассивОбъектов, ОбъектыПечати)
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать = Истина;
	ТабличныйДокумент.ПолеСлева = 0;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоБланкамСчетовФактур_ОтчетОбИспользованииБланков";
	
	Запрос = Новый Запрос;
	Запрос.Текст =		
		"ВЫБРАТЬ
		|	БланкиСФОстатки.Ссылка,
		|	БланкиСФОстатки.Ссылка.Организация,
		|	БланкиСФОстатки.Ссылка.Дата,
		|	СУММА(БланкиСФОстатки.Количество) КАК КоличествоОстаток
		//|	БланкиСФОстатки.Серия.Ручные КАК Ручные,
		//|	БланкиСФОстатки.Серия.Формат КАК Формат
		|ПОМЕСТИТЬ Остатки_КонецПериода
		|ИЗ
		|	Документ.ОтчетПоБланкамСчетовФактур.БланкиСФОстатки КАК БланкиСФОстатки
		|ГДЕ
		|	БланкиСФОстатки.Ссылка В(&МассивОбъектов)
		|	И БланкиСФОстатки.Содержание ПОДОБНО ""На конец месяца""
		|
		|СГРУППИРОВАТЬ ПО
		|	БланкиСФОстатки.Ссылка,
		|	БланкиСФОстатки.Ссылка.Организация,
		|	БланкиСФОстатки.Ссылка.Дата
		//|	БланкиСФОстатки.Серия.Ручные,
		//|	БланкиСФОстатки.Серия.Формат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БланкиСФОстатки.Ссылка,
		|	БланкиСФОстатки.Ссылка.Организация,
		|	БланкиСФОстатки.Ссылка.Дата,
		|	СУММА(БланкиСФОстатки.Количество) КАК КоличествоОстаток
		//|	БланкиСФОстатки.Серия.Ручные КАК Ручные,
		//|	БланкиСФОстатки.Серия.Формат КАК Формат
		|ПОМЕСТИТЬ Остатки_НачалоПериода
		|ИЗ
		|	Документ.ОтчетПоБланкамСчетовФактур.БланкиСФОстатки КАК БланкиСФОстатки
		|ГДЕ
		|	БланкиСФОстатки.Ссылка В(&МассивОбъектов)
		|	И БланкиСФОстатки.Содержание ПОДОБНО ""На начало месяца""
		|
		|СГРУППИРОВАТЬ ПО
		|	БланкиСФОстатки.Ссылка,
		|	БланкиСФОстатки.Ссылка.Организация,
		|	БланкиСФОстатки.Ссылка.Дата
		//|	БланкиСФОстатки.Серия.Ручные,
		//|	БланкиСФОстатки.Серия.Формат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БланкиСФОбороты.Ссылка,
		|	БланкиСФОбороты.Ссылка.Организация,
		|	БланкиСФОбороты.Ссылка.Дата,
		|	БланкиСФОбороты.Операция,
		|	ВЫБОР
		|		КОГДА БланкиСФОбороты.Количество > 0
		|			ТОГДА БланкиСФОбороты.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоПриход,
		|	ВЫБОР
		|		КОГДА БланкиСФОбороты.Количество >= 0
		|			ТОГДА 0
		|		ИНАЧЕ -БланкиСФОбороты.Количество
		|	КОНЕЦ КАК КоличествоРасход
		//|	БланкиСФОбороты.Серия.Ручные КАК Ручные,
		//|	БланкиСФОбороты.Серия.Формат КАК Формат
		|ПОМЕСТИТЬ Обороты
		|ИЗ
		|	Документ.ОтчетПоБланкамСчетовФактур.БланкиСФОбороты КАК БланкиСФОбороты
		|ГДЕ
		|	БланкиСФОбороты.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(Обороты.Ссылка, ЕСТЬNULL(Остатки_КонецПериода.Ссылка, Остатки_НачалоПериода.Ссылка)) КАК Ссылка,
		|	ЕСТЬNULL(Обороты.Организация, ЕСТЬNULL(Остатки_КонецПериода.Организация, Остатки_НачалоПериода.Организация)) КАК Организация,
		|	ЕСТЬNULL(Обороты.Дата, ЕСТЬNULL(Остатки_КонецПериода.Дата, Остатки_НачалоПериода.Дата)) КАК Дата,
		|	СУММА(Остатки_НачалоПериода.КоличествоОстаток) КАК ОстатокНРА4,
		|	МАКСИМУМ(Остатки_НачалоПериода.КоличествоОстаток) КАК ОстатокНПА4,
		|	СУММА(Остатки_НачалоПериода.КоличествоОстаток) КАК ОстатокНРА5,
		|	МАКСИМУМ(Остатки_НачалоПериода.КоличествоОстаток) КАК ОстатокНПА5,
		|	МАКСИМУМ(Остатки_НачалоПериода.КоличествоОстаток) КАК ОстатокНВсего,
		|	СУММА(Остатки_КонецПериода.КоличествоОстаток) КАК ОстатокКРА4,
		|	МАКСИМУМ(Остатки_КонецПериода.КоличествоОстаток) КАК ОстатокКПА4,
		|	СУММА(Остатки_КонецПериода.КоличествоОстаток) КАК ОстатокКРА5,
		|	МАКСИМУМ(Остатки_КонецПериода.КоличествоОстаток) КАК ОстатокКПА5,
		|	МАКСИМУМ(Остатки_КонецПериода.КоличествоОстаток) КАК ОстатокКВсего,
		|	СУММА(Обороты.КоличествоПриход) КАК ПолученоРА5,
		|	МАКСИМУМ(Обороты.КоличествоПриход) КАК ПолученоПА5,
		|	СУММА(Обороты.КоличествоПриход) КАК ПолученоРА4,
		|	МАКСИМУМ(Обороты.КоличествоПриход) КАК ПолученоПА4,
		|	МАКСИМУМ(Обороты.КоличествоПриход) КАК ПолученоВсего,
		|	СУММА(ВЫБОР
		|			КОГДА Обороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ИспользованиеБланковСФ)
		|				ТОГДА Обороты.КоличествоРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ИспользованоВсего,
		|	СУММА(ВЫБОР
		|			КОГДА Обороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ИспользованиеБланковСФ)
		//|					И Обороты.Ручные
		//|					И Обороты.Формат = ЗНАЧЕНИЕ(Перечисление.ФорматыБланковСФ.А5)
		|				ТОГДА Обороты.КоличествоРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ИспользованоРА5,
		|	СУММА(ВЫБОР
		|			КОГДА Обороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ИспользованиеБланковСФ)
		//|					И НЕ Обороты.Ручные
		//|					И Обороты.Формат = ЗНАЧЕНИЕ(Перечисление.ФорматыБланковСФ.А5)
		|				ТОГДА Обороты.КоличествоРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ИспользованоПА5,
		|	СУММА(ВЫБОР
		|			КОГДА Обороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ИспользованиеБланковСФ)
		//|					И Обороты.Ручные
		//|					И Обороты.Формат = ЗНАЧЕНИЕ(Перечисление.ФорматыБланковСФ.А4)
		|				ТОГДА Обороты.КоличествоРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ИспользованоРА4,
		|	СУММА(ВЫБОР
		|			КОГДА Обороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ИспользованиеБланковСФ)
		//|					И НЕ Обороты.Ручные
		//|					И Обороты.Формат = ЗНАЧЕНИЕ(Перечисление.ФорматыБланковСФ.А4)
		|				ТОГДА Обороты.КоличествоРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ИспользованоПА4,
		|	СУММА(ВЫБОР
		|			КОГДА Обороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ПорчаБланковСФ)
		|				ТОГДА Обороты.КоличествоРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ИспорченоВсего,
		|	СУММА(ВЫБОР
		|			КОГДА Обороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ПорчаБланковСФ)
		//|					И Обороты.Ручные
		//|					И Обороты.Формат = ЗНАЧЕНИЕ(Перечисление.ФорматыБланковСФ.А5)
		|				ТОГДА Обороты.КоличествоРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ИспорченоРА5,
		|	СУММА(ВЫБОР
		|			КОГДА Обороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ПорчаБланковСФ)
		//|					И НЕ Обороты.Ручные
		//|					И Обороты.Формат = ЗНАЧЕНИЕ(Перечисление.ФорматыБланковСФ.А5)
		|				ТОГДА Обороты.КоличествоРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ИспорченоПА5,
		|	СУММА(ВЫБОР
		|			КОГДА Обороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ПорчаБланковСФ)
		//|					И Обороты.Ручные
		//|					И Обороты.Формат = ЗНАЧЕНИЕ(Перечисление.ФорматыБланковСФ.А4)
		|				ТОГДА Обороты.КоличествоРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ИспорченоРА4,
		|	СУММА(ВЫБОР
		|			КОГДА Обороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ПорчаБланковСФ)
		//|					И НЕ Обороты.Ручные
		//|					И Обороты.Формат = ЗНАЧЕНИЕ(Перечисление.ФорматыБланковСФ.А4)
		|				ТОГДА Обороты.КоличествоРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ИспорченоПА4,
		|	СУММА(ВЫБОР
		|			КОГДА Обороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.УтеряБланковСФ)
		|				ТОГДА Обороты.КоличествоРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК УтеряноВсего,
		|	СУММА(ВЫБОР
		|			КОГДА Обороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.УтеряБланковСФ)
		//|					И Обороты.Ручные
		//|					И Обороты.Формат = ЗНАЧЕНИЕ(Перечисление.ФорматыБланковСФ.А5)
		|				ТОГДА Обороты.КоличествоРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК УтеряноРА5,
		|	СУММА(ВЫБОР
		|			КОГДА Обороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.УтеряБланковСФ)
		//|					И НЕ Обороты.Ручные
		//|					И Обороты.Формат = ЗНАЧЕНИЕ(Перечисление.ФорматыБланковСФ.А5)
		|				ТОГДА Обороты.КоличествоРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК УтеряноПА5,
		|	СУММА(ВЫБОР
		|			КОГДА Обороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.УтеряБланковСФ)
		//|					И Обороты.Ручные
		//|					И Обороты.Формат = ЗНАЧЕНИЕ(Перечисление.ФорматыБланковСФ.А4)
		|				ТОГДА Обороты.КоличествоРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК УтеряноРА4,
		|	СУММА(ВЫБОР
		|			КОГДА Обороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.УтеряБланковСФ)
		//|					И НЕ Обороты.Ручные
		//|					И Обороты.Формат = ЗНАЧЕНИЕ(Перечисление.ФорматыБланковСФ.А4)
		|				ТОГДА Обороты.КоличествоРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК УтеряноПА4,
		|	СУММА(ВЫБОР
		|			КОГДА Обороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ПроизводственныйБракБланковСФ)
		//|					И Обороты.Ручные
		//|					И Обороты.Формат = ЗНАЧЕНИЕ(Перечисление.ФорматыБланковСФ.А5)
		|				ТОГДА Обороты.КоличествоРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК БракРА5,
		|	СУММА(ВЫБОР
		|			КОГДА Обороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ПроизводственныйБракБланковСФ)
		//|					И НЕ Обороты.Ручные
		//|					И Обороты.Формат = ЗНАЧЕНИЕ(Перечисление.ФорматыБланковСФ.А5)
		|				ТОГДА Обороты.КоличествоРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК БракПА5,
		|	СУММА(ВЫБОР
		|			КОГДА Обороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ПроизводственныйБракБланковСФ)
		//|					И Обороты.Ручные
		//|					И Обороты.Формат = ЗНАЧЕНИЕ(Перечисление.ФорматыБланковСФ.А4)
		|				ТОГДА Обороты.КоличествоРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК БракРА4,
		|	СУММА(ВЫБОР
		|			КОГДА Обороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ПроизводственныйБракБланковСФ)
		//|					И НЕ Обороты.Ручные
		//|					И Обороты.Формат = ЗНАЧЕНИЕ(Перечисление.ФорматыБланковСФ.А4)
		|				ТОГДА Обороты.КоличествоРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК БракПА4,
		|	СУММА(ВЫБОР
		|			КОГДА Обороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ПроизводственныйБракБланковСФ)
		|				ТОГДА Обороты.КоличествоРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК БракВсего
		|ИЗ
		|	Обороты КАК Обороты
		|		ПОЛНОЕ СОЕДИНЕНИЕ Остатки_КонецПериода КАК Остатки_КонецПериода
		|		ПО Обороты.Ссылка = Остатки_КонецПериода.Ссылка
		|		ПОЛНОЕ СОЕДИНЕНИЕ Остатки_НачалоПериода КАК Остатки_НачалоПериода
		|		ПО Обороты.Ссылка = Остатки_НачалоПериода.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(Обороты.Ссылка, ЕСТЬNULL(Остатки_КонецПериода.Ссылка, Остатки_НачалоПериода.Ссылка)),
		|	ЕСТЬNULL(Обороты.Организация, ЕСТЬNULL(Остатки_КонецПериода.Организация, Остатки_НачалоПериода.Организация)),
		|	ЕСТЬNULL(Обороты.Дата, ЕСТЬNULL(Остатки_КонецПериода.Дата, Остатки_НачалоПериода.Дата))
		|ИТОГИ
		|	МАКСИМУМ(Организация),
		|	МАКСИМУМ(Дата)
		|ПО
		|	Ссылка";
		
	Запрос.УстановитьПараметр("МассивОбъектов",	МассивОбъектов);
	РезультатЗапроса = Запрос.Выполнить();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоБланкамСчетовФактур.ПФ_MXL_ОтчетОбИспользованииБланков");
	ОбластьШапка	= Макет.ПолучитьОбласть("Шапка");
	
	Шапка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
		Организация = Шапка.Организация;
		НачалоПериода = НачалоМесяца(Шапка.Дата);
		КонецПериода = КонецМесяца(Шапка.Дата);
		
		ОКПО              				= Организация.КодПоОКПО;
		ИНН 							= Организация.ИНН;
		КодГНС 							= Организация.ГНС.Код;
		ОрганизацияНаменованиеПолное    = Организация.НаименованиеПолное;
		
		КонтактныеДанные = ПолучитьКонтактнуюИнформацию(Организация);
	
		Индекс           = КонтактныеДанные.Индекс;
		АдрОбластьГород  = КонтактныеДанные.АдрОбластьГород;
		ЮрАдрес	         = КонтактныеДанные.АдресОрганизации; 
		Телефон		     = КонтактныеДанные.Телефон;
		НомерЯйки = 210;	

		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		ОбластьШапка.Параметры.НаименованиеОрганизации = ОрганизацияНаменованиеПолное;
		Если ЗначениеЗаполнено(АдрОбластьГород) Тогда 
			ОбластьШапка.Параметры.Область = АдрОбластьГород;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЮрАдрес) Тогда 
			ОбластьШапка.Параметры.Адрес = ЮрАдрес;
		КонецЕсли;
		
		ОбластьШапка.Параметры.Телефон = Телефон;
		
		Если ЗначениеЗаполнено(Индекс) ТОгда
			ОбластьШапка.Параметры.ИНД1 = Сред(Индекс,1,1);
			ОбластьШапка.Параметры.ИНД2 = Сред(Индекс,2,1);
			ОбластьШапка.Параметры.ИНД3 = Сред(Индекс,3,1);
			ОбластьШапка.Параметры.ИНД4 = Сред(Индекс,4,1);
			ОбластьШапка.Параметры.ИНД5 = Сред(Индекс,5,1);
			ОбластьШапка.Параметры.ИНД6 = Сред(Индекс,6,1);
		КонецЕсли;

		Если ЗначениеЗаполнено(ОКПО) Тогда 
			ОбластьШапка.Параметры.ОКПО1 = Сред(ОКПО,1,1);
			ОбластьШапка.Параметры.ОКПО2 = Сред(ОКПО,2,1);
			ОбластьШапка.Параметры.ОКПО3 = Сред(ОКПО,3,1);
			ОбластьШапка.Параметры.ОКПО4 = Сред(ОКПО,4,1);
			ОбластьШапка.Параметры.ОКПО5 = Сред(ОКПО,5,1);
			ОбластьШапка.Параметры.ОКПО6 = Сред(ОКПО,6,1);
			ОбластьШапка.Параметры.ОКПО7 = Сред(ОКПО,7,1);
			ОбластьШапка.Параметры.ОКПО8 = Сред(ОКПО,8,1);
		КонецЕсли;
		
		ОбластьШапка.Параметры.ИНН1 = Сред(ИНН, 1, 1);
		ОбластьШапка.Параметры.ИНН2 = Сред(ИНН, 2, 1);
		ОбластьШапка.Параметры.ИНН3 = Сред(ИНН, 3, 1);                           
		ОбластьШапка.Параметры.ИНН4 = Сред(ИНН, 4, 1);
		ОбластьШапка.Параметры.ИНН5 = Сред(ИНН, 5, 1);
		ОбластьШапка.Параметры.ИНН6 = Сред(ИНН, 6, 1);
		ОбластьШапка.Параметры.ИНН7 = Сред(ИНН, 7, 1);
		ОбластьШапка.Параметры.ИНН8 = Сред(ИНН, 8, 1);
		ОбластьШапка.Параметры.ИНН9 = Сред(ИНН, 9, 1);
		ОбластьШапка.Параметры.ИНН10 = Сред(ИНН, 10, 1);
		ОбластьШапка.Параметры.ИНН11 = Сред(ИНН, 11, 1);
		ОбластьШапка.Параметры.ИНН12 = Сред(ИНН, 12, 1);
		ОбластьШапка.Параметры.ИНН13 = Сред(ИНН, 13, 1);
		ОбластьШапка.Параметры.ИНН14 = Сред(ИНН, 14, 1);
		
		ОбластьШапка.Параметры.НаименованиеНалоговой = Организация.ГНС;
		
		ОбластьШапка.Параметры.Код1 = Сред(КодГНС, 1, 1);
		ОбластьШапка.Параметры.Код2 = Сред(КодГНС, 2, 1);
		ОбластьШапка.Параметры.Код3 = Сред(КодГНС, 3, 1);
		
		ОбластьШапка.Параметры.ДН1 = Сред(НачалоПериода, 1, 1);	
		ОбластьШапка.Параметры.ДН2 = Сред(НачалоПериода, 2, 1);	
		ОбластьШапка.Параметры.ДН3 = Сред(НачалоПериода, 4, 1);	
		ОбластьШапка.Параметры.ДН4 = Сред(НачалоПериода, 5, 1);	
		ОбластьШапка.Параметры.ДН5 = Сред(НачалоПериода, 7, 1);	
		ОбластьШапка.Параметры.ДН6 = Сред(НачалоПериода, 8, 1);	
		ОбластьШапка.Параметры.ДН7 = Сред(НачалоПериода, 9, 1);	
		ОбластьШапка.Параметры.ДН8 = Сред(НачалоПериода, 10, 1);	
		
		ОбластьШапка.Параметры.ДК1 = Сред(КонецПериода, 1, 1);	
		ОбластьШапка.Параметры.ДК2 = Сред(КонецПериода, 2, 1);	
		ОбластьШапка.Параметры.ДК3 = Сред(КонецПериода, 4, 1);	
		ОбластьШапка.Параметры.ДК4 = Сред(КонецПериода, 5, 1);	
		ОбластьШапка.Параметры.ДК5 = Сред(КонецПериода, 7, 1);	
		ОбластьШапка.Параметры.ДК6 = Сред(КонецПериода, 8, 1);	
		ОбластьШапка.Параметры.ДК7 = Сред(КонецПериода, 9, 1);	
		ОбластьШапка.Параметры.ДК8 = Сред(КонецПериода, 10, 1);
		
		ОбластьТаблица	= Макет.ПолучитьОбласть("Таблица");						
		
		// 1. Остатки на начало
		Выборка = Шапка.Выбрать();
		Если Выборка.Следующий() Тогда
			ОбластьТаблица.Параметры.Заполнить(Выборка);
		КонецЕсли;
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		ТабличныйДокумент.Вывести(ОбластьТаблица);
		ТабличныйДокумент.Вывести(ОбластьПодвал);		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой ОтчетОбИспользованииБланковЛандшафт
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьОтчетаОбИспользованииБланковЛандшафт(МассивОбъектов, ОбъектыПечати)
	Для каждого ДокументСсылка Из МассивОбъектов Цикл	
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		ТабличныйДокумент.ЧерноБелаяПечать = Истина;
		ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоБланкамСчетовФактур_ОтчетОбИспользованииБланковЛандшафт";
		
		Организация = ДокументСсылка.Организация;
		НачалоПериода = НачалоМесяца(ДокументСсылка.Дата);
		КонецПериода = КонецМесяца(ДокументСсылка.Дата);
		
		Макет = ПолучитьМакет("ПФ_MXL_ОтчетОбИспользованииБланковЛандшафт");

		ИНН 							= Организация.ИНН;
		КодГНС 							= Организация.ГНС.Код;
		ОрганизацияНаменованиеПолное    = Организация.НаименованиеПолное;

		ОбластьШапка					= Макет.ПолучитьОбласть("Шапка");	
		ОбластьОстатокНачало			= Макет.ПолучитьОбласть("ОстатокНачало");
		ОбластьПолучено					= Макет.ПолучитьОбласть("Получено");
		ОбластьИспользовано				= Макет.ПолучитьОбласть("Использовано");
		ОбластьУтеряно					= Макет.ПолучитьОбласть("Утеряно");
		ОбластьИспорчено				= Макет.ПолучитьОбласть("Испорчено");
		ОбластьПроизводственныйБрак		= Макет.ПолучитьОбласть("ПроизводственныйБрак");
		ОбластьОстатокКонец				= Макет.ПолучитьОбласть("ОстатокКонец");
		ОбластьПодвал					= Макет.ПолучитьОбласть("Подвал");
		
		ОбластьШапка.Параметры.НаменованиеОрганизации = ОрганизацияНаменованиеПолное;
		
		ОбластьШапка.Параметры.ИНН1 = Сред(ИНН, 1, 1);
		ОбластьШапка.Параметры.ИНН2 = Сред(ИНН, 2, 1);
		ОбластьШапка.Параметры.ИНН3 = Сред(ИНН, 3, 1);                           
		ОбластьШапка.Параметры.ИНН4 = Сред(ИНН, 4, 1);
		ОбластьШапка.Параметры.ИНН5 = Сред(ИНН, 5, 1);
		ОбластьШапка.Параметры.ИНН6 = Сред(ИНН, 6, 1);
		ОбластьШапка.Параметры.ИНН7 = Сред(ИНН, 7, 1);
		ОбластьШапка.Параметры.ИНН8 = Сред(ИНН, 8, 1);
		ОбластьШапка.Параметры.ИНН9 = Сред(ИНН, 9, 1);
		ОбластьШапка.Параметры.ИНН10 = Сред(ИНН, 10, 1);
		ОбластьШапка.Параметры.ИНН11 = Сред(ИНН, 11, 1);
		ОбластьШапка.Параметры.ИНН12 = Сред(ИНН, 12, 1);
		ОбластьШапка.Параметры.ИНН13 = Сред(ИНН, 13, 1);
		ОбластьШапка.Параметры.ИНН14 = Сред(ИНН, 14, 1);
		
		ОбластьШапка.Параметры.НаименованиеНалоговой = Организация.ГНС;
		
		ОбластьШапка.Параметры.Код1 = Сред(КодГНС, 1, 1);
		ОбластьШапка.Параметры.Код2 = Сред(КодГНС, 2, 1);
		ОбластьШапка.Параметры.Код3 = Сред(КодГНС, 3, 1);
		
		ОбластьШапка.Параметры.ДН1 = Сред(НачалоПериода, 1, 1);	
		ОбластьШапка.Параметры.ДН2 = Сред(НачалоПериода, 2, 1);	
		ОбластьШапка.Параметры.ДН3 = Сред(НачалоПериода, 4, 1);	
		ОбластьШапка.Параметры.ДН4 = Сред(НачалоПериода, 5, 1);	
		ОбластьШапка.Параметры.ДН5 = Сред(НачалоПериода, 7, 1);	
		ОбластьШапка.Параметры.ДН6 = Сред(НачалоПериода, 8, 1);	
		ОбластьШапка.Параметры.ДН7 = Сред(НачалоПериода, 9, 1);	
		ОбластьШапка.Параметры.ДН8 = Сред(НачалоПериода, 10, 1);	
		
		ОбластьШапка.Параметры.ДК1 = Сред(КонецПериода, 1, 1);	
		ОбластьШапка.Параметры.ДК2 = Сред(КонецПериода, 2, 1);	
		ОбластьШапка.Параметры.ДК3 = Сред(КонецПериода, 4, 1);	
		ОбластьШапка.Параметры.ДК4 = Сред(КонецПериода, 5, 1);	
		ОбластьШапка.Параметры.ДК5 = Сред(КонецПериода, 7, 1);	
		ОбластьШапка.Параметры.ДК6 = Сред(КонецПериода, 8, 1);	
		ОбластьШапка.Параметры.ДК7 = Сред(КонецПериода, 9, 1);	
		ОбластьШапка.Параметры.ДК8 = Сред(КонецПериода, 10, 1);
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		Запрос = Новый Запрос;
		Запрос.Текст =		
			"ВЫБРАТЬ
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Ссылка,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Серия,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Номер,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Операция,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Количество,
			|	ВЫБОР
			|		КОГДА ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Количество > 0
			|			ТОГДА ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Количество
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоПриход,
			|	ВЫБОР
			|		КОГДА ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Количество < 0
			|			ТОГДА -ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Количество
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоРасход
			|ПОМЕСТИТЬ ВременнаяТаблицаОбороты
			|ИЗ
			|	Документ.ОтчетПоБланкамСчетовФактур.БланкиСФОбороты КАК ОтчетПоБланкамСчетовФактурБланкиСФОбороты
			|ГДЕ
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОтчетПоБланкамСчетовФактурБланкиСФОстатки.Ссылка,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОстатки.Серия,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОстатки.Номер,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОстатки.Количество КАК КоличествоОстаток,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОстатки.Содержание
			|ПОМЕСТИТЬ ВременнаяТаблицаОстатки
			|ИЗ
			|	Документ.ОтчетПоБланкамСчетовФактур.БланкиСФОстатки КАК ОтчетПоБланкамСчетовФактурБланкиСФОстатки
			|ГДЕ
			|	ОтчетПоБланкамСчетовФактурБланкиСФОстатки.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОстатки.КоличествоОстаток) КАК КоличествоВсего,
			|	БланкиСФОстатки.Серия КАК Серия,
			|	БланкиСФОстатки.Номер КАК БланкНомер
			|ПОМЕСТИТЬ ОстаткиНачало
			|ИЗ
			|	ВременнаяТаблицаОстатки КАК БланкиСФОстатки
			|ГДЕ
			|	БланкиСФОстатки.Содержание ПОДОБНО ""На начало месяца""
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОстатки.Номер,
			|	БланкиСФОстатки.Серия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОстатки.КоличествоОстаток) КАК КоличествоВсего,
			|	БланкиСФОстатки.Номер КАК БланкНомер,
			|	БланкиСФОстатки.Серия КАК Серия
			|ПОМЕСТИТЬ ОстаткиКонец
			|ИЗ
			|	ВременнаяТаблицаОстатки КАК БланкиСФОстатки
			|ГДЕ
			|	БланкиСФОстатки.Содержание ПОДОБНО ""На конец месяца""
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОстатки.Серия,
			|	БланкиСФОстатки.Номер
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОстаткиНачало.КоличествоВсего КАК КоличествоВсего,
			|	ОстаткиНачало.Серия КАК Серия,
			|	ОстаткиНачало.БланкНомер КАК БланкНомер
			|ИЗ
			|	ОстаткиНачало КАК ОстаткиНачало
			|ГДЕ
			|	ОстаткиНачало.КоличествоВсего > 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	Серия,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоВсего),
			|	МИНИМУМ(БланкНомер)
			|ПО
			|	Серия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОстаткиКонец.КоличествоВсего КАК КоличествоВсего,
			|	ОстаткиКонец.БланкНомер КАК БланкНомер,
			|	ОстаткиКонец.Серия КАК Серия
			|ИЗ
			|	ОстаткиКонец КАК ОстаткиКонец
			|ГДЕ
			|	ОстаткиКонец.КоличествоВсего > 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	Серия,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоВсего),
			|	МИНИМУМ(БланкНомер)
			|ПО
			|	Серия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОбороты.КоличествоПриход) КАК КоличествоВсего,
			|	БланкиСФОбороты.Номер КАК БланкНомер,
			|	БланкиСФОбороты.Серия КАК Серия
			|ИЗ
			|	ВременнаяТаблицаОбороты КАК БланкиСФОбороты
			|ГДЕ
			|	БланкиСФОбороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ПриходБланковСФ)
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОбороты.Номер,
			|	БланкиСФОбороты.Серия
			|
			|УПОРЯДОЧИТЬ ПО
			|	Серия,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоВсего),
			|	МИНИМУМ(БланкНомер)
			|ПО
			|	Серия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоВсего,
			|	БланкиСФОбороты.Номер КАК БланкНомер,
			|	БланкиСФОбороты.Серия КАК Серия
			|ИЗ
			|	ВременнаяТаблицаОбороты КАК БланкиСФОбороты
			|ГДЕ
			|	БланкиСФОбороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ИспользованиеБланковСФ)
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОбороты.Номер,
			|	БланкиСФОбороты.Серия
			|
			|УПОРЯДОЧИТЬ ПО
			|	Серия,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоВсего),
			|	МИНИМУМ(БланкНомер)
			|ПО
			|	Серия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоВсего,
			|	БланкиСФОбороты.Номер КАК БланкНомер,
			|	БланкиСФОбороты.Серия КАК Серия
			|ИЗ
			|	ВременнаяТаблицаОбороты КАК БланкиСФОбороты
			|ГДЕ
			|	БланкиСФОбороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.УтеряБланковСФ)
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОбороты.Номер,
			|	БланкиСФОбороты.Серия
			|
			|УПОРЯДОЧИТЬ ПО
			|	Серия,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоВсего),
			|	МИНИМУМ(БланкНомер)
			|ПО
			|	Серия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоВсего,
			|	БланкиСФОбороты.Номер КАК БланкНомер,
			|	БланкиСФОбороты.Серия КАК Серия
			|ИЗ
			|	ВременнаяТаблицаОбороты КАК БланкиСФОбороты
			|ГДЕ
			|	БланкиСФОбороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ПорчаБланковСФ)
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОбороты.Номер,
			|	БланкиСФОбороты.Серия
			|
			|УПОРЯДОЧИТЬ ПО
			|	Серия,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоВсего),
			|	МИНИМУМ(БланкНомер)
			|ПО
			|	Серия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоВсего,
			|	БланкиСФОбороты.Номер КАК БланкНомер,
			|	БланкиСФОбороты.Серия КАК Серия
			|ИЗ
			|	ВременнаяТаблицаОбороты КАК БланкиСФОбороты
			|ГДЕ
			|	БланкиСФОбороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ПроизводственныйБракБланковСФ)
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОбороты.Номер,
			|	БланкиСФОбороты.Серия
			|
			|УПОРЯДОЧИТЬ ПО
			|	Серия,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоВсего),
			|	МИНИМУМ(БланкНомер)
			|ПО
			|	Серия";
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);	
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		ПараметрыВыборки = Новый Структура;
		ПараметрыВыборки.Вставить("Пакет", 		РезультатЗапроса[4]);
		ПараметрыВыборки.Вставить("Область", 	ОбластьОстатокНачало);	
		ОбработкаРезультатаЗапросаЛандшафт(ТабличныйДокумент, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 		РезультатЗапроса[6]);
		ПараметрыВыборки.Вставить("Область", 	ОбластьПолучено);
		ОбработкаРезультатаЗапросаЛандшафт(ТабличныйДокумент, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 		РезультатЗапроса[7]);
		ПараметрыВыборки.Вставить("Область", 	ОбластьИспользовано);
		ОбработкаРезультатаЗапросаЛандшафт(ТабличныйДокумент, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 		РезультатЗапроса[8]);
		ПараметрыВыборки.Вставить("Область", 	ОбластьУтеряно);
		ОбработкаРезультатаЗапросаЛандшафт(ТабличныйДокумент, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 		РезультатЗапроса[9]);
		ПараметрыВыборки.Вставить("Область", 	ОбластьИспорчено);
		ОбработкаРезультатаЗапросаЛандшафт(ТабличныйДокумент, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 		РезультатЗапроса[10]);
		ПараметрыВыборки.Вставить("Область", 	ОбластьПроизводственныйБрак);
		ОбработкаРезультатаЗапросаЛандшафт(ТабличныйДокумент, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 		РезультатЗапроса[5]);
		ПараметрыВыборки.Вставить("Область", 	ОбластьОстатокКонец);	
		ОбработкаРезультатаЗапросаЛандшафт(ТабличныйДокумент, ПараметрыВыборки);	
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;	
	
КонецФункции

// Функция формирует табличный документ с печатной формой ОтчетОбИспользованииБланковПодробный
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьОтчетаОбИспользованииБланковПодробный(МассивОбъектов, ОбъектыПечати)
	Для каждого ДокументСсылка Из МассивОбъектов Цикл	
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		ТабличныйДокумент.ЧерноБелаяПечать = Истина;
		ТабличныйДокумент.ПолеСлева = 0;
		ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоБланкамСчетовФактур_ОтчетОбИспользованииБланковПодробный";
		
		Организация = ДокументСсылка.Организация;
		НачалоПериода = НачалоМесяца(ДокументСсылка.Дата);
		КонецПериода = КонецМесяца(ДокументСсылка.Дата);
		
		Макет = ПолучитьМакет("ПФ_MXL_ОтчетОбИспользованииБланковПодробный");

		АдресОрганизации	= УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);

		ОбластьШапка		= Макет.ПолучитьОбласть("Шапка");	
		ОбластьШапкаТаблицы	= Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьГруппы		= Макет.ПолучитьОбласть("Группа");
		ОбластьДетали		= Макет.ПолучитьОбласть("Детали");
		ОбластьПодписи		= Макет.ПолучитьОбласть("Подписи");	
		
		ОбластьШапка.Параметры.НаименованиеОрганизации = Организация.НаименованиеПолное;
		
		ОбластьШапка.Параметры.ИНН 						= Организация.ИНН;
		ОбластьШапка.Параметры.НаименованиеОрганизации 	= Организация.НаименованиеПолное;
		ОбластьШапка.Параметры.Адрес 					= УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		Запрос = Новый Запрос;
		Запрос.Текст =		
			"ВЫБРАТЬ
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Ссылка,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Серия,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Номер,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Операция,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Количество,
			|	ВЫБОР
			|		КОГДА ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Количество > 0
			|			ТОГДА ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Количество
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоПриход,
			|	ВЫБОР
			|		КОГДА ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Количество < 0
			|			ТОГДА -ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Количество
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоРасход
			|ПОМЕСТИТЬ ВременнаяТаблицаОбороты
			|ИЗ
			|	Документ.ОтчетПоБланкамСчетовФактур.БланкиСФОбороты КАК ОтчетПоБланкамСчетовФактурБланкиСФОбороты
			|ГДЕ
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОтчетПоБланкамСчетовФактурБланкиСФОстатки.Ссылка,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОстатки.Серия,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОстатки.Номер,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОстатки.Количество КАК КоличествоОстаток,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОстатки.Содержание
			|ПОМЕСТИТЬ ВременнаяТаблицаОстатки
			|ИЗ
			|	Документ.ОтчетПоБланкамСчетовФактур.БланкиСФОстатки КАК ОтчетПоБланкамСчетовФактурБланкиСФОстатки
			|ГДЕ
			|	ОтчетПоБланкамСчетовФактурБланкиСФОстатки.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОстатки.КоличествоОстаток) КАК КоличествоА4Р,
			|	СУММА(БланкиСФОстатки.КоличествоОстаток) КАК КоличествоА4П,
			|	СУММА(БланкиСФОстатки.КоличествоОстаток) КАК КоличествоА5Р,
			|	СУММА(БланкиСФОстатки.КоличествоОстаток) КАК КоличествоА5П,
			|	СУММА(БланкиСФОстатки.КоличествоОстаток) КАК КоличествоВсего,
			|	БланкиСФОстатки.Серия КАК Серия,
			|	БланкиСФОстатки.Номер КАК БланкНомер
			|ПОМЕСТИТЬ ОстаткиНачало
			|ИЗ
			|	ВременнаяТаблицаОстатки КАК БланкиСФОстатки
			|ГДЕ
			|	БланкиСФОстатки.Содержание ПОДОБНО ""На начало месяца""
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОстатки.Номер,
			|	БланкиСФОстатки.Серия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОстатки.КоличествоОстаток) КАК КоличествоА4Р,
			|	СУММА(БланкиСФОстатки.КоличествоОстаток) КАК КоличествоА4П,
			|	СУММА(БланкиСФОстатки.КоличествоОстаток) КАК КоличествоА5Р,
			|	СУММА(БланкиСФОстатки.КоличествоОстаток) КАК КоличествоА5П,
			|	СУММА(БланкиСФОстатки.КоличествоОстаток) КАК КоличествоВсего,
			|	БланкиСФОстатки.Номер КАК БланкНомер,
			|	БланкиСФОстатки.Серия КАК Серия
			|ПОМЕСТИТЬ ОстаткиКонец
			|ИЗ
			|	ВременнаяТаблицаОстатки КАК БланкиСФОстатки
			|ГДЕ
			|	БланкиСФОстатки.Содержание ПОДОБНО ""На конец месяца""
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОстатки.Серия,
			|	БланкиСФОстатки.Номер
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОстаткиНачало.КоличествоА4Р КАК КоличествоА4Р,
			|	ОстаткиНачало.КоличествоА4П КАК КоличествоА4П,
			|	ОстаткиНачало.КоличествоА5Р КАК КоличествоА5Р,
			|	ОстаткиНачало.КоличествоА5П КАК КоличествоА5П,
			|	ОстаткиНачало.КоличествоВсего КАК КоличествоВсего,
			|	ОстаткиНачало.Серия КАК Серия,
			|	ОстаткиНачало.БланкНомер КАК БланкНомер
			|ИЗ
			|	ОстаткиНачало КАК ОстаткиНачало
			|ГДЕ
			|	ОстаткиНачало.КоличествоВсего > 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	Серия,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоА4Р),
			|	СУММА(КоличествоА4П),
			|	СУММА(КоличествоА5Р),
			|	СУММА(КоличествоА5П),
			|	СУММА(КоличествоВсего)
			|ПО
			|	Серия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОстаткиКонец.КоличествоА4Р КАК КоличествоА4Р,
			|	ОстаткиКонец.КоличествоА4П КАК КоличествоА4П,
			|	ОстаткиКонец.КоличествоА5Р КАК КоличествоА5Р,
			|	ОстаткиКонец.КоличествоА5П КАК КоличествоА5П,
			|	ОстаткиКонец.КоличествоВсего КАК КоличествоВсего,
			|	ОстаткиКонец.БланкНомер КАК БланкНомер,
			|	ОстаткиКонец.Серия КАК Серия
			|ИЗ
			|	ОстаткиКонец КАК ОстаткиКонец
			|ГДЕ
			|	ОстаткиКонец.КоличествоВсего > 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	Серия,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоА4Р),
			|	СУММА(КоличествоА4П),
			|	СУММА(КоличествоА5Р),
			|	СУММА(КоличествоА5П),
			|	СУММА(КоличествоВсего)
			|ПО
			|	Серия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОбороты.КоличествоПриход) КАК КоличествоА5Р,
			|	СУММА(БланкиСФОбороты.КоличествоПриход) КАК КоличествоА5П,
			|	СУММА(БланкиСФОбороты.КоличествоПриход) КАК КоличествоА4Р,
			|	СУММА(БланкиСФОбороты.КоличествоПриход) КАК КоличествоА4П,
			|	СУММА(БланкиСФОбороты.КоличествоПриход) КАК КоличествоВсего,
			|	БланкиСФОбороты.Номер КАК БланкНомер,
			|	БланкиСФОбороты.Серия КАК Серия
			|ИЗ
			|	ВременнаяТаблицаОбороты КАК БланкиСФОбороты
			|ГДЕ
			|	БланкиСФОбороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ПриходБланковСФ)
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОбороты.Номер,
			|	БланкиСФОбороты.Серия
			|
			|УПОРЯДОЧИТЬ ПО
			|	Серия,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоА5Р),
			|	СУММА(КоличествоА5П),
			|	СУММА(КоличествоА4Р),
			|	СУММА(КоличествоА4П),
			|	СУММА(КоличествоВсего)
			|ПО
			|	Серия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоА5Р,
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоА5П,
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоА4Р,
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоА4П,
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоВсего,
			|	БланкиСФОбороты.Номер КАК БланкНомер,
			|	БланкиСФОбороты.Серия КАК Серия
			|ИЗ
			|	ВременнаяТаблицаОбороты КАК БланкиСФОбороты
			|ГДЕ
			|	БланкиСФОбороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ИспользованиеБланковСФ)
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОбороты.Номер,
			|	БланкиСФОбороты.Серия
			|
			|УПОРЯДОЧИТЬ ПО
			|	Серия,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоА5Р),
			|	СУММА(КоличествоА5П),
			|	СУММА(КоличествоА4Р),
			|	СУММА(КоличествоА4П),
			|	СУММА(КоличествоВсего)
			|ПО
			|	Серия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоА5Р,
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоА5П,
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоА4Р,
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоА4П,
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоВсего,
			|	БланкиСФОбороты.Номер КАК БланкНомер,
			|	БланкиСФОбороты.Серия КАК Серия
			|ИЗ
			|	ВременнаяТаблицаОбороты КАК БланкиСФОбороты
			|ГДЕ
			|	БланкиСФОбороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.УтеряБланковСФ)
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОбороты.Номер,
			|	БланкиСФОбороты.Серия
			|
			|УПОРЯДОЧИТЬ ПО
			|	Серия,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоА5Р),
			|	СУММА(КоличествоА5П),
			|	СУММА(КоличествоА4Р),
			|	СУММА(КоличествоА4П),
			|	СУММА(КоличествоВсего)
			|ПО
			|	Серия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоА5Р,
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоА5П,
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоА4Р,
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоА4П,
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоВсего,
			|	БланкиСФОбороты.Номер КАК БланкНомер,
			|	БланкиСФОбороты.Серия КАК Серия
			|ИЗ
			|	ВременнаяТаблицаОбороты КАК БланкиСФОбороты
			|ГДЕ
			|	БланкиСФОбороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ПорчаБланковСФ)
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОбороты.Номер,
			|	БланкиСФОбороты.Серия
			|
			|УПОРЯДОЧИТЬ ПО
			|	Серия,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоА5Р),
			|	СУММА(КоличествоА5П),
			|	СУММА(КоличествоА4Р),
			|	СУММА(КоличествоА4П),
			|	СУММА(КоличествоВсего)
			|ПО
			|	Серия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоА5Р,
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоА5П,
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоА4Р,
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоА4П,
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоВсего,
			|	БланкиСФОбороты.Номер КАК БланкНомер,
			|	БланкиСФОбороты.Серия КАК Серия
			|ИЗ
			|	ВременнаяТаблицаОбороты КАК БланкиСФОбороты
			|ГДЕ
			|	БланкиСФОбороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ПроизводственныйБракБланковСФ)
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОбороты.Номер,
			|	БланкиСФОбороты.Серия
			|
			|УПОРЯДОЧИТЬ ПО
			|	Серия,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоА5Р),
			|	СУММА(КоличествоА5П),
			|	СУММА(КоличествоА4Р),
			|	СУММА(КоличествоА4П),
			|	СУММА(КоличествоВсего)
			|ПО
			|	Серия";

		Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);	
		
		Если ЗначениеЗаполнено(Организация) Тогда
			Запрос.УстановитьПараметр("Организация", Организация);
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация", "Истина");
		КонецЕсли;
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		ПараметрыВыборки = Новый Структура;
		ПараметрыВыборки.Вставить("Пакет", 			РезультатЗапроса[4]);
		ПараметрыВыборки.Вставить("НомерСтроки", 	1);
		ПараметрыВыборки.Вставить("Наименование", 	"Остаток на начало");
		ОбработкаРезультатаЗапросаПодробный(ТабличныйДокумент, Макет, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 			РезультатЗапроса[6]);
		ПараметрыВыборки.Вставить("НомерСтроки", 	2);
		ПараметрыВыборки.Вставить("Наименование", 	"Получено");	
		ОбработкаРезультатаЗапросаПодробный(ТабличныйДокумент, Макет, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 			РезультатЗапроса[7]);
		ПараметрыВыборки.Вставить("НомерСтроки", 	3);
		ПараметрыВыборки.Вставить("Наименование", 	"Использовано");	
		ОбработкаРезультатаЗапросаПодробный(ТабличныйДокумент, Макет, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 			РезультатЗапроса[8]);
		ПараметрыВыборки.Вставить("НомерСтроки", 	4);
		ПараметрыВыборки.Вставить("Наименование", 	"Испорчено");	
		ОбработкаРезультатаЗапросаПодробный(ТабличныйДокумент, Макет, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 			РезультатЗапроса[9]);
		ПараметрыВыборки.Вставить("НомерСтроки", 	5);
		ПараметрыВыборки.Вставить("Наименование", 	"Утеряно");	
		ОбработкаРезультатаЗапросаПодробный(ТабличныйДокумент, Макет, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 			РезультатЗапроса[10]);
		ПараметрыВыборки.Вставить("НомерСтроки", 	6);
		ПараметрыВыборки.Вставить("Наименование", 	"Производственный брак");	
		ОбработкаРезультатаЗапросаПодробный(ТабличныйДокумент, Макет, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 			РезультатЗапроса[5]);
		ПараметрыВыборки.Вставить("НомерСтроки", 	7);
		ПараметрыВыборки.Вставить("Наименование", 	"Остаток на конец");		
		ОбработкаРезультатаЗапросаПодробный(ТабличныйДокумент, Макет, ПараметрыВыборки);
		
		СтруктураРуководство = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизаций(Организация, КонецПериода);
		Если НЕ СтруктураРуководство.Свойство("Руководитель") = Неопределено Тогда
			ОбластьПодписи.Параметры.Руководитель 	= СтруктураРуководство.Руководитель;
		КонецЕсли;
		Если НЕ СтруктураРуководство.Свойство("ГлавныйБухгалтер") = Неопределено Тогда
			ОбластьПодписи.Параметры.Главбух 		= СтруктураРуководство.ГлавныйБухгалтер;
		КонецЕсли;
			
		ОбластьПодписи.Параметры.ТелефонОрганизации	= УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
		ОбластьПодписи.Параметры.Год				= СтрЗаменить(Строка(Год(КонецПериода)), Символы.НПП, "") + " г.";
		
		ТабличныйДокумент.Вывести(ОбластьПодписи);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;	
	
КонецФункции

// Функция формирует табличный документ с печатной формой РеестраИспорченныхБланковСФ
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьРеестраИспорченныхБланковСФ(МассивОбъектов, ОбъектыПечати)
	Запрос = Новый Запрос;
	Запрос.Текст =		
		"ВЫБРАТЬ
		|	БланкиСФОбороты.Ссылка КАК Ссылка,
		|	БланкиСФОбороты.Ссылка.Организация,
		|	БланкиСФОбороты.Ссылка.Дата,
		|	БланкиСФОбороты.Номер КАК БланкНомер,
		|	БланкиСФОбороты.Серия КАК Серия,
		|	ЕСТЬNULL(БланкиСФОбороты.Количество, 0) КАК Количество
		|ИЗ
		|	Документ.ОтчетПоБланкамСчетовФактур.БланкиСФОбороты КАК БланкиСФОбороты
		|ГДЕ
		|	БланкиСФОбороты.Ссылка В(&МассивОбъектов)
		|	И БланкиСФОбороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ПорчаБланковСФ)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Серия,
		|	БланкНомер
		|ИТОГИ
		|	МИНИМУМ(БланкНомер),
		|	СУММА(Количество)
		|ПО
		|	Ссылка,
		|	Серия";
	Запрос.УстановитьПараметр("МассивОбъектов",	МассивОбъектов);
	РезультатЗапроса = Запрос.Выполнить();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ПолеСлева = 0;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоБланкамСчетовФактур_РеестрИспорченныхБланковСФ";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоБланкамСчетовФактур.ПФ_MXL_РеестрИспорченныхБланковСФ");
	ОбластьШапка			= Макет.ПолучитьОбласть("Шапка");
	ОбластьДетали 			= Макет.ПолучитьОбласть("Детали");
	ОбластьИтого 			= Макет.ПолучитьОбласть("Итоги");
	ОбластьВсего 			= Макет.ПолучитьОбласть("Всего");
	ОбластьПодвал 			= Макет.ПолучитьОбласть("Подвал");
	ОбластьПодпись			= Макет.ПолучитьОбласть("Подпись");
	ОбластьНомерЛиста		= Макет.ПолучитьОбласть("НомерЛиста");
	ОбластьНомерЗаклЛиста	= Макет.ПолучитьОбласть("НомерЗаклЛиста");
	ОбластьЗаголовок		= Макет.ПолучитьОбласть("Заголовок");
	
	Шапка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		Организация = Шапка.Организация;
		НачалоПериода = НачалоМесяца(Шапка.Дата);
		КонецПериода = КонецМесяца(Шапка.Дата);
		
		ОКПО              				= Организация.КодПоОКПО;
		ИНН 							= Организация.ИНН;
		КодГНС 							= Организация.ГНС.Код;
		ОрганизацияНаменованиеПолное    = Организация.НаименованиеПолное;
		
		КонтактныеДанные = ПолучитьКонтактнуюИнформацию(Организация);
	
		Индекс           = КонтактныеДанные.Индекс;
		АдрОбластьГород  = КонтактныеДанные.АдрОбластьГород;
		ЮрАдрес	         = КонтактныеДанные.АдресОрганизации; 
		Телефон		     = КонтактныеДанные.Телефон;
		НомерЯйки = 210;	

		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		ОбластьШапка.Параметры.НаименованиеОрганизации = ОрганизацияНаменованиеПолное;
		Если ЗначениеЗаполнено(АдрОбластьГород) Тогда 
			ОбластьШапка.Параметры.Область = АдрОбластьГород;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЮрАдрес) Тогда 
			ОбластьШапка.Параметры.Адрес = ЮрАдрес;
		КонецЕсли;
		
		ОбластьШапка.Параметры.Телефон = Телефон;
		
		Если ЗначениеЗаполнено(Индекс) ТОгда
			ОбластьШапка.Параметры.ИНД1 = Сред(Индекс,1,1);
			ОбластьШапка.Параметры.ИНД2 = Сред(Индекс,2,1);
			ОбластьШапка.Параметры.ИНД3 = Сред(Индекс,3,1);
			ОбластьШапка.Параметры.ИНД4 = Сред(Индекс,4,1);
			ОбластьШапка.Параметры.ИНД5 = Сред(Индекс,5,1);
			ОбластьШапка.Параметры.ИНД6 = Сред(Индекс,6,1);
		КонецЕсли;

		Если ЗначениеЗаполнено(ОКПО) Тогда 
			ОбластьШапка.Параметры.ОКПО1 = Сред(ОКПО,1,1);
			ОбластьШапка.Параметры.ОКПО2 = Сред(ОКПО,2,1);
			ОбластьШапка.Параметры.ОКПО3 = Сред(ОКПО,3,1);
			ОбластьШапка.Параметры.ОКПО4 = Сред(ОКПО,4,1);
			ОбластьШапка.Параметры.ОКПО5 = Сред(ОКПО,5,1);
			ОбластьШапка.Параметры.ОКПО6 = Сред(ОКПО,6,1);
			ОбластьШапка.Параметры.ОКПО7 = Сред(ОКПО,7,1);
			ОбластьШапка.Параметры.ОКПО8 = Сред(ОКПО,8,1);
		КонецЕсли;
		
		ОбластьШапка.Параметры.ИНН1 = Сред(ИНН, 1, 1);
		ОбластьШапка.Параметры.ИНН2 = Сред(ИНН, 2, 1);
		ОбластьШапка.Параметры.ИНН3 = Сред(ИНН, 3, 1);                           
		ОбластьШапка.Параметры.ИНН4 = Сред(ИНН, 4, 1);
		ОбластьШапка.Параметры.ИНН5 = Сред(ИНН, 5, 1);
		ОбластьШапка.Параметры.ИНН6 = Сред(ИНН, 6, 1);
		ОбластьШапка.Параметры.ИНН7 = Сред(ИНН, 7, 1);
		ОбластьШапка.Параметры.ИНН8 = Сред(ИНН, 8, 1);
		ОбластьШапка.Параметры.ИНН9 = Сред(ИНН, 9, 1);
		ОбластьШапка.Параметры.ИНН10 = Сред(ИНН, 10, 1);
		ОбластьШапка.Параметры.ИНН11 = Сред(ИНН, 11, 1);
		ОбластьШапка.Параметры.ИНН12 = Сред(ИНН, 12, 1);
		ОбластьШапка.Параметры.ИНН13 = Сред(ИНН, 13, 1);
		ОбластьШапка.Параметры.ИНН14 = Сред(ИНН, 14, 1);
		
		ОбластьШапка.Параметры.НаименованиеНалоговой = Организация.ГНС;
		
		ОбластьШапка.Параметры.Код1 = Сред(КодГНС, 1, 1);
		ОбластьШапка.Параметры.Код2 = Сред(КодГНС, 2, 1);
		ОбластьШапка.Параметры.Код3 = Сред(КодГНС, 3, 1);
		
		ОбластьШапка.Параметры.ДН1 = Сред(НачалоПериода, 1, 1);	
		ОбластьШапка.Параметры.ДН2 = Сред(НачалоПериода, 2, 1);	
		ОбластьШапка.Параметры.ДН3 = Сред(НачалоПериода, 4, 1);	
		ОбластьШапка.Параметры.ДН4 = Сред(НачалоПериода, 5, 1);	
		ОбластьШапка.Параметры.ДН5 = Сред(НачалоПериода, 7, 1);	
		ОбластьШапка.Параметры.ДН6 = Сред(НачалоПериода, 8, 1);	
		ОбластьШапка.Параметры.ДН7 = Сред(НачалоПериода, 9, 1);	
		ОбластьШапка.Параметры.ДН8 = Сред(НачалоПериода, 10, 1);	
		
		ОбластьШапка.Параметры.ДК1 = Сред(КонецПериода, 1, 1);	
		ОбластьШапка.Параметры.ДК2 = Сред(КонецПериода, 2, 1);	
		ОбластьШапка.Параметры.ДК3 = Сред(КонецПериода, 4, 1);	
		ОбластьШапка.Параметры.ДК4 = Сред(КонецПериода, 5, 1);	
		ОбластьШапка.Параметры.ДК5 = Сред(КонецПериода, 7, 1);	
		ОбластьШапка.Параметры.ДК6 = Сред(КонецПериода, 8, 1);	
		ОбластьШапка.Параметры.ДК7 = Сред(КонецПериода, 9, 1);	
		ОбластьШапка.Параметры.ДК8 = Сред(КонецПериода, 10, 1);
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ВыборкаСерии = Шапка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ОбщееКолвоПозиций = 0;
		
		НомерЯчейки = 202;		
		
		КоличествоВыделенных = 0;
		Заключительный = Ложь;
		НомерСтраницы = 1;
		НомерСтроки = 1;
		кол = 0;
		ТекущаяСерия = Неопределено;
		ПредыдущийНомер = -100; // Здесь надо ставить любой точно не реальный номер;
		
		Пока ВыборкаСерии.Следующий() Цикл
			ОбластьДетали.Параметры.Серия 	= ВыборкаСерии.Серия;
			ОбластьДетали.Параметры.НомерОт = ВыборкаСерии.БланкНомер;
			ПредыдущийНомер 				= СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ВыборкаСерии.БланкНомер) - 1;
			ПервыйНомерИнтервала			= ВыборкаСерии.БланкНомер;
			ПоследнийНомерИнтервала			= СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ВыборкаСерии.БланкНомер);
			ВыборкаНомера = ВыборкаСерии.Выбрать();
			ОбщееКолвоПозиций = ОбщееКолвоПозиций + ВыборкаСерии.Количество;
			
			Пока ВыборкаНомера.Следующий() Цикл
				ПроверяемыйНомер = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ВыборкаНомера.БланкНомер);
				Если ПроверяемыйНомер = (ПредыдущийНомер + 1) Тогда
					ПредыдущийНомер = ПроверяемыйНомер;
					ПоследнийНомерИнтервала = ПроверяемыйНомер;
				Иначе 
					ОбластьДетали.Параметры.НомерОт = ПервыйНомерИнтервала;
					ОбластьДетали.Параметры.НомерПо = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Строка(ПредыдущийНомер), 6, "0", "Слева");
					ВыводОбластиДетали(ТабличныйДокумент, Макет, ОбластьДетали, НомерЯчейки, НомерСтраницы, ОбщееКолвоПозиций, КоличествоВыделенных, кол, НомерСтроки, Заключительный);
					ПредыдущийНомер					= СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ВыборкаНомера.БланкНомер);
					ПервыйНомерИнтервала			= ВыборкаНомера.БланкНомер;
				КонецЕсли;
			
			КонецЦикла;
			ОбластьДетали.Параметры.НомерОт = ПервыйНомерИнтервала;
			ОбластьДетали.Параметры.НомерПо = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Строка(ПредыдущийНомер), 6, "0", "Слева");
			ВыводОбластиДетали(ТабличныйДокумент, Макет, ОбластьДетали, НомерЯчейки, НомерСтраницы, ОбщееКолвоПозиций, КоличествоВыделенных, кол, НомерСтроки, Заключительный);
		КонецЦикла; // Конец серии
		
		//После цикла проверяем количество выведенных строк на последний лист, и если их число < 17 или 24 то добавляем пустые строки
		Пока НомерСтроки < ?(НомерСтраницы = 1,17,24) Цикл
			ОбластьДетали = Макет.ПолучитьОбласть("Детали");
			ОбластьДетали.Параметры.Ном1 = НомерЯчейки + 1;
			ОбластьДетали.Параметры.Ном2 = НомерЯчейки + 2;
			ОбластьДетали.Параметры.Ном3 = НомерЯчейки + 3;
			ОбластьДетали.Параметры.Ном4 = НомерЯчейки + 4;

			НомерЯчейки = НомерЯчейки + 4;
			НомерСтроки = НомерСтроки + 1;
			ТабличныйДокумент.Вывести(ОбластьДетали);
		КонецЦикла;
		
		ОбластьВсего.Параметры.Количество = ?(ОбщееКолвоПозиций < 0, -ОбщееКолвоПозиций, ОбщееКолвоПозиций);
		ОбластьВсего.Параметры.Ном = НомерЯчейки + 1;
		ТабличныйДокумент.Вывести(ОбластьВсего);
		ВывестиРазделитель = Истина;
		
		Если НомерСтраницы <> 1 Тогда 
			ТабличныйДокумент.Вывести(ОбластьПодпись);
		Иначе 
			ТабличныйДокумент.Вывести(ОбластьПодвал);
		КонецЕсли;		
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;	
	
КонецФункции

// Функция формирует табличный документ с печатной формой РеестраБланковСФПроизводственныйБрак
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьРеестраБланковСФПроизводственныйБрак(МассивОбъектов, ОбъектыПечати)
	Запрос = Новый Запрос;
	Запрос.Текст =		
		"ВЫБРАТЬ
		|	БланкиСФОбороты.Ссылка КАК Ссылка,
		|	БланкиСФОбороты.Ссылка.Организация,
		|	БланкиСФОбороты.Ссылка.Дата,
		|	БланкиСФОбороты.Номер КАК БланкНомер,
		|	БланкиСФОбороты.Серия КАК Серия,
		|	ЕСТЬNULL(БланкиСФОбороты.Количество, 0) КАК Количество
		|ИЗ
		|	Документ.ОтчетПоБланкамСчетовФактур.БланкиСФОбороты КАК БланкиСФОбороты
		|ГДЕ
		|	БланкиСФОбороты.Ссылка В(&МассивОбъектов)
		|	И БланкиСФОбороты.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСФ.ПроизводственныйБракБланковСФ)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Серия,
		|	БланкНомер
		|ИТОГИ
		|	МИНИМУМ(БланкНомер),
		|	СУММА(Количество)
		|ПО
		|	Ссылка,
		|	Серия";
		
	Запрос.УстановитьПараметр("МассивОбъектов",	МассивОбъектов);
	РезультатЗапроса = Запрос.Выполнить();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ПолеСлева = 0;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоБланкамСчетовФактур_РеестрБланковСФПроизводственныйБрак";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоБланкамСчетовФактур.ПФ_MXL_РеестрБланковСФПроизводственныйБрак");
	ОбластьШапка			= Макет.ПолучитьОбласть("Шапка");
	ОбластьДетали 			= Макет.ПолучитьОбласть("Детали");
	ОбластьИтого 			= Макет.ПолучитьОбласть("Итоги");
	ОбластьВсего 			= Макет.ПолучитьОбласть("Всего");
	ОбластьПодвал 			= Макет.ПолучитьОбласть("Подвал");
	ОбластьПодпись			= Макет.ПолучитьОбласть("Подпись");
	ОбластьНомерЛиста		= Макет.ПолучитьОбласть("НомерЛиста");
	ОбластьНомерЗаклЛиста	= Макет.ПолучитьОбласть("НомерЗаклЛиста");
	ОбластьЗаголовок		= Макет.ПолучитьОбласть("Заголовок");
	
	Шапка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		Организация = Шапка.Организация;
		НачалоПериода = НачалоМесяца(Шапка.Дата);
		КонецПериода = КонецМесяца(Шапка.Дата);
		
		ОКПО              				= Организация.КодПоОКПО;
		ИНН 							= Организация.ИНН;
		КодГНС 							= Организация.ГНС.Код;
		ОрганизацияНаменованиеПолное    = Организация.НаименованиеПолное;
		
		КонтактныеДанные = ПолучитьКонтактнуюИнформацию(Организация);
	
		Индекс           = КонтактныеДанные.Индекс;
		АдрОбластьГород  = КонтактныеДанные.АдрОбластьГород;
		ЮрАдрес	         = КонтактныеДанные.АдресОрганизации; 
		Телефон		     = КонтактныеДанные.Телефон;
		НомерЯйки = 210;	

		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		ОбластьШапка.Параметры.НаименованиеОрганизации = ОрганизацияНаменованиеПолное;
		Если ЗначениеЗаполнено(АдрОбластьГород) Тогда 
			ОбластьШапка.Параметры.Область = АдрОбластьГород;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЮрАдрес) Тогда 
			ОбластьШапка.Параметры.Адрес = ЮрАдрес;
		КонецЕсли;
		
		ОбластьШапка.Параметры.Телефон = Телефон;
		
		Если ЗначениеЗаполнено(Индекс) ТОгда
			ОбластьШапка.Параметры.ИНД1 = Сред(Индекс,1,1);
			ОбластьШапка.Параметры.ИНД2 = Сред(Индекс,2,1);
			ОбластьШапка.Параметры.ИНД3 = Сред(Индекс,3,1);
			ОбластьШапка.Параметры.ИНД4 = Сред(Индекс,4,1);
			ОбластьШапка.Параметры.ИНД5 = Сред(Индекс,5,1);
			ОбластьШапка.Параметры.ИНД6 = Сред(Индекс,6,1);
		КонецЕсли;

		Если ЗначениеЗаполнено(ОКПО) Тогда 
			ОбластьШапка.Параметры.ОКПО1 = Сред(ОКПО,1,1);
			ОбластьШапка.Параметры.ОКПО2 = Сред(ОКПО,2,1);
			ОбластьШапка.Параметры.ОКПО3 = Сред(ОКПО,3,1);
			ОбластьШапка.Параметры.ОКПО4 = Сред(ОКПО,4,1);
			ОбластьШапка.Параметры.ОКПО5 = Сред(ОКПО,5,1);
			ОбластьШапка.Параметры.ОКПО6 = Сред(ОКПО,6,1);
			ОбластьШапка.Параметры.ОКПО7 = Сред(ОКПО,7,1);
			ОбластьШапка.Параметры.ОКПО8 = Сред(ОКПО,8,1);
		КонецЕсли;
		
		ОбластьШапка.Параметры.ИНН1 = Сред(ИНН, 1, 1);
		ОбластьШапка.Параметры.ИНН2 = Сред(ИНН, 2, 1);
		ОбластьШапка.Параметры.ИНН3 = Сред(ИНН, 3, 1);                           
		ОбластьШапка.Параметры.ИНН4 = Сред(ИНН, 4, 1);
		ОбластьШапка.Параметры.ИНН5 = Сред(ИНН, 5, 1);
		ОбластьШапка.Параметры.ИНН6 = Сред(ИНН, 6, 1);
		ОбластьШапка.Параметры.ИНН7 = Сред(ИНН, 7, 1);
		ОбластьШапка.Параметры.ИНН8 = Сред(ИНН, 8, 1);
		ОбластьШапка.Параметры.ИНН9 = Сред(ИНН, 9, 1);
		ОбластьШапка.Параметры.ИНН10 = Сред(ИНН, 10, 1);
		ОбластьШапка.Параметры.ИНН11 = Сред(ИНН, 11, 1);
		ОбластьШапка.Параметры.ИНН12 = Сред(ИНН, 12, 1);
		ОбластьШапка.Параметры.ИНН13 = Сред(ИНН, 13, 1);
		ОбластьШапка.Параметры.ИНН14 = Сред(ИНН, 14, 1);
		
		ОбластьШапка.Параметры.НаименованиеНалоговой = Организация.ГНС;
		
		ОбластьШапка.Параметры.Код1 = Сред(КодГНС, 1, 1);
		ОбластьШапка.Параметры.Код2 = Сред(КодГНС, 2, 1);
		ОбластьШапка.Параметры.Код3 = Сред(КодГНС, 3, 1);
		
		ОбластьШапка.Параметры.ДН1 = Сред(НачалоПериода, 1, 1);	
		ОбластьШапка.Параметры.ДН2 = Сред(НачалоПериода, 2, 1);	
		ОбластьШапка.Параметры.ДН3 = Сред(НачалоПериода, 4, 1);	
		ОбластьШапка.Параметры.ДН4 = Сред(НачалоПериода, 5, 1);	
		ОбластьШапка.Параметры.ДН5 = Сред(НачалоПериода, 7, 1);	
		ОбластьШапка.Параметры.ДН6 = Сред(НачалоПериода, 8, 1);	
		ОбластьШапка.Параметры.ДН7 = Сред(НачалоПериода, 9, 1);	
		ОбластьШапка.Параметры.ДН8 = Сред(НачалоПериода, 10, 1);	
		
		ОбластьШапка.Параметры.ДК1 = Сред(КонецПериода, 1, 1);	
		ОбластьШапка.Параметры.ДК2 = Сред(КонецПериода, 2, 1);	
		ОбластьШапка.Параметры.ДК3 = Сред(КонецПериода, 4, 1);	
		ОбластьШапка.Параметры.ДК4 = Сред(КонецПериода, 5, 1);	
		ОбластьШапка.Параметры.ДК5 = Сред(КонецПериода, 7, 1);	
		ОбластьШапка.Параметры.ДК6 = Сред(КонецПериода, 8, 1);	
		ОбластьШапка.Параметры.ДК7 = Сред(КонецПериода, 9, 1);	
		ОбластьШапка.Параметры.ДК8 = Сред(КонецПериода, 10, 1);
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ВыборкаСерии = Шапка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ОбщееКолвоПозиций = 0;
		
		НомерЯчейки = 202;		
		
		КоличествоВыделенных = 0;
		Заключительный = Ложь;
		НомерСтраницы = 1;
		НомерСтроки = 1;
		кол = 0;
		ТекущаяСерия = Неопределено;
		ПредыдущийНомер = -100; // Здесь надо ставить любой точно не реальный номер;
		
		Пока ВыборкаСерии.Следующий() Цикл
			ОбластьДетали.Параметры.Серия 	= ВыборкаСерии.Серия;
			ОбластьДетали.Параметры.НомерОт = ВыборкаСерии.БланкНомер;
			ПредыдущийНомер 				= СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ВыборкаСерии.БланкНомер) - 1;
			ПервыйНомерИнтервала			= ВыборкаСерии.БланкНомер;
			ПоследнийНомерИнтервала			= СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ВыборкаСерии.БланкНомер);
			ВыборкаНомера = ВыборкаСерии.Выбрать();
			ОбщееКолвоПозиций = ОбщееКолвоПозиций + ВыборкаСерии.Количество;
			
			Пока ВыборкаНомера.Следующий() Цикл
				ПроверяемыйНомер = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ВыборкаНомера.БланкНомер);
				Если ПроверяемыйНомер = (ПредыдущийНомер + 1) Тогда
					ПредыдущийНомер = ПроверяемыйНомер;
					ПоследнийНомерИнтервала = ПроверяемыйНомер;
				Иначе 
					ОбластьДетали.Параметры.НомерОт = ПервыйНомерИнтервала;
					ОбластьДетали.Параметры.НомерПо = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Строка(ПредыдущийНомер), 6, "0", "Слева");
					ВыводОбластиДетали(ТабличныйДокумент, Макет, ОбластьДетали, НомерЯчейки, НомерСтраницы, ОбщееКолвоПозиций, КоличествоВыделенных, кол, НомерСтроки, Заключительный);
					ПредыдущийНомер					= СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ВыборкаНомера.БланкНомер);
					ПервыйНомерИнтервала			= ВыборкаНомера.БланкНомер;
				КонецЕсли;
			
			КонецЦикла;
			ОбластьДетали.Параметры.НомерОт = ПервыйНомерИнтервала;
			ОбластьДетали.Параметры.НомерПо = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Строка(ПредыдущийНомер), 6, "0", "Слева");
			ВыводОбластиДетали(ТабличныйДокумент, Макет, ОбластьДетали, НомерЯчейки, НомерСтраницы, ОбщееКолвоПозиций, КоличествоВыделенных, кол, НомерСтроки, Заключительный);
		КонецЦикла; // Конец серии
		
		//После цикла проверяем количество выведенных строк на последний лист, и если их число < 17 или 24 то добавляем пустые строки
		Пока НомерСтроки < ?(НомерСтраницы = 1,17,24) Цикл
			ОбластьДетали = Макет.ПолучитьОбласть("Детали");
			ОбластьДетали.Параметры.Ном1 = НомерЯчейки + 1;
			ОбластьДетали.Параметры.Ном2 = НомерЯчейки + 2;
			ОбластьДетали.Параметры.Ном3 = НомерЯчейки + 3;
			ОбластьДетали.Параметры.Ном4 = НомерЯчейки + 4;

			НомерЯчейки = НомерЯчейки + 4;
			НомерСтроки = НомерСтроки + 1;
			ТабличныйДокумент.Вывести(ОбластьДетали);
		КонецЦикла;
		
		ОбластьВсего.Параметры.Количество = ОбщееКолвоПозиций;
		ОбластьВсего.Параметры.Ном = НомерЯчейки + 1;
		ТабличныйДокумент.Вывести(ОбластьВсего);
		ВывестиРазделитель = Истина;
		
		Если НомерСтраницы <> 1 Тогда 
			ТабличныйДокумент.Вывести(ОбластьПодпись);
		Иначе 
			ТабличныйДокумент.Вывести(ОбластьПодвал);
		КонецЕсли;		
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;	
	
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетОбИспользованииБланков") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ОтчетОбИспользованииБланков", 
		"Отчет об использовании бланков счетов-фактур", 
		ПечатьОтчетаОбИспользованииБланков(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоБланкамСчетовФактур.ПФ_MXL_ОтчетОбИспользованииБланков");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетОбИспользованииБланковЛандшафт") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ОтчетОбИспользованииБланковЛандшафт", 
		"Отчет об использовании бланков счетов-фактур (ландшафт)", 
		ПечатьОтчетаОбИспользованииБланковЛандшафт(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоБланкамСчетовФактур.ПФ_MXL_ОтчетОбИспользованииБланковЛандшафт");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетОбИспользованииБланковПодробный") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ОтчетОбИспользованииБланковПодробный", 
		"Отчет об использовании бланков счетов-фактур (подробный)", 
		ПечатьОтчетаОбИспользованииБланковПодробный(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоБланкамСчетовФактур.ПФ_MXL_ОтчетОбИспользованииБланковПодробный");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрИспорченныхБланковСФ") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"РеестрИспорченныхБланковСФ", 
		"Реестр испорченных бланков счетов-фактур", 
		ПечатьРеестраИспорченныхБланковСФ(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоБланкамСчетовФактур.ПФ_MXL_РеестрИспорченныхБланковСФ");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрБланковСФПроизводственныйБрак") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"РеестрБланковСФПроизводственныйБрак", 
		"Реестр бланков счетов-фактур с производственным браком", 
		ПечатьРеестраБланковСФПроизводственныйБрак(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоБланкамСчетовФактур.ПФ_MXL_РеестрБланковСФПроизводственныйБрак");
	КонецЕсли;	
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОтчетОбИспользованииБланков";
	КомандаПечати.Представление = НСтр("ru = 'Отчет об использовании бланков счетов-фактур'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Порядок = 1;
		
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОтчетОбИспользованииБланковЛандшафт";
	КомандаПечати.Представление = НСтр("ru = 'Отчет об использовании бланков счетов-фактур (ландшафт)'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Порядок = 2;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОтчетОбИспользованииБланковПодробный";
	КомандаПечати.Представление = НСтр("ru = 'Отчет об использовании бланков счетов-фактур (подробный)'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Порядок = 3;	
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеестрИспорченныхБланковСФ";
	КомандаПечати.Представление = НСтр("ru = 'Реестр испорченных бланков счетов-фактур'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Порядок = 4;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеестрБланковСФПроизводственныйБрак";
	КомандаПечати.Представление = НСтр("ru = 'Реестр бланков счетов-фактур с производственным браком'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Порядок = 5;	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли