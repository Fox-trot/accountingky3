#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла

// Устанавливает параметры загрузки.
//
Процедура УстановитьПараметрыЗагрузкиИзФайлаВТЧ(Параметры) Экспорт
	
КонецПроцедуры

// Производит сопоставление данных, загружаемых в табличную часть ПолноеИмяТабличнойЧасти,
// с данными в ИБ, и заполняет параметры АдресТаблицыСопоставления и СписокНеоднозначностей.
//
// Параметры:
//   АдресЗагружаемыхДанных    - Строка - Адрес временного хранилища с таблицей значений, в которой
//                                        находятся загруженные данные из файла. Состав колонок:
//     * Идентификатор - Число - Порядковый номер строки;
//     * остальные колонки соответствуют колонкам макета ЗагрузкаИзФайла.
//   АдресТаблицыСопоставления - Строка - Адрес временного хранилища с пустой таблицей значений,
//                                        являющейся копией табличной части документа, 
//                                        которую необходимо заполнить из таблицы АдресЗагружаемыхДанных.
//   СписокНеоднозначностей - ТаблицаЗначений - Список неоднозначных значений, для которых в ИБ имеется несколько
//                                              подходящих вариантов.
//     * Колонка       - Строка - Имя колонки, в которой была обнаружена неоднозначность;
//     * Идентификатор - Число  - Идентификатор строки, в которой была обнаружена неоднозначность.
//   ПолноеИмяТабличнойЧасти   - Строка - Полное имя табличной части, в которую загружаются данные.
//   ДополнительныеПараметры   - ЛюбойТип - Любые дополнительные сведения.
//
Процедура СопоставитьЗагружаемыеДанные(АдресЗагружаемыхДанных, АдресТаблицыСопоставления, СписокНеоднозначностей, ПолноеИмяТабличнойЧасти, ДополнительныеПараметры) Экспорт
	
	Товары = ПолучитьИзВременногоХранилища(АдресТаблицыСопоставления);
	ЗагружаемыеДанные = ПолучитьИзВременногоХранилища(АдресЗагружаемыхДанных);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДляСопоставления.Склад,
		|	ДанныеДляСопоставления.Номенклатура,
		|	ДанныеДляСопоставления.Идентификатор
		|ПОМЕСТИТЬ ДанныеДляСопоставления
		|ИЗ
		|	&ДанныеДляСопоставления КАК ДанныеДляСопоставления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// Сопоставление по складам
		|ВЫБРАТЬ
		|	МАКСИМУМ(СправочникСклады.Ссылка) КАК Ссылка,
		|	ДанныеДляСопоставления.Идентификатор,
		|	КОЛИЧЕСТВО(ДанныеДляСопоставления.Идентификатор) КАК Количество
		|ИЗ
		|	ДанныеДляСопоставления КАК ДанныеДляСопоставления
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СправочникСклады
		|		ПО (СправочникСклады.Наименование ПОДОБНО ДанныеДляСопоставления.Склад)
		|ГДЕ
		|	НЕ СправочникСклады.Ссылка ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДляСопоставления.Идентификатор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// Сопоставление по номенклатуре
		|ВЫБРАТЬ
		|	МАКСИМУМ(СправочникНоменклатура.Ссылка) КАК Ссылка,
		|	ДанныеДляСопоставления.Идентификатор,
		|	КОЛИЧЕСТВО(ДанныеДляСопоставления.Идентификатор) КАК Количество
		|ИЗ
		|	ДанныеДляСопоставления КАК ДанныеДляСопоставления
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО (СправочникНоменклатура.Наименование ПОДОБНО ДанныеДляСопоставления.Номенклатура)
		|ГДЕ
		|	НЕ СправочникНоменклатура.Ссылка ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДляСопоставления.Идентификатор";
	Запрос.УстановитьПараметр("ДанныеДляСопоставления", ЗагружаемыеДанные);
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	
	ТаблицаСклады = РезультатыЗапросов[1].Выгрузить();
	ТаблицаСклады.Индексы.Добавить("Идентификатор");

	ТаблицаНоменклатура = РезультатыЗапросов[2].Выгрузить();
	ТаблицаНоменклатура.Индексы.Добавить("Идентификатор");
	
	Для Каждого СтрокаТаблицы Из ЗагружаемыеДанные Цикл
		СтрокаТабличнойЧасти = Товары.Добавить();
		СтрокаТабличнойЧасти.Идентификатор = СтрокаТаблицы.Идентификатор;
		СтрокаТабличнойЧасти.Количество = СтрокаТаблицы.Количество;
		СтрокаТабличнойЧасти.Сумма = СтрокаТаблицы.Сумма;
		
		СтрокаСклад = ТаблицаСклады.Найти(СтрокаТаблицы.Идентификатор, "Идентификатор");
		Если СтрокаСклад <> Неопределено Тогда 
			Если СтрокаСклад.Количество = 1 Тогда 
				СтрокаТабличнойЧасти.Склад = СтрокаСклад.Ссылка;
			ИначеЕсли СтрокаСклад.Количество > 1 Тогда
				ЗаписьОНеоднозначности = СписокНеоднозначностей.Добавить();
				ЗаписьОНеоднозначности.Идентификатор = СтрокаТаблицы.Идентификатор; 
				ЗаписьОНеоднозначности.Колонка = "Склад";
			КонецЕсли;
		КонецЕсли;
		
		СтрокаНоменклатура = ТаблицаНоменклатура.Найти(СтрокаТаблицы.Идентификатор, "Идентификатор");
		Если СтрокаНоменклатура <> Неопределено Тогда 
			Если СтрокаНоменклатура.Количество = 1 Тогда 
				СтрокаТабличнойЧасти.Номенклатура = СтрокаНоменклатура.Ссылка;
			ИначеЕсли СтрокаНоменклатура.Количество > 1 Тогда
				ЗаписьОНеоднозначности = СписокНеоднозначностей.Добавить();
				ЗаписьОНеоднозначности.Идентификатор = СтрокаТаблицы.Идентификатор; 
				ЗаписьОНеоднозначности.Колонка = "Номенклатура";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(Товары, АдресТаблицыСопоставления);
	
КонецПроцедуры

// Возвращает список подходящих объектов ИБ для неоднозначного значения ячейки.
// 
// Параметры:
//   ПолноеИмяТабличнойЧасти  - Строка - Полное имя табличной части, в которую загружаются данные.
//  ИмяКолонки                - Строка - Имя колонки, в который возникла неоднозначность.
//  СписокНеоднозначностей    - Массив - Массив для заполнения с неоднозначными данными.
//  ЗагружаемыеЗначенияСтрока - Строка - Загружаемые данные на основании которых возникла неоднозначность.
//  ДополнительныеПараметры   - ЛюбойТип - Любые дополнительные сведения.
//
Процедура ЗаполнитьСписокНеоднозначностей(ПолноеИмяТабличнойЧасти, СписокНеоднозначностей, ИмяКолонки, ЗагружаемыеЗначенияСтрока, ДополнительныеПараметры) Экспорт
	
	Если ИмяКолонки = "Склад" Тогда

		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Склады.Ссылка
			|ИЗ
			|	Справочник.Склады КАК Склады
			|ГДЕ
			|	Склады.Наименование = &Наименование";
		Запрос.УстановитьПараметр("Наименование", ЗагружаемыеЗначенияСтрока.Склад);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СписокНеоднозначностей.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
		
	ИначеЕсли ИмяКолонки = "Номенклатура" Тогда

		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Номенклатура.Ссылка
			|ИЗ
			|	Справочник.Номенклатура КАК Номенклатура
			|ГДЕ
			|	Номенклатура.Наименование = &Наименование";
		Запрос.УстановитьПараметр("Наименование", ЗагружаемыеЗначенияСтрока.Номенклатура);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СписокНеоднозначностей.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла

#КонецОбласти
	
#Область ПроцедурыПроведенияДокумента

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	// 1. Товары
	// 2. ОС
	// 3. Амортизация ОС
	// 4. Денежные средства
	// 5. Расчеты с персоналом
	// 6. МБП
	// 7. Износ МБП
	// 8. Прочее Дт
	// 9. Прочее Кт
	Запрос = Новый Запрос;    
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	1 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.СчетУчета КАК СчетДт,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
		|	ВременнаяТаблицаТовары.Номенклатура КАК СубконтоДт1,
		|	ВременнаяТаблицаТовары.Склад КАК СубконтоДт2,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВедетсяУчетПоПартиям
		|			ТОГДА ВременнаяТаблицаШапка.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДт3,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
		|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
		|	0 КАК ВалютнаяСуммаДт,
		|	0 КАК ВалютнаяСуммаКт,
		|	ВременнаяТаблицаТовары.Сумма КАК Сумма,
		|	&СодержаниеТовары КАК Содержание,
		|	ВременнаяТаблицаТовары.Количество КАК КоличествоДт,
		|	0 КАК КоличествоКт
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ПО (ИСТИНА)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаОС.СчетУчета,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный),
		|	ВременнаяТаблицаОС.ОсновноеСредство,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	0,
		|	0,
		|	ВременнаяТаблицаОС.ПервоначальнаяСтоимость,
		|	&СодержаниеОС,
		|	0,
		|	0
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный),
		|	ВременнаяТаблицаОС.СчетУчета.ПарныйСчет,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаОС.ОсновноеСредство,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	0,
		|	0,
		|	ВременнаяТаблицаОС.НакопленнаяАмортизация,
		|	&СодержаниеОСАмортизация,
		|	0,
		|	0
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаОС.НакопленнаяАмортизация = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	4,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаДенежныеСредства.БанковскийСчетКасса.СчетУчета,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный),
		|	ВременнаяТаблицаДенежныеСредства.БанковскийСчетКасса,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаДенежныеСредства.ВалютаДенежныхСредств,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаДенежныеСредства.СуммаВал,
		|	0,
		|	ВременнаяТаблицаДенежныеСредства.Сумма,
		|	&СодержаниеДенежныеСредства,
		|	0,
		|	0
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДенежныеСредства КАК ВременнаяТаблицаДенежныеСредства
		|		ПО (ИСТИНА)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	5,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный),
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НачисленнаяЗаработнаяПлата),
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаРасчетыСПерсоналом.ФизЛицо,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	0,
		|	0,
		|	ВременнаяТаблицаРасчетыСПерсоналом.Сумма,
		|	&СодержаниеРасчетыСПерсоналом,
		|	0,
		|	0
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаРасчетыСПерсоналом КАК ВременнаяТаблицаРасчетыСПерсоналом
		|		ПО (ИСТИНА)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	6,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МБП),
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный),
		|	ВременнаяТаблицаМБП.Номенклатура,
		|	ВременнаяТаблицаМБП.Склад,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВедетсяУчетПоПартиям
		|			ТОГДА ВременнаяТаблицаШапка.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДт3,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	0,
		|	0,
		|	ВременнаяТаблицаМБП.Сумма,
		|	&СодержаниеМБП,
		|	ВременнаяТаблицаМБП.Количество,
		|	0
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаМБП КАК ВременнаяТаблицаМБП
		|		ПО (ИСТИНА)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	7,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный),
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НачисленныйИзносМБП),
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаМБП.Номенклатура,
		|	ВременнаяТаблицаМБП.Склад,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВедетсяУчетПоПартиям
		|			ТОГДА ВременнаяТаблицаШапка.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДт3,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	0,
		|	0,
		|	ВременнаяТаблицаМБП.СуммаИзноса,
		|	&СодержаниеМБПИзнос,
		|	0,
		|	0
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаМБП КАК ВременнаяТаблицаМБП
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаМБП.СуммаИзноса = 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	8,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаПрочее.СчетУчета,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный),
		|	ВременнаяТаблицаПрочее.Субконто1,
		|	ВременнаяТаблицаПрочее.Субконто2,
		|	ВременнаяТаблицаПрочее.Субконто3,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаПрочее.Валюта,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаПрочее.ВалютнаяСумма,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаПрочее.Сумма,
		|	&СодержаниеПрочее,
		|	ВременнаяТаблицаПрочее.Количество,
		|	0
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаПрочее КАК ВременнаяТаблицаПрочее
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаПрочее.ВидСальдо = ""СальдоДт""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	9,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный),
		|	ВременнаяТаблицаПрочее.СчетУчета,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаПрочее.Субконто1,
		|	ВременнаяТаблицаПрочее.Субконто2,
		|	ВременнаяТаблицаПрочее.Субконто3,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаПрочее.Валюта,
		|	0,
		|	ВременнаяТаблицаПрочее.ВалютнаяСумма,
		|	ВременнаяТаблицаПрочее.Сумма,
		|	&СодержаниеПрочее,
		|	0,
		|	ВременнаяТаблицаПрочее.Количество
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаПрочее КАК ВременнаяТаблицаПрочее
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаПрочее.ВидСальдо = ""СальдоКт""";
	Запрос.УстановитьПараметр("СодержаниеТовары", НСтр("ru = 'Ввод остатков товаров'")); 
	Запрос.УстановитьПараметр("СодержаниеОС", НСтр("ru = 'Ввод остатков ОС (перв.стоимость)'")); 
	Запрос.УстановитьПараметр("СодержаниеОСАмортизация", НСтр("ru = 'Ввод остатков по ОС (начисл.амортизация)'")); 
	Запрос.УстановитьПараметр("СодержаниеДенежныеСредства", НСтр("ru = 'Ввод остатков по денежным средствам'")); 
	Запрос.УстановитьПараметр("СодержаниеПрочее", НСтр("ru = 'Ввод остатков (прочее)'")); 
	Запрос.УстановитьПараметр("СодержаниеРасчетыСПерсоналом", НСтр("ru = 'Ввод остатков по начислению заработной платы'")); 
	Запрос.УстановитьПараметр("СодержаниеМБП", НСтр("ru = 'Ввод остатков МБП'")); 
	Запрос.УстановитьПараметр("СодержаниеМБПИзнос", НСтр("ru = 'Ввод остатков МБП с износом'")); 
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаХозрасчетный", РезультатЗапроса.Выгрузить());
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаПараметрыУчетаОС(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаОС.ДатаПринятияКУчету КАК период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаОС.ОсновноеСредство,
		|	ВременнаяТаблицаОС.ИнвентарныйНомер,
		|	ВременнаяТаблицаОС.СчетУчета,
		|	ВременнаяТаблицаОС.ГруппаНУ,
		|	ВременнаяТаблицаОС.ПервоначальнаяСтоимость,
		|	ВременнаяТаблицаОС.ЛиквидационнаяСтоимость,
		|	ВременнаяТаблицаОС.СрокСлужбы,
		|	ВременнаяТаблицаОС.СпособНачисленияАмортизации,
		|	ВременнаяТаблицаОС.СпособыОтраженияРасходовПоАмортизации,
		|	ВременнаяТаблицаОС.СтоимостьДляВычисленияАмортизации,
		|	ВременнаяТаблицаОС.СпособПоступления,
		|	ВременнаяТаблицаОС.ДатаПринятияКУчету КАК ДатаВводаВЭксплуатацию
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПараметрыУчетаОС", РезультатЗапроса.Выгрузить()); 
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСостоянияОС(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаОС.ДатаПринятияКУчету КАК период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаОС.ОсновноеСредство,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.ПринятоКУчету) КАК Состояние
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСостоянияОС", РезультатЗапроса.Выгрузить()); 
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаМестонахождениеОС(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаОС.ДатаПринятияКУчету КАК период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаОС.ОсновноеСредство,
		|	ВременнаяТаблицаШапка.Склад,
		|	ВременнаяТаблицаОС.МОЛ,
		|	ВременнаяТаблицаОС.Подразделение
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаМестонахождениеОС", РезультатЗапроса.Выгрузить()); 
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСобытияОС(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаОС.ДатаПринятияКУчету КАК период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаОС.ОсновноеСредство,
		|	ВременнаяТаблицаОС.СобытиеОС КАК Событие,
		|	ВременнаяТаблицаОС.НомерДокументаПринятияКУчету КАК НомерДокумента,
		|	ВременнаяТаблицаОС.НазваниеДокументаПринятияКУчету КАК НазваниеДокумента
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСобытияОС", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСоставОС(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаОС.ДатаПринятияКУчету КАК период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаОС.ОсновноеСредство,
		|	ВременнаяТаблицаОС.Комплект,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийВСоставеОС.ВключеноВСостав) КАК СостояниеВСоставеОС
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаОС.Комплект = ЗНАЧЕНИЕ(Справочник.ОсновныеСредства.ПустаяСсылка)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСоставОС", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаНалоговаяАмортизация(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.Дата КАК Год,
		|	ВременнаяТаблицаГруппаНалоговогоУчета.ГруппаНУ,
		|	ВременнаяТаблицаГруппаНалоговогоУчета.ОсновноеСредство,
		|	ВременнаяТаблицаГруппаНалоговогоУчета.БалансоваяСтоимостьНаКонецГода,
		|	ВременнаяТаблицаГруппаНалоговогоУчета.АмортизацияЗаГод,
		|	ВременнаяТаблицаГруппаНалоговогоУчета.СуммаПоступленияОстаток,
		|	ВременнаяТаблицаГруппаНалоговогоУчета.СуммаВыбытияОстаток
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаГруппаНалоговогоУчета КАК ВременнаяТаблицаГруппаНалоговогоУчета
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаНалоговаяАмортизация", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаНалоговыеДекларации(ДокументСсылка, СтруктураДополнительныеСвойства) 

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаНалоговаяДекларация.Убыток,
		|	ВременнаяТаблицаНалоговаяДекларация.УбытокОтРеализацииЦенныхБумаг,
		|	ВременнаяТаблицаНалоговаяДекларация.ПокрытыйУбытокПрошлыхЛет,
		|	ВременнаяТаблицаНалоговаяДекларация.Прибыль
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаНалоговаяДекларация КАК ВременнаяТаблицаНалоговаяДекларация
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаНалоговыеДекларации", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры      

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСведенияОбИмуществе(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаОС.ОсновноеСредство,
		|	ВременнаяТаблицаОС.ГруппаИмущества,
		|	ВременнаяТаблицаОС.ДатаВводаВЭксплуатацию,
		|	ВременнаяТаблицаОС.КодИмущества,
		|	ВременнаяТаблицаОС.МатериалСтен,
		|	ВременнаяТаблицаОС.ОсновнаяПлощадь КАК ЖилаяПлощадь,
		|	ВременнаяТаблицаОС.НежилаяПлощадь,
		|	ВременнаяТаблицаОС.РегиональныйКоэффициент,
		|	ВременнаяТаблицаОС.ЗональныйКоэффициент,
		|	ВременнаяТаблицаОС.ОтраслевойКоэффициент,
		|	ВременнаяТаблицаОС.КатегорияИмущества КАК КатегорияОбъектаИмущества,
		|	ВременнаяТаблицаОС.КодНазначенияИмущества,
		|	ВременнаяТаблицаОС.КодПользователяИмущества
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|ГДЕ
		|	(ВременнаяТаблицаОС.ГруппаИмущества = ЗНАЧЕНИЕ(Справочник.ГруппыИмущества.ГИ1)
		|			ИЛИ ВременнаяТаблицаОС.ГруппаИмущества = ЗНАЧЕНИЕ(Справочник.ГруппыИмущества.ГИ2)
		|			ИЛИ ВременнаяТаблицаОС.ГруппаИмущества = ЗНАЧЕНИЕ(Справочник.ГруппыИмущества.ГИ3))";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСведенияОбИмуществе", РезультатЗапроса.Выгрузить());
КонецПроцедуры // СформироватьТаблицаСведенияОбИмуществе

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСведенияОТранспорте(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаОС.ОсновноеСредство,
		|	ВременнаяТаблицаОС.ГруппаИмущества,
		|	ВременнаяТаблицаОС.ДатаВводаВЭксплуатацию,
		|	ВременнаяТаблицаОС.ВидТранспорта,
		|	ВременнаяТаблицаОС.ОбъемДвигателя,
		|	ВременнаяТаблицаОС.ГосНомер
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаОС.ГруппаИмущества = ЗНАЧЕНИЕ(Справочник.ГруппыИмущества.ГИ4)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСведенияОТранспорте", РезультатЗапроса.Выгрузить());
КонецПроцедуры // СформироватьТаблицаСведенияОТранспорте

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка,
		|	ТаблицаДокумента.Дата,
		|	ТаблицаДокумента.Организация,
		|	ТаблицаДокумента.Подразделение,
		|	ТаблицаДокумента.СчетУчета,
		|	ТаблицаДокумента.РазделУчета,
		|	ТаблицаДокумента.Склад,
		|	&ВедетсяУчетПоПартиям КАК ВедетсяУчетПоПартиям
		|ПОМЕСТИТЬ ВременнаяТаблицаШапка
		|ИЗ
		|	Документ.ВводНачальныхОстатков КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Склад,
		|	ТаблицаДокумента.Номенклатура,
		|	ТаблицаДокумента.Количество,
		|	ТаблицаДокумента.Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаТовары
		|ИЗ
		|	Документ.ВводНачальныхОстатков.Товары КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Склад,
		|	ТаблицаДокумента.Номенклатура,
		|	ТаблицаДокумента.Количество,
		|	ТаблицаДокумента.СуммаИзноса,
		|	ТаблицаДокумента.МОЛ,
		|	ТаблицаДокумента.Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаМБП
		|ИЗ
		|	Документ.ВводНачальныхОстатков.МБП КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.ФизЛицо,
		|	ТаблицаДокумента.Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаРасчетыСПерсоналом
		|ИЗ
		|	Документ.ВводНачальныхОстатков.РасчетыСПерсоналом КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.БанковскийСчетКасса,
		|	ТаблицаДокумента.ВалютаДенежныхСредств,
		|	ТаблицаДокумента.СуммаВал,
		|	ТаблицаДокумента.Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаДенежныеСредства
		|ИЗ
		|	Документ.ВводНачальныхОстатков.ДенежныеСредства КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.ДатаПринятияКУчету,
		|	ТаблицаДокумента.ОсновноеСредство,
		|	ТаблицаДокумента.ИнвентарныйНомер,
		|	ТаблицаДокумента.СчетУчета,
		|	ТаблицаДокумента.ГруппаНУ,
		|	ТаблицаДокумента.ПервоначальнаяСтоимость,
		|	ТаблицаДокумента.ЛиквидационнаяСтоимость,
		|	ТаблицаДокумента.НакопленнаяАмортизация,
		|	ТаблицаДокумента.СрокСлужбы,
		|	ТаблицаДокумента.СпособНачисленияАмортизации,
		|	ТаблицаДокумента.СпособыОтраженияРасходовПоАмортизации,
		|	ТаблицаДокумента.СтоимостьДляВычисленияАмортизации,
		|	ТаблицаДокумента.МОЛ,
		|	ТаблицаДокумента.Подразделение,
		|	ТаблицаДокумента.СобытиеОС,
		|	ТаблицаДокумента.СпособПоступления,
		|	ТаблицаДокумента.НомерДокументаПринятияКУчету,
		|	ТаблицаДокумента.НазваниеДокументаПринятияКУчету,
		|	ТаблицаДокумента.Комплект,
		|	ТаблицаДокумента.ГруппаИмущества,
		|	ТаблицаДокумента.ДатаВводаВЭксплуатацию,
		|	ТаблицаДокумента.КодИмущества,
		|	ТаблицаДокумента.МатериалСтен,
		|	ТаблицаДокумента.ОсновнаяПлощадь,
		|	ТаблицаДокумента.НежилаяПлощадь,
		|	ТаблицаДокумента.РегиональныйКоэффициент,
		|	ТаблицаДокумента.ЗональныйКоэффициент,
		|	ТаблицаДокумента.ОтраслевойКоэффициент,
		|	ТаблицаДокумента.КатегорияИмущества,
		|	ТаблицаДокумента.КодНазначенияИмущества,
		|	ТаблицаДокумента.КодПользователяИмущества,
		|	ТаблицаДокумента.ВидТранспорта,
		|	ТаблицаДокумента.ОбъемДвигателя,
		|	ТаблицаДокумента.ГосНомер
		|ПОМЕСТИТЬ ВременнаяТаблицаОС
		|ИЗ
		|	Документ.ВводНачальныхОстатков.ОС КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.БалансоваяСтоимостьНаКонецГода,
		|	ТаблицаДокумента.АмортизацияЗаГод,
		|	ТаблицаДокумента.ГруппаНУ,
		|	ТаблицаДокумента.ОсновноеСредство,
		|	ТаблицаДокумента.СуммаПоступленияОстаток,
		|	ТаблицаДокумента.СуммаВыбытияОстаток
		|ПОМЕСТИТЬ ВременнаяТаблицаГруппаНалоговогоУчета
		|ИЗ
		|	Документ.ВводНачальныхОстатков.ГруппаНалоговогоУчета КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.УбытокОтРеализацииЦенныхБумаг,
		|	ТаблицаДокумента.Убыток,
		|	ТаблицаДокумента.ПокрытыйУбытокПрошлыхЛет,
		|	ТаблицаДокумента.Прибыль
		|ПОМЕСТИТЬ ВременнаяТаблицаНалоговаяДекларация
		|ИЗ
		|	Документ.ВводНачальныхОстатков.НалоговаяДекларация КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.СчетУчета,
		|	ТаблицаДокумента.Субконто1,
		|	ТаблицаДокумента.Субконто2,
		|	ТаблицаДокумента.Субконто3,
		|	ТаблицаДокумента.Количество,
		|	ТаблицаДокумента.Валюта,
		|	ТаблицаДокумента.Курс,
		|	ТаблицаДокумента.ВалютнаяСумма,
		|	ТаблицаДокумента.ВидСальдо,
		|	ТаблицаДокумента.Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаПрочее
		|ИЗ
		|	Документ.ВводНачальныхОстатков.Прочее КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	СпособОценкиТМЗ = БухгалтерскийУчетСервер.СпособОценкиТМЗ(
		СтруктураДополнительныеСвойства.ДляПроведения.Дата,
		СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	ВедетсяУчетПоПартиям = СпособОценкиТМЗ <> Перечисления.СпособыОценки.ПоСредней;
	
	Запрос.УстановитьПараметр("ВедетсяУчетПоПартиям", ВедетсяУчетПоПартиям);
	Запрос.Выполнить();      	
	
	СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства);			 
	// ОС
	СформироватьТаблицаПараметрыУчетаОС(ДокументСсылка, СтруктураДополнительныеСвойства); 
	СформироватьТаблицаСостоянияОС(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаМестонахождениеОС(ДокументСсылка, СтруктураДополнительныеСвойства); 
	СформироватьТаблицаСобытияОС(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСоставОС(ДокументСсылка, СтруктураДополнительныеСвойства);
	// Сведения об имуществе
	СформироватьТаблицаСведенияОбИмуществе(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСведенияОТранспорте(ДокументСсылка, СтруктураДополнительныеСвойства);
	// Декларация
	СформироватьТаблицаНалоговаяАмортизация(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаНалоговыеДекларации(ДокументСсылка, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Сформировать печатные формы объектов
//
Функция ПечатнаяФорма(МассивОбъектов, ОбъектыПечати)
	Перем Ошибки;
	
	ТекстЗапроса =
	
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.Номер,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация.НаименованиеПолное КАК ОрганизацияПолноеНаименование,
	|	ТаблицаДокумента.Подразделение,
	|	ТаблицаДокумента.ОС.(
	|		НомерСтроки,
	|		ВыработкаКоличество,
	|		ДатаПринятияКУчету,
	|		ИнвентарныйНомер,
	|		МОЛ,
	|		НазваниеДокументаПринятияКУчетуРегл,
	|		НакопленнаяАмортизация,
	|		ОсновноеСредство,
	|		ПараметрВыработки,
	|		ПервоначальнаяСтоимость,
	|		СостояниеПринятияКУчетуРегл,
	|		СпособПоступления,
	|		СрокСлужбы,
	|		СчетУчета.ПарныйСчет КАК СчетНачисленияАмортизации,
	|		СчетУчета,
	|		СтоимостьДляВычисленияАмортизации,
	|		ГруппаНУ,
	|		КоэффициентАмортизации,
	|		ГруппаИмущества
	|	)
	|ИЗ
	|	Документ.ВводНачальныхОстатков КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В(&СписокДокументов)";		
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ВводНачальныхОстатков_ОписьОС";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВводНачальныхОстатков.ПФ_MXL_ОписьОС");
	
	Пока Выборка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ДанныеПечати = Новый Структура;
		
		ВременнаяТаблицаОС = Выборка.ОС.Выгрузить();                                      
		
		ДанныеПечати.Вставить("ДатаДокумента", Формат(Выборка.Дата,"ДЛФ=DD"));
		ДанныеПечати.Вставить("НомерДокумента", Выборка.Номер);
		ДанныеПечати.Вставить("ПредставлениеОрганизации", Выборка.ОрганизацияПолноеНаименование);
		ДанныеПечати.Вставить("ПервоначальнаяСтоимостьИтого", ВременнаяТаблицаОС.Итог("ПервоначальнаяСтоимость"));
		ДанныеПечати.Вставить("СтоимостьВычАморИтого", ВременнаяТаблицаОС.Итог("СтоимостьДляВычисленияАмортизации"));
		ДанныеПечати.Вставить("НакопленнаяАмортизацияИтого", ВременнаяТаблицаОС.Итог("НакопленнаяАмортизация"));
		
		МассивОбластейМакета = Новый Массив;  
		МассивОбластейМакета.Добавить("Заголовок");
		МассивОбластейМакета.Добавить("ШапкаТаблицы");
		МассивОбластейМакета.Добавить("ДеталиТаблицы");
		МассивОбластейМакета.Добавить("ИтогиТаблицы");
		
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			
			Если ИмяОбласти = "ДеталиТаблицы" Тогда
				Для Каждого СтрокаТабличнойЧасти Из ВременнаяТаблицаОС Цикл 
					ОбластьМакета.Параметры.Заполнить(СтрокаТабличнойЧасти);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;	
			Иначе
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЕсли;
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб=Истина;
	ТабличныйДокумент.ОриентацияСтраницы= ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ВводНачальныхОстатковПоОС") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ВводНачальныхОстатковПоОС", 
		НСтр("ru = 'Ввод начальных остатков по ОС'"), 
		ПечатнаяФорма(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт		
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ВводНачальныхОстатковПоОС";
	КомандаПечати.Представление = НСтр("ru = 'Ввод начальных остатков по ОС'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 1;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

