#Область ОбработчикиСобытийФормы

// Процедура - обработчик события ПриСозданииНаСервере.
// В процедуре осуществляется
// - инициализация реквизитов формы,
// - установка параметров функциональных опций формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	ЗаполнитьЗначенияСвойств(Объект, Параметры);
	
	Если ТипЗнч(Параметры.Ссылка) = Тип("ДокументСсылка.СчетФактураВыписанный")  Тогда   
		ПодобратьДокументыДляСФВыписанный();
	ИначеЕсли ТипЗнч(Параметры.Ссылка) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
		ПодобратьДокументыДляСФПолученный();		
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Процедура вызывается при нажатии кнопки "СнятьВсеФлажки". 
//
&НаКлиенте
Процедура СнятьВсеФлажки(Команда)
	Для каждого СтрокаТабличнойЧасти из Объект.ДокументыПодбора Цикл
		СтрокаТабличнойЧасти.Подобрать = Ложь;
	КонецЦикла;
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "УстановитьВсеФлажки". 
//
&НаКлиенте
Процедура УстановитьВсеФлажки(Команда)
	Для каждого СтрокаТабличнойЧасти из Объект.ДокументыПодбора Цикл
		СтрокаТабличнойЧасти.Подобрать = Истина;
	КонецЦикла;
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "ПеренестиВДокумент". 
//
&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	Закрыть(ЗаписатьПодборВХранилище());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура подбирает документы для заполнения ТЧ "ДокументыПодбора".
// Вызывается при открытии формы обработки из документа "СчетФактураВыписанный".
//
&НаСервере
Процедура ПодобратьДокументыДляСФВыписанный()

	Запрос = Новый Запрос;
	
	Если Объект.ДокументВозврата Тогда
		Запрос.Текст = 		
			"ВЫБРАТЬ
			|	Реализация.ДокументРеализации КАК ДокументОплаты,
			|	Реализация.ДокументРеализации.СуммаДокумента КАК СуммаДокумента
			|ИЗ
			|	РегистрНакопления.РеализацияТоваров.Обороты(
			|			&НачалоПериода, 
			|			&КонецПериода, 
			|			,
			|			Организация = &Организация 
			|			И ДокументРеализации ССЫЛКА Документ.ВозвратТоваровОтПокупателя
			|			И Контрагент = &Контрагент) КАК Реализация
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаФактурыВыписанные КАК СчетаФактурыВыписанные
			|		ПО (СчетаФактурыВыписанные.Документ = Реализация.ДокументРеализации)
			|			И (СчетаФактурыВыписанные.Организация = &Организация)
			|			И (СчетаФактурыВыписанные.Контрагент = &Контрагент)
			|			И (СчетаФактурыВыписанные.Документ ССЫЛКА Документ.ВозвратТоваровОтПокупателя)
			|ГДЕ
			|	СчетаФактурыВыписанные.Документ ЕСТЬ NULL";
	
	Иначе
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	РеализацияИтоги.ДокументРеализации КАК ДокументОплаты,
			|	РеализацияИтоги.ДокументРеализации.СуммаДокумента КАК СуммаДокумента
			|ИЗ
			|	РегистрСведений.РеализацияИтоги КАК РеализацияИтоги
			|ГДЕ
			|	РеализацияИтоги.ДокументРеализации ССЫЛКА Документ.РеализацияТоваровУслуг
			|	И РеализацияИтоги.ДокументРеализации.Дата МЕЖДУ &НачалоПериода И &КонецПериода
			|	И (РеализацияИтоги.СерияБланкаСФ = """"
			|	ИЛИ РеализацияИтоги.СерияБланкаСФ = ""ДПБУ""
			|	ИЛИ РеализацияИтоги.НомерБланкаСФ = """")
			|	И РеализацияИтоги.Контрагент = &Контрагент";
			
	КонецЕсли;
		
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", Объект.КонецПериода);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	Объект.ДокументыПодбора.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

// Процедура подбирает документы для заполнения ТЧ "ДокументыПодбора".
// Вызывается при открытии формы обработки из документа "СчетФактураПолученный".
//
&НаСервере
Процедура ПодобратьДокументыДляСФПолученный()

	Запрос = Новый Запрос;
	
	Если Объект.ДокументВозврата Тогда
		Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияОПоступлении.ДокументСсылка КАК ДокументОплаты,
			|	СведенияОПоступлении.ДокументСсылка.СуммаДокумента КАК СуммаДокумента
			|ИЗ
			|	РегистрСведений.СведенияОПоступлении КАК СведенияОПоступлении
			|ГДЕ
			|	СведенияОПоступлении.ДокументСсылка ССЫЛКА Документ.ВозвратТоваровПоставщику
			|	И СведенияОПоступлении.ДокументСсылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
			|	И (СведенияОПоступлении.СерияБланкаСФ = """"
			|	ИЛИ СведенияОПоступлении.СерияБланкаСФ = ""ДПБУ""
			|	ИЛИ СведенияОПоступлении.НомерБланкаСФ = """")
			|	И СведенияОПоступлении.Контрагент = &Контрагент";		
	Иначе
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Поступления.ДокументСсылка КАК ДокументОплаты,
			|	Поступления.ДокументСсылка.СуммаДокумента КАК СуммаДокумента
			|ИЗ
			|	РегистрНакопления.ПоступлениеТоваров.Обороты(
			|			&НачалоПериода, 
			|			&КонецПериода, 
			|			, 
			|			Организация = &Организация
			|			И ДокументСсылка ССЫЛКА Документ.ДополнительныеРасходы
			|			И Контрагент = &Контрагент) КАК Поступления
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаФактурыПолученные КАК СчетаФактурыПолученные
			|		ПО СчетаФактурыПолученные.Документ = Поступления.ДокументСсылка
			|			И (СчетаФактурыПолученные.Организация = &Организация)
			|			И (СчетаФактурыПолученные.Контрагент = &Контрагент)
			|			И (СчетаФактурыПолученные.Документ ССЫЛКА Документ.ДополнительныеРасходы)
			|ГДЕ
			|	СчетаФактурыПолученные.Документ ЕСТЬ NULL
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	СведенияОПоступлении.ДокументСсылка,
			|	СведенияОПоступлении.ДокументСсылка.СуммаДокумента
			|ИЗ
			|	РегистрСведений.СведенияОПоступлении КАК СведенияОПоступлении
			|ГДЕ
			|	СведенияОПоступлении.ДокументСсылка ССЫЛКА Документ.ПоступлениеТоваровУслуг
			|	И СведенияОПоступлении.ДокументСсылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
			|	И (СведенияОПоступлении.СерияБланкаСФ = """"
			|	ИЛИ СведенияОПоступлении.СерияБланкаСФ = ""ДПБУ""
			|	ИЛИ СведенияОПоступлении.НомерБланкаСФ = """")
			|	И СведенияОПоступлении.Контрагент = &Контрагент
			|	И ((ВЫРАЗИТЬ(СведенияОПоступлении.ДокументСсылка КАК Документ.ПоступлениеТоваровУслуг ).ВидОперации = ЗНАЧЕНИЕ(Справочник.ОперацииПоступлениеТоваровУслуг.Покупка))
			|	ИЛИ (ВЫРАЗИТЬ(СведенияОПоступлении.ДокументСсылка КАК Документ.ПоступлениеТоваровУслуг ).ВидОперации = ЗНАЧЕНИЕ(Справочник.ОперацииПоступлениеТоваровУслуг.ЕАЭС)))";		
	КонецЕсли;	
			
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", Объект.КонецПериода);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	Объект.ДокументыПодбора.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

// Процедура записывает подобранные документы в хранилище.
//
// Возвращаемое значение:
//  Структура - адрес в хранилище и идентификатор формы владельца.
//
&НаСервере
Функция ЗаписатьПодборВХранилище()
	
	Структура = Новый Структура();
	Структура.Вставить("Подобрать", Истина);
	МассивВозврата = Объект.ДокументыПодбора.НайтиСтроки(Структура);

	АдресКорзиныВХранилище = ПоместитьВоВременноеХранилище(МассивВозврата, Объект.УникальныйИдентификаторФормыВладельца);
	Возврат Новый Структура("АдресКорзиныВХранилище, УникальныйИдентификаторФормыВладельца", АдресКорзиныВХранилище, Объект.УникальныйИдентификаторФормыВладельца);
	
КонецФункции

#КонецОбласти



