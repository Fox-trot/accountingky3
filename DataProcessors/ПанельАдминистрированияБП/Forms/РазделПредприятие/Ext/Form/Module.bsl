&НаКлиенте
Перем ОбновитьИнтерфейс;

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	#Если НЕ ВебКлиент Тогда
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбновитьИнтерфейс();
	КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

// Процедура управляет видимостью группы ВЕБ Приложение
//
&НаКлиенте
Процедура УправлениеВидимостью()
	
	#Если НЕ ВебКлиент Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВЕБПриложение", "Видимость", Ложь);
		
	#Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВЕБПриложение", "Видимость", Истина);
		
	#КонецЕсли
	
КонецПроцедуры // УправлениеВидимостью()

&НаСервере
Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
	
	Если РежимРаботы.ЭтоАдминистраторСистемы 
		ИЛИ ОбщегоНазначенияПовтИсп.ДоступноИспользованиеРазделенныхДанных() Тогда
		
		//Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьНесколькоОрганизаций" ИЛИ РеквизитПутьКДанным = "" Тогда
		//	НаборКонстант.ИспользоватьНесколькоОрганизаций = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
		//	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СправочникОрганизации", "Доступность", НаборКонстант.ИспользоватьНесколькоОрганизаций);
		//КонецЕсли;
		//
		//Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьНесколькоОрганизаций" ИЛИ РеквизитПутьКДанным = "" Тогда
		//	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СправочникПодразделения", "Доступность", НаборКонстант.ИспользоватьНесколькоОрганизаций);
		//КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	Результат = Новый Структура;
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	Если Результат.Свойство("ТекущееЗначение") Тогда
		
		// Откат значения к предыдущему
		ВернутьЗначениеРеквизитаФормы(РеквизитПутьКДанным, Результат.ТекущееЗначение);
		
	Иначе
		
		СохранитьЗначениеРеквизита(РеквизитПутьКДанным, Результат);
		
		УстановитьДоступность(РеквизитПутьКДанным);
		
		ОбновитьПовторноИспользуемыеЗначения();
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура СохранитьЗначениеРеквизита(РеквизитПутьКДанным, Результат)
	
	// Сохранение значений реквизитов, не связанных с константами напрямую (в отношении один-к-одному).
	Если РеквизитПутьКДанным = "" Тогда
		Возврат;
	КонецЕсли;
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	Иначе
		// Определение имени и запись значения реквизита в соответствующей константе из "НаборКонстант".
		// Используется для тех реквизитов формы, которые связаны с константами напрямую (в отношении один-к-одному).
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
		
		ОповещениеФорм = Новый Структура("ИмяСобытия, Параметр, Источник", "Запись_НаборКонстант", Новый Структура("Значение", КонстантаЗначение), КонстантаИмя);
		Результат.Вставить("ОповещениеФорм", ОповещениеФорм);
	КонецЕсли;
	
КонецПроцедуры

// Процедура присваивает переданое значение реквизиту формы
//
// Используется в случае, если новое значение не прошло проверку
//
//
&НаСервере
Процедура ВернутьЗначениеРеквизитаФормы(РеквизитПутьКДанным, ТекущееЗначение)
	
	Если РеквизитПутьКДанным = "НаборКонстант.ФункциональнаяОпцияУчетПоНесколькимПодразделениям" Тогда
		
		ЭтаФорма.НаборКонстант.ФункциональнаяОпцияУчетПоНесколькимПодразделениям = ТекущееЗначение;
		
	ИначеЕсли РеквизитПутьКДанным = "НаборКонстант.ФункциональнаяОпцияУчетПоНесколькимНаправлениямДеятельности" Тогда
		
		ЭтаФорма.НаборКонстант.ФункциональнаяОпцияУчетПоНесколькимНаправлениямДеятельности = ТекущееЗначение;
		
	ИначеЕсли РеквизитПутьКДанным = "НаборКонстант.ФункциональнаяОпцияУчетВнеоборотныхАктивов" Тогда
		
		ЭтаФорма.НаборКонстант.ФункциональнаяОпцияУчетВнеоборотныхАктивов = ТекущееЗначение;
		
	КонецЕсли;
	
КонецПроцедуры // ВернутьЗначениеРеквизитаФормы()

&НаСервереБезКонтекста
Функция ЗаполнитьСправочникГНСНаСервере()
	Возврат Справочники.ГНС.ЗаполнитьПоУмолчанию();
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийФормы

// Процедура - обработчик события ПриСозданииНаСервере формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Значения реквизитов формы
	РежимРаботы = ОбщегоНазначенияПовтИсп.РежимРаботыПрограммы();
	РежимРаботы = Новый ФиксированнаяСтруктура(РежимРаботы);
	
	УстановитьДоступность();
	
КонецПроцедуры // ПриСозданииНаСервере()

// Процедура - обработчик события ПриСозданииНаСервере формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеВидимостью();
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события ПриЗакрытии формы.
&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	ОбновитьИнтерфейсПрограммы();
	
КонецПроцедуры // ПриЗакрытии()

#КонецОбласти

#Область ОбработчикиКомандФормы

// Процедура - обработчик команды НастройкаУчетаПоОрганизациямКомпании
//
&НаКлиенте
Процедура НастройкаУчетаПоОрганизациям(Команда)
	ОткрытьФорму("Обработка.ПанельАдминистрированияБП.Форма.НастройкаУчетаПоОрганизации");
КонецПроцедуры // НастройкаУчетаПоОрганизациямКомпании()

// Процедура - обработчик команды СправочникСтруктурныеЕдиницыПодразделение.
//
&НаКлиенте
Процедура СправочникПодразделения(Команда)
	ОткрытьФорму("Справочник.ПодразделенияОрганизаций.ФормаСписка");
КонецПроцедуры // СправочникСтруктурныеЕдиницыПодразделение()

&НаКлиенте
Процедура ЗаполнитьСправочникГНС(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтветНаВопросЗаполнитьСправочникГНС", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Справочник ""ГНС"" будет перезаполнен. Продолжить?'");
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60);
КонецПроцедуры

// Процедура - обработчик команды СправочникОрганизации.
//
&НаКлиенте
Процедура СправочникОрганизации(Команда)
	Если НаборКонстант.ИспользоватьНесколькоОрганизаций Тогда 
		ОткрытьФорму("Справочник.Организации.ФормаСписка");
	Иначе 	
		Парам = Новый Структура("Ключ", БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьЗначениеНастройки("ОсновнаяОрганизация"));
		ОткрытьФорму("Справочник.Организации.ФормаОбъекта", Парам);
	КонецЕсли;	
КонецПроцедуры // СправочникОрганизации()

&НаКлиенте
Процедура Налогооблажение(Команда)
	ТекстСообщения = НСтр("ru = 'В разработке.'");
	ПоказатьПредупреждение(, ТекстСообщения, 30);
КонецПроцедуры

&НаКлиенте
Процедура НДСИНСП(Команда)
	ТекстСообщения = НСтр("ru = 'В разработке.'");
	ПоказатьПредупреждение(, ТекстСообщения, 30);
КонецПроцедуры

&НаКлиенте
Процедура НастройкаКонтрагентовДляСФВДокументеРеализацияТМЗ(Команда)
	ОткрытьФорму("Обработка.ПанельАдминистрированияБП.Форма.НастройкаКонтрагентовДляСФВДокументеРеализацияТоваровУслуг");
КонецПроцедуры

&НаКлиенте
Процедура УчетДвиженияОС(Команда)
	ОткрытьФорму("Обработка.ПанельАдминистрированияБП.Форма.НастройкаУчетаДвиженийПоОсновнымСредствам");
КонецПроцедуры

&НаКлиенте
Процедура УчетнаяПолитика(Команда)
	ОткрытьФорму("РегистрСведений.УчетнаяПолитикаОрганизаций.ФормаСписка");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиРезультатовИнтерактивныхДействий

&НаКлиенте
Процедура ОтветНаВопросЗаполнитьСправочникГНС(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ПоказатьОповещениеПользователя(НСтр("ru = 'Выполняется заполнение...'"),,,БиблиотекаКартинок.Информация32);
		МассивЭлементов = ЗаполнитьСправочникГНСНаСервере();	
		ТекстОповещения = НСтр("ru='Результат'");
		ТекстПояснения = НСтр("ru='Добавлено/изменено: %Количество% элементов справочника'");
		ТекстПояснения = СтрЗаменить(ТекстПояснения, "%Количество%", МассивЭлементов.Количество());
		ПоказатьОповещениеПользователя(ТекстОповещения,,ТекстПояснения,БиблиотекаКартинок.Информация32);		
		ОбновитьИнтерфейс();
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти






