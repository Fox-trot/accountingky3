
#Область ОбработчикиФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДобавитьОрганизацию(Ложь, Справочники.Организации.ОсновнаяОрганизация);
	
	КэшЗначений = Новый Структура;
	КэшЗначений.Вставить("Пользователь", Пользователи.АвторизованныйПользователь());
	КэшЗначений.Вставить("РазрешитьЗакрытие", Ложь);
	КэшЗначений.Вставить("ДополнительныйПараметр", НачалоРаботыСПрограммойСервер.ЗначениеДополнительногоПараметра());
	КэшЗначений.Вставить("ТекущийИндексОрганизации", Неопределено);
	
	ЗаполнитьДанныеПользователя();
	
	ЗаполнитьТЧСтавкиНДС_НСП();
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаНавигация", "Видимость", НЕ СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации());
	
	Период = НачалоГода(ТекущаяДатаСеанса());
	РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФорме(ЭтаФорма, "УчетнаяПолитикаОрганизаций", Справочники.Организации.ОсновнаяОрганизация);
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписей(ЭтаФорма, "УчетнаяПолитикаОрганизаций", Справочники.Организации.ОсновнаяОрганизация);
	УчетнаяПолитикаОрганизаций.Период = Период;	
	
	Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	НомерТекущейСтраницы = 1;
	ВсегоСтраниц = 7;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбработатьПеремещениеПоСтраницам(0);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ПрисоединенныйФайл" Тогда
		
		СтрокаОрганизации = СтрокаОрганизацииПоИндексуНаКлиенте(КэшЗначений.ТекущийИндексОрганизации);
		СтрокаОрганизации.ФайлЛоготип = ?(ТипЗнч(Источник) = Тип("Массив"), Источник[0], Источник);
		
		ОбновитьИзображениеЛоготипа(СтрокаОрганизации);
		
		КэшЗначений.ТекущийИндексОрганизации = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ КэшЗначений.РазрешитьЗакрытие Тогда
		
		ТекстПредупреждения = НСтр("ru ='Заполните, пожалуйста, обязательные поля.
			|Работа программы без указанных сведений затруднительна.'");
			
		ПоказатьПредупреждение(, ТекстПредупреждения);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиРеквизитов

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Индекс = ИндексПоИмениЭлемента(Элемент.Имя, "Наименование");
	ЗначениеНаименование = ЭтотОбъект["Наименование" + Индекс];
	
	ЗаписатьЗначениеОрганизации("Наименование", ЗначениеНаименование, Индекс);
	ЗаписатьЗначениеОрганизации("НаименованиеПолное", ЗначениеНаименование, Индекс);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресЛоготипаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИндексОрганизации = ИндексПоИмениЭлемента(Элемент.Имя, "АдресЛоготипа");
	СтрокаОрганизации = СтрокаОрганизацииПоИндексуНаКлиенте(ИндексОрганизации);
	ЗначениеФайлЛоготипа = СтрокаОрганизации.ФайлЛоготип;
	
	Если ЗначениеЗаполнено(ЗначениеФайлЛоготипа) Тогда
		
		ПросмотретьПрисоединенныйФайл(ЗначениеФайлЛоготипа);
		
	Иначе
		
		ДобавитьИзображениеНаКлиенте(ИндексОрганизации);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИННПриИзменении(Элемент)
	Перем Ошибки;
	
	ИндексОрганизации = ИндексПоИмениЭлемента(Элемент.Имя, "ИНН");
	
	ЗначениеИНН = ЭтотОбъект["ИНН" + ИндексОрганизации];
	ЗаписатьЗначениеОрганизации("ИНН", ЗначениеИНН, ИндексОрганизации);
	
КонецПроцедуры

&НаКлиенте
Процедура ПарольПодтверждениеПриИзменении(Элемент)
	
	Если ПользовательПароль <> ПользовательПарольПодтверждение Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru ='Не совпадают пароли'"), , "ПользовательПарольПодтверждение");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПлательщикЕНПриИзменении(Элемент)
	Если УчетнаяПолитикаОрганизаций.ПлательщикЕН Тогда
		УчетнаяПолитикаОрганизаций.ПлательщикНДС = Ложь;
		УчетнаяПолитикаОрганизаций.ПлательщикНСП = Ложь;
		УчетнаяПолитикаОрганизаций.ПлательщикНП  = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Назад(Команда)
	ОбработатьПеремещениеПоСтраницам(-1);
КонецПроцедуры

&НаКлиенте
Процедура Вперед(Команда)
	ОбработатьПеремещениеПоСтраницам(1);
КонецПроцедуры

&НаКлиенте
Процедура НачатьРаботуСПрограммой(Команда)
	Перем Ошибки;
	
	ДополнительныйПараметр = "";
	Если ВРЕГ(ПользовательИмя) = КэшЗначений.ДополнительныйПараметр Тогда
		
		ДополнительныйПараметр = КэшЗначений.ДополнительныйПараметр;
		КэшЗначений.РазрешитьЗакрытие = Истина;
		
	Иначе
	
		РеквизитыЗаполненыКорректно(Ошибки);
		КэшЗначений.РазрешитьЗакрытие = (Ошибки = Неопределено);
		
		Если НЕ КэшЗначений.РазрешитьЗакрытие Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
			Возврат;
			
		КонецЕсли;
		
		РегистрыЗаполненыКорректно(Ошибки);
		КэшЗначений.РазрешитьЗакрытие = (Ошибки = Неопределено);
		
		Если НЕ КэшЗначений.РазрешитьЗакрытие Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
			Возврат;
			
		КонецЕсли;
	КонецЕсли;
	
	ЗаписатьНаборыЗаписей();
	
	ЗаписатьЗначенияСтавокНДС_НСП();
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("НачатьРаботу", 					Истина);
	
	ПараметрыЗакрытия.Вставить("Пользователь",					КэшЗначений.Пользователь);
	ПараметрыЗакрытия.Вставить("ПользовательEmail",				ПользовательEmail);
	ПараметрыЗакрытия.Вставить("ПользовательИмя",				ПользовательИмя);
	ПараметрыЗакрытия.Вставить("ПользовательПароль",			ПользовательПароль);
	ПараметрыЗакрытия.Вставить("ПользовательСайт",				ПользовательСайт);
	ПараметрыЗакрытия.Вставить("ПользовательТелефон",			ПользовательТелефон);
	
	ПараметрыЗакрытия.Вставить("Организации",					Объект.Организации);
	ПараметрыЗакрытия.Вставить("ДополнительныйПараметр",		ДополнительныйПараметр);
	
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведений(ИмяРегистра, ВедущийОбъект) Экспорт
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписей(ЭтаФорма, ИмяРегистра, ВедущийОбъект);
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаборыЗаписей()
	РедактированиеПериодическихСведений.ЗаписатьЗаписьПослеРедактированияВФорме(
		ЭтаФорма,
		"УчетнаяПолитикаОрганизаций",
		Справочники.Организации.ОсновнаяОрганизация);
КонецПроцедуры // ЗаписатьНаборыЗаписей()

&НаКлиенте
Процедура ОбработчикКомандыДобавитьОрганизацию(Команда)
	
	ДобавитьОрганизацию(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеЛоготипа(Команда)
	
	ИндексОрганизации = ИндексПоИмениЭлемента(ЭтаФорма.ТекущийЭлемент.Имя, "АдресЛоготипа");
	
	ДобавитьИзображениеНаКлиенте(ИндексОрганизации);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИзображениеЛоготипа(Команда)
	
	ИндексОрганизации = ИндексПоИмениЭлемента(ЭтаФорма.ТекущийЭлемент.Имя, "АдресЛоготипа");
	
	ЗаписатьЗначениеОрганизации("ФайлЛоготип", Неопределено, ИндексОрганизации);
	ЭтотОбъект["АдресЛоготипа" + ИндексОрганизации] = "";
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОрганизацию(Команда)
	
	ИндексОрганизации = ИндексПоИмениЭлемента(ЭтаФорма.ТекущийЭлемент.Имя, "УдалитьОрганизацию");
	УдалитьОрганизациюНаСервере(ИндексОрганизации);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьПеремещениеПоСтраницам(Итератор)
	НомерТекущейСтраницы = НомерТекущейСтраницы + Итератор;
	Элементы.Страницы.ТекущаяСтраница = Элементы["Страница" + НомерТекущейСтраницы];
	ТекстПозиция = СтрШаблон(НСтр("ru = '%1 из %2'"), НомерТекущейСтраницы, ВсегоСтраниц);
	Элементы.ДекорацияПозиция.РасширеннаяПодсказка.Заголовок = ТекстПозиция;
	
	// Видимость команд подвала.
	Элементы.Сохранить.Доступность = Ложь;
	Элементы.Сохранить.КнопкаПоУмолчанию = Ложь;
	Элементы.Вперед.Доступность = Истина;
	Элементы.Назад.Доступность = Истина;
	
	Если НомерТекущейСтраницы = 1 Тогда
		Элементы.Назад.Доступность = Ложь;
	ИначеЕсли НомерТекущейСтраницы = ВсегоСтраниц Тогда 
		Элементы.Вперед.Доступность = Ложь;
		Элементы.Сохранить.Доступность = Истина;
		Элементы.Сохранить.КнопкаПоУмолчанию = Истина;
	КонецЕсли;	
КонецПроцедуры // ОбработатьПеремещениеПоСтраницам()

&НаСервере
Процедура ЗаполнитьДанныеПользователя()
	
	ПользовательСсылка	= КэшЗначений.Пользователь;
	
	ПользовательEmail	= УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ПользовательСсылка, Справочники.ВидыКонтактнойИнформации.EmailПользователя);
	ПользовательТелефон = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ПользовательСсылка, Справочники.ВидыКонтактнойИнформации.ТелефонПользователя);
	//ПользовательСайт	= УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ПользовательСсылка, Справочники.ВидыКонтактнойИнформации.СайтПользователя);
	
КонецПроцедуры

&НаКлиенте
Функция СтрокаОрганизацииПоИндексуНаКлиенте(ИндексОрганизации)
	
	НайденныеСтроки = Объект.Организации.НайтиСтроки(Новый Структура("ИндексОрганизации", ИндексОрганизации));
	Возврат НайденныеСтроки[0];
	
КонецФункции

&НаСервере
Функция СтрокаОрганизацииПоИндексуНаСервере(ИндексОрганизации)
	
	НайденныеСтроки = Объект.Организации.НайтиСтроки(Новый Структура("ИндексОрганизации", ИндексОрганизации));
	Возврат НайденныеСтроки[0];
	
КонецФункции

&НаСервере
Функция СформироватьУникальныйИндексОрганизации(СтрокаОрганизации)
	
	ИндексОрганизации = Объект.Организации.Количество();
	
	Пока Истина Цикл
		
		НайденныеСтроки = Объект.Организации.НайтиСтроки(Новый Структура("ИндексОрганизации", ИндексОрганизации));
		Если НайденныеСтроки.Количество() = 0 Тогда
			
			Прервать;
			
		Иначе
			
			ИндексОрганизации = ИндексОрганизации + 1;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ИндексОрганизации;
	
КонецФункции

&НаКлиенте
Функция ИндексПоИмениЭлемента(ИмяЭлемента, ОбщаяЧастьИмени)
	
	Возврат Число(СтрЗаменить(ИмяЭлемента, ОбщаяЧастьИмени, ""));
	
КонецФункции

&НаСервере
Процедура ДобавитьРеквизитыИЭлементыФормы(ИндексОрганизации)
	
	ПостФикс = ИндексОрганизации;
	
	//:::Реквизиты
	МассивРеквизитов = Новый Массив;
	
	НовыйРеквизитИНН = Новый РеквизитФормы("ИНН" + ПостФикс, Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(12)), , "");
	МассивРеквизитов.Добавить(НовыйРеквизитИНН);
	
	НовыйНаименование = Новый РеквизитФормы("Наименование" + ПостФикс, Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(50)), , "");
	МассивРеквизитов.Добавить(НовыйНаименование);
	
	НовыйАдресЛоготипа = Новый РеквизитФормы("АдресЛоготипа" + ПостФикс, Новый ОписаниеТипов("Строка"), , "");
	МассивРеквизитов.Добавить(НовыйАдресЛоготипа);
	
	ЭтотОбъект.ИзменитьРеквизиты(МассивРеквизитов);
	
	//:::Структура групп
	//
	//ГруппаОрганизация
	//	ГруппаОсновныеСведения
	//		ГруппаИНН_ВидСобственности
	//			ГруппаИНН
	//		ГруппаНаименованиеОрганизации
	//
	//	ГруппаЛоготип
	
	ГруппаОрганизация = Элементы.Добавить("ГруппаОрганизация" + ПостФикс, Тип("ГруппаФормы"), Элементы.ГруппаОрганизации);
	ГруппаОрганизация.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаОрганизация.Отображение = ОтображениеОбычнойГруппы.Нет;
	ГруппаОрганизация.ОтображатьЗаголовок = Ложь;
	ГруппаОрганизация.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	
	ГруппаОсновныеСведения = Элементы.Добавить("ГруппаОсновныеСведения" + ПостФикс, Тип("ГруппаФормы"), ГруппаОрганизация);
	ГруппаОсновныеСведения.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаОсновныеСведения.Отображение = ОтображениеОбычнойГруппы.Нет;
	ГруппаОсновныеСведения.ОтображатьЗаголовок = Ложь;
	
	ГруппаИНН_ВидСобственности = Элементы.Добавить("ГруппаИНН_ВидСобственности" + ПостФикс, Тип("ГруппаФормы"), ГруппаОсновныеСведения);
	ГруппаИНН_ВидСобственности.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаИНН_ВидСобственности.Отображение = ОтображениеОбычнойГруппы.Нет;
	ГруппаИНН_ВидСобственности.ОтображатьЗаголовок = Ложь;
	ГруппаИНН_ВидСобственности.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	
	ГруппаИНН = Элементы.Добавить("ГруппаИНН" + ПостФикс, Тип("ГруппаФормы"), ГруппаИНН_ВидСобственности);
	ГруппаИНН.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаИНН.Отображение = ОтображениеОбычнойГруппы.Нет;
	ГруппаИНН.ОтображатьЗаголовок = Ложь;
	ГруппаИНН.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	
	ГруппаНаименованиеОрганизации = Элементы.Добавить("ГруппаНаименованиеОрганизации" + ПостФикс, Тип("ГруппаФормы"), ГруппаОсновныеСведения);
	ГруппаНаименованиеОрганизации.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаНаименованиеОрганизации.Отображение = ОтображениеОбычнойГруппы.Нет;
	ГруппаНаименованиеОрганизации.ОтображатьЗаголовок = Ложь;
	ГруппаНаименованиеОрганизации.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	
	ГруппаЛоготип = Элементы.Добавить("ГруппаЛоготип" + ПостФикс, Тип("ГруппаФормы"), ГруппаОрганизация);
	ГруппаЛоготип.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаЛоготип.Отображение = ОтображениеОбычнойГруппы.Нет;
	ГруппаЛоготип.ОтображатьЗаголовок = Ложь;
	ГруппаЛоготип.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	
	//:::ГруппаИНН
	ДекорацияЗаголовокИНН = Элементы.Добавить("ДекорацияЗаголовокИНН" + ПостФикс, Тип("ДекорацияФормы"), ГруппаИНН);
	ДекорацияЗаголовокИНН.Вид = ВидДекорацииФормы.Надпись;
	ДекорацияЗаголовокИНН.Заголовок = Нстр("ru ='ИНН:'");
	ДекорацияЗаголовокИНН.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
	ДекорацияЗаголовокИНН.Ширина = 14;
	ДекорацияЗаголовокИНН.Шрифт = Элементы.ДекорацияЗаголовокИНН1.Шрифт;
	
	ЭлементИНН = Элементы.Добавить("ИНН" + ПостФикс, Тип("ПолеФормы"), ГруппаИНН);
	ЭлементИНН.Вид = ВидПоляФормы.ПолеВвода;
	ЭлементИНН.ПутьКДанным = "ИНН" + ПостФикс;
	ЭлементИНН.РежимРедактирования = РежимРедактированияКолонки.Вход;
	ЭлементИНН.КнопкаСоздания = Ложь;
	ЭлементИНН.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементИНН.Ширина = 14;
	ЭлементИНН.РастягиватьПоГоризонтали = Ложь;
	ЭлементИНН.УстановитьДействие("ПриИзменении", "ИННПриИзменении");
	
	//:::ГруппаНаименованиеОрганизации
	ДекорацияЗаголовокНаименование = Элементы.Добавить("ДекорацияЗаголовокНаименование" + ПостФикс, Тип("ДекорацияФормы"), ГруппаНаименованиеОрганизации);
	ДекорацияЗаголовокНаименование.Вид = ВидДекорацииФормы.Надпись;
	ДекорацияЗаголовокНаименование.Заголовок = Нстр("ru ='Название:'");
	ДекорацияЗаголовокНаименование.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
	ДекорацияЗаголовокНаименование.Ширина = 14;
	ДекорацияЗаголовокНаименование.Шрифт = Элементы.ДекорацияЗаголовокНаименование.Шрифт;
	
	ЭлементНаименование = Элементы.Добавить("Наименование" + ПостФикс, Тип("ПолеФормы"), ГруппаНаименованиеОрганизации);
	ЭлементНаименование.Вид = ВидПоляФормы.ПолеВвода;
	ЭлементНаименование.ПутьКДанным = "Наименование" + ПостФикс;
	ЭлементНаименование.РежимРедактирования = РежимРедактированияКолонки.Вход;
	ЭлементНаименование.КнопкаСоздания = Ложь;
	ЭлементНаименование.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементНаименование.Ширина = 44;
	ЭлементНаименование.РастягиватьПоГоризонтали = Ложь;
	ЭлементНаименование.АвтоОтметкаНезаполненного = Истина;
	ЭлементНаименование.ПодсказкаВвода = НСтр("ru ='Наименование организации'");
	ЭлементНаименование.УстановитьДействие("ПриИзменении", "НаименованиеПриИзменении");
	
	//:::АдресЛоготипа
	ЭлементАдресЛоготипа = Элементы.Добавить("АдресЛоготипа" + ПостФикс, Тип("ПолеФормы"), ГруппаЛоготип);
	ЭлементАдресЛоготипа.ПутьКДанным = "АдресЛоготипа" + ПостФикс;
	ЭлементАдресЛоготипа.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементАдресЛоготипа.Вид = ВидПоляФормы.ПолеКартинки;
	ЭлементАдресЛоготипа.Гиперссылка = Истина;
	ЭлементАдресЛоготипа.Шрифт = Элементы.АдресЛоготипа1.Шрифт;
	ЭлементАдресЛоготипа.РазмерКартинки = РазмерКартинки.Пропорционально;
	ЭлементАдресЛоготипа.ЦветТекста = Элементы.АдресЛоготипа1.ЦветТекста;
	ЭлементАдресЛоготипа.Ширина = 12;
	ЭлементАдресЛоготипа.Высота = 4;
	ЭлементАдресЛоготипа.ТекстНевыбраннойКартинки = НСтр("ru ='Добавить логотип'");
	ЭлементАдресЛоготипа.РастягиватьПоВертикали = Ложь;
	ЭлементАдресЛоготипа.РастягиватьПоГоризонтали = Ложь;
	ЭлементАдресЛоготипа.УстановитьДействие("Нажатие", "АдресЛоготипаНажатие");
	
	ЭлементКомандаДобавитьИзображениеЛоготипа = Элементы.Добавить("ДобавитьИзображениеЛоготипа" + ПостФикс, Тип("КнопкаФормы"), ЭлементАдресЛоготипа.КонтекстноеМеню);
	ЭлементКомандаДобавитьИзображениеЛоготипа.ИмяКоманды = "ДобавитьИзображениеЛоготипа";
	
	ЭлементКомандаОчиститьИзображение = Элементы.Добавить("ОчиститьИзображение" + ПостФикс, Тип("КнопкаФормы"), ЭлементАдресЛоготипа.КонтекстноеМеню);
	ЭлементКомандаОчиститьИзображение.ИмяКоманды = "ОчиститьИзображениеЛоготипа";
	
	ЭлементУдалитьОрганизацию = Элементы.Добавить("УдалитьОрганизацию" + ПостФикс, Тип("КнопкаФормы"), ГруппаЛоготип);
	ЭлементУдалитьОрганизацию.Вид = ВидКнопкиФормы.Гиперссылка;
	ЭлементУдалитьОрганизацию.ИмяКоманды = "УдалитьОрганизацию";
	ЭлементУдалитьОрганизацию.Ширина = 2;
	
	ДекорацияМалыйОтступ = Элементы.Добавить("ДекорацияМалыйОтступ1" + ПостФикс, Тип("ДекорацияФормы"), Элементы.ГруппаОрганизации);
	ДекорацияМалыйОтступ.Вид = ВидДекорацииФормы.Надпись;
	ДекорацияМалыйОтступ.Шрифт = Элементы.ДекорацияМалыйОтступ1.Шрифт;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИзображениеЛоготипа(СтрокаОрганизации)
	
	ЭтотОбъект["АдресЛоготипа" + СтрокаОрганизации.ИндексОрганизации] = 
		?(ЗначениеЗаполнено(СтрокаОрганизации.ФайлЛоготип), НавигационнаяСсылкаКартинки(СтрокаОрганизации.ФайлЛоготип, УникальныйИдентификатор), "");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НавигационнаяСсылкаКартинки(ФайлКартинки, ИдентификаторФормы)
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат ПрисоединенныеФайлы.ПолучитьДанныеФайла(ФайлКартинки, ИдентификаторФормы).СсылкаНаДвоичныеДанныеФайла;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеФайла(ЛоготипРеквизит, УникальныйИдентификатор)
	
	Возврат ПрисоединенныеФайлы.ПолучитьДанныеФайла(ЛоготипРеквизит, УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Процедура ПросмотретьПрисоединенныйФайл(ФайлЛоготип)
	
	ДанныеФайла = ПолучитьДанныеФайла(ФайлЛоготип, УникальныйИдентификатор);
	ПрисоединенныеФайлыКлиент.ОткрытьФайл(ДанныеФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиенте(ИндексОрганизации)
	Перем ИдентификаторФайла, ИмяРеквизитаОбъекта, Фильтр;
	
	КэшЗначений.ТекущийИндексОрганизации = ИндексОрганизации;
	
	СтрокаОрганизации = СтрокаОрганизацииПоИндексуНаКлиенте(ИндексОрганизации);
	
	ЭтотОбъект["АдресЛоготипа" + СтрокаОрганизации.ИндексОрганизации] = "";
	
	ИдентификаторФайла = Новый УникальныйИдентификатор;
	Фильтр = НСтр("ru = 'Все картинки (*.bmp;*.gif;*.png;*.jpeg;*.dib;*.rle;*.tif;*.jpg;*.ico;*.wmf;*.emf)|*.bmp;*.gif;*.png;*.jpeg;*.dib;*.rle;*.tif;*.jpg;*.ico;*.wmf;*.emf"
	+ "|Все файлы(*.*)|*.*"
	+ "|Формат bmp(*.bmp*;*.dib;*.rle)|*.bmp;*.dib;*.rle"
	+ "|Формат GIF(*.gif*)|*.gif"
	+ "|Формат JPEG(*.jpeg;*.jpg)|*.jpeg;*.jpg"
	+ "|Формат PNG(*.png*)|*.png"
	+ "|Формат TIFF(*.tif)|*.tif"
	+ "|Формат icon(*.ico)|*.ico"
	+ "|Формат метафайл(*.wmf;*.emf)|*.wmf;*.emf'");
	
	ПрисоединенныеФайлыКлиент.ДобавитьФайлы(СтрокаОрганизации.Ссылка, ИдентификаторФайла, Фильтр);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЗначениеОрганизации(ИмяРеквизита, ЗначениеРеквизита, Индекс, НеЗатиратьТекущее = Ложь)
	
	ДанныеСтрокиОрганизации = Объект.Организации[Индекс - 1];
	
	Если НеЗатиратьТекущее Тогда
		
		Если НЕ ЗначениеЗаполнено(ДанныеСтрокиОрганизации[ИмяРеквизита]) Тогда
			
			ДанныеСтрокиОрганизации[ИмяРеквизита] = ЗначениеРеквизита;
			
		КонецЕсли;
		
	Иначе
		
		ДанныеСтрокиОрганизации[ИмяРеквизита] = ЗначениеРеквизита;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыЗаполненыКорректно(Ошибки)
	
	Если ПустаяСтрока(ПользовательИмя) Тогда
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ПользовательИмя", НСтр("ru ='Заполните имя пользователя'"), "");
		
	КонецЕсли;
	
	Если ПользовательПароль <> ПользовательПарольПодтверждение Тогда
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ПользовательПароль", НСтр("ru ='Не совпадают пароли'"), "")
		
	КонецЕсли;
	
	Для каждого СтрокаОрганизации Из Объект.Организации Цикл
		
		Если ПустаяСтрока(СтрокаОрганизации.Наименование) Тогда
			
			ТекстОшибки = НСтр("ru ='Заполните название (организация %1)'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, СтрокаОрганизации.НомерСтроки);
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Наименование" + СтрокаОрганизации.НомерСтроки, ТекстОшибки, "")
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РегистрыЗаполненыКорректно(Ошибки)

	Отказ = Ложь;
	РедактированиеПериодическихСведений.ПроверитьЗаписьВФорме(ЭтаФорма, "УчетнаяПолитикаОрганизаций", Справочники.Организации.ОсновнаяОрганизация, Отказ);
	Если Отказ Тогда
		ТекстОшибки = НСтр("ru ='Учетная полити заполнена не корректно'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Страница3", ТекстОшибки, "")
	КонецЕсли;	

КонецПроцедуры // РегистрыЗаполненыКорректно()

&НаСервере
Процедура ДобавитьОрганизацию(СоздатьРеквизитыЭлементы, ОрганизацияСсылка = Неопределено)
	
	ДобавленнаяСтрока = Объект.Организации.Добавить();
	
	ИндексОрганизации = СформироватьУникальныйИндексОрганизации(ДобавленнаяСтрока);
	
	Если СоздатьРеквизитыЭлементы Тогда
		
		ДобавитьРеквизитыИЭлементыФормы(ИндексОрганизации);
		
	КонецЕсли;
	
	Если ОрганизацияСсылка = Неопределено Тогда
		
		ОрганизацияСсылка = Справочники.Организации.ПолучитьСсылку();
		
	КонецЕсли;
	
	СтрокаТаблицы = Объект.Организации.НайтиПоИдентификатору(ДобавленнаяСтрока.ПолучитьИдентификатор());
	
	СтрокаТаблицы.Ссылка = ОрганизацияСсылка;
	СтрокаТаблицы.ИндексОрганизации = ИндексОрганизации;
	
	СтрокаТаблицы.Наименование = НСтр("ru ='Наша фирма'");
	СтрокаТаблицы.НаименованиеПолное = НСтр("ru ='Наша фирма'");
	ЭтотОбъект["Наименование" + ИндексОрганизации] = СтрокаТаблицы.Наименование;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьОрганизациюНаСервере(ИндексОрганизации)
	
	СтрокаОрганизации = СтрокаОрганизацииПоИндексуНаСервере(ИндексОрганизации);
	Объект.Организации.Удалить(СтрокаОрганизации);
	
	УдаляемыеРеквизиты = Новый Массив;
	УдаляемыеРеквизиты.Добавить("ИНН" + ИндексОрганизации);
	УдаляемыеРеквизиты.Добавить("Наименование" + ИндексОрганизации);
	УдаляемыеРеквизиты.Добавить("АдресЛоготипа" + ИндексОрганизации);
	
	ЭтотОбъект.ИзменитьРеквизиты(, УдаляемыеРеквизиты);
	
	Элементы.Удалить(Элементы["ГруппаОрганизация" + ИндексОрганизации]);
	Элементы.Удалить(Элементы["ДекорацияМалыйОтступ1" + ИндексОрганизации]);
	
КонецПроцедуры

&НаСервере
Функция ВыделитьИзНаименованияОПФ(КлассификаторОПФ, знач НаименованиеОрганизации)
	
	Результат = Новый Структура("НаименованиеБезОПФ, КраткаяФорма, ПолнаяФорма", НаименованиеОрганизации, "", "");
	МассивСлов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(НаименованиеОрганизации);
	
	Для Каждого Слово Из МассивСлов Цикл
		Для Каждого ДанныеОПФ Из КлассификаторОПФ Цикл
			Если ВРег(СокрЛП(Слово)) = ВРег(ДанныеОПФ.ПолнаяФорма) Тогда
				Результат.КраткаяФорма = ДанныеОПФ.КраткаяФорма;
				Результат.ПолнаяФорма = ДанныеОПФ.ПолнаяФорма;
				Результат.НаименованиеБезОПФ = СтроковыеФункцииКлиентСервер.СократитьДвойныеКавычки(СокрЛП(СтрЗаменить(НаименованиеОрганизации, Слово, "")));
				Возврат Результат;
			ИначеЕсли Не ПустаяСтрока(ДанныеОПФ.КраткаяФорма) И ВРег(СокрЛП(Слово)) = ВРег(ДанныеОПФ.КраткаяФорма) Тогда
				Результат.КраткаяФорма = ДанныеОПФ.КраткаяФорма;
				Результат.ПолнаяФорма = ДанныеОПФ.ПолнаяФорма;
				Результат.НаименованиеБезОПФ = СтроковыеФункцииКлиентСервер.СократитьДвойныеКавычки(СокрЛП(СтрЗаменить(НаименованиеОрганизации, Слово, "")));
				Возврат Результат;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокВыбораНаименования(ДанныеГосРеестра, ИндексОрганизации)
	
	КлассификаторОПФ = ОбщегоНазначенияБПВызовСервераПовтИсп.КлассификаторОрганизационноПравовыхФорм();
	
	СписокВыбора = Элементы["Наименование" + ИндексОрганизации].СписокВыбора;
	СписокВыбора.Очистить();
	
	Если Не ПустаяСтрока(ДанныеГосРеестра.НаименованиеПолное) Тогда
		
		ОрганизационноПравоваяФорма = ВыделитьИзНаименованияОПФ(КлассификаторОПФ, ДанныеГосРеестра.НаименованиеПолное);
		
		СписокВыбора.Добавить(ОрганизационноПравоваяФорма.НаименованиеБезОПФ);
		
		Если НЕ ПустаяСтрока(ОрганизационноПравоваяФорма.КраткаяФорма) Тогда
			
			СписокВыбора.Вставить(0, ОрганизационноПравоваяФорма.НаименованиеБезОПФ + " " + ОрганизационноПравоваяФорма.КраткаяФорма);
			СписокВыбора.Добавить(ОрганизационноПравоваяФорма.КраткаяФорма + " " + ОрганизационноПравоваяФорма.НаименованиеБезОПФ);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СписокВыбора.Количество() > 0 Тогда
		
		ДанныеГосРеестра.Наименование = СписокВыбора[0].Значение;
		Элементы["Наименование" + ИндексОрганизации].КнопкаВыпадающегоСписка = Истина;
		
	Иначе
		
		ДанныеГосРеестра.Наименование = "";
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧСтавкиНДС_НСП()

	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СтавкиНДС.Ссылка КАК Ставка,
		|	СтавкиНДС.Наименование КАК Наименование
		|ИЗ
		|	Справочник.СтавкиНДС КАК СтавкиНДС
		|;
		|
		|//////////////////////////////////////
		|ВЫБРАТЬ
		|	СтавкиНСП.Ссылка КАК Ставка,
		|	СтавкиНСП.Наименование КАК Наименование
		|ИЗ
		|	Справочник.СтавкиНСП КАК СтавкиНСП";
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаСтавкиНДС = МассивРезультатов[0].Выбрать();
	Пока ВыборкаСтавкиНДС.Следующий() Цикл
		СтрокаТабличнойЧасти = Объект.СтавкиНДС.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ВыборкаСтавкиНДС);
	КонецЦикла;
	
	ВыборкаСтавкиНСП = МассивРезультатов[1].Выбрать();
	Пока ВыборкаСтавкиНСП.Следующий() Цикл
		СтрокаТабличнойЧасти = Объект.СтавкиНСП.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ВыборкаСтавкиНСП);
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьЗначенияСтавокНДС_НСП()

	Дата = ТекущаяДатаСеанса();
	
	Для Каждого СтрокаТабличнойЧасти Из Объект.СтавкиНДС Цикл
		МенеджерЗаписи = РегистрыСведений.СтавкиНДС.СоздатьМенеджерЗаписи();
		
		МенеджерЗаписи.Период 		= Дата;
		МенеджерЗаписи.СтавкаНДС 	= СтрокаТабличнойЧасти.Ставка;
		МенеджерЗаписи.Ставка	 	= СтрокаТабличнойЧасти.Значение;
		
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось завершить запись ставок НДС по причине: %1'"), 
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Ошибка,,, ТекстСообщения);
		КонецПопытки;
	КонецЦикла;                                                                      
	
	Для Каждого СтрокаТабличнойЧасти Из Объект.СтавкиНСП Цикл
		МенеджерЗаписи = РегистрыСведений.СтавкиНСП.СоздатьМенеджерЗаписи();
		
		МенеджерЗаписи.Период 					= Дата;
		МенеджерЗаписи.СтавкаНСП 				= СтрокаТабличнойЧасти.Ставка;
		МенеджерЗаписи.СтавкаПлательщикНДС	 	= СтрокаТабличнойЧасти.ЗначениеПлательщикаНДС;
		МенеджерЗаписи.СтавкаНеПлательщикНДС	= СтрокаТабличнойЧасти.ЗначениеНеПлательщикаНДС;
		
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось завершить запись ставок НСП по причине: %1'"), 
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Ошибка,,, ТекстСообщения);
		КонецПопытки;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти
