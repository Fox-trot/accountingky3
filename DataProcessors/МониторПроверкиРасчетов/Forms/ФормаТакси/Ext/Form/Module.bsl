#Область ОбработчикиСобытийФормы

// Процедура - обработчик события ПриСозданииНаСервере.
// В процедуре осуществляется
// - инициализация реквизитов формы,
// - установка параметров функциональных опций формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Установка реквизитов формы.
	ДатаОбработки = ТекущаяДатаСеанса();
	НачПериода 	  = НачалоМесяца(ДатаОбработки);
	КонПериода    = КонецМесяца(ДатаОбработки);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТабличнойЧастиОборотыДоговора

&НаКлиенте
Процедура ОборотыДоговораПриАктивизацииСтроки(Элемент)
	СтрокаТЧ = Элементы.ОборотыДоговора.ТекущиеДанные;
	Если СтрокаТЧ <> Неопределено Тогда 
		СформироватьРасшифровкуПоСчетам(СтрокаТЧ.Договор);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	Если Не ВВалюте Тогда
		Элементы.ОбороткаСчетаДоговорыВалюта.Видимость = Ложь;
		Элементы.ОборотыДоговораВалюта.Видимость = Ложь;
	Иначе
		Элементы.ОбороткаСчетаДоговорыВалюта.Видимость = Истина;
		Элементы.ОборотыДоговораВалюта.Видимость = Истина;
	КонецЕсли;
	
	СформироватьНаСервере();
	ПроверкаДоговоров();
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	ТабДок = Новый ТабличныйДокумент;
	//Если ТекущаяСТраница = Элементы.ГруппаСчетДоговор Тогда
		ВызовПечатиСчетДоговор(ТабДок);
	//ИначеЕсли ТекущаяСТраница = Элементы.ГруппаДоговоры Тогда
	//	ВызовПечатиДоговор(ТабДок);
	//КонецЕсли;
	//ТабДок.Показать();
	
	
	ТабДок.Напечатать(ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьРасшифровкуПоСчетам(Договор)
	
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	Запрос = Новый Запрос;	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СальдоНДт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СальдоНКт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ОборотыДт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК ОборотыКт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СальдоКДт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СальдоККт,
	|	ХозрасчетныйОстаткиИОбороты.Субконто2.Код КАК КодДоговора,
	|	ХозрасчетныйОстаткиИОбороты.Субконто2.ВидДоговора КАК ВидДоговора
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, , , Счет <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНААвансы), &ВидыСубконто, Субконто2 = &Договор) КАК ХозрасчетныйОстаткиИОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Счет
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("НачПериода",		НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("КонПериода",		КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ВидыСубконто",	ВидыСубконто);
	Запрос.УстановитьПараметр("Договор",		Договор);
	
	Результат 	= Запрос.Выполнить();
	ТЗ			= Результат.Выгрузить();
	
	Объект.РасшифровкаПоСчетам.Загрузить(ТЗ);
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаДоговоров()
	Перем СчетчикСчета;
	Перем СчетчикДог;
	Перем КодДоговора;
	Перем НаимДоговора;
	Перем НаимКонтрагента;
	Счетчик = 0;
	СчетчикДог = 0;
	ТаблицаЗначений = Новый ТаблицаЗначений;		
	ТаблицаЗначений.Колонки.Добавить("Контрагент");
	ТаблицаЗначений.Колонки.Добавить("Договор");
	ТаблицаЗначений.Колонки.Добавить("Счет");
	ТаблицаЗначений.Колонки.Добавить("Содержание");
	ТаблицаЗначений.Колонки.Добавить("Регистратор");
	
	Для каждого СтрокаТЧ из Объект.ОбороткаСчетаДоговоры Цикл 
		Если Не СтрокаТЧ.Контрагент = СтрокаТЧ.Договор.Владелец Тогда 
			//ТекстСообщения =  СтрШаблон(НСтр("ru = 'В строке %1.  Данному контрагенту: %2 не соответствует текуший договор: %3 !'"),СтрокаТЧ.НомерСтроки,СтрокаТЧ.Контрагент,СтрокаТЧ.Договор);
			//БухгалтерскийУчетСервер.СообщитьОбОшибке(СтрокаТЧ.Договор, ТекстСообщения);
			ТБ = ТаблицаЗначений.Добавить();
			ТБ.Контрагент = СтрокаТЧ.Контрагент;
			ТБ.Договор = СтрокаТЧ.Договор;
			ТБ.Счет = СтрокаТЧ.Счет;
			ТБ.Содержание = "Контрагенту не соответствует текуший договор";
			ТБ.Регистратор = СтрокаТЧ.Регистратор;
			
		КонецЕсли;
		// Проверка количества счетов у договора. Если > 2, то Содержание = "Количество счетов для данного договора > 2!"
		Если Не ЗначениеЗаполнено(СтрокаТЧ.КодДоговора) Тогда
			Продолжить;
		КонецЕсли;
		Если КодДоговора = СтрокаТЧ.КодДоговора Тогда
			Счетчик = Счетчик + 1;
			КонтрагентПред = СтрокаТЧ.Контрагент;
			ДоговорПред = СтрокаТЧ.Договор;
			СчетПред = СтрокаТЧ.Счет;
		КонецЕсли;
		Если КодДоговора <> СтрокаТЧ.КодДоговора И Счетчик > 1 Тогда
			ТБ = ТаблицаЗначений.Добавить();
			ТБ.Контрагент = КонтрагентПред;
			ТБ.Договор = ДоговорПред;
			ТБ.Счет = СчетПред;
			ТБ.Содержание = "Количество счетов для данного договора больше двух!";
			Счетчик = 0;
		ИначеЕсли КодДоговора <> СтрокаТЧ.КодДоговора И Счетчик = 1 Тогда
			Счетчик = 0;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТЧ.КодДоговора) Тогда
			КодДоговора = СтрокаТЧ.КодДоговора;
		КонецЕсли;
		
		// Проверка на одинаковые наименования договоров у контрагента, не д.б.
		Если НаимДоговора = СтрокаТЧ.Договор И НаимКонтрагента = СтрокаТЧ.Контрагент Тогда
			ТБ = ТаблицаЗначений.Добавить();
			ТБ.Контрагент = НаимКонтрагента;
			ТБ.Договор = НаимДоговора;
			ТБ.Содержание = "Одинаковые наименования договоров для данного контрагента!";
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаТЧ.Договор) И ЗначениеЗаполнено(СтрокаТЧ.Контрагент) Тогда
			НаимДоговора = СтрокаТЧ.Договор;
			НаимКонтрагента = СтрокаТЧ.Контрагент;
		КонецЕсли;
		
	КонецЦикла;	
	Объект.Проверки.Загрузить(ТаблицаЗначений);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
	СформироватьОбороткаСчетаДоговоры();
	СформироватьОбороткаДоговоры();
КонецПроцедуры

//формирование ТЧ ОбработкаРасшифровка
&НаСервере
Процедура СформироватьОбороткаСчетаДоговоры();
	
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	Запрос = Новый Запрос;	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Контрагент,
	|	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Договор,
	|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстаткиИОбороты.Валюта.Наименование = ""сом""
	|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт
	|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйОстатокДт
	|	КОНЕЦ КАК СальдоНДт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстаткиИОбороты.Валюта.Наименование = ""сом""
	|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт
	|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйОстатокКт
	|	КОНЕЦ КАК СальдоНКт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстаткиИОбороты.Валюта.Наименование = ""сом""
	|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотДт
	|	КОНЕЦ КАК ОборотыДт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстаткиИОбороты.Валюта.Наименование = ""сом""
	|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотКт
	|	КОНЕЦ КАК ОборотыКт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстаткиИОбороты.Валюта.Наименование = ""сом""
	|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
	|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйОстатокДт
	|	КОНЕЦ КАК СальдоКДт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстаткиИОбороты.Валюта.Наименование = ""сом""
	|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
	|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйОстатокКт
	|	КОНЕЦ КАК СальдоККт,
	|	ХозрасчетныйОстаткиИОбороты.Субконто2.Код КАК КодДоговора,
	|	ХозрасчетныйОстаткиИОбороты.Субконто2.ВидДоговора КАК ВидДоговора,
	|	ХозрасчетныйОстаткиИОбороты.Валюта.Наименование КАК Валюта
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Авто, , Счет <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНААвансы), &ВидыСубконто, ) КАК ХозрасчетныйОстаткиИОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент,
	|	Договор,
	|	Счет
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("НачПериода",		НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("КонПериода",		КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ВидыСубконто",	ВидыСубконто);
	
	Результат 	= Запрос.Выполнить();
	ТЗ			= Результат.Выгрузить();
	Если Не ВВалюте Тогда
		ПараметрыОтбора = Новый Структура("Валюта","сом");
		ТЗНов = ТЗ.Скопировать(ПараметрыОтбора);
	Иначе
		ТЗНов = ТЗ;
	КонецЕсли;
		
	Объект.ОбороткаСчетаДоговоры.Загрузить(ТЗНов);

КонецПроцедуры

&НаСервере
Процедура СформироватьОбороткаДоговоры();
	
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
		
	Запрос = Новый Запрос;	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Контрагент,
	|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Договор,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстаткиИОбороты.Валюта.Наименование = ""сом""
	|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт
	|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйОстатокДт
	|	КОНЕЦ КАК СальдоНДт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстаткиИОбороты.Валюта.Наименование = ""сом""
	|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт
	|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйОстатокКт
	|	КОНЕЦ КАК СальдоНКт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстаткиИОбороты.Валюта.Наименование = ""сом""
	|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотДт
	|	КОНЕЦ КАК ОборотыДт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстаткиИОбороты.Валюта.Наименование = ""сом""
	|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотКт
	|	КОНЕЦ КАК ОборотыКт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстаткиИОбороты.Валюта.Наименование = ""сом""
	|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
	|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйОстатокДт
	|	КОНЕЦ КАК СальдоКДт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстаткиИОбороты.Валюта.Наименование = ""сом""
	|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
	|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйОстатокКт
	|	КОНЕЦ КАК СальдоККт,
	|	ХозрасчетныйОстаткиИОбороты.Субконто1.Код КАК КодДоговора,
	|	ХозрасчетныйОстаткиИОбороты.Субконто1.ВидДоговора КАК ВидДоговора,
	|	ХозрасчетныйОстаткиИОбороты.Валюта.Наименование КАК Валюта
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Авто, , Счет <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНААвансы), &ВидыСубконто, ) КАК ХозрасчетныйОстаткиИОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент,
	|	Договор
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("НачПериода",		НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("КонПериода",		КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ВидыСубконто",	ВидыСубконто);
	
	Результат 	= Запрос.Выполнить();
	ТЗ			= Результат.Выгрузить();
	Если Не ВВалюте Тогда
		ПараметрыОтбора = Новый Структура("Валюта","сом");
		ТЗНов = ТЗ.Скопировать(ПараметрыОтбора);
	Иначе
		ТЗНов = ТЗ;
	КонецЕсли;
	
	Объект.ОбороткаДоговоры.Загрузить(ТЗНов);
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	 Если ТекущаяСТраница = Элементы.ГруппаОперации Тогда 
		 СТЧ = Элементы.ОборотыДоговора.ТекущиеДанные;
		 Если СТЧ = Неопределено Тогда 
			 Возврат;
		 КонецЕсли;
         СтрукутураДанных = Новый Структура;
		 СтрукутураДанных.Вставить("Договор", СТЧ.Договор);
		 СтрукутураДанных.Вставить("ОборотКт", СТЧ.ОборотыКт);
		 СтрукутураДанных.Вставить("ОборотДт", СТЧ.ОборотыДт);
		 
		 
		 СформироватьОперации(СтрукутураДанных);	
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СформироватьОперации(СТЧ)
	
		
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	Запрос = Новый Запрос;	
	Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	РБ.Период КАК Дата,
	 |	РБ.Регистратор КАК Документ,
	 |	РБ.СчетДт,
	 |	РБ.СчетКт,
	 |	РБ.Сумма КАК ОборотДт,
	 |	0 КАК ОборотКт,
	 |	РБ.Содержание,
	 |	РБ.ВидСубконтоДт1,
	 |	РБ.ВидСубконтоДт2,
	 |	0 КАК ВнутреннийОборот,
	 |	ЗНАЧЕНИЕ(ПЛанВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка) КАК ВидСубконтоКт1,
	 |	ЗНАЧЕНИЕ(ПЛанВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка) КАК ВидСубконтоКт2
	 |ИЗ
	 |	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	 |			&НачПериода,
	 |			&КонПериода,
	 |			ВидСубконтоДт1 = ЗНАЧЕНИЕ(ПЛанВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	 |				И ВидСубконтоДт2 = ЗНАЧЕНИЕ(ПЛанВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	 |				И СубконтоДт2 = &Договор
	 |				И СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНААвансы),
	 |			,
	 |			) КАК РБ
	 |
	 |ОБЪЕДИНИТЬ ВСЕ
	 |
	 |ВЫБРАТЬ
	 |	РБ.Период,
	 |	РБ.Регистратор,
	 |	РБ.СчетДт,
	 |	РБ.СчетКт,
	 |	0,
	 |	РБ.Сумма,
	 |	РБ.Содержание,
	 |	0,
	 |	ЗНАЧЕНИЕ(ПЛанВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка),
	 |	ЗНАЧЕНИЕ(ПЛанВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка),
	 |	РБ.ВидСубконтоКт1,
	 |	РБ.ВидСубконтоКт2
	 |ИЗ
	 |	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	 |			&НачПериода,
	 |			&КонПериода,
	 |			ВидСубконтоКт1 = ЗНАЧЕНИЕ(ПЛанВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	 |				И ВидСубконтоКт2 = ЗНАЧЕНИЕ(ПЛанВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	 |				И СубконтоКт2 = &Договор
	 |				И СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНААвансы),
	 |			,
	 |			) КАК РБ
	 |
	 |УПОРЯДОЧИТЬ ПО
	 |	РБ.Период,
	 |	РБ.Регистратор
	 |АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("НачПериода",		НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("КонПериода",		КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ВидыСубконто",	ВидыСубконто);
	Запрос.УстановитьПараметр("Договор",		СТЧ.Договор);
	
	Результат 	= Запрос.Выполнить();
	ТЗ			= Результат.Выгрузить();
	
	Объект.Операции.Загрузить(ТЗ);
	
	Для Каждого СтрокаТЧ Из Объект.Операции Цикл 
		Если СтрокаТЧ.ОборотДт = СТЧ.ОборотКт Тогда 
			СтрокаТЧ.ВнутреннийОборот = СТЧ.ОборотДт; 			
		КонецЕсли; 
	КонецЦикла;
	
	
КонецПроцедуры

&НаСервере
Процедура ВызовПечатиСчетДоговор(ТабДок)
	
	Обработка = РеквизитФормыВЗначение("Объект");
	ТабДок = Обработка.ЭтотОбъект.ПечатьСчетДоговоры(НачПериода, КонПериода); 
КонецПроцедуры

#КонецОбласти
